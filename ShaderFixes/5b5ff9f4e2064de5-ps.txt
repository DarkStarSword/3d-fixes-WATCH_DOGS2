// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 5b5ff9f4e2064de5-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 05:43:25 2017
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2FxWater
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 DiffuseColor1;              // Offset:   16 Size:    16
//   float4 DiffuseColor2;              // Offset:   32 Size:    16
//   float4 DiffuseUVTiling1;           // Offset:   48 Size:    16 [unused]
//   float3 Refraction;                 // Offset:   64 Size:    12
//   float AlphaOffset;                 // Offset:   76 Size:     4
//   float2 ColorMix;                   // Offset:   80 Size:     8
//   float AlphaThickness;              // Offset:   88 Size:     4
//   float Density;                     // Offset:   92 Size:     4
//   float InnerRoughness;              // Offset:   96 Size:     4
//   float InnerStrength;               // Offset:  100 Size:     4
//   float Metalness;                   // Offset:  104 Size:     4
//   float NormalIntensity;             // Offset:  108 Size:     4
//   float Reflectance;                 // Offset:  112 Size:     4
//   float Roughness;                   // Offset:  116 Size:     4
//   float SSS;                         // Offset:  120 Size:     4
//   float SoftDistance;                // Offset:  124 Size:     4 [unused]
//   float Transparency;                // Offset:  128 Size:     4
//   int ColorType;                     // Offset:  132 Size:     4 [unused]
//   bool Soft;                         // Offset:  136 Size:     4 [unused]
//   bool Sun;                          // Offset:  140 Size:     4 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2FxWater__AlphaTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialWD2FxWater__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    0        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    1        1
// MaterialWD2FxWater__AlphaTexture1__TexObj__    texture  float4          2d    2        1
// MaterialWD2FxWater__DiffuseTexture1__TexObj__    texture  float4          2d    3        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// MaterialWD2FxWater                cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float      w
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float      w
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xy          6     NONE   float   xy  
// SV_Position              0   xyzw        7      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[185], dynamicIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[9], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecubearray (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear centroid v0.w
dcl_input_ps linear centroid v2.w
dcl_input_ps linear centroid v3.xyzw
dcl_input_ps linear centroid v4.xyz
dcl_input_ps linear centroid v5.xyz
dcl_input_ps linear centroid v6.xy
dcl_input_ps_siv linear noperspective v7.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 20

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 5b5ff9f4e2064de5-ps.txt

mul r13.w, r13.x, r13.y
mul r15.x, r13.w, cb0[9].x
mul r15.y, r13.w, cb0[10].x
mul r15.z, r13.w, cb0[11].x
mul r15.w, r13.w, cb0[12].x
dp4 r16.x, r15.xyzw, cb0[17].xyzw
dp4 r16.y, r15.xyzw, cb0[18].xyzw
dp4 r16.z, r15.xyzw, cb0[19].xyzw
add r14.xyz, cb0[174].xyz, r16.xyz


// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 5b5ff9f4e2064de5-ps.txt

mul r13.w, r13.x, r13.y
mul r18.x, r13.w, cb0[9].x
mul r18.y, r13.w, cb0[10].x
mul r18.z, r13.w, cb0[11].x
mul r18.w, r13.w, cb0[12].x
dp4 r19.x, r18.xyzw, cb0[17].xyzw
dp4 r19.y, r18.xyzw, cb0[18].xyzw
dp4 r19.z, r18.xyzw, cb0[19].xyzw
add r17.xyz, cb3[30].xyz, r19.xyz

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v5.xyzx
add r2.xyz, v3.xyzx, -r14.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xy, v6.xyxx, t3.xyzw, s1
add r5.xy, r4.xyxx, r4.xyxx
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r4.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb2[6].wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.zxyz
mul r5.xyz, r0.zxyz, r1.yzxy
mad r5.xyz, r0.yzxy, r1.zxyz, -r5.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r1.w, r3.xyzx, -r5.xyzx
lt r2.w, l(0.000000), r1.w
lt r1.w, r1.w, l(0.000000)
iadd r1.w, -r2.w, r1.w
itof r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mul r6.xyz, r1.xyzx, r4.zzzz
mad r6.xyz, r4.yyyy, r0.xyzx, r6.xyzx
mad r6.xyz, r4.xxxx, r5.xyzx, r6.xyzx
mul r1.xyz, r1.xyzx, -r4.zzzz
mad r0.xyz, -r4.yyyy, r0.xyzx, r1.xyzx
mad r0.xyz, r4.xxxx, r5.xyzx, r0.xyzx
dp3 r1.y, r6.xyzx, cb0[51].xyzx
dp3 r1.x, r6.xyzx, cb0[52].xyzx
dp3 r1.z, r6.xyzx, cb0[53].xyzx
dp2 r1.y, r1.yzyy, r1.yzyy
rsq r1.y, r1.y
mul r1.y, r1.y, r1.z
mov r1.y, |r1.y|
log r1.y, r1.y
mul r1.y, r1.y, cb2[5].x
exp r1.y, r1.y
dp2 r1.x, r1.xzxx, r1.xzxx
rsq r1.x, r1.x
mul r1.x, r1.x, r1.z
mov r1.x, |r1.x|
log r1.x, r1.x
mul r1.x, r1.x, cb2[5].y
exp r1.x, r1.x
mul r1.x, r1.x, r1.y
add r5.xyzw, -cb2[1].xyzw, cb2[2].xyzw
mad r5.xyzw, r1.xxxx, r5.xyzw, cb2[1].xyzw
dp3 r1.y, r3.xyzx, r6.xyzx
add r1.y, r1.y, r1.y
mad r1.yzw, r6.xxyz, -r1.yyyy, r3.xxyz
mul r2.w, cb2[7].y, cb2[7].y
div r3.w, l(2.000000), r2.w
add r3.w, r3.w, l(-2.000000)
max r3.w, r3.w, l(1.000000031E-022)
sqrt r3.w, r3.w
div r3.w, l(-10.000000), r3.w
exp r3.w, r3.w
add r3.w, r3.w, l(-0.000980)
mul_sat r3.w, r3.w, l(1.00795019)
add r3.w, -r3.w, l(1.000000)
if_z cb0[184].z
  mul r4.y, r3.w, cb0[174].w
  mov r7.xyz, v3.xyzx
  mov r7.w, l(1.000000)
  mov r8.xyzw, l(0,0,0,0)
  mov r4.zw, l(0,0,1.000000,0)
  loop 
    uge r6.w, r4.w, l(15)
    breakc_nz r6.w
    imul null, r6.w, r4.w, l(7)
    dp4 r9.x, r7.xyzw, cb0[r6.w + 68].xyzw
    dp4 r9.y, r7.xyzw, cb0[r6.w + 69].xyzw
    dp4 r9.z, r7.xyzw, cb0[r6.w + 70].xyzw
    ge r10.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r10.xyz, r10.xyzx, cb0[r6.w + 72].xyzx, cb0[r6.w + 73].xyzx
    add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r9.xyz, r10.xyzx, r9.xyzx
    mul r9.x, r9.y, r9.x
    mul r9.x, r9.z, r9.x
    lt r9.y, l(0.000000), r9.x
    if_nz r9.y
      dp3 r10.x, r1.yzwy, cb0[r6.w + 68].xyzx
      dp3 r10.y, r1.yzwy, cb0[r6.w + 69].xyzx
      dp3 r10.z, r1.yzwy, cb0[r6.w + 70].xyzx
      mul r9.x, r9.x, cb0[r6.w + 73].w
      mov r10.w, cb0[r6.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t1.xyzw, s3, r4.y
      mul r10.xyzw, r10.xyzw, cb0[r6.w + 74].xxxy
      min r6.w, r4.z, r9.x
      mad r9.xyzw, r10.xyzw, r6.wwww, r8.xyzw
      add r6.w, r4.z, -r6.w
      ge r10.x, l(0.000000), r6.w
      if_nz r10.x
        mov r8.xyzw, r9.xyzw
        mov r4.z, r6.w
        break 
      endif 
      mov r8.xyzw, r9.xyzw
      mov r4.z, r6.w
    endif 
    iadd r4.w, r4.w, l(1)
  endloop 
else 
  mov r8.xyzw, l(0,0,0,0)
  mov r4.z, l(1.000000)
endif 
add r4.y, r4.z, r8.w
lt r4.w, l(0.000000), r4.y
if_nz r4.w
  mul r3.w, r3.w, cb0[183].w
  add r4.w, -|r1.w|, r1.w
  mad r4.z, r4.z, r4.w, |r1.w|
  mad r4.z, r4.z, l(2.000000), l(2.000000)
  div r4.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.zzzz
  mul r4.zw, r1.zzzy, r4.zzzw
  mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r4.zwzz, t0.xyzw, s2, r3.w
  mov_sat r9.xyz, r7.xyzx
  movc r7.xyz, cb0[184].zzzz, r9.xyzx, r7.xyzx
  div r7.xyz, r7.xyzx, cb0[176].wwww
  mad r8.xyz, r7.xyzx, r4.yyyy, r8.xyzx
endif 
mul r3.w, cb2[7].x, l(0.080000)
mad r4.yzw, -cb2[7].xxxx, l(0.000000, 0.080000, 0.080000, 0.080000), r5.xxyz
mad r4.yzw, cb2[6].zzzz, r4.yyzw, r3.wwww
mov_sat r4.x, r4.x
dp3 r3.w, r4.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r3.w, r3.w, l(50.000000)
add r4.x, -r4.x, l(1.000000)
mul r6.w, r4.x, r4.x
mul r6.w, r6.w, r6.w
add r7.xyz, -r4.yzwy, r3.wwww
mul r7.xyz, r6.wwww, r7.xyzx
mad r4.xyz, r7.xyzx, r4.xxxx, r4.yzwy
add r3.w, -cb2[4].y, cb2[4].x
mad r3.w, r1.x, r3.w, cb2[4].y
dp3 r4.w, -r3.xyzx, r6.xyzx
mul r6.w, r3.w, r3.w
mad r7.x, -r4.w, r4.w, l(1.000000)
mad r6.w, -r6.w, r7.x, l(1.000000)
sqrt r7.x, |r6.w|
mad r4.w, r3.w, r4.w, -r7.x
mul r7.xyz, r6.xyzx, r4.wwww
mad r3.xyz, r3.wwww, r3.xyzx, r7.xyzx
lt r3.w, l(0.000000), r6.w
and r3.w, r3.w, l(0x3f800000)
mul r7.xyz, r3.wwww, r3.xyzx
if_z cb0[184].z
  mul r3.x, cb0[174].w, cb2[5].w
  mov r9.xyz, v3.xyzx
  mov r9.w, l(1.000000)
  mov r10.xyzw, l(0,0,0,0)
  mov r3.y, l(1.000000)
  mov r4.w, l(0)
  loop 
    uge r6.w, r4.w, l(15)
    breakc_nz r6.w
    imul null, r6.w, r4.w, l(7)
    dp4 r11.x, r9.xyzw, cb0[r6.w + 68].xyzw
    dp4 r11.y, r9.xyzw, cb0[r6.w + 69].xyzw
    dp4 r11.z, r9.xyzw, cb0[r6.w + 70].xyzw
    ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r12.xyz, r12.xyzx, cb0[r6.w + 72].xyzx, cb0[r6.w + 73].xyzx
    add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r11.xyz, r12.xyzx, r11.xyzx
    mul r7.w, r11.y, r11.x
    mul r7.w, r11.z, r7.w
    lt r8.w, l(0.000000), r7.w
    if_nz r8.w
      dp3 r11.x, r7.xyzx, cb0[r6.w + 68].xyzx
      dp3 r11.y, r7.xyzx, cb0[r6.w + 69].xyzx
      dp3 r11.z, r7.xyzx, cb0[r6.w + 70].xyzx
      mul r7.w, r7.w, cb0[r6.w + 73].w
      mov r11.w, cb0[r6.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t1.xyzw, s3, r3.x
      mul r11.xyzw, r11.xyzw, cb0[r6.w + 74].xxxy
      min r6.w, r3.y, r7.w
      mad r11.xyzw, r11.xyzw, r6.wwww, r10.xyzw
      add r6.w, r3.y, -r6.w
      ge r7.w, l(0.000000), r6.w
      if_nz r7.w
        mov r10.xyzw, r11.xyzw
        mov r3.y, r6.w
        break 
      endif 
      mov r10.xyzw, r11.xyzw
      mov r3.y, r6.w
    endif 
    iadd r4.w, r4.w, l(1)
  endloop 
else 
  mov r10.xyzw, l(0,0,0,0)
  mov r3.y, l(1.000000)
endif 
add r3.x, r3.y, r10.w
lt r4.w, l(0.000000), r3.x
if_nz r4.w
  mul r4.w, cb0[183].w, cb2[5].w
  mad r3.z, r3.z, r3.w, -|r7.z|
  mad r3.y, r3.y, r3.z, |r7.z|
  mad r3.y, r3.y, l(2.000000), l(2.000000)
  div r3.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.yyyy
  mul r3.yz, r3.yyzy, r7.yyxy
  mad r3.yz, r3.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t0.wxyz, s2, r4.w
  mov_sat r7.xyz, r3.yzwy
  movc r3.yzw, cb0[184].zzzz, r7.xxyz, r3.yyzw
  div r3.yzw, r3.yyzw, cb0[176].wwww
  mad r10.xyz, r3.yzwy, r3.xxxx, r10.xyzx
endif 
if_z cb0[184].z
  mov r3.xyz, v3.xyzx
  mov r3.w, l(1.000000)
  mov r7.xyzw, l(0,0,0,0)
  mov r4.w, l(1.000000)
  mov r6.w, l(0)
  loop 
    uge r8.w, r6.w, l(15)
    breakc_nz r8.w
    imul null, r8.w, r6.w, l(7)
    dp4 r9.x, r3.xyzw, cb0[r8.w + 68].xyzw
    dp4 r9.y, r3.xyzw, cb0[r8.w + 69].xyzw
    dp4 r9.z, r3.xyzw, cb0[r8.w + 70].xyzw
    ge r11.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r11.xyz, r11.xyzx, cb0[r8.w + 72].xyzx, cb0[r8.w + 73].xyzx
    add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r9.xyz, r11.xyzx, r9.xyzx
    mul r9.x, r9.y, r9.x
    mul r9.x, r9.z, r9.x
    lt r9.y, l(0.000000), r9.x
    if_nz r9.y
      dp3 r11.x, r1.yzwy, cb0[r8.w + 68].xyzx
      dp3 r11.y, r1.yzwy, cb0[r8.w + 69].xyzx
      dp3 r11.z, r1.yzwy, cb0[r8.w + 70].xyzx
      mul r9.x, r9.x, cb0[r8.w + 73].w
      mov r11.w, cb0[r8.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t1.xyzw, s3, cb0[174].w
      mul r11.xyzw, r11.xyzw, cb0[r8.w + 74].xxxy
      min r8.w, r4.w, r9.x
      mad r9.xyzw, r11.xyzw, r8.wwww, r7.xyzw
      add r8.w, r4.w, -r8.w
      ge r10.w, l(0.000000), r8.w
      if_nz r10.w
        mov r7.xyzw, r9.xyzw
        mov r4.w, r8.w
        break 
      endif 
      mov r7.xyzw, r9.xyzw
      mov r4.w, r8.w
    endif 
    iadd r6.w, r6.w, l(1)
  endloop 
else 
  mov r7.xyzw, l(0,0,0,0)
  mov r4.w, l(1.000000)
endif 
add r3.x, r4.w, r7.w
lt r3.y, l(0.000000), r3.x
if_nz r3.y
  add r3.y, -|r1.w|, r1.w
  mad r1.w, r4.w, r3.y, |r1.w|
  mad r1.w, r1.w, l(2.000000), l(2.000000)
  div r3.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r1.wwww
  mul r1.yz, r1.zzyz, r3.yyzy
  mad r1.yz, r1.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, r1.yzyy, t0.wxyz, s2, cb0[183].w
  mov_sat r3.yzw, r1.yyzw
  movc r1.yzw, cb0[184].zzzz, r3.yyzw, r1.yyzw
  div r1.yzw, r1.yyzw, cb0[176].wwww
  mad r7.xyz, r1.yzwy, r3.xxxx, r7.xyzx
endif 
dp3_sat r1.y, cb1[2].xyzx, r6.xyzx
mad r1.z, r1.y, l(0.500000), l(0.500000)
add r1.z, -r1.y, r1.z
mad r1.y, cb2[7].z, r1.z, r1.y
mul r1.y, r1.y, v3.w
mul r1.y, r1.y, l(0.0795774683)
mad r1.yzw, cb1[0].xxyz, r1.yyyy, r7.xxyz
mad r2.xyz, -r2.xyzx, r0.wwww, cb1[2].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r0.w, r2.xyzx, r6.xyzx
dp3_sat r0.x, r2.xyzx, r0.xyzx
mul r2.xyz, r4.xyzx, cb1[0].xyzx
mul r0.y, v3.w, l(0.0795774683)
mul r2.xyz, r0.yyyy, r2.xyzx
mul r0.xy, r0.xwxx, r0.xwxx
mad r0.z, cb2[7].y, cb2[7].y, l(-1.000000)
mad r0.y, r0.y, r0.z, l(1.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, l(3.14159274)
div r0.y, r2.w, r0.y
mul r0.yzw, r0.yyyy, r2.xxyz
mad r0.yzw, r8.xxyz, r4.xxyz, r0.yyzw
mul r2.w, cb2[6].x, cb2[6].x
mad r3.x, cb2[6].x, cb2[6].x, l(-1.000000)
mad r0.x, r0.x, r3.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(3.14159274)
div r0.x, r2.w, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r2.xyz, r5.xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, cb2[6].yyyy, r0.yzwy
mad r2.xyz, r10.xyzx, cb2[4].zzzz, -r1.yzwy
mad r2.xyz, r1.xxxx, r2.xyzx, r1.yzwy
add r0.w, -cb2[6].z, l(1.000000)
mul r3.xyz, r0.wwww, r5.xyzx
add r1.xyz, r1.yzwy, -r2.xyzx
mad r1.xyz, cb2[5].wwww, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r3.xyzx
mad r0.xyz, r1.xyzx, cb2[8].xxxx, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v6.xyxx, t2.yzwx, s0
add r1.x, cb2[5].z, l(0.500000)
mad r1.y, -cb2[4].w, r1.x, l(1.000000)
add r1.zw, -cb2[5].zzzw, l(0.000000, 0.000000, 0.500000, 1.000000)
mul r0.w, r0.w, v0.w
add r1.x, -r1.z, r1.x
mad r0.w, r0.w, r1.y, -r1.z
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r0.w, r0.w, r5.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r1.wwww, r1.xyzx
mad r1.xyz, -r1.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, cb2[8].xxxx, r1.xyzx, r2.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xy, v7.xyxx, cb3[37].zzzz
round_ni r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, cb3[17].xyxx
iadd r0.w, cb3[28].z, l(-1)
utof r0.w, r0.w
mul r1.w, r0.w, l(0.031250)
exp r1.w, r1.w
mad r1.w, r1.w, cb3[1].z, cb3[1].w
min r2.w, r1.w, v2.w
add r2.w, r2.w, -cb3[1].w
div r2.w, r2.w, cb3[1].z
log r2.w, r2.w
mul r2.w, r2.w, l(32.000000)
div r2.z, r2.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r2.xyzx, t4.xyzw, s2, l(0.000000)
mad r4.xyzw, cb3[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r2.xyxy
mov r5.xy, r4.xyxx
mov r5.z, r2.z
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t4.xyzw, s2, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t4.xyzw, s2, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mad r4.xyzw, cb3[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r2.xyxy
mov r5.xy, r4.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t4.xyzw, s2, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t4.xyzw, s2, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xz, r2.xxyx, cb3[0].zzwz
mul r2.xy, r4.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r0.w, r1.w, cb3[0].x
add r0.w, r0.w, l(1.000000)
mov r2.z, -cb3[0].x
mul r2.xyz, r0.wwww, r2.xyzx
mov r2.w, l(1.000000)
dp4 r4.x, r2.xyzw, cb3[13].xyzw
dp4 r4.y, r2.xyzw, cb3[14].xyzw
dp4 r4.z, r2.xyzw, cb3[15].xyzw
add r2.xyzw, -r4.xyzx, r17.xyzx
div r3.xyz, r3.xyzx, cb0[176].wwww
exp r0.w, r3.w
dp3 r1.w, r2.yzwy, r2.yzwy
rsq r1.w, r1.w
mul r2.xyzw, r1.wwww, r2.xyzw
div r1.w, cb3[31].w, |r2.z|
min r1.w, r1.w, v2.w
mul r3.w, r1.w, cb3[29].w
min r3.w, r3.w, l(1.000000)
add r1.w, r1.w, -cb3[33].w
mul_sat r1.w, r1.w, cb3[32].w
mul r1.w, r1.w, r3.w
mul r3.w, r1.w, cb3[34].w
mul r1.w, r1.w, cb3[30].w
mul r1.w, r1.w, l(-1.442695)
exp r1.w, r1.w
mul r4.xyz, r2.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r5.xyz, r4.xxxx, cb1[32].xyzx
mad r5.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r5.xyzx
mad r4.xyw, r4.yyyy, cb1[33].xyxz, r5.xyxz
mad r4.xyz, r4.zzzz, cb1[34].xyzx, r4.xywx
mul r5.xyzw, r2.xyzw, r2.yzzz
mul r5.xyw, r5.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r4.xyz, r5.xxxx, cb1[35].xyzx, r4.xyzx
mad r4.xyz, r5.yyyy, cb1[36].xyzx, r4.xyzx
mad r2.x, r5.z, l(3.000000), l(-1.000000)
mul r2.x, r2.x, l(0.315392)
mad r4.xyz, r2.xxxx, cb1[37].xyzx, r4.xyzx
mad r4.xyz, r5.wwww, cb1[38].xyzx, r4.xyzx
mul r2.x, r2.y, r2.y
mad r2.x, r2.w, r2.w, -r2.x
mul r2.x, r2.x, l(0.546274)
mad r2.xyz, r2.xxxx, cb1[39].xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, r3.wwww
mul r2.xyz, r2.xyzx, cb3[29].xyzx
mad r2.xyz, r2.xyzx, r0.wwww, r3.xyzx
mul r2.w, r0.w, r1.w
movc r2.xyzw, cb3[37].wwww, r2.xyzw, l(0,0,0,1.000000)
mul r0.xyz, r0.xyzx, r2.wwww
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 o0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
dp3 o1.w, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mov o0.xyz, r0.xyzx
mov o1.xyz, r1.xyzx
ret 
// Approximately 434 instruction slots used