// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 25f52de8e9dd8157-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 03:53:30 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer SceneProceduralShadowCaster
// {
//
//   float4 ProceduralShadowFactors[2]; // Offset:    0 Size:    32
//   float4 ProceduralShadowFactors2[2];// Offset:   32 Size:    32
//   float4 ProceduralShadowOrigin[2];  // Offset:   64 Size:    32
//   float4 ProceduralShadowPlane[2];   // Offset:   96 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// ShadowRealSampler               sampler_c      NA          NA    1        1
// LongRangeShadowSampler          sampler_c      NA          NA    2        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    2        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    3        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    4        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    5        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    6        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    7        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
// SceneProceduralShadowCaster       cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2dms(0) (float,float,float,float) t6
dcl_resource_texture2dms(0) (float,float,float,float) t7
dcl_input_ps_siv linear noperspective sample v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_temps 25
dcl_indexableTemp x0[3], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r21.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 25f52de8e9dd8157-ps.txt

mul r21.w, r21.x, r21.y
mul r23.x, r21.w, cb1[9].x
mul r23.y, r21.w, cb1[10].x
mul r23.z, r21.w, cb1[11].x
mul r23.w, r21.w, cb1[12].x
dp4 r24.x, r23.xyzw, cb1[17].xyzw
dp4 r24.y, r23.xyzw, cb1[18].xyzw
dp4 r24.z, r23.xyzw, cb1[19].xyzw
add r22.xyz, cb1[174].xyz, r24.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.z, r0.xyww, t5.yzxw, v1.x
mad r2.xy, v0.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[9].xyzw
dp4 r2.y, r1.xyzw, cb1[10].xyzw
dp4 r2.z, r1.xyzw, cb1[11].xyzw
dp4 r2.w, r1.xyzw, cb1[12].xyzw
div r1.xyzw, r2.xyzw, r2.wwww

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 25f52de8e9dd8157-ps.txt

add r21.w, -r1.z, -r21.y
mul r21.w, r21.w, r21.x
mad r1.x, -r21.w, cb1[9].x, r1.x

dp4 r2.x, r1.xyzw, cb1[17].xyzw
dp4 r2.y, r1.xyzw, cb1[18].xyzw
dp4 r2.z, r1.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r0.xyww, t4.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r0.xyww, t6.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r4.xyzw, r0.xyzw, t7.yxzw, v1.x
mad r0.z, r4.w, l(255.000000), l(0.500000)
round_ni r0.z, r0.z
ftou r0.z, r0.z
ushr r0.z, r0.z, l(5)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r3.xyzx
ieq r6.xyzw, r0.zzzz, l(1, 4, 2, 0)
ge r0.w, r1.w, l(0.750000)
add r4.w, r1.w, l(-0.750000)
mad r4.w, r4.w, l(-0.599999905), l(1.000000)
movc r0.w, r0.w, r4.w, l(1.000000)
movc r0.w, r6.y, r0.w, r1.w
movc r0.w, r6.x, l(1.000000), r0.w
mul r7.yzw, r0.wwww, r1.xxyz
if_nz r6.x
  mad r0.w, r3.w, l(0.500000), l(0.500000)
  mad r0.w, r0.w, l(65535.000000), l(0.500000)
  ftou r0.w, r0.w
  and r1.xy, r0.wwww, l(255, 0x0000ff00, 0, 0)
  utof r1.xy, r1.xyxx
  mul r8.xw, r1.yyyx, l(0.0000153186284, 0.000000, 0.000000, 0.00392156886)
  mul r0.w, r1.w, l(255.000000)
  ftou r0.w, r0.w
  and r1.xy, r0.wwww, l(15, 240, 0, 0)
  utof r1.xy, r1.xyxx
  mul r8.yz, r1.xxyx, l(0.000000, 0.0666666701, 0.00416666688, 0.000000)
  mov r9.w, l(0)
  mov r1.x, r4.z
  mov r7.x, r7.y
else 
  mul r0.w, r4.x, r4.x
  max r4.x, r0.w, l(0.001000)
  ieq r0.w, r0.z, l(2)
  if_nz r0.w
    mad r0.w, r3.w, l(0.500000), l(0.500000)
    mad r0.w, r0.w, l(65535.000000), l(0.500000)
    ftou r0.w, r0.w
    and r10.xy, r0.wwww, l(255, 0x0000ff00, 0, 0)
    utof r10.xy, r10.xyxx
    mov r10.z, r4.y
    mad r10.xyz, r10.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r0.w, -r1.w, l(1.000000)
    mul r0.w, r0.w, r7.y
    mad r7.x, r0.w, l(0.500000), r7.y
    dp3 r0.w, r10.xyzx, r10.xyzx
    rsq r0.w, r0.w
    mul r8.xyw, r0.wwww, r10.yzyx
    mov r8.z, l(0)
    mov r9.w, l(0)
    mov r4.y, l(0.500000)
    mov r1.x, r4.z
  else 
    ieq r0.w, r0.z, l(3)
    if_nz r0.w
      mad r0.w, r3.w, l(0.500000), l(0.500000)
      mad r0.w, r0.w, l(65535.000000), l(0.500000)
      ftou r0.w, r0.w
      and r10.xyzw, r0.wwww, l(0x0000f800, 2016, 31, 31)
      utof r10.xyzw, r10.xyzw
      ge r11.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r10.wyxw
      mul r0.w, r10.w, l(0.00249675405)
      mad r12.xyz, r10.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r12.xyz, r12.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r12.xyz, r12.xyzx
      mul r12.xyz, r12.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r12.xyz, r12.xyzx
      movc r8.w, r11.x, r0.w, r12.x
      mul r10.xy, r10.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r8.xy, r11.yzyy, r10.xyxx, r12.yzyy
      mov r8.z, l(0)
      mov r9.w, l(0)
      mov r1.x, r4.z
    else 
      if_nz r6.y
        mad r0.w, r3.w, l(32767.000000), l(32767.000000)
        ftou r0.w, r0.w
        and r1.z, r0.w, l(255)
        utof r1.z, r1.z
        mul r1.z, r1.z, l(0.0123199718)
        ubfe r0.w, l(8), l(8), r0.w
        utof r0.w, r0.w
        mad r0.w, r0.w, l(0.0246399436), l(-3.14159274)
        sincos r10.x, r11.x, r1.z
        sincos r12.x, r13.x, r0.w
        mul r13.x, r10.x, r13.x
        mul r13.y, r10.x, r12.x
        mov r13.z, r11.x
        dp3 r0.w, r13.xyzx, r13.xyzx
        rsq r0.w, r0.w
        mul r8.xyw, r0.wwww, r13.yzyx
        mul_sat r9.w, r1.w, l(0.250000)
        mov r8.z, l(0)
        mov r1.x, r4.z
      else 
        ieq r0.w, r0.z, l(5)
        lt r1.z, r3.z, l(0.900000)
        movc r10.xyz, r1.zzzz, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r11.xyz, r3.zxyz, r10.xyzx
        mad r10.xyz, r3.yzxy, r10.yzxy, -r11.xyzx
        dp3 r1.z, r10.xyzx, r10.xyzx
        rsq r1.z, r1.z
        mul r10.xyz, r1.zzzz, r10.xyzx
        mul r11.xyz, r3.zxyz, r10.yzxy
        mad r3.xyz, r3.yzxy, r10.zxyz, -r11.xyzx
        dp3 r1.z, r3.xyzx, r3.xyzx
        rsq r1.z, r1.z
        mul r3.xyz, r1.zzzz, r3.xyzx
        mad r1.z, r3.w, l(2.000000), l(-1.000000)
        mul r1.z, r1.z, l(3.14159274)
        sincos r11.x, r12.x, r1.z
        mul r10.xyz, r10.xyzx, r11.xxxx
        mad r10.xyz, r3.xyzx, r12.xxxx, r10.xyzx
        mad r1.z, r3.w, l(0.500000), l(0.500000)
        mad r1.z, r1.z, l(65535.000000), l(0.500000)
        ftou r1.z, r1.z
        and r1.z, r1.z, l(255)
        utof r1.z, r1.z
        mul r1.z, r1.z, l(0.00392156886)
        movc r3.x, r0.z, l(0), r1.z
        mov r10.w, r4.z
        mov r3.yzw, l(0,0,0,0)
        movc r8.xyzw, r0.wwww, r10.yzwx, r3.yzwx
        mov r10.x, r1.w
        mov r10.yz, l(0,0,0,0)
        movc r1.xy, r0.wwww, r10.yxyy, r10.wzww
        mov r9.w, r1.y
      endif 
    endif 
    mov r7.x, r7.y
  endif 
endif 
or r0.w, r6.z, r6.y
mov r1.yzw, l(0,0,0,0)
mov r3.zw, l(0,0,0,2)
mov r4.z, l(0)
loop 
  uge r4.w, r4.z, l(3)
  breakc_nz r4.w
  ishl r4.w, r4.z, l(2)
  mul r10.xyz, r2.yyyy, cb3[r4.w + 1].xyzx
  mad r10.xyz, cb3[r4.w + 0].xyzx, r2.xxxx, r10.xyzx
  mad r10.xyz, cb3[r4.w + 2].xyzx, r2.zzzz, r10.xyzx
  add r10.xyz, r10.xyzx, cb3[r4.w + 3].xyzx
  max r4.w, |r10.y|, |r10.x|
  add r4.w, r4.w, cb3[16].x
  ult r5.w, r4.z, l(2)
  if_nz r5.w
    lt r5.w, r4.w, l(1.000000)
    if_nz r5.w
      mov r1.yz, r10.xxyx
      mov r3.z, r10.z
      mov r1.w, r4.w
      mov r3.w, r4.z
      break 
    endif 
  endif 
  iadd r4.z, r4.z, l(1)
  mov r1.yz, r10.xxyx
  mov r3.z, r10.z
  mov r1.w, r4.w
  mov r3.w, l(2)
endloop 
mov x0[0].z, l(0.166666672)
mov x0[1].z, l(0.500000)
mov x0[2].z, l(0.833333313)
mov r10.x, x0[r3.w + 0].z
mov r10.yzw, l(0,0.500000,0,0)
mad r3.xy, r1.yzyy, l(0.166666672, -0.500000, 0.000000, 0.000000), r10.xyxx
dp3 r1.y, cb3[17].xyzx, icb[r3.w + 0].xyzx
ieq r1.z, r3.w, l(2)
mad_sat r1.w, r1.w, cb3[16].z, cb3[16].w
and r1.z, r1.w, r1.z
and r10.xy, r0.xyxx, l(63, 63, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r0.xy, r10.xyzw, t1.xyzw
mad r0.xy, r0.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, r0.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r10.xy, r0.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r4.zwzz
dp2 r10.z, r0.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r1.yw, r1.yyyy, cb3[38].zzzw
mul r11.xy, r1.ywyy, r10.xzxx
mov r11.z, l(0)
add r11.xyz, r3.xyzx, r11.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r11.xyxx, t2.xxxx, s1, r11.z
dp2 r10.w, r0.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r10.xy, r1.ywyy, r10.ywyy
mov r10.z, l(0)
add r10.xyz, r3.xyzx, r10.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.z, r10.xyxx, t2.xxxx, s1, r10.z
add r3.w, r3.w, r4.z
mul r4.zw, r0.xxxx, l(0.000000, 0.000000, -0.602610528, 0.987966299)
mad r10.xy, r0.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r4.zwzz
dp2 r10.z, r0.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r11.xy, r1.ywyy, r10.xzxx
mov r11.z, l(0)
add r11.xyz, r3.xyzx, r11.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.z, r11.xyxx, t2.xxxx, s1, r11.z
add r3.w, r3.w, r4.z
dp2 r10.w, r0.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r10.xy, r1.ywyy, r10.ywyy
mov r10.z, l(0)
add r3.xyz, r3.xyzx, r10.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.x, r3.xyxx, t2.xxxx, s1, r3.z
add r0.x, r0.x, r3.w
mul r0.y, r0.x, l(0.250000)
mad r1.yw, r5.xxxy, cb4[0].xxxy, r2.xxxy
mad r3.x, r2.z, cb4[0].z, cb4[0].w
mad r1.yw, r1.yyyw, cb4[1].xxxy, cb4[1].zzzw
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.ywyy, t3.xxxx, s2, r3.x
mad r0.x, -r0.x, l(0.250000), r1.y
mad r0.x, r1.z, r0.x, r0.y
if_nz r0.w
  dp3 r0.y, cb5[6].xyzx, cb0[31].xyzx
  mad_sat r0.w, r0.y, cb5[2].x, cb5[2].y
  mov r2.w, l(1.000000)
  dp4 r1.y, cb5[6].xyzw, r2.xyzw
  add_sat r1.z, r0.y, l(1.000000)
  mad r1.y, -r1.z, cb5[2].z, r1.y
  div r0.y, -r1.y, r0.y
  mad r1.yzw, cb0[31].xxyz, r0.yyyy, r2.xxyz
  add r3.xyz, -r2.xyzx, cb5[4].xyzx
  add r1.yzw, -r1.yyzw, cb5[4].xxyz
  dp3 r3.x, r3.xyzx, r3.xyzx
  dp3 r3.y, r1.yzwy, r1.yzwy
  mad_sat r1.yz, r3.xxyx, cb5[0].xxzx, cb5[0].yywy
  lt r0.y, l(0.000000), r0.y
  movc r0.y, r0.y, r1.y, r1.z
  add r0.y, r0.w, r0.y
  add_sat r0.y, r0.y, cb5[2].w
  dp3 r0.w, cb5[7].xyzx, cb0[31].xyzx
  mad_sat r1.y, r0.w, cb5[3].x, cb5[3].y
  dp4 r1.z, cb5[7].xyzw, r2.xyzw
  add_sat r1.w, r0.w, l(1.000000)
  mad r1.z, -r1.w, cb5[3].z, r1.z
  div r0.w, -r1.z, r0.w
  mad r3.xyz, cb0[31].xyzx, r0.wwww, r2.xyzx
  add r10.xyz, -r2.xyzx, cb5[5].xyzx
  add r3.xyz, -r3.xyzx, cb5[5].xyzx
  dp3 r10.x, r10.xyzx, r10.xyzx
  dp3 r10.y, r3.xyzx, r3.xyzx
  mad_sat r1.zw, r10.xxxy, cb5[1].xxxz, cb5[1].yyyw
  lt r0.w, l(0.000000), r0.w
  movc r0.w, r0.w, r1.z, r1.w
  add r0.w, r1.y, r0.w
  add_sat r0.w, r0.w, cb5[3].w
  mul r0.y, r0.w, r0.y
  mul r0.x, r0.y, r0.x
endif 
dp3 r0.y, r2.xyzx, cb0[1].xyzx
add_sat r0.y, r0.y, cb0[1].w
mul r0.x, r0.y, r0.x
mad r0.x, r0.x, cb3[37].x, cb3[37].y
lt r0.y, l(0.000000), r0.x
lt r0.w, l(0.000000), r8.w
and r0.w, r0.w, r6.w
or r0.y, r0.w, r0.y
if_nz r0.y
  add r1.yzw, -r2.xxyz, r22.xxyz
  dp3 r0.y, r1.yzwy, r1.yzwy
  rsq r0.y, r0.y
  mul r2.xyz, r0.yyyy, r1.yzwy
  dp3 r3.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r0.w, r5.xyzx, cb2[2].xyzx
  mov_sat r2.w, r0.w
  dp3 r4.z, r8.xywx, r8.xywx
  rsq r4.z, r4.z
  mul r10.xyz, r4.zzzz, r8.wxyw
  dp3 r4.z, r10.xyzx, cb2[2].xyzx
  add r4.z, r4.z, l(1.000000)
  mul_sat r4.z, r4.z, l(0.500000)
  mul r4.w, r4.z, r4.z
  mul r4.z, r4.w, r4.z
  movc r10.xyz, r6.zzzz, r8.wxyw, r5.xyzx
  movc r4.z, r6.z, r4.z, r2.w
  if_nz r6.x
    mov_sat r11.xyzw, r8.wzxy
    mov_sat r1.x, r1.x
    log r12.xyz, r7.xzwx
    mul r13.xyz, r11.yyyy, r12.xyzx
    mul r13.xyz, r13.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r12.xyz, r12.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r13.xyzx
    eq r4.w, r11.x, l(0.000000)
    add r5.w, -r1.x, l(1.000000)
    mul r13.xyz, r5.wwww, r7.xzwx
    mul r13.xyz, r13.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r14.xyz, -r11.xxxx, r12.xyzx
    exp r14.xyz, r14.xyzx
    mul r14.xyz, r13.xyzx, r14.xyzx
    mul r14.xyz, r14.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r13.xyz, r4.wwww, r13.xyzx, r14.xyzx
    mov r13.w, l(0.180000)
    mul r5.w, r11.w, l(0.080000)
    mad r6.x, r11.x, l(48.750000), l(1.250000)
    mov_sat r4.x, r4.x
    mul r6.w, r4.x, r4.x
    max r6.w, r6.w, l(0.001000)
    mul r7.y, r11.z, r11.z
    max r7.y, r7.y, l(0.001000)
    lt r10.w, l(0.000000), r0.w
    lt r11.x, r0.w, l(0.000000)
    iadd r10.w, -r10.w, r11.x
    itof r10.w, r10.w
    mad r11.x, r0.w, r0.w, l(-1.000000)
    mad r11.x, r11.x, l(0.666860044), l(1.000000)
    sqrt r11.x, r11.x
    mul r10.w, r10.w, r11.x
    mad r0.w, r0.w, l(0.666860044), -r10.w
    mul r11.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r11.xyz, r0.wwww, r5.xyzx, -r11.xyzx
    add r14.xyz, -r11.xyzx, -cb2[2].xyzx
    mad r11.xyz, r6.wwww, r14.xyzx, r11.xyzx
    dp3 r0.w, r11.xyzx, r11.xyzx
    rsq r0.w, r0.w
    mul r14.xyz, r0.wwww, r11.xyzx
    dp3 r10.w, r2.xyzx, r5.xyzx
    lt r12.w, l(0.000000), r10.w
    lt r14.w, r10.w, l(0.000000)
    iadd r12.w, -r12.w, r14.w
    itof r12.w, r12.w
    mad r14.w, r10.w, r10.w, l(-1.000000)
    mad r14.w, r14.w, l(0.666860044), l(1.000000)
    sqrt r14.w, r14.w
    mul r12.w, r12.w, r14.w
    mad r12.w, r10.w, l(0.666860044), -r12.w
    mul r15.xyz, r2.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r15.xyz, r12.wwww, r5.xyzx, -r15.xyzx
    mad r16.xyz, -r1.yzwy, r0.yyyy, -r15.xyzx
    mad r15.xyz, r6.wwww, r16.xyzx, r15.xyzx
    dp3 r12.w, r15.xyzx, r15.xyzx
    rsq r12.w, r12.w
    mul r15.xyz, r12.wwww, r15.xyzx
    dp3 r12.w, r5.xyzx, r14.xyzx
    mad r12.w, -|r12.w|, |r12.w|, l(1.000000)
    mad r12.w, -r12.w, l(0.444702327), l(1.000000)
    add r6.x, r6.x, r6.x
    sqrt r12.w, r12.w
    div r6.x, r6.x, r12.w
    mov_sat r10.w, r10.w
    mad r16.xyz, r1.yzwy, r0.yyyy, cb2[2].xyzx
    dp3 r12.w, r16.xyzx, r16.xyzx
    rsq r12.w, r12.w
    mul r16.xyz, r12.wwww, r16.xyzx
    dp3_sat r12.w, r5.xyzx, r16.xyzx
    mul r14.w, r6.w, r6.w
    mul r12.w, r12.w, r12.w
    mad r15.w, r6.w, r6.w, l(-1.000000)
    mad r12.w, r12.w, r15.w, l(1.000000)
    mul r12.w, r12.w, r12.w
    mul r12.w, r12.w, l(3.14159274)
    div r12.w, r14.w, r12.w
    mad r6.w, r6.w, l(0.500000), l(0.500000)
    mul r14.w, r2.w, r2.w
    mul r6.w, r6.w, r6.w
    mad r15.w, -r2.w, r2.w, l(1.000000)
    mul r15.w, r6.w, r15.w
    max r14.w, r14.w, l(1.000000047E-034)
    div r14.w, r15.w, r14.w
    add r14.w, r14.w, l(1.000000)
    sqrt r14.w, r14.w
    add r14.w, r14.w, l(1.000000)
    div r14.w, l(2.000000), r14.w
    mul r15.w, r10.w, r10.w
    mad r10.w, -r10.w, r10.w, l(1.000000)
    mul r6.w, r6.w, r10.w
    max r10.w, r15.w, l(1.000000047E-034)
    div r6.w, r6.w, r10.w
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r6.w, r6.w, r14.w
    mad r16.xyz, r2.wwww, r2.wwww, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r16.xyz, r16.xyzx
    add r17.xyz, -r2.wwww, r16.zyzz
    add r16.xyz, r2.wwww, r16.xyzx
    mul r18.xyz, r17.zyzz, r17.zyzz
    mul r19.xyz, r16.zyzz, r16.zyzz
    add r19.xyz, r19.xyzx, r19.xyzx
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r16.xyz, r2.wwww, r16.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r17.xyz, r2.wwww, r17.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r16.xyz, r16.xyzx, r17.xyzx
    mad r16.xyz, r16.xyzx, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r16.xyz, r16.xyzx, r18.xyzx
    mul r6.w, r6.w, r12.w
    mul r16.xyz, r16.xyzx, r6.wwww
    mad r17.xyz, -r11.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xzwx
    mad r17.xyz, r1.xxxx, r17.xyzx, r5.wwww
    dp3_sat r5.w, r5.xyzx, -r15.xyzx
    mad r11.xyz, -r11.xyzx, r0.wwww, -r15.xyzx
    dp3 r0.w, r11.xyzx, r11.xyzx
    rsq r0.w, r0.w
    mul r11.xyz, r0.wwww, r11.xyzx
    dp3 r0.w, r11.xyzx, -r14.xyzx
    dp3_sat r6.w, r5.xyzx, -r14.xyzx
    dp3_sat r10.w, r5.xyzx, r11.xyzx
    mul r11.x, r7.y, r7.y
    mul r10.w, r10.w, r10.w
    mad r11.y, r7.y, r7.y, l(-1.000000)
    mad r10.w, r10.w, r11.y, l(1.000000)
    mul r10.w, r10.w, r10.w
    mul r10.w, r10.w, l(3.14159274)
    div r10.w, r11.x, r10.w
    mad r7.y, r7.y, l(0.500000), l(0.500000)
    mul r11.x, r6.w, r6.w
    mul r7.y, r7.y, r7.y
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r7.y
    max r11.x, r11.x, l(1.000000047E-034)
    div r6.w, r6.w, r11.x
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r11.x, r5.w, r5.w
    mad r5.w, -r5.w, r5.w, l(1.000000)
    mul r5.w, r5.w, r7.y
    max r7.y, r11.x, l(1.000000047E-034)
    div r5.w, r5.w, r7.y
    add r5.w, r5.w, l(1.000000)
    sqrt r5.w, r5.w
    add r5.w, r5.w, l(1.000000)
    div r5.w, l(2.000000), r5.w
    mul r5.w, r5.w, r6.w
    dp3 r6.w, r17.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r6.w, r6.w, l(50.000000)
    add r0.w, -r0.w, l(1.000000)
    mul r7.y, r0.w, r0.w
    mul r7.y, r7.y, r7.y
    add r11.xyz, -r17.xyzx, r6.wwww
    mul r11.xyz, r7.yyyy, r11.xyzx
    mad r11.xyz, r11.xyzx, r0.wwww, r17.xyzx
    mul r0.w, r5.w, r10.w
    mul r11.xyz, r11.xyzx, r0.wwww
    mul r12.xyz, r6.xxxx, -r12.xyzx
    exp r12.xyz, r12.xyzx
    mad r12.xyz, r11.xyzx, r12.xyzx, r16.xyzx
    movc r11.xyz, r4.wwww, r11.xyzx, r12.xyzx
    dp3 r11.w, r11.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r12.xyzw, l(0,0,0,0)
  else 
    if_nz r6.z
      mul r14.xyz, r7.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r14.w, l(0.0572957806)
      add r0.w, -r1.x, l(1.000000)
      mul r13.xyzw, r0.wwww, r14.xyzw
    else 
      ieq r0.w, r0.z, l(3)
      if_nz r0.w
        mad r14.xyz, r1.yzwy, r0.yyyy, cb2[2].xyzx
        dp3 r0.w, r14.xyzx, r14.xyzx
        rsq r0.w, r0.w
        mul r14.xyz, r0.wwww, r14.xyzx
        dp3_sat r0.w, r14.xyzx, r2.xyzx
        mul r4.w, r4.y, l(0.080000)
        add r0.w, -r0.w, l(1.000000)
        mul r5.w, r0.w, r0.w
        mul r5.w, r5.w, r5.w
        mad r6.x, -r4.y, l(0.080000), l(1.000000)
        mul r5.w, r5.w, r6.x
        mad r0.w, r5.w, r0.w, r4.w
        add_sat r4.w, r4.x, r4.x
        mad r14.w, r4.w, -r0.w, l(1.000000)
        mul r14.xyz, r7.xzwx, r14.wwww
        mul r13.xyzw, r14.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r6.y
          add r14.xyz, -r8.wxyw, r10.xyzx
          mad r15.xyz, r14.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r8.wxyw
          dp3 r0.w, r15.xyzx, r15.xyzx
          rsq r0.w, r0.w
          mul r15.xyz, r0.wwww, r15.xyzx
          mad r14.xyz, r14.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r8.wxyw
          dp3 r0.w, r14.xyzx, r14.xyzx
          rsq r0.w, r0.w
          mul r14.xyz, r0.wwww, r14.xyzx
          dp3 r0.w, r8.wxyw, cb2[2].xyzx
          dp3 r4.w, r15.xyzx, cb2[2].xyzx
          dp3 r5.w, r14.xyzx, cb2[2].xyzx
          mad r9.z, r0.w, l(0.500000), l(0.500000)
          mad r6.xw, r9.zzzw, l(0.984375, 0.000000, 0.000000, 0.984375), l(0.00781250000, 0.000000, 0.000000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.x, r6.xwxx, t0.xyzw, s0, l(0.000000)
          mad r9.y, r4.w, l(0.500000), l(0.500000)
          mad r6.xw, r9.yyyw, l(0.984375, 0.000000, 0.000000, 0.984375), l(0.00781250000, 0.000000, 0.000000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.y, r6.xwxx, t0.xyzw, s0, l(0.000000)
          mad r9.x, r5.w, l(0.500000), l(0.500000)
          mad r6.xw, r9.xxxw, l(0.984375, 0.000000, 0.000000, 0.984375), l(0.00781250000, 0.000000, 0.000000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.z, r6.xwxx, t0.xyzw, s0, l(0.000000)
          mul r14.xyz, r7.xzwx, r14.xyzx
          mov r14.w, l(0.0572957806)
          mul r13.xyzw, r14.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r0.w, r0.z, l(5)
          dp3 r4.w, r8.wxyw, cb2[2].xyzx
          mad r4.w, -r4.w, r4.w, l(1.000000)
          sqrt r4.w, r4.w
          mul r14.xyz, r7.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r14.w, l(0.0572957806)
          add r5.w, -r1.x, l(1.000000)
          mul r14.xyzw, r5.wwww, r14.xyzw
          mul r15.xyzw, r4.wwww, r14.xyzw
          mul r15.xyzw, r15.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r4.w, -r8.z, l(1.000000)
          mul r15.xyzw, r4.wwww, r15.xyzw
          movc r13.xyzw, r0.wwww, r15.xyzw, r14.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mul r0.w, r4.y, l(0.080000)
      mad r9.xyz, -r4.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xzwx
      mad r9.xyz, r1.xxxx, r9.xyzx, r0.wwww
      dp3_sat r0.w, r5.xyzx, r2.xyzx
      mad r14.xyz, r1.yzwy, r0.yyyy, cb2[2].xyzx
      dp3 r4.w, r14.xyzx, r14.xyzx
      rsq r4.w, r4.w
      mul r14.xyz, r4.wwww, r14.xyzx
      dp3 r4.w, r14.xyzx, cb2[2].xyzx
      dp3_sat r5.w, r5.xyzx, r14.xyzx
      mul r6.x, r4.x, r4.x
      mul r5.w, r5.w, r5.w
      mad r6.w, r4.x, r4.x, l(-1.000000)
      mad r5.w, r5.w, r6.w, l(1.000000)
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(3.14159274)
      div r5.w, r6.x, r5.w
      mad r6.x, r4.x, l(0.500000), l(0.500000)
      mul r6.w, r2.w, r2.w
      mul r6.x, r6.x, r6.x
      mad r7.y, -r2.w, r2.w, l(1.000000)
      mul r7.y, r6.x, r7.y
      max r6.w, r6.w, l(1.000000047E-034)
      div r6.w, r7.y, r6.w
      add r6.w, r6.w, l(1.000000)
      sqrt r6.w, r6.w
      add r6.w, r6.w, l(1.000000)
      div r6.w, l(2.000000), r6.w
      mul r7.y, r0.w, r0.w
      mad r0.w, -r0.w, r0.w, l(1.000000)
      mul r0.w, r0.w, r6.x
      max r6.x, r7.y, l(1.000000047E-034)
      div r0.w, r0.w, r6.x
      add r0.w, r0.w, l(1.000000)
      sqrt r0.w, r0.w
      add r0.w, r0.w, l(1.000000)
      div r0.w, l(2.000000), r0.w
      mul r0.w, r0.w, r6.w
      dp3 r6.x, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r6.x, r6.x, l(50.000000)
      add r4.w, -r4.w, l(1.000000)
      mul r6.w, r4.w, r4.w
      mul r6.w, r6.w, r6.w
      add r14.xyz, -r9.xyzx, r6.xxxx
      mul r14.xyz, r6.wwww, r14.xyzx
      mad r9.xyz, r14.xyzx, r4.wwww, r9.xyzx
      mul r0.w, r0.w, r5.w
      mul r11.xyz, r9.xyzx, r0.wwww
      dp3 r11.w, r11.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r0.w, r0.z, l(3)
      if_nz r0.w
        mad r9.xyz, r1.yzwy, r0.yyyy, cb2[2].xyzx
        dp3 r0.w, r9.xyzx, r9.xyzx
        rsq r0.w, r0.w
        mul r9.xyz, r0.wwww, r9.xyzx
        dp3_sat r0.w, r9.xyzx, r2.xyzx
        mul r4.w, r4.y, l(0.080000)
        add r0.w, -r0.w, l(1.000000)
        mul r5.w, r0.w, r0.w
        mul r5.w, r5.w, r5.w
        mad r6.x, -r4.y, l(0.080000), l(1.000000)
        mul r5.w, r5.w, r6.x
        mad r0.w, r5.w, r0.w, r4.w
        dp3_sat r4.w, r5.xyzx, r9.xyzx
        mul r5.w, r4.w, r4.w
        mad r6.xw, -r4.wwww, r4.wwww, l(1.000001, 0.000000, 0.000000, 1.000000)
        div r5.w, r5.w, r6.x
        mul r6.x, r6.w, r6.w
        mul r6.w, r4.x, r4.x
        mad r9.xy, r4.xxxx, r4.xxxx, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r7.y, r9.x, l(4.000000), l(1.000000)
        mul r7.y, r7.y, l(3.14159274)
        div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
        div r5.w, -r5.w, r9.y
        mul r5.w, r5.w, l(1.442695)
        exp r5.w, r5.w
        mul r5.w, r5.w, l(4.000000)
        div r5.w, r5.w, r6.x
        add r5.w, r5.w, l(1.000000)
        mul r5.w, r5.w, r7.y
        dp3_sat r6.x, r5.xyzx, r2.xyzx
        add r7.y, r2.w, r6.x
        mad r6.x, -r2.w, r6.x, r7.y
        mul r6.x, r6.x, l(4.000000)
        div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
        mov_sat r6.x, r6.x
        div r6.w, l(2.000000), r6.w
        add r6.w, r6.w, l(-2.000000)
        max r6.w, r6.w, l(1.000000031E-022)
        log r4.w, r4.w
        mul r4.w, r4.w, r6.w
        exp r4.w, r4.w
        add r6.w, r6.w, l(8.000000)
        mul r4.w, r4.w, r6.w
        mul r4.w, r4.w, l(0.0397887342)
        min r4.w, r4.w, l(1.000000)
        add_sat r6.w, r4.x, r4.x
        mad r5.w, r5.w, r6.x, -r4.w
        mad r4.w, r6.w, r5.w, r4.w
        mul r14.xyz, r0.wwww, r4.wwww
        dp3 r14.w, r14.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r15.xyz, r8.wxyw
        mov r15.w, l(1.000000)
        mul r11.xyzw, r14.xyzw, r15.xyzw
      else 
        if_nz r6.y
          mul r6.xw, r4.yyyx, l(0.080000, 0.000000, 0.000000, 0.400000)
          mad r9.xyz, -r4.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xzwx
          mad r9.xyz, r1.xxxx, r9.xyzx, r6.xxxx
          dp3_sat r0.w, r5.xyzx, r2.xyzx
          mad r14.xyz, r1.yzwy, r0.yyyy, cb2[2].xyzx
          dp3 r4.w, r14.xyzx, r14.xyzx
          rsq r4.w, r4.w
          mul r14.xyz, r4.wwww, r14.xyzx
          dp3 r4.w, r14.xyzx, cb2[2].xyzx
          dp3_sat r5.w, r5.xyzx, r14.xyzx
          mul r6.x, r4.x, r4.x
          mul r5.w, r5.w, r5.w
          mad r7.y, r4.x, r4.x, l(-1.000000)
          mad r7.y, r5.w, r7.y, l(1.000000)
          mul r7.y, r7.y, r7.y
          mul r7.y, r7.y, l(3.14159274)
          div r6.x, r6.x, r7.y
          mad r14.xy, r4.xxxx, l(0.500000, 0.200000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mul r7.y, r2.w, r2.w
          mul r14.xy, r14.xyxx, r14.xyxx
          mad r10.w, -r2.w, r2.w, l(1.000000)
          mul r14.zw, r10.wwww, r14.xxxy
          max r7.y, r7.y, l(1.000000047E-034)
          div r14.zw, r14.zzzw, r7.yyyy
          add r14.zw, r14.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          sqrt r14.zw, r14.zzzw
          add r14.zw, r14.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul r7.y, r0.w, r0.w
          mad r0.w, -r0.w, r0.w, l(1.000000)
          mul r14.xy, r0.wwww, r14.xyxx
          max r0.w, r7.y, l(1.000000047E-034)
          div r14.xy, r14.xyxx, r0.wwww
          add r14.xy, r14.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r14.xy, r14.xyxx
          add r14.xy, r14.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r14.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r14.xyzw
          mul r14.xy, r14.xyxx, r14.zwzz
          dp3 r0.w, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r0.w, r0.w, l(50.000000)
          add r4.w, -r4.w, l(1.000000)
          mul r7.y, r4.w, r4.w
          mul r7.y, r7.y, r7.y
          add r15.xyz, -r9.xyzx, r0.wwww
          mul r15.xyz, r7.yyyy, r15.xyzx
          mad r9.xyz, r15.xyzx, r4.wwww, r9.xyzx
          mul r0.w, r6.x, r14.x
          mul r15.xyz, r9.xyzx, r0.wwww
          dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r0.w, r6.w, r6.w
          mad r4.w, r6.w, r6.w, l(-1.000000)
          mad r4.w, r5.w, r4.w, l(1.000000)
          mul r4.w, r4.w, r4.w
          mul r4.w, r4.w, l(3.14159274)
          div r0.w, r0.w, r4.w
          mul r0.w, r14.y, r0.w
          mul r14.xyz, r9.xyzx, r0.wwww
          dp3 r14.w, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r14.xyzw, r14.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r11.xyzw, r15.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r14.xyzw
        else 
          ieq r0.w, r0.z, l(5)
          dp3_sat r4.w, r7.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r4.w, r4.w, l(1.66666663), l(1.33333337)
          mul r9.xyz, r4.xxxx, r8.wxyw
          mad r9.xyz, r9.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.xyzx
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          dp3 r5.w, -cb2[2].xyzx, r9.xyzx
          mul r6.x, r4.w, r4.w
          mad r6.w, -r5.w, r5.w, l(1.000000)
          mad r6.w, -r6.x, r6.w, l(1.000000)
          sqrt r7.y, r6.w
          mad r5.w, r4.w, r5.w, -r7.y
          mul r14.xyz, r9.xyzx, r5.wwww
          mad r14.xyz, r4.wwww, cb2[2].xyzx, r14.xyzx
          lt r5.w, l(0.000000), r6.w
          and r5.w, r5.w, l(0x3f800000)
          mul r15.xyz, r5.wwww, r14.xyzx
          dp3 r6.w, -r2.xyzx, r9.xyzx
          mad r7.y, -r6.w, r6.w, l(1.000000)
          mad r6.x, -r6.x, r7.y, l(1.000000)
          sqrt r7.y, r6.x
          mad r6.w, r4.w, r6.w, -r7.y
          mul r9.xyz, r9.xyzx, r6.wwww
          mad r9.xyz, r4.wwww, r2.xyzx, r9.xyzx
          lt r4.w, l(0.000000), r6.x
          and r4.w, r4.w, l(0x3f800000)
          mul r9.xyz, r4.wwww, r9.xyzx
          mad r1.yzw, r1.yyzw, r0.yyyy, cb2[2].xxyz
          dp3 r0.y, r1.yzwy, r1.yzwy
          rsq r0.y, r0.y
          mul r1.yzw, r0.yyyy, r1.yyzw
          dp3_sat r0.y, r5.xyzx, r2.xyzx
          dp3_sat r4.w, r5.xyzx, r1.yzwy
          dp3 r6.x, r1.yzwy, cb2[2].xyzx
          mov_sat r6.w, r6.x
          dp3 r7.y, r1.zwyz, r8.xywx
          mul r16.xyz, r5.yzxy, r8.ywxy
          mad r16.xyz, r8.xywx, r5.zxyz, -r16.xyzx
          dp3 r10.w, r16.xyzx, r16.xyzx
          rsq r10.w, r10.w
          mul r16.xyz, r10.wwww, r16.xyzx
          dp3 r1.y, r1.yzwy, r16.xyzx
          mul r1.zw, r4.yyyx, l(0.000000, 0.000000, 0.080000, 3.14159274)
          mad r17.xyz, -r4.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xzwx
          mad r17.xyz, r1.xxxx, r17.xyzx, r1.zzzz
          dp3 r1.z, r17.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r1.z, r1.z, l(50.000000)
          add r4.y, -r6.w, l(1.000000)
          mul r6.w, r4.y, r4.y
          mul r6.w, r6.w, r6.w
          add r18.xyz, -r17.xyzx, r1.zzzz
          mul r19.xyz, r6.wwww, r18.xyzx
          mad r19.xyz, r19.xyzx, r4.yyyy, r17.xyzx
          mul r1.z, r4.x, r4.x
          mul r4.y, r4.w, r4.w
          mul r6.w, r7.y, r7.y
          div r6.w, r6.w, r1.z
          mad r1.y, r1.y, r1.y, r6.w
          mad r1.y, r4.w, r4.w, r1.y
          mul r1.y, r1.y, r1.y
          mul r1.y, r1.w, r1.y
          div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
          mul r4.w, r2.w, r2.w
          mad r6.w, -r2.w, r2.w, l(1.000000)
          mul r7.y, r1.z, r6.w
          max r4.w, r4.w, l(1.000000047E-034)
          div r7.y, r7.y, r4.w
          add r7.y, r7.y, l(1.000000)
          sqrt r7.y, r7.y
          add r7.y, r7.y, l(1.000000)
          div r7.y, l(2.000000), r7.y
          mul r10.w, r0.y, r0.y
          mad r0.y, -r0.y, r0.y, l(1.000000)
          mul r14.w, r0.y, r1.z
          max r10.w, r10.w, l(1.000000047E-034)
          div r14.w, r14.w, r10.w
          add r14.w, r14.w, l(1.000000)
          sqrt r14.w, r14.w
          add r14.w, r14.w, l(1.000000)
          div r14.w, l(2.000000), r14.w
          mul r7.y, r7.y, r14.w
          mul r1.y, r1.y, r7.y
          mul_sat r19.xyz, r19.xyzx, r1.yyyy
          mul r19.xyz, r9.wwww, r19.xyzx
          mul r20.xyz, r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r14.xyz, -r14.xyzx, r5.wwww, -r9.xyzx
          dp3 r1.y, r14.xyzx, r14.xyzx
          rsq r1.y, r1.y
          mul r14.xyz, r1.yyyy, r14.xyzx
          dp3_sat r1.y, r5.xyzx, -r15.xyzx
          dp3_sat r5.w, r5.xyzx, -r9.xyzx
          dp3_sat r5.x, r5.xyzx, r14.xyzx
          dp3_sat r5.y, r14.xyzx, -r15.xyzx
          dp3 r5.z, r14.yzxy, r8.xywx
          dp3 r7.y, r14.xyzx, r16.xyzx
          add r5.y, -r5.y, l(1.000000)
          mul r9.x, r5.y, r5.y
          mul r9.x, r9.x, r9.x
          mul r9.xyz, r9.xxxx, r18.xyzx
          mad r9.xyz, r9.xyzx, r5.yyyy, r17.xyzx
          mul r5.y, r5.z, r5.z
          div r5.y, r5.y, r1.z
          mad r5.y, r7.y, r7.y, r5.y
          mad r5.x, r5.x, r5.x, r5.y
          mul r5.x, r5.x, r5.x
          mul r1.w, r1.w, r5.x
          div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
          mul r5.x, r1.y, r1.y
          mad r1.y, -r1.y, r1.y, l(1.000000)
          mul r1.y, r1.y, r1.z
          max r5.x, r5.x, l(1.000000047E-034)
          div r1.y, r1.y, r5.x
          add r1.y, r1.y, l(1.000000)
          sqrt r1.y, r1.y
          add r1.y, r1.y, l(1.000000)
          div r1.y, l(2.000000), r1.y
          mul r5.x, r5.w, r5.w
          mad r5.y, -r5.w, r5.w, l(1.000000)
          mul r5.y, r1.z, r5.y
          max r5.x, r5.x, l(1.000000047E-034)
          div r5.x, r5.y, r5.x
          add r5.x, r5.x, l(1.000000)
          sqrt r5.x, r5.x
          add r5.x, r5.x, l(1.000000)
          div r5.x, l(2.000000), r5.x
          mul r1.y, r1.y, r5.x
          mul r1.y, r1.y, r1.w
          mul_sat r5.xyz, r9.xyzx, r1.yyyy
          sqrt r9.xyz, r7.xzwx
          mad r5.xyz, -r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.xyzx
          mad r5.xyz, r9.xyzx, r5.xyzx, r20.xyzx
          dp3 r5.w, r5.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r1.y, r4.x, r4.x, l(-1.000000)
          mad r1.y, r4.y, r1.y, l(1.000000)
          mul r1.y, r1.y, r1.y
          mul r1.y, r1.y, l(3.14159274)
          div r1.y, r1.z, r1.y
          mad r1.z, r4.x, l(0.500000), l(0.500000)
          mul r1.z, r1.z, r1.z
          mul r1.w, r6.w, r1.z
          div r1.w, r1.w, r4.w
          add r1.w, r1.w, l(1.000000)
          sqrt r1.w, r1.w
          add r1.w, r1.w, l(1.000000)
          div r1.w, l(2.000000), r1.w
          mul r0.y, r0.y, r1.z
          div r0.y, r0.y, r10.w
          add r0.y, r0.y, l(1.000000)
          sqrt r0.y, r0.y
          add r0.y, r0.y, l(1.000000)
          div r0.y, l(2.000000), r0.y
          mul r0.y, r0.y, r1.w
          add r1.z, -r6.x, l(1.000000)
          mul r1.w, r1.z, r1.z
          mul r1.w, r1.w, r1.w
          mul r4.xyw, r1.wwww, r18.xyxz
          mad r4.xyw, r4.xyxw, r1.zzzz, r17.xyxz
          mul r0.y, r0.y, r1.y
          mul r9.xyz, r4.xywx, r0.yyyy
          dp3 r9.w, r9.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r11.xyzw, r0.wwww, r5.xyzw, r9.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mov r12.xyzw, l(0,0,0,0)
    else 
      ieq r0.y, r0.z, l(3)
      if_nz r0.y
        mov r12.xyzw, l(0,0,0,0)
      else 
        if_nz r6.y
          mov r12.xyzw, l(0,0,0,0)
        else 
          dp3 r0.y, r8.wxyw, cb2[2].xyzx
          mad r0.y, -r0.y, r0.y, l(1.000000)
          sqrt r0.y, r0.y
          mul r0.w, r8.z, l(-1.500000)
          dp3 r1.y, r10.xyzx, cb2[2].xyzx
          mad r1.z, -r8.z, l(-1.500000), r1.y
          div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r0.w
          mul_sat r0.w, r0.w, r1.z
          mad r1.z, r0.w, l(-2.000000), l(3.000000)
          mul r0.w, r0.w, r0.w
          mul r0.w, r0.w, r1.z
          mul r5.xyz, r7.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r5.w, l(0.0572957806)
          add r1.x, -r1.x, l(1.000000)
          mul r5.xyzw, r1.xxxx, r5.xyzw
          mul r5.xyzw, r0.wwww, r5.xyzw
          mul r5.xyzw, r0.yyyy, r5.xyzw
          mul r5.xyzw, r8.zzzz, r5.xyzw
          mul r5.xyzw, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r0.yw, r0.zzzz, l(0, 5, 0, 8)
          max r1.z, |r1.y|, l(0.000001)
          rcp r1.z, r1.z
          mul r1.y, r1.z, r1.y
          dp3 r1.z, r10.xyzx, r2.xyzx
          max r1.w, |r1.z|, l(0.000001)
          rcp r1.w, r1.w
          mul r1.z, r1.w, r1.z
          eq r1.y, r1.z, r1.y
          movc r9.w, r1.y, l(0), l(1.000000)
          mul r1.xyz, r1.xxxx, r8.wxyw
          mul r9.xyz, r9.wwww, r1.xyzx
          mul r1.xyzw, r9.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r8.xyz, r7.xzwx, r8.wwww
          mul r7.xyzw, r8.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r1.xyzw, r0.wwww, r1.xyzw, r7.xyzw
          movc r12.xyzw, r0.yyyy, r5.xyzw, r1.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r0.y, r6.y, l(1.000000), r4.z
  dp3 r0.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r1.x, r0.x, r8.w
  add r0.w, -r0.y, r0.w
  mad r0.w, r1.x, r0.w, r0.y
  movc r0.y, r0.z, r0.y, r0.w
  mul r1.xyzw, r2.wwww, r11.xyzw
  mad r1.xyzw, r13.xyzw, r0.yyyy, r1.xyzw
  add r1.xyzw, r12.xyzw, r1.xyzw
  mul r0.xyzw, r0.xxxx, r1.xyzw
  mov r3.xyz, cb2[0].xyzx
  mul r0.xyzw, r0.xyzw, r3.xyzw
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r0.x, r0.w, cb1[176].w
max r0.x, r0.x, l(0.000000)
min o0.w, r0.x, l(64512.000000)
ret 
// Approximately 929 instruction slots used