// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 9ccfbcf47c34f538-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:59:18 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4 [unused]
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer EmitterOld
// {
//
//   float4 ParticleLightColors[4];     // Offset:    0 Size:    64
//   float4 ParticleLightDirections[4]; // Offset:   64 Size:    64
//   float4 ParticleLightPositions[4];  // Offset:  128 Size:    64
//   float4 ParticleSpotParams[4];      // Offset:  192 Size:    64
//   float4x4 ParticleSpotProjMatrix;   // Offset:  256 Size:    64 [unused]
//   float4 ParticleSpotShadowTextureSize;// Offset:  320 Size:    16 [unused]
//   float4 ParticleSpotVideoUnpack[8]; // Offset:  336 Size:   128 [unused]
//   float4 RainColor;                  // Offset:  464 Size:    16 [unused]
//   float4x4 ShadowOcclusionProjMatrix;// Offset:  480 Size:    64 [unused]
//   float4 SoftClipPlane;              // Offset:  544 Size:    16 [unused]
//   float4 UniformFog;                 // Offset:  560 Size:    16 [unused]
//   float3 TweakedLightDirection;      // Offset:  576 Size:    12 [unused]
//   float OneOverSoftRange;            // Offset:  588 Size:     4 [unused]
//   float2 AlphaScaleOffset;           // Offset:  592 Size:     8
//   float ParticleZOffset;             // Offset:  600 Size:     4
//   float QuadTessellationFactor;      // Offset:  604 Size:     4 [unused]
//   float2 FarSoftDistanceRange;       // Offset:  608 Size:     8 [unused]
//   int ParticleLightCount;            // Offset:  616 Size:     4
//   uint FogParticleCount;             // Offset:  620 Size:     4 [unused]
//   float ParticleLightAttenuations[4];// Offset:  624 Size:    52
//
// }
//
// cbuffer SceneParticleAttributes
// {
//
//   float4 DistortionSpeedTiling;      // Offset:    0 Size:    16 [unused]
//   float4 OpacityCompensationKeyFrames[5];// Offset:   16 Size:    80
//   float AlphaTestValue;              // Offset:   96 Size:     4 [unused]
//   float DiffuseLightingPowerExponent;// Offset:  100 Size:     4
//   float DistortionStrength;          // Offset:  104 Size:     4 [unused]
//   float HDRMul;                      // Offset:  108 Size:     4
//   float Translucency;                // Offset:  112 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ShadowRealSampler               sampler_c      NA          NA    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    1        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    2        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    4        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    5        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// LightProbes                       cbuffer      NA          NA    3        1
// EmitterOld                        cbuffer      NA          NA    4        1
// SceneParticleAttributes           cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyzw
// color                    1   xyzw        1     NONE   float   xyzw
// texcoord                 4   xyzw        2     NONE   float   xyz 
// texcoord                 5   xyzw        3     NONE   float   xyz 
// texcoord                 6   xyzw        4     NONE   float   xyzw
// texcoord                 7   xyzw        5     NONE   float   xyzw
// texcoord                 3   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[176], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[55], dynamicIndexed
dcl_constantbuffer cb3[23], immediateIndexed
dcl_constantbuffer cb4[43], dynamicIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 11
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v0.yyyy, v3.xyzx
mad r0.xyz, v0.xxxx, v2.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, v4.xyzx
add r1.x, -r0.x, cb0[17].w
add r1.y, -r0.y, cb0[18].w
add r1.z, -r0.z, cb0[19].w
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb4[37].zzzz, r0.xyzx
sincos r1.x, r2.x, v4.w
mov r3.x, -r1.x
add r1.yz, v0.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r3.y, r2.x
dp2 r2.x, r1.zyzz, r3.xyxx
mov r3.z, r1.x
dp2 r2.y, r1.zyzz, r3.yzyy
add r1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad o4.xy, r1.xyxx, v5.zwzz, v5.xyxx
mad r1.x, v1.w, cb4[37].x, cb4[37].y
mov r0.w, l(1.000000)
dp4 r2.x, r0.xyzw, cb0[54].xyzw
dp4 r2.y, r0.xyzw, cb0[55].xyzw
dp4 r2.z, r0.xyzw, cb0[56].xyzw
dp4 r2.w, r0.xyzw, cb0[57].xyzw
add r1.yzw, -r0.xxyz, cb0[174].xxyz
dp3 r3.x, r1.yzwy, r1.yzwy
rsq r3.x, r3.x
mul r3.xyz, r1.yzwy, r3.xxxx
mul r4.xyz, v1.zyxz, v1.zyxz
add r5.xyz, r0.xyzx, -v4.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
sqrt r3.w, r3.w
div r5.xyz, r5.xyzx, r3.wwww
mov r6.xyzw, l(0,0,0,0)
mov r4.w, l(0)
loop 
  ige r5.w, r4.w, cb4[38].z
  breakc_nz r5.w
  add r7.xyz, -v4.xyzx, cb4[r4.w + 8].xyzx
  dp3 r5.w, r7.xyzx, r7.xyzx
  sqrt r5.w, r5.w
  div r7.xyz, r7.xyzx, r5.wwww
  add r8.xyz, -r0.xyzx, cb4[r4.w + 8].xyzx
  dp3 r7.w, r8.xyzx, r8.xyzx
  rsq r8.w, r7.w
  mul r8.xyz, r8.wwww, r8.xyzx
  div r5.w, r5.w, r3.w
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  dp3 r7.x, r7.xyzx, r5.xyzx
  mad_sat r7.x, r7.x, l(0.585800), l(0.585800)
  div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mul r7.z, r7.w, cb4[r4.w + 39].x
  mad r7.z, -r7.z, r7.z, l(1.000000)
  max r7.z, r7.z, l(0.000000)
  mul r7.z, r7.z, r7.z
  mul r7.y, r7.z, r7.y
  min r7.y, r7.y, l(1000000.000000)
  dp3 r7.z, -r8.xyzx, cb4[r4.w + 4].xyzx
  mad_sat r7.w, r7.z, cb4[r4.w + 12].x, cb4[r4.w + 12].y
  lt r7.z, r7.z, cb4[r4.w + 4].w
  mul r7.x, r7.y, r7.x
  mul r7.x, r7.w, r7.x
  movc r7.x, r7.z, l(0), r7.x
  mad r5.w, cb4[r4.w + 0].w, r5.w, r7.x
  mad r6.xyzw, icb[r4.w + 0].xyzw, r5.wwww, r6.xyzw
  iadd r4.w, r4.w, l(1)
endloop 
dp4 r5.x, r0.xyzw, cb3[12].xyzw
dp4 r5.y, r0.xyzw, cb3[13].xyzw
dp4_sat r0.w, r0.xyzw, cb3[14].xyzw
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r7.xyz, cb3[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r5.zw, r7.xxxy, cb3[16].xxxy
div r7.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), cb3[16].xyxz
mad r5.xy, r5.xyxx, r5.zwzz, r7.xyxx
lt r3.w, l(0.000000), cb3[17].y
div_sat r4.w, r0.w, cb3[17].y
mul r4.w, r4.w, cb3[17].x
and r3.w, r3.w, r4.w
lt r4.w, cb3[17].y, l(1.000000)
add_sat r0.w, r0.w, -cb3[17].y
add r7.x, -cb3[17].y, l(1.000000)
div r0.w, r0.w, r7.x
log r0.w, |r0.w|
mul r0.w, r0.w, cb3[16].w
exp r0.w, r0.w
add r7.x, r7.z, -cb3[17].x
mul r0.w, r0.w, r7.x
and r0.w, r0.w, r4.w
add r0.w, r0.w, r3.w
div r3.w, r0.w, cb3[16].z
round_ni r4.w, r0.w
div r4.w, r4.w, cb3[16].z
round_pi r0.w, r0.w
div r0.w, r0.w, cb3[16].z
mov_sat r7.x, r5.y
div r7.x, r7.x, cb3[16].z
add r5.z, r4.w, r7.x
sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r5.xzxx, t2.xyzw, s0, l(0.000000)
add r8.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r5.z, r8.y, l(0.250000), r7.y
min r5.z, r5.z, r8.x
div r7.x, r7.x, cb3[16].z
add r7.x, r4.w, r7.x
add r3.w, r3.w, -r7.x
mul r3.w, r3.w, cb3[16].z
div_sat r3.w, r3.w, r5.z
add r0.w, -r4.w, r0.w
mad r0.w, r3.w, r0.w, r4.w
add r5.w, r7.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r5.xywx, t5.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r5.xywx, t4.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xywx, t3.xyzw, s0, l(0.000000)
log r7.xyzw, |r7.xyzw|
mul r7.xyzw, r7.xyzw, cb3[22].xxxx
exp r7.xyzw, r7.xyzw
log r8.xyzw, |r8.xyzw|
mul r8.xyzw, r8.xyzw, cb3[22].xxxx
exp r8.xyzw, r8.xyzw
log r5.xyzw, |r5.xyzw|
mul r5.xyzw, r5.xyzw, cb3[22].xxxx
exp r5.xyzw, r5.xyzw
add r0.w, cb3[19].z, cb3[20].z
add r0.w, -r0.z, r0.w
mul_sat r0.w, r0.w, l(0.0333333351)
add r0.w, -r0.w, l(1.000000)
add r9.xyzw, -r7.xyzw, cb1[9].xyzw
mad r7.xyzw, r0.wwww, r9.xyzw, r7.xyzw
add r9.xyzw, -r8.xyzw, cb1[10].xyzw
mad r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
add r9.xyzw, -r5.xyzw, cb1[11].xyzw
mad r5.xyzw, r0.wwww, r9.xywz, r5.xywz
add r7.xyz, r7.xyzx, r8.xyzx
add r7.xyz, r5.xywx, r7.xyzx
mov r5.x, r7.w
mov r5.y, r8.w
add r5.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
dp3 r0.w, r1.yzwy, -cb0[173].xyzx
add r0.w, r0.w, -cb0[67].x
add o2.w, r0.w, r0.w
mul_sat o0.xyz, r4.xyzx, cb5[6].wwww
dp3 r0.w, r3.xyzx, -cb2[48].xyzx
mad_sat r0.w, r0.w, l(0.500000), l(0.500000)
log r0.w, r0.w
mul r0.w, r0.w, cb5[6].y
exp r0.w, r0.w
dp3_sat r1.y, -r3.xyzx, -cb2[48].xyzx
mul r1.yzw, r1.yyyy, cb1[0].xxyz
mul r1.yzw, r1.yyzw, cb5[7].xxxx
mad r1.yzw, cb1[0].xxyz, r0.wwww, r1.yyzw
mov r4.z, l(0)
mov r0.w, l(0)
mov r3.xyzw, l(0,0,3,0)
loop 
  uge r4.w, r3.w, l(4)
  breakc_nz r4.w
  ishl r4.w, r3.w, l(2)
  mul r7.xyz, r0.yyyy, cb2[r4.w + 1].xyzx
  mad r7.xyz, cb2[r4.w + 0].xyzx, r0.xxxx, r7.xyzx
  mad r7.xyz, cb2[r4.w + 2].xyzx, r0.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb2[r4.w + 3].xyzx
  max r4.w, |r7.y|, |r7.x|
  add r4.w, r4.w, cb2[16].x
  ult r5.w, r3.w, l(3)
  if_nz r5.w
    lt r5.w, r4.w, l(1.000000)
    if_nz r5.w
      mov r3.xy, r7.xyxx
      mov r4.z, r7.z
      mov r0.w, r4.w
      mov r3.z, r3.w
      break 
    endif 
  endif 
  iadd r3.w, r3.w, l(1)
  mov r3.xy, r7.xyxx
  mov r4.z, r7.z
  mov r0.w, r4.w
  mov r3.z, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r7.x, x0[r3.z + 0].z
mov r7.y, l(0.500000)
mad r4.xy, r3.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r7.xyxx
dp4 r3.x, cb2[17].xyzw, icb[r3.z + 0].xyzw
ieq r3.y, r3.z, l(3)
mad_sat r0.w, r0.w, cb2[16].z, cb2[16].w
and r0.w, r0.w, r3.y
ld_indexable(texture2d)(float,float,float,float) r3.yz, l(0, 0, 0, 0), t0.zxyw
mad r3.yz, r3.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r7.xy, r3.yyyy, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r7.xy, r3.zzzz, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r7.xyxx
dp2 r7.z, r3.yzyy, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r3.xw, r3.xxxx, cb2[38].zzzw
mul r8.xy, r3.xwxx, r7.xzxx
mov r8.z, l(0)
add r8.xyz, r4.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r8.xyxx, t1.xxxx, s1, r8.z
dp2 r7.w, r3.yzyy, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r7.xy, r3.xwxx, r7.ywyy
mov r7.z, l(0)
add r7.xyz, r4.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r7.xyxx, t1.xxxx, s1, r7.z
add r4.w, r4.w, r5.w
mul r7.xy, r3.yyyy, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r7.xy, r3.zzzz, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r7.xyxx
dp2 r7.z, r3.yzyy, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r8.xy, r3.xwxx, r7.xzxx
mov r8.z, l(0)
add r8.xyz, r4.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r8.xyxx, t1.xxxx, s1, r8.z
add r4.w, r4.w, r5.w
dp2 r7.w, r3.yzyy, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r3.xy, r3.xwxx, r7.ywyy
mov r3.z, l(0)
add r3.xyz, r3.xyzx, r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xxxx, s1, r3.z
add r3.x, r3.x, r4.w
mul r3.y, r3.x, l(0.250000)
mad r3.x, -r3.x, l(0.250000), l(1.000000)
mad r0.w, r0.w, r3.x, r3.y
mad r1.yzw, r1.yyzw, r0.wwww, r5.xxyz
mul r3.xyz, r6.yyyy, cb4[1].xyzx
mad r3.xyz, cb4[0].xyzx, r6.xxxx, r3.xyzx
mad r3.xyz, cb4[2].xyzx, r6.zzzz, r3.xyzx
mad r3.xyz, cb4[3].xyzx, r6.wwww, r3.xyzx
add r3.xyz, r1.yzwy, r3.xyzx
div r3.xyz, r3.xyzx, cb0[175].wwww
dp3_sat r0.w, r3.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
ge r3.xy, r0.wwww, cb5[1].xzxx
ge r3.z, cb5[1].z, r0.w
and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r3.x, r3.z, r3.x
add r3.zw, r0.wwww, -cb5[1].xxxz
add r4.xy, -cb5[1].xyxx, cb5[1].zwzz
div r3.z, r3.z, r4.x
mad r3.z, r3.z, r4.y, cb5[1].y
mul r3.x, r3.z, r3.x
ge r4.xy, cb5[2].xzxx, r0.wwww
and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r3.y, r3.y, r4.x
add r4.xz, -cb5[1].zzwz, cb5[2].xxyx
div r3.z, r3.w, r4.x
mad r3.z, r3.z, r4.z, cb5[1].w
mul r3.y, r3.z, r3.y
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r3.x, r3.y, r3.x
ge r3.yz, r0.wwww, cb5[2].xxzx
and r3.yz, r3.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r3.y, r4.y, r3.y
add r4.xy, r0.wwww, -cb5[2].xzxx
add r4.zw, -cb5[2].xxxy, cb5[2].zzzw
div r3.w, r4.x, r4.z
mad r3.w, r3.w, r4.w, cb5[2].y
mul r3.y, r3.w, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.yw, cb5[3].xxxz, r0.wwww
and r3.yw, r3.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r3.y, r3.y, r3.z
add r4.xz, -cb5[2].zzwz, cb5[3].xxyx
div r3.z, r4.y, r4.x
mad r3.z, r3.z, r4.z, cb5[2].w
mul r3.y, r3.z, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.yz, r0.wwww, cb5[3].xxzx
and r3.yz, r3.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r3.y, r3.w, r3.y
add r4.xy, r0.wwww, -cb5[3].xzxx
add r4.zw, -cb5[3].xxxy, cb5[3].zzzw
div r3.w, r4.x, r4.z
mad r3.w, r3.w, r4.w, cb5[3].y
mul r3.y, r3.w, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.yw, cb5[4].xxxz, r0.wwww
and r3.yw, r3.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r3.y, r3.y, r3.z
add r4.xz, -cb5[3].zzwz, cb5[4].xxyx
div r3.z, r4.y, r4.x
mad r3.z, r3.z, r4.z, cb5[3].w
mul r3.y, r3.z, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.yz, r0.wwww, cb5[4].xxzx
and r3.yz, r3.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r3.y, r3.w, r3.y
add r4.xy, r0.wwww, -cb5[4].xzxx
add r4.zw, -cb5[4].xxxy, cb5[4].zzzw
div r3.w, r4.x, r4.z
mad r3.w, r3.w, r4.w, cb5[4].y
mul r3.y, r3.w, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.yw, cb5[5].xxxz, r0.wwww
and r3.yw, r3.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r3.y, r3.y, r3.z
add r4.xz, -cb5[4].zzwz, cb5[5].xxyx
div r3.z, r4.y, r4.x
mad r3.z, r3.z, r4.z, cb5[4].w
mul r3.y, r3.z, r3.y
max r3.y, r3.y, l(0.000000)
add r3.x, r3.y, r3.x
ge r3.y, r0.w, cb5[5].x
and r3.y, r3.y, l(0x3f800000)
mul r3.y, r3.w, r3.y
add r0.w, r0.w, -cb5[5].x
add r3.zw, -cb5[5].xxxy, cb5[5].zzzw
div r0.w, r0.w, r3.z
mad r0.w, r0.w, r3.w, cb5[5].y
mul r0.w, r0.w, r3.y
max r0.w, r0.w, l(0.000000)
add r0.w, r0.w, r3.x
mul_sat o0.w, r1.x, r0.w

// Relocated to here with asmtool.py
mov o5.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 9ccfbcf47c34f538-vs.txt
ne r10.w, r2.w, l(1.0)
if_nz r10.w
  add r10.w, r2.w, -r10.y
  mad r2.x, r10.w, r10.x, r2.x
endif

dp4 o2.x, r2.xyzw, cb0[1].xyzw
dp4 o2.y, r2.xyzw, cb0[2].xyzw
dp4 o2.z, r2.xyzw, cb0[4].xyzw
add r0.xyz, r0.xyzx, -cb0[174].xyzx
dp3 r0.x, cb0[173].xyzx, r0.xyzx
mul o3.w, r0.x, cb0[67].w
mov o1.xyzw, r6.xyzw
mov o3.xyz, r1.yzwy

// mov o5.xyzw, r2.xyzw // Relocated from here with asmtool.py

ret 
// Approximately 331 instruction slots used