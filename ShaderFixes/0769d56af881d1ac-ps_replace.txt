// hlsltool.py --fix-wd2-unproject -i --only-autofixed --fxc /home/dss/fxc.exe 0769d56af881d1ac-ps_replace.txt
// ---- Created with 3Dmigoto v1.2.42 on Tue Dec 27 10:52:51 2016

cbuffer Viewport : register(b0)
{
  float4 CameraNearPlaneSize : packoffset(c0);
  float4x4 DepthTextureTransform : packoffset(c1);
  float4 FSMClipPlanes : packoffset(c5);
  float4 FacettedShadowCastParams : packoffset(c6);
  float4 FogValues0 : packoffset(c7);
  float4 FogValues1 : packoffset(c8);
  float4x4 InvProjectionMatrix : packoffset(c9);
  float4x4 InvProjectionMatrixDepth : packoffset(c13);
  float4x3 InvViewMatrix : packoffset(c17);
  float4x4 PreviousViewProjectionMatrix : packoffset(c20);
  float4x4 ProjectionMatrix : packoffset(c24);
  float4 RainOcclusionFadeParams : packoffset(c28);
  float4x4 RainOcclusionProjectionMatrix : packoffset(c29);
  float4 RainOcclusionShadowMapSize : packoffset(c33);
  float4 ReflectionVolumeDebugColors[15] : packoffset(c34);
  float4 VPosOffset : packoffset(c49);
  float4 VPosScale : packoffset(c50);
  float4x3 ViewMatrix : packoffset(c51);
  float4x4 ViewProjectionMatrix : packoffset(c54);
  float4x4 ViewRotProjectionMatrix : packoffset(c58);
  float4x4 ViewRotProjectionMatrixPure : packoffset(c62);
  float4 ViewportSize : packoffset(c66);

  struct
  {
    float near;
    float far;
    float view;
    float oneOverView;
  } CameraDistances : packoffset(c67);


  struct
  {
    float4x4 inverseTransform;
    float3 rcpFadeRangePositive;
    float textureArrayIndexAsFloat;
    float3 rcpFadeRangeNegative;
    float fadeFactor;
    float2 multipliers;
    uint parallaxCorrection;
    float padding0;
  } ReflectionVolumes[15] : packoffset(c68);

  float3 CameraDirection : packoffset(c173);
  float DefaultReflectionTextureArrayIndexAsFloat : packoffset(c173.w);
  float3 CameraPosition : packoffset(c174);
  float DynamicCubeMapReflectionTextureMaxMipIndex : packoffset(c174.w);
  float3 CullingCameraPosition : packoffset(c175);
  float ExposedWhitePointOverExposureScale : packoffset(c175.w);
  float3 FogColorVector : packoffset(c176);
  float ExposureScale : packoffset(c176.w);
  float3 OppositeFogColorDelta : packoffset(c177);
  float MaxParaboloidReflectionMipIndex : packoffset(c177.w);
  float3 SideFogColor : packoffset(c178);
  float MaxStaticReflectionMipIndex : packoffset(c178.w);
  float3 SunFogColorDelta : packoffset(c179);
  float MeasuredExposureScale : packoffset(c179.w);
  float3 TemporalFilteringParams : packoffset(c180);
  float RaindropRippleScale : packoffset(c180.w);
  float3 UncompressDepthWeights : packoffset(c181);
  float ReflectionScaleDistanceMul : packoffset(c181.w);
  float3 UncompressDepthWeightsWS : packoffset(c182);
  float ReflectionScaleStrength : packoffset(c182.w);
  float3 ViewPoint : packoffset(c183);
  float SkyParaboloidTextureMaxMipIndex : packoffset(c183.w);
  float2 DefaultReflectionMultipliers : packoffset(c184);
  bool UseOnlySkyReflection : packoffset(c184.z);
  float2 ReflectionGIControl : packoffset(c185);
  uint2 SelectedPixel : packoffset(c185.z);
}

cbuffer SkyBuffer : register(b1)
{

  struct
  {
    float4 m_lightIrradiance;
    float4 m_lightIrradianceWithoutCloudsCoverage;
    float4 m_lightDirection;
    float4 m_cloudLightVector;
    float4 m_cloudIrradiance;
    float4 m_environmentIrradianceSHRed;
    float4 m_environmentIrradianceSHGreen;
    float4 m_environmentIrradianceSHBlue;
    float4 m_environmentIrradianceAverage;
    float4 m_giDefaultProbeIrradiance[3];
    float4 m_giDefaultProbeTint[3];
    float4 m_giDirectEnvironmentIrradiance[3];
    float4 m_giBouncedEnvironmentIrradiance[4];
    float4 m_cloudAndSkyIrradianceSH[9];
    float4 m_skyOnlyIrradianceSH[9];
  } SkyLightStruct : packoffset(c0);

}

cbuffer LightData : register(b2)
{

  struct
  {
    float4x4 CascadedShadowProjections[4];
    float4 CascadedShadowSliceFadeParams;
    float4 CascadedBlurKernelMinSizes;
    float4 CascadedBlurKernelMaxSizes;
    float4 LightCapsuleDivLength;
    float4 LightFadingClipPlanes[8];
    float4 LightIESParams;
    float4 LightProjectedVideoUnpack[8];
    float4 LightShadowFactor;
    float4 LightShadowMapSize;
    float4x4 LightSpotShadowProjections;
    float4x4 LightVolumeTransform;
    float3 LightCapsuleMulLength;
    float3 LightDirection;
    float3 LightColor;
    float3 LightPivotPosition;
    float3 LightPosition;
    float2 LightCapsuleParams;
    float2 LightSpotConeFactors;
    float4 LightAttenuation;
    float2 LightSpotShadowAngleFactors;
    float LightSpotNearClipFactor;
    float CascadedShadowGrazingAngleScale;
  } LightDatas : packoffset(c0);

}

SamplerState Global__PreIntegratedSkinDiffuseTexture__SampObj___s : register(s0);
Texture2D<float4> Global__PreIntegratedSkinDiffuseTexture__TexObj__ : register(t0);
Texture2D<float4> Viewport__DepthVPSampler__TexObj__ : register(t1);
Texture2D<float4> DeferredLightingCommon__AlbedoTexture__TexObj__ : register(t2);
Texture2D<float4> DeferredLightingCommon__NormalTexture__TexObj__ : register(t3);
Texture2D<float4> DeferredLightingCommon__OtherTexture__TexObj__ : register(t4);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21;
  uint4 bitmask, uiDest;
  float4 fDest;

// WATCH_DOGS2 unprojection fix inserted by DarkStarSword's hlsltool.py:
// hlsltool.py --fix-wd2-unproject -i --only-autofixed --fxc /home/dss/fxc.exe 0769d56af881d1ac-ps_replace.txt

  r0.xy = v0.xy * VPosScale.zw + VPosOffset.zw;
  r1.xy = (int2)v0.xy;
  r1.zw = float2(0,0);
  r0.z = Viewport__DepthVPSampler__TexObj__.Load(r1.xyw).x;
  r0.w = 1;
  r2.x = dot(r0.zw, InvProjectionMatrix._m22_m32);
  r0.z = dot(r0.zw, InvProjectionMatrix._m23_m33);
  r0.z = -r2.x / r0.z;
  r2.z = -r0.z;
  r2.xy = r2.zz * r0.xy;

// Fix lights, note depth is negative (or could have used r0.z):
float4 s = StereoParams.Load(0);
r2.x -= s.x * (-r2.z - s.y) * InvProjectionMatrix._m00;

  r2.w = 1;
  r0.x = dot(r2.xyzw, InvViewMatrix._m00_m10_m20_m30);
  r0.y = dot(r2.xyzw, InvViewMatrix._m01_m11_m21_m31);
  r0.z = dot(r2.xyzw, InvViewMatrix._m02_m12_m22_m32);
  r2.xyzw = DeferredLightingCommon__AlbedoTexture__TexObj__.Load(r1.xyw).xyzw;
  r3.xyzw = DeferredLightingCommon__NormalTexture__TexObj__.Load(r1.xyw).xyzw;
  r1.xyzw = DeferredLightingCommon__OtherTexture__TexObj__.Load(r1.xyz).yxzw;
  r0.w = r1.w * 255 + 0.5;
  r0.w = floor(r0.w);
  r0.w = (uint)r0.w;
  r0.w = (uint)r0.w >> 5;
  r1.w = dot(r3.xyz, r3.xyz);
  r1.w = rsqrt(r1.w);
  r4.xyz = r3.xyz * r1.www;
  r5.xyz = cmp((int3)r0.www == int3(1,4,2));
  r1.w = cmp(r2.w >= 0.75);
  r4.w = -0.75 + r2.w;
  r4.w = r4.w * -0.599999905 + 1;
  r1.w = r1.w ? r4.w : 1;
  r1.w = r5.y ? r1.w : r2.w;
  r1.w = r5.x ? 1 : r1.w;
  r6.xyz = CameraPosition.xyz + -r0.xyz;
  r4.w = dot(r6.xyz, r6.xyz);
  r4.w = rsqrt(r4.w);
  r7.xyz = r6.xyz * r4.www;
  r8.yzw = r2.xyz * r1.www;
  if (r5.x != 0) {
    r1.w = r3.w * 0.5 + 0.5;
    r1.w = r1.w * 65535 + 0.5;
    r1.w = (uint)r1.w;
    r2.xy = (int2)r1.ww & int2(255,0);
    r2.xy = (uint2)r2.xy;
    r9.xw = float2(1.53186284e-005,0.00392156886) * r2.yx;
    r1.w = 255 * r2.w;
    r1.w = (uint)r1.w;
    r2.xy = (int2)r1.ww & int2(15,240);
    r2.xy = (uint2)r2.xy;
    r9.yz = float2(0.0666666701,0.00416666688) * r2.xy;
    r10.w = 0;
    r2.x = r1.z;
    r8.x = r8.y;
  } else {
    r1.w = r1.x * r1.x;
    r1.x = max(0.00100000005, r1.w);
    r1.w = cmp((int)r0.w == 2);
    if (r1.w != 0) {
      r1.w = r3.w * 0.5 + 0.5;
      r1.w = r1.w * 65535 + 0.5;
      r1.w = (uint)r1.w;
      r11.xy = (int2)r1.ww & int2(255,0);
      r11.xy = (uint2)r11.xy;
      r11.z = r1.y;
      r11.xyz = r11.xyz * float3(0.00784313772,3.06372567e-005,2) + float3(-1,-1,-1);
      r1.w = 1 + -r2.w;
      r1.w = r8.y * r1.w;
      r8.x = r1.w * 0.5 + r8.y;
      r1.w = dot(r11.xyz, r11.xyz);
      r1.w = rsqrt(r1.w);
      r9.xyw = r11.yzx * r1.www;
      r9.z = 0;
      r10.w = 0;
      r1.y = 0.5;
      r2.x = r1.z;
    } else {
      r1.w = cmp((int)r0.w == 3);
      if (r1.w != 0) {
        r1.w = r3.w * 0.5 + 0.5;
        r1.w = r1.w * 65535 + 0.5;
        r1.w = (uint)r1.w;
        r11.xyzw = (int4)r1.wwww & int4(0,2016,31,31);
        r11.xyzw = (uint4)r11.xyzw;
        r12.xyz = cmp(float3(1.25395,81.5471954,2568.0896) >= r11.wyx);
        r1.w = 0.00249675405 * r11.w;
        r13.xyz = r11.zyx * float3(0.0322580636,0.000496031775,1.57510076e-005) + float3(0.0549999997,0.0549999997,0.0549999997);
        r13.xyz = float3(0.947867334,0.947867334,0.947867334) * r13.xyz;
        r13.xyz = log2(r13.xyz);
        r13.xyz = float3(2.4000001,2.4000001,2.4000001) * r13.xyz;
        r13.xyz = exp2(r13.xyz);
        r9.w = r12.x ? r1.w : r13.x;
        r11.xy = float2(3.83925508e-005,1.21911819e-006) * r11.yx;
        r9.xy = r12.yz ? r11.xy : r13.yz;
        r9.z = 0;
        r10.w = 0;
        r2.x = r1.z;
      } else {
        if (r5.y != 0) {
          r1.w = r3.w * 32767 + 32767;
          r1.w = (uint)r1.w;
          r2.z = (int)r1.w & 255;
          r2.z = (uint)r2.z;
          r2.z = 0.0123199718 * r2.z;
          if (8 == 0) r1.w = 0; else if (8+8 < 32) {           r1.w = (uint)r1.w << (32-(8 + 8)); r1.w = (uint)r1.w >> (32-8);          } else r1.w = (uint)r1.w >> 8;
          r1.w = (uint)r1.w;
          r1.w = r1.w * 0.0246399436 + -3.14159274;
          sincos(r2.z, r11.x, r12.x);
          sincos(r1.w, r13.x, r14.x);
          r14.x = r14.x * r11.x;
          r14.y = r13.x * r11.x;
          r14.z = r12.x;
          r1.w = dot(r14.xyz, r14.xyz);
          r1.w = rsqrt(r1.w);
          r9.xyw = r14.yzx * r1.www;
          r10.w = saturate(0.25 * r2.w);
          r9.z = 0;
          r2.x = r1.z;
        } else {
          r1.w = cmp((int)r0.w == 5);
          r2.z = cmp(r3.z < 0.899999976);
          r11.xyz = r2.zzz ? float3(0,1,0) : float3(1,0,0);
          r12.xyz = r11.xyz * r3.zxy;
          r11.xyz = r3.yzx * r11.yzx + -r12.xyz;
          r2.z = dot(r11.xyz, r11.xyz);
          r2.z = rsqrt(r2.z);
          r11.xyz = r11.xyz * r2.zzz;
          r12.xyz = r11.yzx * r3.zxy;
          r3.xyz = r3.yzx * r11.zxy + -r12.xyz;
          r2.z = dot(r3.xyz, r3.xyz);
          r2.z = rsqrt(r2.z);
          r3.xyz = r3.xyz * r2.zzz;
          r2.z = r3.w * 2 + -1;
          r2.z = 3.14159274 * r2.z;
          sincos(r2.z, r12.x, r13.x);
          r11.xyz = r12.xxx * r11.xyz;
          r11.xyz = r3.xyz * r13.xxx + r11.xyz;
          r2.z = r3.w * 0.5 + 0.5;
          r2.z = r2.z * 65535 + 0.5;
          r2.z = (uint)r2.z;
          r2.z = (int)r2.z & 255;
          r2.z = (uint)r2.z;
          r2.z = 0.00392156886 * r2.z;
          r3.x = r0.w ? 0 : r2.z;
          r11.w = r1.z;
          r3.yzw = float3(0,0,0);
          r9.xyzw = r1.wwww ? r11.yzwx : r3.yzwx;
          r11.x = r2.w;
          r11.yz = float2(0,0);
          r2.xy = r1.ww ? r11.yx : r11.wz;
          r10.w = r2.y;
        }
      }
      r8.x = r8.y;
    }
  }
  r3.x = 1;
  r3.yzw = LightDatas.LightDirection.yzx;
  r3.xyzw = float4(0.886227667,1.0256424,1.0256424,1.0256424) * r3.xyzw;
  r11.x = dot(r3.xyzw, SkyLightStruct.m_environmentIrradianceSHRed.xyzw);
  r11.y = dot(r3.xyzw, SkyLightStruct.m_environmentIrradianceSHGreen.xyzw);
  r11.z = dot(r3.xyzw, SkyLightStruct.m_environmentIrradianceSHBlue.xyzw);
  r2.yzw = max(float3(0,0,0), r11.xyz);
  r2.yzw = SkyLightStruct.m_lightIrradiance.xyz + r2.yzw;
  r2.yzw = LightDatas.LightColor.xyz * r2.yzw;
  r3.xyz = LightDatas.LightPosition.xyz + -r0.xyz;
  r1.z = dot(r3.xyz, r3.xyz);
  r1.z = rsqrt(r1.z);
  r11.xyz = r3.xyz * r1.zzz;
  r0.xyz = LightDatas.LightPivotPosition.xyz + -r0.xyz;
  r1.w = dot(r11.xyz, LightDatas.LightDirection.xyz);
  r1.w = saturate(-r1.w * LightDatas.LightSpotConeFactors.x + LightDatas.LightSpotConeFactors.y);
  r2.yzw = r2.yzw * r1.www;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.y = 1 / r0.x;
  r0.x = LightDatas.LightAttenuation.y * r0.x;
  r0.x = -r0.x * r0.x + 1;
  r0.x = max(0, r0.x);
  r0.x = r0.x * r0.x;
  r0.x = r0.y * r0.x;
  r0.x = min(LightDatas.LightAttenuation.w, r0.x);
  r12.xyz = r2.yzw * abs(r0.xxx);
  r12.w = dot(r12.xyz, float3(0.212639004,0.715168655,0.0721923187));
  r0.x = dot(r4.xyz, r11.xyz);
  r0.y = saturate(r0.x);
  r0.z = dot(r9.xyw, r9.xyw);
  r0.z = rsqrt(r0.z);
  r2.yzw = r9.wxy * r0.zzz;
  r0.z = dot(r2.yzw, r11.xyz);
  r0.z = 1 + r0.z;
  r0.z = saturate(0.5 * r0.z);
  r1.w = r0.z * r0.z;
  r0.z = r1.w * r0.z;
  r0.z = r5.z ? r0.z : r0.y;
  if (r5.x != 0) {
    r13.xyzw = saturate(r9.wzxy);
    r2.x = saturate(r2.x);
    r2.yzw = log2(r8.xzw);
    r14.xyz = r2.yzw * r13.yyy;
    r14.xyz = float3(-12.7799997,-12.7799997,-12.7799997) * r14.xyz;
    r2.yzw = r2.yzw * float3(-0.0199999996,-0.0199999996,-0.0199999996) + r14.xyz;
    r1.w = cmp(r13.x == 0.000000);
    r3.w = 1 + -r2.x;
    r14.xyz = r8.xzw * r3.www;
    r14.xyz = float3(0.318309873,0.318309873,0.318309873) * r14.xyz;
    r15.xyz = -r13.xxx * r2.yzw;
    r15.xyz = exp2(r15.xyz);
    r15.xyz = r15.xyz * r14.xyz;
    r15.xyz = float3(0.444444448,0.444444448,0.444444448) * r15.xyz;
    r14.xyz = r1.www ? r14.xyz : r15.xyz;
    r14.w = 0.180000007;
    r3.w = 0.0799999982 * r13.w;
    r5.x = r13.x * 48.75 + 1.25;
    r1.x = saturate(r1.x);
    r5.w = r1.x * r1.x;
    r5.w = max(0.00100000005, r5.w);
    r6.w = r13.z * r13.z;
    r6.w = max(0.00100000005, r6.w);
    r7.w = cmp(0 < r0.x);
    r8.y = cmp(r0.x < 0);
    r7.w = (int)-r7.w + (int)r8.y;
    r7.w = (int)r7.w;
    r8.y = r0.x * r0.x + -1;
    r8.y = r8.y * 0.666860044 + 1;
    r8.y = sqrt(r8.y);
    r7.w = r8.y * r7.w;
    r0.x = r0.x * 0.666860044 + -r7.w;
    r13.xyz = float3(0.666860044,0.666860044,0.666860044) * r11.xyz;
    r13.xyz = r0.xxx * r4.xyz + -r13.xyz;
    r15.xyz = -r3.xyz * r1.zzz + -r13.xyz;
    r13.xyz = r5.www * r15.xyz + r13.xyz;
    r0.x = dot(r13.xyz, r13.xyz);
    r0.x = rsqrt(r0.x);
    r15.xyz = r13.xyz * r0.xxx;
    r7.w = dot(r7.xyz, r4.xyz);
    r8.y = cmp(0 < r7.w);
    r11.w = cmp(r7.w < 0);
    r8.y = (int)-r8.y + (int)r11.w;
    r8.y = (int)r8.y;
    r11.w = r7.w * r7.w + -1;
    r11.w = r11.w * 0.666860044 + 1;
    r11.w = sqrt(r11.w);
    r8.y = r11.w * r8.y;
    r8.y = r7.w * 0.666860044 + -r8.y;
    r16.xyz = float3(0.666860044,0.666860044,0.666860044) * r7.xyz;
    r16.xyz = r8.yyy * r4.xyz + -r16.xyz;
    r6.xyz = -r6.xyz * r4.www + -r16.xyz;
    r6.xyz = r5.www * r6.xyz + r16.xyz;
    r4.w = dot(r6.xyz, r6.xyz);
    r4.w = rsqrt(r4.w);
    r6.xyz = r6.xyz * r4.www;
    r4.w = dot(r4.xyz, r15.xyz);
    r4.w = -abs(r4.w) * abs(r4.w) + 1;
    r4.w = -r4.w * 0.444702327 + 1;
    r5.x = r5.x + r5.x;
    r4.w = sqrt(r4.w);
    r4.w = r5.x / r4.w;
    r7.w = saturate(r7.w);
    r16.xyz = r3.xyz * r1.zzz + r7.xyz;
    r5.x = dot(r16.xyz, r16.xyz);
    r5.x = rsqrt(r5.x);
    r16.xyz = r16.xyz * r5.xxx;
    r5.x = saturate(dot(r4.xyz, r16.xyz));
    r8.y = r5.w * r5.w;
    r5.x = r5.x * r5.x;
    r11.w = r5.w * r5.w + -1;
    r5.x = r5.x * r11.w + 1;
    r5.x = r5.x * r5.x;
    r5.x = 3.14159274 * r5.x;
    r5.x = r8.y / r5.x;
    r5.w = r5.w * 0.5 + 0.5;
    r8.y = r0.y * r0.y;
    r5.w = r5.w * r5.w;
    r11.w = -r0.y * r0.y + 1;
    r11.w = r11.w * r5.w;
    r8.y = max(1.00000005e-034, r8.y);
    r8.y = r11.w / r8.y;
    r8.y = 1 + r8.y;
    r8.y = sqrt(r8.y);
    r8.y = 1 + r8.y;
    r8.y = 2 / r8.y;
    r11.w = r7.w * r7.w;
    r7.w = -r7.w * r7.w + 1;
    r5.w = r7.w * r5.w;
    r7.w = max(1.00000005e-034, r11.w);
    r5.w = r5.w / r7.w;
    r5.w = 1 + r5.w;
    r5.w = sqrt(r5.w);
    r5.w = 1 + r5.w;
    r5.w = 2 / r5.w;
    r5.w = r8.y * r5.w;
    r16.xyz = r0.yyy * r0.yyy + float3(1.24869561,1.24878526,1.24869561);
    r16.xyz = sqrt(r16.xyz);
    r17.xyz = r16.zyz + -r0.yyy;
    r16.xyz = r16.xyz + r0.yyy;
    r18.xyz = r17.zyz * r17.zyz;
    r19.xyz = r16.zyz * r16.zyz;
    r19.xyz = r19.xyz + r19.xyz;
    r18.xyz = r18.xyz / r19.xyz;
    r16.xyz = r0.yyy * r16.xyz + float3(-1,-1,-1);
    r17.xyz = r0.yyy * r17.xyz + float3(1,1,1);
    r16.xyz = r16.xyz / r17.xyz;
    r16.xyz = r16.xyz * r16.xyz + float3(1,1,1);
    r16.xyz = r18.xyz * r16.xyz;
    r5.x = r5.x * r5.w;
    r16.xyz = r5.xxx * r16.xyz;
    r17.xyz = -r13.www * float3(0.0799999982,0.0799999982,0.0799999982) + r8.xzw;
    r17.xyz = r2.xxx * r17.xyz + r3.www;
    r3.w = saturate(dot(r4.xyz, -r6.xyz));
    r6.xyz = -r13.xyz * r0.xxx + -r6.xyz;
    r0.x = dot(r6.xyz, r6.xyz);
    r0.x = rsqrt(r0.x);
    r6.xyz = r6.xyz * r0.xxx;
    r0.x = dot(r6.xyz, -r15.xyz);
    r5.x = saturate(dot(r4.xyz, -r15.xyz));
    r5.w = saturate(dot(r4.xyz, r6.xyz));
    r6.x = r6.w * r6.w;
    r5.w = r5.w * r5.w;
    r6.y = r6.w * r6.w + -1;
    r5.w = r5.w * r6.y + 1;
    r5.w = r5.w * r5.w;
    r5.w = 3.14159274 * r5.w;
    r5.w = r6.x / r5.w;
    r6.x = r6.w * 0.5 + 0.5;
    r6.y = r5.x * r5.x;
    r6.x = r6.x * r6.x;
    r5.x = -r5.x * r5.x + 1;
    r5.x = r6.x * r5.x;
    r6.y = max(1.00000005e-034, r6.y);
    r5.x = r5.x / r6.y;
    r5.x = 1 + r5.x;
    r5.x = sqrt(r5.x);
    r5.x = 1 + r5.x;
    r5.x = 2 / r5.x;
    r6.y = r3.w * r3.w;
    r3.w = -r3.w * r3.w + 1;
    r3.w = r6.x * r3.w;
    r6.x = max(1.00000005e-034, r6.y);
    r3.w = r3.w / r6.x;
    r3.w = 1 + r3.w;
    r3.w = sqrt(r3.w);
    r3.w = 1 + r3.w;
    r3.w = 2 / r3.w;
    r3.w = r5.x * r3.w;
    r5.x = dot(r17.xyz, float3(0.333333343,0.333333343,0.333333343));
    r5.x = saturate(50 * r5.x);
    r0.x = 1 + -r0.x;
    r6.x = r0.x * r0.x;
    r6.x = r6.x * r6.x;
    r6.yzw = r5.xxx + -r17.xyz;
    r6.xyz = r6.yzw * r6.xxx;
    r6.xyz = r6.xyz * r0.xxx + r17.xyz;
    r0.x = r5.w * r3.w;
    r6.xyz = r0.xxx * r6.xyz;
    r2.yzw = r4.www * -r2.yzw;
    r2.yzw = exp2(r2.yzw);
    r2.yzw = r6.xyz * r2.yzw + r16.xyz;
    r6.xyz = r1.www ? r6.xyz : r2.yzw;
    r6.w = dot(r6.xyz, float3(0.212639004,0.715168655,0.0721923187));
    r13.xyzw = float4(0,0,0,0);
  } else {
    r2.yzw = r5.zzz ? r9.wxy : r4.xyz;
    if (r5.z != 0) {
      r15.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.xzw;
      r15.w = 0.0572957806;
      r0.x = 1 + -r2.x;
      r14.xyzw = r15.xyzw * r0.xxxx;
    } else {
      r0.x = cmp((int)r0.w == 3);
      if (r0.x != 0) {
        r15.xyz = r3.xyz * r1.zzz + r7.xyz;
        r0.x = dot(r15.xyz, r15.xyz);
        r0.x = rsqrt(r0.x);
        r15.xyz = r15.xyz * r0.xxx;
        r0.x = saturate(dot(r15.xyz, r7.xyz));
        r1.w = 0.0799999982 * r1.y;
        r0.x = 1 + -r0.x;
        r3.w = r0.x * r0.x;
        r3.w = r3.w * r3.w;
        r4.w = -r1.y * 0.0799999982 + 1;
        r3.w = r4.w * r3.w;
        r0.x = r3.w * r0.x + r1.w;
        r1.w = saturate(r1.x + r1.x);
        r15.w = r1.w * -r0.x + 1;
        r15.xyz = r15.www * r8.xzw;
        r14.xyzw = float4(0.318309873,0.318309873,0.318309873,0.0572957806) * r15.xyzw;
      } else {
        if (r5.y != 0) {
          r15.xyz = r2.yzw + -r9.wxy;
          r16.xyz = r15.xyz * float3(0.100000001,0.100000001,0.100000001) + r9.wxy;
          r0.x = dot(r16.xyz, r16.xyz);
          r0.x = rsqrt(r0.x);
          r16.xyz = r16.xyz * r0.xxx;
          r15.xyz = r15.xyz * float3(0.300000012,0.300000012,0.300000012) + r9.wxy;
          r0.x = dot(r15.xyz, r15.xyz);
          r0.x = rsqrt(r0.x);
          r15.xyz = r15.xyz * r0.xxx;
          r0.x = dot(r9.wxy, r11.xyz);
          r1.w = dot(r16.xyz, r11.xyz);
          r3.w = dot(r15.xyz, r11.xyz);
          r10.z = r0.x * 0.5 + 0.5;
          r5.xw = r10.zw * float2(0.984375,0.984375) + float2(0.0078125,0.0078125);
          r15.x = Global__PreIntegratedSkinDiffuseTexture__TexObj__.SampleLevel(Global__PreIntegratedSkinDiffuseTexture__SampObj___s, r5.xw, 0).x;
          r10.y = r1.w * 0.5 + 0.5;
          r5.xw = r10.yw * float2(0.984375,0.984375) + float2(0.0078125,0.0078125);
          r15.y = Global__PreIntegratedSkinDiffuseTexture__TexObj__.SampleLevel(Global__PreIntegratedSkinDiffuseTexture__SampObj___s, r5.xw, 0).y;
          r10.x = r3.w * 0.5 + 0.5;
          r5.xw = r10.xw * float2(0.984375,0.984375) + float2(0.0078125,0.0078125);
          r15.z = Global__PreIntegratedSkinDiffuseTexture__TexObj__.SampleLevel(Global__PreIntegratedSkinDiffuseTexture__SampObj___s, r5.xw, 0).z;
          r15.xyz = r15.xyz * r8.xzw;
          r15.w = 0.0572957806;
          r14.xyzw = float4(0.318309873,0.318309873,0.318309873,1) * r15.xyzw;
        } else {
          r0.x = cmp((int)r0.w == 5);
          r1.w = dot(r9.wxy, r11.xyz);
          r1.w = -r1.w * r1.w + 1;
          r1.w = sqrt(r1.w);
          r15.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.xzw;
          r15.w = 0.0572957806;
          r3.w = 1 + -r2.x;
          r15.xyzw = r15.xyzw * r3.wwww;
          r16.xyzw = r15.xyzw * r1.wwww;
          r16.xyzw = float4(0.5,0.5,0.5,0.5) * r16.xyzw;
          r1.w = 1 + -r9.z;
          r16.xyzw = r16.xyzw * r1.wwww;
          r14.xyzw = r0.xxxx ? r16.xyzw : r15.xyzw;
        }
      }
    }
    if (r5.z != 0) {
      r0.x = 0.0799999982 * r1.y;
      r10.xyz = -r1.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r8.xzw;
      r10.xyz = r2.xxx * r10.xyz + r0.xxx;
      r0.x = saturate(dot(r4.xyz, r7.xyz));
      r15.xyz = r3.xyz * r1.zzz + r7.xyz;
      r1.w = dot(r15.xyz, r15.xyz);
      r1.w = rsqrt(r1.w);
      r15.xyz = r15.xyz * r1.www;
      r1.w = dot(r15.xyz, r11.xyz);
      r3.w = saturate(dot(r4.xyz, r15.xyz));
      r4.w = r1.x * r1.x;
      r3.w = r3.w * r3.w;
      r5.x = r1.x * r1.x + -1;
      r3.w = r3.w * r5.x + 1;
      r3.w = r3.w * r3.w;
      r3.w = 3.14159274 * r3.w;
      r3.w = r4.w / r3.w;
      r4.w = r1.x * 0.5 + 0.5;
      r5.x = r0.y * r0.y;
      r4.w = r4.w * r4.w;
      r5.w = -r0.y * r0.y + 1;
      r5.w = r5.w * r4.w;
      r5.x = max(1.00000005e-034, r5.x);
      r5.x = r5.w / r5.x;
      r5.x = 1 + r5.x;
      r5.x = sqrt(r5.x);
      r5.x = 1 + r5.x;
      r5.x = 2 / r5.x;
      r5.w = r0.x * r0.x;
      r0.x = -r0.x * r0.x + 1;
      r0.x = r4.w * r0.x;
      r4.w = max(1.00000005e-034, r5.w);
      r0.x = r0.x / r4.w;
      r0.x = 1 + r0.x;
      r0.x = sqrt(r0.x);
      r0.x = 1 + r0.x;
      r0.x = 2 / r0.x;
      r0.x = r5.x * r0.x;
      r4.w = dot(r10.xyz, float3(0.333333343,0.333333343,0.333333343));
      r4.w = saturate(50 * r4.w);
      r1.w = 1 + -r1.w;
      r5.x = r1.w * r1.w;
      r5.x = r5.x * r5.x;
      r15.xyz = r4.www + -r10.xyz;
      r15.xyz = r15.xyz * r5.xxx;
      r10.xyz = r15.xyz * r1.www + r10.xyz;
      r0.x = r3.w * r0.x;
      r6.xyz = r0.xxx * r10.xyz;
      r6.w = dot(r6.xyz, float3(0.212639004,0.715168655,0.0721923187));
    } else {
      r0.x = cmp((int)r0.w == 3);
      if (r0.x != 0) {
        r10.xyz = r3.xyz * r1.zzz + r7.xyz;
        r0.x = dot(r10.xyz, r10.xyz);
        r0.x = rsqrt(r0.x);
        r10.xyz = r10.xyz * r0.xxx;
        r0.x = saturate(dot(r10.xyz, r7.xyz));
        r1.w = 0.0799999982 * r1.y;
        r0.x = 1 + -r0.x;
        r3.w = r0.x * r0.x;
        r3.w = r3.w * r3.w;
        r4.w = -r1.y * 0.0799999982 + 1;
        r3.w = r4.w * r3.w;
        r0.x = r3.w * r0.x + r1.w;
        r1.w = saturate(dot(r4.xyz, r10.xyz));
        r3.w = r1.w * r1.w;
        r5.xw = -r1.ww * r1.ww + float2(1.00000095,1);
        r3.w = r3.w / r5.x;
        r4.w = r5.w * r5.w;
        r5.x = r1.x * r1.x;
        r10.xy = r1.xx * r1.xx + float2(9.99999997e-007,1.99999999e-006);
        r5.w = r10.x * 4 + 1;
        r5.w = 3.14159274 * r5.w;
        r5.w = 1 / r5.w;
        r3.w = -r3.w / r10.y;
        r3.w = 1.44269502 * r3.w;
        r3.w = exp2(r3.w);
        r3.w = 4 * r3.w;
        r3.w = r3.w / r4.w;
        r3.w = 1 + r3.w;
        r3.w = r5.w * r3.w;
        r4.w = saturate(dot(r4.xyz, r7.xyz));
        r5.w = r4.w + r0.y;
        r4.w = -r0.y * r4.w + r5.w;
        r4.w = 4 * r4.w;
        r4.w = 1 / r4.w;
        r4.w = saturate(r4.w);
        r5.x = 2 / r5.x;
        r5.x = -2 + r5.x;
        r5.x = max(1.00000003e-022, r5.x);
        r1.w = log2(r1.w);
        r1.w = r5.x * r1.w;
        r1.w = exp2(r1.w);
        r5.x = 8 + r5.x;
        r1.w = r5.x * r1.w;
        r1.w = 0.0397887342 * r1.w;
        r1.w = min(1, r1.w);
        r5.x = saturate(r1.x + r1.x);
        r3.w = r3.w * r4.w + -r1.w;
        r1.w = r5.x * r3.w + r1.w;
        r15.xyz = r1.www * r0.xxx;
        r15.w = dot(r15.zzz, float3(0.212639004,0.715168655,0.0721923187));
        r16.xyz = r9.wxy;
        r16.w = 1;
        r6.xyzw = r16.xyzw * r15.xyzw;
      } else {
        if (r5.y != 0) {
          r5.xw = float2(0.0799999982,0.400000006) * r1.yx;
          r10.xyz = -r1.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r8.xzw;
          r10.xyz = r2.xxx * r10.xyz + r5.xxx;
          r0.x = saturate(dot(r4.xyz, r7.xyz));
          r15.xyz = r3.xyz * r1.zzz + r7.xyz;
          r1.w = dot(r15.xyz, r15.xyz);
          r1.w = rsqrt(r1.w);
          r15.xyz = r15.xyz * r1.www;
          r1.w = dot(r15.xyz, r11.xyz);
          r3.w = saturate(dot(r4.xyz, r15.xyz));
          r4.w = r1.x * r1.x;
          r3.w = r3.w * r3.w;
          r5.x = r1.x * r1.x + -1;
          r5.x = r3.w * r5.x + 1;
          r5.x = r5.x * r5.x;
          r5.x = 3.14159274 * r5.x;
          r4.w = r4.w / r5.x;
          r15.xy = r1.xx * float2(0.5,0.200000003) + float2(0.5,0.5);
          r5.x = r0.y * r0.y;
          r15.xy = r15.xy * r15.xy;
          r7.w = -r0.y * r0.y + 1;
          r15.zw = r15.xy * r7.ww;
          r5.x = max(1.00000005e-034, r5.x);
          r15.zw = r15.zw / r5.xx;
          r15.zw = float2(1,1) + r15.zw;
          r15.zw = sqrt(r15.zw);
          r15.zw = float2(1,1) + r15.zw;
          r5.x = r0.x * r0.x;
          r0.x = -r0.x * r0.x + 1;
          r15.xy = r15.xy * r0.xx;
          r0.x = max(1.00000005e-034, r5.x);
          r15.xy = r15.xy / r0.xx;
          r15.xy = float2(1,1) + r15.xy;
          r15.xy = sqrt(r15.xy);
          r15.xy = float2(1,1) + r15.xy;
          r15.xyzw = float4(2,2,2,2) / r15.xyzw;
          r15.xy = r15.zw * r15.xy;
          r0.x = dot(r10.xyz, float3(0.333333343,0.333333343,0.333333343));
          r0.x = saturate(50 * r0.x);
          r1.w = 1 + -r1.w;
          r5.x = r1.w * r1.w;
          r5.x = r5.x * r5.x;
          r16.xyz = r0.xxx + -r10.xyz;
          r16.xyz = r16.xyz * r5.xxx;
          r10.xyz = r16.xyz * r1.www + r10.xyz;
          r0.x = r15.x * r4.w;
          r16.xyz = r0.xxx * r10.xyz;
          r16.w = dot(r16.xyz, float3(0.212639004,0.715168655,0.0721923187));
          r0.x = r5.w * r5.w;
          r1.w = r5.w * r5.w + -1;
          r1.w = r3.w * r1.w + 1;
          r1.w = r1.w * r1.w;
          r1.w = 3.14159274 * r1.w;
          r0.x = r0.x / r1.w;
          r0.x = r0.x * r15.y;
          r15.xyz = r0.xxx * r10.xyz;
          r15.w = dot(r15.xyz, float3(0.212639004,0.715168655,0.0721923187));
          r15.xyzw = float4(0.150000006,0.150000006,0.150000006,0.150000006) * r15.xyzw;
          r6.xyzw = r16.xyzw * float4(0.850000024,0.850000024,0.850000024,0.850000024) + r15.xyzw;
        } else {
          r0.x = cmp((int)r0.w == 5);
          r1.w = saturate(dot(r8.xzw, float3(0.212639004,0.715168655,0.0721923187)));
          r1.w = r1.w * 1.66666663 + 1.33333337;
          r10.xyz = r9.wxy * r1.xxx;
          r10.xyz = r10.xyz * float3(0.25,0.25,0.25) + r4.xyz;
          r1.w = 1 / r1.w;
          r3.w = dot(-r11.xyz, r10.xyz);
          r4.w = r1.w * r1.w;
          r5.x = -r3.w * r3.w + 1;
          r5.x = -r4.w * r5.x + 1;
          r5.w = sqrt(r5.x);
          r3.w = r1.w * r3.w + -r5.w;
          r15.xyz = r3.www * r10.xyz;
          r15.xyz = r1.www * r11.xyz + r15.xyz;
          r3.w = cmp(0 < r5.x);
          r3.w = r3.w ? 1.000000 : 0;
          r16.xyz = r15.xyz * r3.www;
          r5.x = dot(-r7.xyz, r10.xyz);
          r5.w = -r5.x * r5.x + 1;
          r4.w = -r4.w * r5.w + 1;
          r5.w = sqrt(r4.w);
          r5.x = r1.w * r5.x + -r5.w;
          r10.xyz = r5.xxx * r10.xyz;
          r10.xyz = r1.www * r7.xyz + r10.xyz;
          r1.w = cmp(0 < r4.w);
          r1.w = r1.w ? 1.000000 : 0;
          r10.xyz = r10.xyz * r1.www;
          r3.xyz = r3.xyz * r1.zzz + r7.xyz;
          r1.z = dot(r3.xyz, r3.xyz);
          r1.z = rsqrt(r1.z);
          r3.xyz = r3.xyz * r1.zzz;
          r1.z = saturate(dot(r4.xyz, r7.xyz));
          r1.w = saturate(dot(r4.xyz, r3.xyz));
          r4.w = dot(r3.xyz, r11.xyz);
          r5.x = saturate(r4.w);
          r5.w = dot(r3.yzx, r9.xyw);
          r17.xyz = r9.ywx * r4.yzx;
          r17.xyz = r9.xyw * r4.zxy + -r17.xyz;
          r7.w = dot(r17.xyz, r17.xyz);
          r7.w = rsqrt(r7.w);
          r17.xyz = r17.xyz * r7.www;
          r3.x = dot(r3.xyz, r17.xyz);
          r3.yz = float2(0.0799999982,3.14159274) * r1.yx;
          r18.xyz = -r1.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r8.xzw;
          r18.xyz = r2.xxx * r18.xyz + r3.yyy;
          r1.y = dot(r18.xyz, float3(0.333333343,0.333333343,0.333333343));
          r1.y = saturate(50 * r1.y);
          r3.y = 1 + -r5.x;
          r5.x = r3.y * r3.y;
          r5.x = r5.x * r5.x;
          r19.xyz = r1.yyy + -r18.xyz;
          r20.xyz = r19.xyz * r5.xxx;
          r20.xyz = r20.xyz * r3.yyy + r18.xyz;
          r1.y = r1.x * r1.x;
          r3.y = r1.w * r1.w;
          r5.x = r5.w * r5.w;
          r5.x = r5.x / r1.y;
          r3.x = r3.x * r3.x + r5.x;
          r1.w = r1.w * r1.w + r3.x;
          r1.w = r1.w * r1.w;
          r1.w = r1.w * r3.z;
          r1.w = 1 / r1.w;
          r3.x = r0.y * r0.y;
          r5.x = -r0.y * r0.y + 1;
          r5.w = r5.x * r1.y;
          r3.x = max(1.00000005e-034, r3.x);
          r5.w = r5.w / r3.x;
          r5.w = 1 + r5.w;
          r5.w = sqrt(r5.w);
          r5.w = 1 + r5.w;
          r5.w = 2 / r5.w;
          r7.w = r1.z * r1.z;
          r1.z = -r1.z * r1.z + 1;
          r8.y = r1.y * r1.z;
          r7.w = max(1.00000005e-034, r7.w);
          r8.y = r8.y / r7.w;
          r8.y = 1 + r8.y;
          r8.y = sqrt(r8.y);
          r8.y = 1 + r8.y;
          r8.y = 2 / r8.y;
          r5.w = r8.y * r5.w;
          r1.w = r5.w * r1.w;
          r20.xyz = saturate(r1.www * r20.xyz);
          r20.xyz = r20.xyz * r10.www;
          r21.xyz = float3(0.25,0.25,0.25) * r20.xyz;
          r15.xyz = -r15.xyz * r3.www + -r10.xyz;
          r1.w = dot(r15.xyz, r15.xyz);
          r1.w = rsqrt(r1.w);
          r15.xyz = r15.xyz * r1.www;
          r1.w = saturate(dot(r4.xyz, -r16.xyz));
          r3.w = saturate(dot(r4.xyz, -r10.xyz));
          r4.x = saturate(dot(r4.xyz, r15.xyz));
          r4.y = saturate(dot(r15.xyz, -r16.xyz));
          r4.z = dot(r15.yzx, r9.xyw);
          r5.w = dot(r15.xyz, r17.xyz);
          r4.y = 1 + -r4.y;
          r8.y = r4.y * r4.y;
          r8.y = r8.y * r8.y;
          r10.xyz = r19.xyz * r8.yyy;
          r10.xyz = r10.xyz * r4.yyy + r18.xyz;
          r4.y = r4.z * r4.z;
          r4.y = r4.y / r1.y;
          r4.y = r5.w * r5.w + r4.y;
          r4.x = r4.x * r4.x + r4.y;
          r4.x = r4.x * r4.x;
          r3.z = r4.x * r3.z;
          r3.z = 1 / r3.z;
          r4.x = r1.w * r1.w;
          r1.w = -r1.w * r1.w + 1;
          r1.w = r1.y * r1.w;
          r4.x = max(1.00000005e-034, r4.x);
          r1.w = r1.w / r4.x;
          r1.w = 1 + r1.w;
          r1.w = sqrt(r1.w);
          r1.w = 1 + r1.w;
          r1.w = 2 / r1.w;
          r4.x = r3.w * r3.w;
          r3.w = -r3.w * r3.w + 1;
          r3.w = r3.w * r1.y;
          r4.x = max(1.00000005e-034, r4.x);
          r3.w = r3.w / r4.x;
          r3.w = 1 + r3.w;
          r3.w = sqrt(r3.w);
          r3.w = 1 + r3.w;
          r3.w = 2 / r3.w;
          r1.w = r3.w * r1.w;
          r1.w = r3.z * r1.w;
          r4.xyz = saturate(r1.www * r10.xyz);
          r10.xyz = sqrt(r8.xzw);
          r4.xyz = -r20.xyz * float3(0.25,0.25,0.25) + r4.xyz;
          r10.xyz = r10.xyz * r4.xyz + r21.xyz;
          r10.w = dot(r10.xyz, float3(0.212639004,0.715168655,0.0721923187));
          r1.w = r1.x * r1.x + -1;
          r1.w = r3.y * r1.w + 1;
          r1.w = r1.w * r1.w;
          r1.w = 3.14159274 * r1.w;
          r1.y = r1.y / r1.w;
          r1.x = r1.x * 0.5 + 0.5;
          r1.x = r1.x * r1.x;
          r1.w = r1.x * r5.x;
          r1.w = r1.w / r3.x;
          r1.w = 1 + r1.w;
          r1.w = sqrt(r1.w);
          r1.w = 1 + r1.w;
          r1.x = r1.x * r1.z;
          r1.x = r1.x / r7.w;
          r1.x = 1 + r1.x;
          r1.x = sqrt(r1.x);
          r1.x = 1 + r1.x;
          r1.xw = float2(2,2) / r1.xw;
          r1.x = r1.w * r1.x;
          r1.z = 1 + -r4.w;
          r1.xw = r1.yz * r1.xz;
          r1.w = r1.w * r1.w;
          r3.xyz = r19.xyz * r1.www;
          r3.xyz = r3.xyz * r1.zzz + r18.xyz;
          r1.xyz = r3.xyz * r1.xxx;
          r1.w = dot(r1.xyz, float3(0.212639004,0.715168655,0.0721923187));
          r6.xyzw = r0.xxxx ? r10.xyzw : r1.xyzw;
        }
      }
    }
    if (r5.z != 0) {
      r13.xyzw = float4(0,0,0,0);
    } else {
      r0.x = cmp((int)r0.w == 3);
      if (r0.x != 0) {
        r13.xyzw = float4(0,0,0,0);
      } else {
        if (r5.y != 0) {
          r13.xyzw = float4(0,0,0,0);
        } else {
          r0.x = dot(r9.wxy, r11.xyz);
          r0.x = -r0.x * r0.x + 1;
          r0.x = sqrt(r0.x);
          r1.x = -1.5 * r9.z;
          r1.y = dot(r2.yzw, r11.xyz);
          r1.z = -r9.z * -1.5 + r1.y;
          r1.x = 1 / -r1.x;
          r1.x = saturate(r1.z * r1.x);
          r1.z = r1.x * -2 + 3;
          r1.x = r1.x * r1.x;
          r1.x = r1.z * r1.x;
          r3.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.xzw;
          r3.w = 0.0572957806;
          r1.z = 1 + -r2.x;
          r3.xyzw = r3.xyzw * r1.zzzz;
          r3.xyzw = r3.xyzw * r1.xxxx;
          r3.xyzw = r3.xyzw * r0.xxxx;
          r3.xyzw = r3.xyzw * r9.zzzz;
          r3.xyzw = float4(0.25,0.25,0.25,0.25) * r3.xyzw;
          r1.xw = cmp((int2)r0.ww == int2(5,8));
          r0.x = max(9.99999997e-007, abs(r1.y));
          r0.x = rcp(r0.x);
          r0.x = r1.y * r0.x;
          r1.y = dot(r2.yzw, r7.xyz);
          r2.x = max(9.99999997e-007, abs(r1.y));
          r2.x = rcp(r2.x);
          r1.y = r2.x * r1.y;
          r0.x = cmp(r0.x == r1.y);
          r2.w = r0.x ? 0 : 1;
          r4.xyz = r9.wxy * r1.zzz;
          r2.xyz = r4.xyz * r2.www;
          r2.xyzw = float4(0.318309873,0.318309873,0.318309873,0.180000007) * r2.xyzw;
          r9.xyz = r9.www * r8.xzw;
          r4.xyzw = float4(0.0795774683,0.0795774683,0.0795774683,0.0143239452) * r9.xyzw;
          r2.xyzw = r1.wwww ? r2.xyzw : r4.xyzw;
          r13.xyzw = r1.xxxx ? r3.xyzw : r2.xyzw;
        }
      }
    }
  }
  r0.x = r5.y ? 1 : r0.z;
  r0.z = dot(r13.xyz, float3(0.212639004,0.715168655,0.0721923187));
  r0.z = r0.z + -r0.x;
  r0.z = r9.w * r0.z + r0.x;
  r0.x = r0.w ? r0.x : r0.z;
  r1.xyzw = r6.xyzw * r0.yyyy;
  r0.xyzw = r14.xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = r0.xyzw + r13.xyzw;
  r0.xyzw = r12.xyzw * r0.xyzw;
  r0.xyzw = ExposureScale * r0.xyzw;
  r0.xyzw = max(float4(0,0,0,0), r0.xyzw);
  o0.xyzw = min(float4(64512,64512,64512,64512), r0.xyzw);
  return;

}
