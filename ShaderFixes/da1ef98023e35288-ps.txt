// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed da1ef98023e35288-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:07:31 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2Glass
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 BaseColorUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 SurfaceParametersUVTiling;  // Offset:   32 Size:    16 [unused]
//   float3 AbsorptionColor;            // Offset:   48 Size:    12
//   float AbsorptionDistance;          // Offset:   60 Size:     4
//   float3 AbsorptionColorPreset;      // Offset:   64 Size:    12
//   float BaseColorAlpha;              // Offset:   76 Size:     4
//   float3 BaseColor;                  // Offset:   80 Size:    12
//   float DustIntensity;               // Offset:   92 Size:     4
//   float3 DamageStateUVSlide;         // Offset:   96 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  108 Size:     4
//   float3 DustColor;                  // Offset:  112 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  124 Size:     4
//   float3 MudColor;                   // Offset:  128 Size:    12
//   float MaskChannelUsageGreen;       // Offset:  140 Size:     4
//   float3 SurfaceAlbedo;              // Offset:  144 Size:    12
//   float MaskChannelUsageRed;         // Offset:  156 Size:     4
//   float2 AbsorptionDistanceTiling;   // Offset:  160 Size:     8 [unused]
//   float MaxFreePath;                 // Offset:  168 Size:     4
//   float Metalness;                   // Offset:  172 Size:     4
//   float2 AbsorptionTiling;           // Offset:  176 Size:     8 [unused]
//   float MudIntensity;                // Offset:  184 Size:     4
//   float NormalMapIntensity;          // Offset:  188 Size:     4 [unused]
//   float2 NormalMapTiling;            // Offset:  192 Size:     8 [unused]
//   float Reflectance;                 // Offset:  200 Size:     4
//   float ReflectanceDustAdjustment;   // Offset:  204 Size:     4
//   float2 ThicknessTiling;            // Offset:  208 Size:     8 [unused]
//   float Roughness;                   // Offset:  216 Size:     4
//   float RoughnessDustAdjustment;     // Offset:  220 Size:     4
//   float Thickness;                   // Offset:  224 Size:     4
//   int WetSurfaceTypeIndex;           // Offset:  228 Size:     4
//   bool AbsorptionDistanceModulateByVAlpha;// Offset:  232 Size:     4 [unused]
//   bool DamageStateEnabled;           // Offset:  236 Size:     4 [unused]
//   bool IsVehicule;                   // Offset:  240 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12 [unused]
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Glass__SurfaceParametersTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// ShadowRealSamplerNV             sampler_c      NA          NA    3        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// Viewport__RainOcclusionShadowMap__TexObj__    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__RaindropRippleTexture    texture  float4     2darray    4        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    5        1
// MaterialWD2Glass__SurfaceParametersTexture__TexObj__    texture  float4          2d    6        1
// LightData__LightShadowTextureNV__TexObj__    texture  float4     2darray    7        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    8        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    9        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d   10        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d   11        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d   12        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d   13        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// MaterialWD2Glass                  cbuffer      NA          NA    3        1
// LightData                         cbuffer      NA          NA    4        1
// VolumetricFog                     cbuffer      NA          NA    5        1
// LightProbes                       cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// SV_Position              0   xyzw        5      POS   float   xy  
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[40], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[55], dynamicIndexed
dcl_constantbuffer cb5[38], immediateIndexed
dcl_constantbuffer cb6[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2darray (float,float,float,float) t4
dcl_resource_texturecubearray (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_input_ps linear sample v0.xyzw
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyzw
dcl_input_ps linear sample v4.xyz
dcl_input_ps_siv linear noperspective sample v5.xy, position
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 23
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed da1ef98023e35288-ps.txt

mul r16.w, r16.x, r16.y
mul r18.x, r16.w, cb1[9].x
mul r18.y, r16.w, cb1[10].x
mul r18.z, r16.w, cb1[11].x
mul r18.w, r16.w, cb1[12].x
dp4 r19.x, r18.xyzw, cb1[17].xyzw
dp4 r19.y, r18.xyzw, cb1[18].xyzw
dp4 r19.z, r18.xyzw, cb1[19].xyzw
add r17.xyz, cb1[174].xyz, r19.xyz


// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed da1ef98023e35288-ps.txt

mul r16.w, r16.x, r16.y
mul r21.x, r16.w, cb1[9].x
mul r21.y, r16.w, cb1[10].x
mul r21.z, r16.w, cb1[11].x
mul r21.w, r16.w, cb1[12].x
dp4 r22.x, r21.xyzw, cb1[17].xyzw
dp4 r22.y, r21.xyzw, cb1[18].xyzw
dp4 r22.z, r21.xyzw, cb1[19].xyzw
add r20.xyz, cb5[30].xyz, r22.xyz

movc r0.x, v6.x, l(1.000000), l(-1.000000)
mul r0.xyz, r0.xxxx, v1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyw, r0.wwww, r0.xyxz
sample_b_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t6.xyzw, s0, cb1[180].x
eq r0.xy, cb3[9].wwww, l(1.000000, 2.000000, 0.000000, 0.000000)
movc r0.x, r0.x, r2.x, cb3[12].z
eq r3.x, cb3[8].w, l(1.000000)
movc r3.x, r3.x, r2.y, cb3[13].z
eq r3.yz, cb3[7].wwww, l(0.000000, 1.000000, 3.000000, 0.000000)
movc_sat r3.y, r3.y, r2.z, cb3[10].w
if_nz r0.y
  mul r0.y, r2.x, cb3[5].w
else 
  eq r2.x, cb3[8].w, l(2.000000)
  eq r3.w, cb3[7].w, l(2.000000)
  eq r4.x, cb3[6].w, l(1.000000)
  mul r4.yzw, r2.yyzw, cb3[5].wwww
  movc r2.y, r4.x, r4.w, cb3[5].w
  movc r2.y, r3.w, r4.z, r2.y
  movc r0.y, r2.x, r4.y, r2.y
endif 
eq r2.x, cb3[6].w, l(2.000000)
movc r2.x, r2.x, r2.w, l(1.000000)
mul r2.y, r2.z, cb3[11].z
and r2.y, r2.y, r3.z
add r4.xyz, -v0.xyzx, r17.xyzx
dp3 r2.z, r4.xyzx, r4.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, r4.xyzx
dp3 r2.w, r1.xywx, r5.xyzx
max r2.w, r2.w, l(0.000010)
eq r3.z, cb3[4].x, l(0.000000)
movc r6.xyz, r3.zzzz, cb3[3].xyzx, cb3[4].xyzx
mul r3.z, v1.w, cb3[3].w
log r6.xyz, r6.xyzx
max r3.z, r3.z, l(1.000000047E-034)
div r6.xyz, -r6.xyzx, r3.zzzz
mul r3.z, cb3[14].x, l(0.500000)
div r2.w, r3.z, r2.w
mul r3.z, cb3[10].z, cb3[14].x
max r2.w, r2.w, l(0.000000)
min r2.w, r3.z, r2.w
mul r6.xyz, r2.wwww, -r6.xyzx
exp r6.xyz, r6.xyzx
mov_sat r2.w, cb3[4].w
add r3.z, -r2.w, l(1.000000)
mul r6.xyz, r3.zzzz, r6.xyzx
add r7.xyz, cb3[5].xyzx, -cb3[9].xyzx
mad r7.xyz, r2.wwww, r7.xyzx, cb3[9].xyzx
mad_sat r2.w, r0.y, cb3[13].w, r3.x
ftoi r3.xz, v3.zzwz
and r8.xy, r3.xzxx, l(63, 63, 0, 0)
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xz, r8.xyzw, t1.xzyw
mad r3.xz, r3.zzxz, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mul r8.xy, r3.xxxx, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r8.xy, r3.zzzz, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r8.xyxx
dp2 r8.z, r3.xzxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r9.xy, v4.zzzz, cb1[33].zwzz
mul r10.xy, r8.xzxx, r9.xyxx
mov r10.z, l(0)
add r10.xyz, r10.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r10.xyxx, t2.xxxx, s3, r10.z
dp2 r8.w, r3.xzxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r8.xy, r8.ywyy, r9.xyxx
mov r8.z, l(0)
add r8.xyz, r8.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r8.xyxx, t2.xxxx, s3, r8.z
add r3.w, r3.w, r4.w
mul r8.xy, r3.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r8.xy, r3.zzzz, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r8.xyxx
dp2 r8.z, r3.xzxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r10.xy, r9.xyxx, r8.xzxx
mov r10.z, l(0)
add r10.xyz, r10.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r10.xyxx, t2.xxxx, s3, r10.z
add r3.w, r3.w, r4.w
dp2 r8.w, r3.xzxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r8.xy, r9.xyxx, r8.ywyy
mov r8.z, l(0)
add r8.xyz, r8.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.x, r8.xyxx, t2.xxxx, s3, r8.z
add r3.x, r3.x, r3.w
add r3.zw, v2.xxxy, -cb1[28].xxxy
add r3.zw, -|r3.zzzw|, cb1[28].zzzw
mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 5.000000, 5.000000)
min_sat r3.z, r3.w, r3.z
mad r3.x, r3.x, l(0.250000), l(-1.000000)
mad r3.x, r3.z, r3.x, l(1.000000)
mad_sat r3.z, r1.w, l(0.500000), l(0.500000)
mul r3.x, r3.z, r3.x
mul r3.x, r3.x, cb0[3].x
iadd r3.zw, cb3[14].yyyy, l(0, 0, 1, 19)
ult r3.z, r3.z, l(1)
movc r3.z, r3.z, l(0), r3.w
add r8.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb0[r3.z + 4].xyxx
mad r8.xy, r3.xxxx, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.w, r2.w, r8.y
mov r9.xy, v4.xyxx
mov r9.z, l(0)
sample_b_indexable(texture2darray)(float,float,float,float) r8.yz, r9.xyzx, t4.zxyw, s2, cb1[180].x
mov_sat r3.w, r1.w
dp2 r3.w, r3.wwww, r3.wwww
add r3.w, r3.w, l(-1.000000)
max r3.w, r3.w, l(0.000000)
mul r3.x, r3.x, r3.w
mul r3.xw, r3.xxxx, r8.yyyz
mad r1.xy, r3.xwxx, cb0[r3.z + 4].wwww, r1.xyxx
add r3.x, -r0.y, r2.y
add r3.x, r3.x, l(1.000000)
mul_sat r3.xzw, r3.xxxx, r6.xxyz
mad r6.xyz, cb3[7].xyzx, r8.xxxx, -r7.xyzx
mad r6.xyz, r0.yyyy, r6.xyzx, r7.xyzx
mad r7.xyz, cb3[8].xyzx, r8.xxxx, -r6.xyzx
mad r6.xyz, r2.yyyy, r7.xyzx, r6.xyzx
dp3 r2.y, r3.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mul r7.xyz, r2.xxxx, r6.xyzx
mad_sat r0.x, r0.y, cb3[12].w, r0.x
mul r0.x, r2.x, r0.x
mul r0.y, r2.w, r2.w
max r0.y, r0.y, l(0.001000)
min r8.y, r0.y, l(1.000000)
mov r8.zw, l(0,0,0,0)
mov r9.z, l(0)
mov r0.y, l(0)
mov r2.w, l(3)
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, l(4)
  breakc_nz r5.w
  ishl r5.w, r4.w, l(2)
  mul r10.xyz, v0.yyyy, cb4[r5.w + 1].xyzx
  mad r10.xyz, cb4[r5.w + 0].xyzx, v0.xxxx, r10.xyzx
  mad r10.xyz, cb4[r5.w + 2].xyzx, v0.zzzz, r10.xyzx
  add r10.xyz, r10.xyzx, cb4[r5.w + 3].xyzx
  max r5.w, |r10.y|, |r10.x|
  add r5.w, r5.w, cb4[16].x
  ult r6.w, r4.w, l(3)
  if_nz r6.w
    lt r6.w, r5.w, l(1.000000)
    if_nz r6.w
      mov r8.zw, r10.xxxy
      mov r9.z, r10.z
      mov r0.y, r5.w
      mov r2.w, r4.w
      break 
    endif 
  endif 
  iadd r4.w, r4.w, l(1)
  mov r8.zw, r10.xxxy
  mov r9.z, r10.z
  mov r0.y, r5.w
  mov r2.w, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r10.x, x0[r2.w + 0].z
mov r10.yw, l(0,0.500000,0,0.500000)
mad r9.xy, r8.zwzz, l(0.125000, -0.500000, 0.000000, 0.000000), r10.xyxx
dp4 r4.w, cb4[17].xyzw, icb[r2.w + 0].xyzw
ieq r2.w, r2.w, l(3)
mad_sat r0.y, r0.y, cb4[16].z, cb4[16].w
and r0.y, r0.y, r2.w
ftoi r8.zw, v5.xxxy
and r11.xy, r8.zwzz, l(63, 63, 0, 0)
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r8.zw, r11.xyzw, t1.zwxy
mad r8.zw, r8.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.w, r8.zwzz, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r4.w, r4.w, cb4[38].w
mul r11.xy, r2.wwww, r4.wwww
mov r11.z, l(0)
add r11.xyz, r9.xyzx, r11.xyzx
mul r5.w, r11.x, l(4.000000)
round_ni r6.w, r5.w
min r12.z, r6.w, l(3.000000)
frc r12.x, r5.w
mov r12.y, r11.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r12.xyzx, t7.xxxx, s3, r11.z
dp2 r6.w, r8.zwzz, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r11.xy, r4.wwww, r6.wwww
mov r11.z, l(0)
add r11.xyz, r9.xyzx, r11.xyzx
mul r7.w, r11.x, l(4.000000)
round_ni r9.w, r7.w
min r12.z, r9.w, l(3.000000)
frc r12.x, r7.w
mov r12.y, r11.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t7.xxxx, s3, r11.z
add r5.w, r5.w, r7.w
dp2 r7.w, r8.zwzz, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r11.xy, r4.wwww, r7.wwww
mov r11.z, l(0)
add r11.xyz, r9.xyzx, r11.xyzx
mul r9.w, r11.x, l(4.000000)
round_ni r10.x, r9.w
min r12.z, r10.x, l(3.000000)
frc r12.x, r9.w
mov r12.y, r11.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r9.w, r12.xyzx, t7.xxxx, s3, r11.z
add r5.w, r5.w, r9.w
dp2 r8.z, r8.zwzz, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r11.xy, r4.wwww, r8.zzzz
mov r11.z, l(0)
add r9.xyz, r9.xyzx, r11.xyzx
mul r4.w, r9.x, l(4.000000)
round_ni r8.w, r4.w
min r11.z, r8.w, l(3.000000)
frc r11.x, r4.w
mov r11.y, r9.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r11.xyzx, t7.xxxx, s3, r9.z
add r4.w, r4.w, r5.w
mul r5.w, r4.w, l(0.250000)
mad r4.w, -r4.w, l(0.250000), l(1.000000)
mad r0.y, r0.y, r4.w, r5.w
dp3 r4.w, v0.xyzx, cb0[1].xyzx
add_sat r4.w, r4.w, cb0[1].w
mul r0.y, r0.y, r4.w
mad r0.y, r0.y, cb4[37].x, cb4[37].y
lt r5.w, l(0.000000), r0.y
if_nz r5.w
  mov r1.z, r1.w
  dp3_sat r5.w, r1.xyzx, cb2[2].xyzx
  mul r9.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
  add r8.w, -r3.y, l(1.000000)
  mul r9.xyz, r8.wwww, r9.xyzx
  mul r8.w, r0.x, l(0.080000)
  mad r11.xyz, r6.xyzx, r2.xxxx, -r8.wwww
  mad r11.xyz, r3.yyyy, r11.xyzx, r8.wwww
  dp3_sat r8.w, r1.xyzx, r5.xyzx
  mad r4.xyz, r4.xyzx, r2.zzzz, cb2[2].xyzx
  dp3 r2.z, r4.xyzx, r4.xyzx
  rsq r2.z, r2.z
  mul r4.xyz, r2.zzzz, r4.xyzx
  dp3 r2.z, r4.xyzx, cb2[2].xyzx
  dp3_sat r1.z, r1.xyzx, r4.xyzx
  mul r4.x, r8.y, r8.y
  mul r1.z, r1.z, r1.z
  mad r4.y, r8.y, r8.y, l(-1.000000)
  mad r1.z, r1.z, r4.y, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(3.14159274)
  div r1.z, r4.x, r1.z
  mad r4.x, r8.y, l(0.500000), l(0.500000)
  mul r4.y, r5.w, r5.w
  mul r4.x, r4.x, r4.x
  mad r4.z, -r5.w, r5.w, l(1.000000)
  mul r4.z, r4.z, r4.x
  max r4.y, r4.y, l(1.000000047E-034)
  div r4.y, r4.z, r4.y
  add r4.y, r4.y, l(1.000000)
  sqrt r4.y, r4.y
  add r4.y, r4.y, l(1.000000)
  mul r4.z, r8.w, r8.w
  mad r8.w, -r8.w, r8.w, l(1.000000)
  mul r4.x, r4.x, r8.w
  max r4.z, r4.z, l(1.000000047E-034)
  div r4.x, r4.x, r4.z
  add r4.x, r4.x, l(1.000000)
  sqrt r4.x, r4.x
  add r4.x, r4.x, l(1.000000)
  div r4.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r4.xyxx
  mul r4.x, r4.x, r4.y
  dp3 r4.y, r11.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r4.y, r4.y, l(50.000000)
  add r2.z, -r2.z, l(1.000000)
  mul r4.z, r2.z, r2.z
  mul r4.z, r4.z, r4.z
  add r12.xyz, -r11.xyzx, r4.yyyy
  mul r12.xyz, r4.zzzz, r12.xyzx
  mad r11.xyz, r12.xyzx, r2.zzzz, r11.xyzx
  mul r1.z, r1.z, r4.x
  mul r4.xyz, r11.xyzx, r1.zzzz
  mul r4.xyz, r5.wwww, r4.xyzx
  mad r4.xyz, r9.xyzx, r5.wwww, r4.xyzx
  mul r4.xyz, r0.yyyy, r4.xyzx
  mul r4.xyz, r4.xyzx, cb2[0].xyzx
else 
  mov r4.xyz, l(0,0,0,0)
endif 
mov r9.xy, l(0,0,0,0)
mov r11.z, l(0)
mov r0.y, l(0)
mov r1.z, l(3)
mov r2.z, l(0)
loop 
  uge r5.w, r2.z, l(4)
  breakc_nz r5.w
  ishl r5.w, r2.z, l(2)
  mul r12.xyz, v0.yyyy, cb4[r5.w + 1].xyzx
  mad r12.xyz, cb4[r5.w + 0].xyzx, v0.xxxx, r12.xyzx
  mad r12.xyz, cb4[r5.w + 2].xyzx, v0.zzzz, r12.xyzx
  add r12.xyz, r12.xyzx, cb4[r5.w + 3].xyzx
  max r5.w, |r12.y|, |r12.x|
  add r5.w, r5.w, cb4[16].x
  ult r8.w, r2.z, l(3)
  if_nz r8.w
    lt r8.w, r5.w, l(1.000000)
    if_nz r8.w
      mov r9.xy, r12.xyxx
      mov r11.z, r12.z
      mov r0.y, r5.w
      mov r1.z, r2.z
      break 
    endif 
  endif 
  iadd r2.z, r2.z, l(1)
  mov r9.xy, r12.xyxx
  mov r11.z, r12.z
  mov r0.y, r5.w
  mov r1.z, l(3)
endloop 
mov x1[0].z, l(0.125000)
mov x1[1].z, l(0.375000)
mov x1[2].z, l(0.625000)
mov x1[3].z, l(0.875000)
mov r10.z, x1[r1.z + 0].z
mad r11.xy, r9.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r10.zwzz
dp4 r2.z, cb4[17].xyzw, icb[r1.z + 0].xyzw
ieq r1.z, r1.z, l(3)
mad_sat r0.y, r0.y, cb4[16].z, cb4[16].w
and r0.y, r0.y, r1.z
mul r1.z, r2.z, cb4[38].w
mul r9.xy, r1.zzzz, r2.wwww
mov r9.zw, l(0,0,0,1.000000)
add r9.xyz, r9.xyzx, r11.xyzx
mul r2.z, r9.x, l(4.000000)
round_ni r2.w, r2.z
min r10.z, r2.w, l(3.000000)
frc r10.x, r2.z
mov r10.y, r9.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r2.z, r10.xyzx, t7.xxxx, s3, r9.z
mul r9.xy, r1.zzzz, r6.wwww
mov r9.z, l(0)
add r9.xyz, r9.xyzx, r11.xyzx
mul r2.w, r9.x, l(4.000000)
round_ni r5.w, r2.w
min r10.z, r5.w, l(3.000000)
frc r10.x, r2.w
mov r10.y, r9.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r2.w, r10.xyzx, t7.xxxx, s3, r9.z
add r2.z, r2.w, r2.z
mul r9.xy, r1.zzzz, r7.wwww
mov r9.z, l(0)
add r9.xyz, r9.xyzx, r11.xyzx
mul r2.w, r9.x, l(4.000000)
round_ni r5.w, r2.w
min r10.z, r5.w, l(3.000000)
frc r10.x, r2.w
mov r10.y, r9.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r2.w, r10.xyzx, t7.xxxx, s3, r9.z
add r2.z, r2.w, r2.z
mul r9.xy, r1.zzzz, r8.zzzz
mov r9.z, l(0)
add r9.xyz, r9.xyzx, r11.xyzx
mul r1.z, r9.x, l(4.000000)
round_ni r2.w, r1.z
min r10.z, r2.w, l(3.000000)
frc r10.x, r1.z
mov r10.y, r9.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r1.z, r10.xyzx, t7.xxxx, s3, r9.z
add r1.z, r1.z, r2.z
mul r2.z, r1.z, l(0.250000)
mad r1.z, -r1.z, l(0.250000), l(1.000000)
mad r0.y, r0.y, r1.z, r2.z
mul r0.y, r4.w, r0.y
mad r0.y, r0.y, cb4[37].x, cb4[37].y
mad r9.xyz, cb1[173].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb1[183].xyzx
dp4 r10.x, r9.xyzw, cb6[12].xyzw
dp4 r10.y, r9.xyzw, cb6[13].xyzw
dp4_sat r1.z, r9.xyzw, cb6[14].xyzw
add r2.zw, r10.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
add r10.xyz, cb6[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r8.zw, r10.xxxy, cb6[16].xxxy
div r10.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), cb6[16].xyxz
mad r11.xy, r2.zwzz, r8.zwzz, r10.xyxx
lt r2.z, l(0.000000), cb6[17].y
div_sat r2.w, r1.z, cb6[17].y
mul r2.w, r2.w, cb6[17].x
and r2.z, r2.w, r2.z
lt r2.w, cb6[17].y, l(1.000000)
add_sat r1.z, r1.z, -cb6[17].y
add r4.w, -cb6[17].y, l(1.000000)
div r1.z, r1.z, r4.w
log r1.z, |r1.z|
mul r1.z, r1.z, cb6[16].w
exp r1.z, r1.z
add r4.w, r10.z, -cb6[17].x
mul r1.z, r1.z, r4.w
and r1.z, r1.z, r2.w
add r1.z, r1.z, r2.z
div r1.z, r1.z, cb6[16].z
add r11.z, r10.w, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r11.xyzx, t11.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r12.xyzw, r11.xyzx, t10.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r11.xyzx, t9.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r14.xyzw, r11.xyzx, t12.xyzw, s1, l(0.000000)
log r10.xyzw, |r10.xyzw|
mul r10.xyzw, r10.xyzw, cb6[22].xxxx
exp r10.xyzw, r10.xyzw
log r12.xyzw, |r12.xyzw|
mul r12.xyzw, r12.xyzw, cb6[22].xxxx
exp r12.xyzw, r12.xyzw
log r13.xyzw, |r13.xyzw|
mul r13.xyzw, r13.xyzw, cb6[22].xxxx
exp r13.xyzw, r13.xywz
dp3 r15.x, r1.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r15.y, r1.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r15.z, r1.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
mad r0.z, -r0.z, r0.w, l(0.500000)
mul r15.w, r0.z, l(0.666666687)
max r15.xyzw, r15.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r12.xyz, r12.xyzx, r15.yyyy
mad r10.xyz, r15.xxxx, r10.xyzx, r12.xyzx
mad r10.xyz, r15.zzzz, r13.xywx, r10.xyzx
mov r13.x, r10.w
mov r13.y, r12.w
mad r10.xyz, r15.wwww, r13.xyzx, r10.xyzx
add r0.z, r15.y, r15.x
add r0.z, r15.z, r0.z
add r0.z, r15.w, r0.z
div r10.xyz, r10.xyzx, r0.zzzz
add r9.xyz, -r9.xyzx, cb1[174].xyzx
dp3 r0.z, r9.xyzx, r9.xyzx
rsq r0.z, r0.z
mul r9.xyz, r0.zzzz, r9.xyzx
dp3 r0.z, -r9.xyzx, r1.xywx
add r0.z, r0.z, r0.z
mad r9.xyz, r1.xywx, -r0.zzzz, -r9.xyzx
dp3 r0.z, r9.xyzx, r9.xyzx
rsq r0.z, r0.z
mul r9.xyw, r0.zzzz, r9.xyxz
if_nz cb6[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r11.xyzx, t13.xyzw, s1, l(0.000000)
  dp2 r0.w, r9.xyxx, r9.xyxx
  rsq r0.w, r0.w
  mul r2.zw, r0.wwww, r9.xxxy
  dp2 r0.w, r2.zwzz, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r0.w, r0.w, l(-0.707106769)
  mul_sat r0.w, r0.w, l(3.41421342)
  dp2 r1.z, r2.zwzz, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r1.z, r1.z, l(-0.707106769)
  mul_sat r1.z, r1.z, l(3.41421342)
  add r4.w, r0.w, r1.z
  dp2 r5.w, r2.zwzz, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r5.w, r5.w, l(-0.707106769)
  mul_sat r5.w, r5.w, l(3.41421342)
  add r4.w, r4.w, r5.w
  dp2 r6.w, r2.zwzz, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r6.w, r6.w, l(-0.707106769)
  mul_sat r6.w, r6.w, l(3.41421342)
  add r4.w, r4.w, r6.w
  dp2 r7.w, r2.zwzz, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r7.w, r7.w, l(-0.707106769)
  mul_sat r7.w, r7.w, l(3.41421342)
  add r4.w, r4.w, r7.w
  dp2 r8.z, r2.zwzz, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r8.z, r8.z, l(-0.707106769)
  mul_sat r8.z, r8.z, l(3.41421342)
  add r4.w, r4.w, r8.z
  dp2 r8.w, r2.zwzz, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r8.w, r8.w, l(-0.707106769)
  mul_sat r8.w, r8.w, l(3.41421342)
  add r4.w, r4.w, r8.w
  dp2 r2.z, r2.zwzz, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r2.z, r2.z, l(-0.707106769)
  mul_sat r2.z, r2.z, l(3.41421342)
  add r2.w, r2.z, r4.w
  div r0.w, r0.w, r2.w
  div r1.z, r1.z, r2.w
  div r4.w, r5.w, r2.w
  div r5.w, r6.w, r2.w
  div r6.w, r7.w, r2.w
  div r7.w, r8.z, r2.w
  div r8.z, r8.w, r2.w
  div r2.z, r2.z, r2.w
  mul r1.z, r1.z, r14.y
  mad r0.w, r14.x, r0.w, r1.z
  mad r0.w, r14.z, r4.w, r0.w
  mad r0.w, r14.w, r5.w, r0.w
  mad r0.w, r11.x, r6.w, r0.w
  mad r0.w, r11.y, r7.w, r0.w
  mad r0.w, r11.z, r8.z, r0.w
  mad r11.y, r11.w, r2.z, r0.w
  ge r0.w, l(0.565600), r8.y
  mad r1.z, -r8.y, l(0.0968105793), l(1.05046380)
  mad r1.z, r1.z, r8.y, l(-0.601145864)
  add r2.z, r8.y, l(-0.619457066)
  div r1.z, r1.z, r2.z
  movc r0.w, r0.w, r1.z, l(0.705081284)
  mad r1.z, -r9.w, r9.w, l(1.000000)
  sqrt r1.z, r1.z
  mad r2.z, -r0.w, r0.w, l(1.000000)
  sqrt r2.z, r2.z
  mul r2.w, r1.z, r2.z
  mad r12.y, r9.w, r0.w, -r2.w
  mad r13.y, r9.w, r0.w, r2.w
  mul r2.z, r9.w, r2.z
  mad r12.x, r1.z, r0.w, r2.z
  mad r13.x, r1.z, r0.w, -r2.z
  lt r0.w, r12.x, l(0.000000)
  movc r2.zw, r0.wwww, l(0,0,0,-1.000000), r12.xxxy
  lt r0.w, r13.x, l(0.000000)
  movc r8.zw, r0.wwww, l(0,0,0,1.000000), r13.xxxy
  ge r0.w, r2.w, r11.y
  ge r1.z, r11.y, r8.w
  mul r4.w, r11.y, r11.y
  mad r5.w, -r11.y, r11.y, l(1.000000)
  sqrt r11.x, r5.w
  lt r5.w, r2.w, l(0.000000)
  add r11.zw, r8.zzzw, l(0.000000, 0.000000, -1.000000, -0.000000)
  dp2 r6.w, r11.zwzz, r11.zwzz
  sqrt r6.w, r6.w
  mul r6.w, r6.w, l(0.500000)
  mul r6.w, r6.w, r6.w
  add r2.zw, r2.zzzw, -r8.zzzw
  dp2 r2.z, r2.zwzz, r2.zwzz
  sqrt r2.z, r2.z
  mul r2.z, r2.z, l(0.500000)
  mul r2.z, r2.z, r2.z
  movc r2.z, r5.w, r6.w, r2.z
  add r8.zw, -r8.zzzw, r11.xxxy
  dp2 r2.w, r8.zwzz, r8.zwzz
  sqrt r2.w, r2.w
  mul r2.w, r2.w, l(0.500000)
  mul r2.w, r2.w, r2.w
  div r2.z, r2.w, r2.z
  movc r1.z, r1.z, l(0), r2.z
  movc r0.w, r0.w, l(1.000000), r1.z
  mad r1.z, r4.w, l(-0.080000), l(0.080000)
  max r0.w, r0.w, r1.z
else 
  dp3 r11.x, r9.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r11.y, r9.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r11.z, r9.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r0.z, -r9.z, r0.z, l(0.500000)
  mul r11.w, r0.z, l(0.666666687)
  max r9.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r0.z, r9.xyzw, r14.xyzw
  add r1.z, r9.y, r9.x
  add r1.z, r9.z, r1.z
  add r1.z, r9.w, r1.z
  div r0.w, r0.z, r1.z
endif 
mul r7.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
add r0.z, -r3.y, l(1.000000)
mul r7.xyz, r0.zzzz, r7.xyzx
mad r4.xyz, r10.xyzx, r7.xyzx, r4.xyzx
add r0.y, r0.y, r0.w
mul r0.xy, r0.xyxx, l(0.080000, 0.500000, 0.000000, 0.000000)
dp3 r0.z, -r5.xyzx, r1.xywx
add r0.z, r0.z, r0.z
mad r7.xyz, r1.xywx, -r0.zzzz, -r5.xyzx
mul r0.z, r8.y, r8.y
div r0.z, l(2.000000), r0.z
add r0.z, r0.z, l(-2.000000)
max r0.z, r0.z, l(1.000000031E-022)
sqrt r0.z, r0.z
div r0.z, l(-10.000000), r0.z
exp r0.z, r0.z
add r0.z, r0.z, l(-0.000980)
mul_sat r0.z, r0.z, l(1.00795019)
add r0.z, -r0.z, l(1.000000)
if_z cb1[184].z
  mul r0.w, r0.z, cb1[174].w
  mov r9.xyzw, l(0,0,0,0)
  mov r1.z, l(1.000000)
  mov r2.z, l(0)
  loop 
    uge r2.w, r2.z, l(15)
    breakc_nz r2.w
    imul null, r2.w, r2.z, l(7)
    dp4 r10.x, v0.xyzw, cb1[r2.w + 68].xyzw
    dp4 r10.y, v0.xyzw, cb1[r2.w + 69].xyzw
    dp4 r10.z, v0.xyzw, cb1[r2.w + 70].xyzw
    ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r11.xyz, r11.xyzx, cb1[r2.w + 72].xyzx, cb1[r2.w + 73].xyzx
    add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r10.xyz, r11.xyzx, r10.xyzx
    mul r4.w, r10.y, r10.x
    mul r4.w, r10.z, r4.w
    lt r5.w, l(0.000000), r4.w
    if_nz r5.w
      dp3 r10.x, r7.xyzx, cb1[r2.w + 68].xyzx
      dp3 r10.y, r7.xyzx, cb1[r2.w + 69].xyzx
      dp3 r10.z, r7.xyzx, cb1[r2.w + 70].xyzx
      mul r4.w, r4.w, cb1[r2.w + 73].w
      mov r10.w, cb1[r2.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t5.xyzw, s2, r0.w
      mul r10.xyzw, r10.xyzw, cb1[r2.w + 74].xxxy
      min r2.w, r1.z, r4.w
      mad r10.xyzw, r10.xyzw, r2.wwww, r9.xyzw
      add r2.w, r1.z, -r2.w
      ge r4.w, l(0.000000), r2.w
      if_nz r4.w
        mov r9.xyzw, r10.xyzw
        mov r1.z, r2.w
        break 
      endif 
      mov r9.xyzw, r10.xyzw
      mov r1.z, r2.w
    endif 
    iadd r2.z, r2.z, l(1)
  endloop 
else 
  mov r9.xyzw, l(0,0,0,0)
  mov r1.z, l(1.000000)
endif 
add r0.w, r1.z, r9.w
mul r0.y, r0.y, r0.w
lt r0.w, l(0.000000), r0.y
if_nz r0.w
  mul r0.z, r0.z, cb1[183].w
  add r0.w, -|r7.z|, r7.z
  mad r0.w, r1.z, r0.w, |r7.z|
  mad r0.w, r0.w, l(2.000000), l(2.000000)
  div r2.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.wwww
  mul r2.zw, r2.zzzw, r7.yyyx
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r2.zwzz, t3.xyzw, s1, r0.z
  mov_sat r10.xyz, r7.xyzx
  movc r7.xyz, cb1[184].zzzz, r10.xyzx, r7.xyzx
  div r7.xyz, r7.xyzx, cb1[176].wwww
  mad r9.xyz, r7.xyzx, r0.yyyy, r9.xyzx
endif 
mad r0.yzw, r6.xxyz, r2.xxxx, -r0.xxxx
mad r0.xyz, r3.yyyy, r0.yzwy, r0.xxxx
dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r0.w, r0.w, l(50.000000)
dp3_sat r8.x, r1.xywx, r5.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r8.xyxx, t0.xyzw, s1, l(0.000000)
mad r0.xyz, r0.xyzx, r1.xxxx, r1.yyyy
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r9.xyzx, r0.xyzx, r4.xyzx
add r1.xyz, v0.xyzx, -r20.xyzx
dp3 r0.w, r1.xyzx, cb5[33].xyzx
mul r1.xy, v5.xyxx, cb5[37].zzzz
round_ni r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, cb5[17].xyxx
iadd r1.w, cb5[28].z, l(-1)
utof r1.w, r1.w
mul r2.z, r1.w, l(0.031250)
exp r2.z, r2.z
mad r2.z, r2.z, cb5[1].z, cb5[1].w
min r2.w, r0.w, r2.z
add r2.w, r2.w, -cb5[1].w
div r2.w, r2.w, cb5[1].z
log r2.w, r2.w
mul r2.w, r2.w, l(32.000000)
div r1.z, r2.w, r1.w
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r1.xyzx, t8.xyzw, s1, l(0.000000)
mad r5.xyzw, cb5[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r1.xyxy
mov r6.xy, r5.xyxx
mov r6.z, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r6.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r7.xyzw
mov r6.xy, r5.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r6.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r5.xyzw
mad r5.xyzw, cb5[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r1.xyxy
mov r6.xy, r5.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r6.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r7.xyzw
mov r6.xy, r5.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r6.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r5.xyzw
mul r4.xyzw, r4.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xz, r1.xxyx, cb5[0].zzwz
mul r1.xy, r5.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r1.w, r2.z, cb5[0].x
add r1.w, r1.w, l(1.000000)
mov r1.z, -cb5[0].x
mul r1.xyz, r1.wwww, r1.xyzx
mov r1.w, l(1.000000)
dp4 r5.x, r1.xyzw, cb5[13].xyzw
dp4 r5.y, r1.xyzw, cb5[14].xyzw
dp4 r5.z, r1.xyzw, cb5[15].xyzw
add r1.xyzw, -r5.xyzx, cb5[30].xyzx
div r4.xyz, r4.xyzx, cb1[176].wwww
exp r2.z, r4.w
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r1.xyzw, r1.xyzw, r2.wwww
div r2.w, cb5[31].w, |r1.z|
min r0.w, r0.w, r2.w
mul r2.w, r0.w, cb5[29].w
min r2.w, r2.w, l(1.000000)
add r0.w, r0.w, -cb5[33].w
mul_sat r0.w, r0.w, cb5[32].w
mul r0.w, r0.w, r2.w
mul r2.w, r0.w, cb5[34].w
mul r0.w, r0.w, cb5[30].w
mul r0.w, r0.w, l(-1.442695)
exp r0.w, r0.w
mul r5.xyz, r1.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r6.xyz, r5.xxxx, cb2[32].xyzx
mad r6.xyz, cb2[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r6.xyzx
mad r5.xyw, r5.yyyy, cb2[33].xyxz, r6.xyxz
mad r5.xyz, r5.zzzz, cb2[34].xyzx, r5.xywx
mul r6.xyzw, r1.xyzw, r1.yzzz
mul r6.xyw, r6.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r5.xyz, r6.xxxx, cb2[35].xyzx, r5.xyzx
mad r5.xyz, r6.yyyy, cb2[36].xyzx, r5.xyzx
mad r1.x, r6.z, l(3.000000), l(-1.000000)
mul r1.x, r1.x, l(0.315392)
mad r5.xyz, r1.xxxx, cb2[37].xyzx, r5.xyzx
mad r5.xyz, r6.wwww, cb2[38].xyzx, r5.xyzx
mul r1.x, r1.y, r1.y
mad r1.x, r1.w, r1.w, -r1.x
mul r1.x, r1.x, l(0.546274)
mad r1.xyz, r1.xxxx, cb2[39].xyzx, r5.xyzx
mul r1.xyz, r1.xyzx, r2.wwww
mul r1.xyz, r1.xyzx, cb5[29].xyzx
mad r1.xyz, r1.xyzx, r2.zzzz, r4.xyzx
mul r1.w, r0.w, r2.z
movc r1.xyzw, cb5[37].wwww, r1.xyzw, l(0,0,0,1.000000)
add r4.xyz, -r3.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.wwww
mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 o0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r1.xyz, r3.xzwx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xxxx
add r0.w, r2.y, l(-1.000000)
mul r1.w, r0.w, r2.x
add o1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mov o0.xyz, r0.xyzx
ret 
// Approximately 735 instruction slots used