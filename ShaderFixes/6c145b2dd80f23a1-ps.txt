// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6c145b2dd80f23a1-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 06:18:08 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialDriverWaterDecal
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 OpacityUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 SpecularPower;              // Offset:   48 Size:    16
//   float4 SpecularUVTiling1;          // Offset:   64 Size:    16 [unused]
//   float2 FresnelMinimum;             // Offset:   80 Size:     8
//   float FresnelPower;                // Offset:   88 Size:     4
//   float Reflectance;                 // Offset:   92 Size:     4
//   float2 NormalIntensity;            // Offset:   96 Size:     8 [unused]
//   int RaindropRippleType;            // Offset:  104 Size:     4 [unused]
//   bool AlwaysVisible;                // Offset:  108 Size:     4
//   float2 ReflectionIntensity;        // Offset:  112 Size:     8 [unused]
//   bool UseBaseSurfaceNormal;         // Offset:  120 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialDriverWaterDecal__OpacityTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialDriverWaterDecal__RaindropSplashesTexture__SampObj__    sampler      NA          NA    1        1
// MaterialDriverWaterDecal__SpecularTexture1__SampObj__    sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    1        1
// Viewport__RainOcclusionShadowMap__TexObj__    texture  float4          2d    2        1
// MaterialDriverWaterDecal__OpacityTexture1__TexObj__    texture  float4          2d    3        1
// MaterialDriverWaterDecal__RaindropSplashesTexture__TexObj__    texture  float4          2d    4        1
// MaterialDriverWaterDecal__SpecularTexture1__TexObj__    texture  float4          2d    5        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialDriverWaterDecal          cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// SV_Position              0   xyzw        9      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear centroid v3.xyzw
dcl_input_ps linear centroid v4.xyzw
dcl_input_ps linear centroid v5.xyzw
dcl_input_ps linear centroid v6.xyz
dcl_input_ps linear centroid v7.xyz
dcl_input_ps linear centroid v8.xyzw
dcl_input_ps_siv linear noperspective v9.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6c145b2dd80f23a1-ps.txt

mul r6.w, r6.x, r6.y
mul r8.x, r6.w, cb1[9].x
mul r8.y, r6.w, cb1[10].x
mul r8.z, r6.w, cb1[11].x
mul r8.w, r6.w, cb1[12].x
dp4 r9.x, r8.xyzw, cb1[17].xyzw
dp4 r9.y, r8.xyzw, cb1[18].xyzw
dp4 r9.z, r8.xyzw, cb1[19].xyzw
add r7.xyz, cb1[174].xyz, r9.xyz

ftoi r0.xy, v9.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t1.xyzw
mov r0.yw, l(0,1.000000,0,1.000000)
dp2 r0.z, r0.xyxx, cb1[11].zwzz
dp2 r0.x, r0.xyxx, cb1[12].zwzz
div r0.x, -r0.z, r0.x
mov r0.z, -r0.x
mad r1.xy, v9.xyxx, cb1[50].zwzz, cb1[49].zwzz
mul r0.xy, r0.zzzz, r1.xyxx

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6c145b2dd80f23a1-ps.txt

add r6.w, -r0.z, -r6.y
mul r6.w, r6.w, r6.x
mad r0.x, -r6.w, cb1[9].x, r0.x

dp4 r1.x, v3.xyzw, r0.xyzw
add r1.x, r1.x, -v8.x
lt r1.y, r1.x, -v8.y
lt r1.x, l(0.000000), r1.x
or r1.x, r1.x, r1.y
discard_nz r1.x
dp4 r1.x, r0.xyzw, v1.xyzw
dp4 r1.y, r0.xyzw, v2.xyzw
add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
lt r2.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.xy, v0.xyxx, r1.xyxx, v0.zwzz
or r1.zw, r2.zzzw, r2.xxxy
or r1.z, r1.w, r1.z
discard_nz r1.z
dp4 r2.z, r0.xyzw, cb1[19].xyzw
dp4 r2.x, r0.xyzw, cb1[17].xyzw
dp4 r2.y, r0.xyzw, cb1[18].xyzw
dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, v4.xxyz
mad r3.xyz, r0.yzwy, l(0.300000, 0.300000, 0.220000, 0.000000), r2.xyzx
mul r0.yz, r2.xxyx, l(0.000000, 0.200000, 0.200000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t4.zxyw, s1
mul r0.yz, r0.yyzy, v4.wwww
mov r3.w, l(1.000000)
dp4 r2.z, r3.xyzw, cb1[31].xyzw
dp4 r2.x, r3.xyzw, cb1[29].xyzw
dp4 r2.y, r3.xyzw, cb1[30].xyzw
mov r3.z, l(0)
ftoi r1.zw, v8.zzzw
and r4.xy, r1.zwzz, l(63, 63, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.zw, r4.xyzw, t0.zwxy
mad r1.zw, r1.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.xy, r1.zzzz, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r4.xy, r1.wwww, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r4.xyxx
dp2 r4.z, r1.zwzz, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r5.xy, v5.wwww, cb1[33].zwzz
mul r3.xy, r4.xzxx, r5.xyxx
add r3.xyz, r2.xyzx, r3.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.w, r3.xyxx, t2.xxxx, s3, r3.z
dp2 r4.w, r1.zwzz, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r3.xy, r4.ywyy, r5.xyxx
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s3, r3.z
add r0.w, r0.w, r2.w
mul r3.xy, r1.zzzz, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r3.xy, r1.wwww, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r3.xyxx
dp2 r3.z, r1.zwzz, l(-0.167516, -0.602610528, 0.000000, 0.000000)
dp2 r3.w, r1.zwzz, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r4.xy, r5.xyxx, r3.ywyy
mul r3.xy, r5.xyxx, r3.xzxx
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.z, r3.xyxx, t2.xxxx, s3, r3.z
add r0.w, r0.w, r1.z
mov r4.z, l(0)
add r3.xyz, r2.xyzx, r4.xyzx
add r1.zw, r2.xxxy, -cb1[28].xxxy
add r1.zw, -|r1.zzzw|, cb1[28].zzzw
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 5.000000, 5.000000)
min_sat r1.z, r1.w, r1.z
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s3, r3.z
add r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.250000), l(-1.000000)
mad r0.w, r1.z, r0.w, l(1.000000)
mul r0.yz, r0.wwww, r0.yyzy
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v6.xyzx
mul r2.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, v7.xyzx, v7.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, v7.xyzx
mad r0.yzw, r0.yyyy, r3.xxyz, r2.xxyz
mad r0.yzw, v4.xxyz, r0.xxxx, r0.yyzw
mad r2.xyz, v4.xyzx, r0.xxxx, -r0.yzwy
add r3.xyz, -v5.xyzx, r7.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
dp3_sat r0.x, r3.xyzx, r0.yzwy
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb2[5].z
exp r0.x, r0.x
mad r0.x, cb2[5].y, r0.x, cb2[5].x
sample_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t3.xzyw, s0
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t5.yxzw, s2
movc r1.y, cb2[6].w, l(1.000000), cb0[3].y
add r1.w, r1.y, l(-0.100000)
add r1.yz, -r1.wwww, r1.yyzy
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat r1.y, r1.y, r1.z
mad r1.z, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mad r1.y, -r1.z, r1.y, l(1.000000)
mul o0.w, r0.x, r1.y
mad o1.xyz, r0.xxxx, r2.xyzx, r0.yzwy
mov o0.xyz, l(0.000100,0.000100,0.000100,0)
mov o1.w, r1.y
mov o2.w, r1.y
add r0.x, -cb2[3].w, cb2[3].z
mad o2.y, r1.x, r0.x, cb2[3].w
mov o2.x, cb2[5].w
mov o2.z, l(0)
mov o3.xyzw, l(0,0,0,0)
ret 
// Approximately 119 instruction slots used