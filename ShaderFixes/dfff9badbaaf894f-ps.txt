// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed dfff9badbaaf894f-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:59 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialDriverWire
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   16 Size:    12
//   float BendingWeight;               // Offset:   28 Size:     4 [unused]
//   float3 WaveParams;                 // Offset:   32 Size:    12 [unused]
//   float WireRadius;                  // Offset:   44 Size:     4 [unused]
//   float2 DiffuseTiling1;             // Offset:   48 Size:     8 [unused]
//   int ShadowRadiusScalingType;       // Offset:   56 Size:     4 [unused]
//   bool PointNormalsTowardsCamera;    // Offset:   60 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialDriverWire__DiffuseTexture1__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ShadowRealSamplerNV             sampler_c      NA          NA    2        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// MaterialDriverWire__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// LightData__LightShadowTextureNV__TexObj__    texture  float4     2darray    2        1
// VolumetricFog__VFLightVolumeTexture__TexObj__    texture  float4          3d    3        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    4        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// MaterialDriverWire                cbuffer      NA          NA    3        1
// LightData                         cbuffer      NA          NA    4        1
// VolumetricFog                     cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy w
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xy          3     NONE   float   xy  
// SV_Position              0   xyzw        4      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[40], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[55], dynamicIndexed
dcl_constantbuffer cb5[38], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2darray (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear sample v0.xyw
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xy
dcl_input_ps_siv linear noperspective sample v4.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 11
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed dfff9badbaaf894f-ps.txt

mul r7.w, r7.x, r7.y
mul r9.x, r7.w, cb1[9].x
mul r9.y, r7.w, cb1[10].x
mul r9.z, r7.w, cb1[11].x
mul r9.w, r7.w, cb1[12].x
dp4 r10.x, r9.xyzw, cb1[17].xyzw
dp4 r10.y, r9.xyzw, cb1[18].xyzw
dp4 r10.z, r9.xyzw, cb1[19].xyzw
add r8.xyz, cb1[174].xyz, r10.xyz

sample_b_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t1.xyzw, s0, cb1[180].x
mul r0.xyz, r0.xyzx, cb3[1].xyzx
mov r2.z, l(0)
mov r0.w, l(0)
mov r1.xyzw, l(0,0,3,0)
loop 
  uge r2.w, r1.w, l(4)
  breakc_nz r2.w
  ishl r2.w, r1.w, l(2)
  mul r3.xyz, v1.yyyy, cb4[r2.w + 1].xyzx
  mad r3.xyz, cb4[r2.w + 0].xyzx, v1.xxxx, r3.xyzx
  mad r3.xyz, cb4[r2.w + 2].xyzx, v1.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[r2.w + 3].xyzx
  max r2.w, |r3.y|, |r3.x|
  add r2.w, r2.w, cb4[16].x
  ult r3.w, r1.w, l(3)
  if_nz r3.w
    lt r3.w, r2.w, l(1.000000)
    if_nz r3.w
      mov r1.xy, r3.xyxx
      mov r2.z, r3.z
      mov r0.w, r2.w
      mov r1.z, r1.w
      break 
    endif 
  endif 
  iadd r1.w, r1.w, l(1)
  mov r1.xy, r3.xyxx
  mov r2.z, r3.z
  mov r0.w, r2.w
  mov r1.z, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r3.x, x0[r1.z + 0].z
mov r3.yzw, l(0,0.500000,0,0)
mad r2.xy, r1.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r3.xyxx
dp4 r1.x, cb4[17].xyzw, icb[r1.z + 0].xyzw
ieq r1.y, r1.z, l(3)
mad_sat r0.w, r0.w, cb4[16].z, cb4[16].w
and r0.w, r0.w, r1.y
ftoi r1.yz, v4.xxyx
and r3.xy, r1.yzyy, l(63, 63, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r1.yz, r3.xyzw, t0.zxyw
mad r1.yz, r1.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r1.w, r1.yzyy, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r1.x, r1.x, cb4[38].w
mul r3.xy, r1.xxxx, r1.wwww
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
mul r1.w, r3.x, l(4.000000)
round_ni r2.w, r1.w
min r4.z, r2.w, l(3.000000)
frc r4.x, r1.w
mov r4.y, r3.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r1.w, r4.xyzx, t2.xxxx, s2, r3.z
dp2 r2.w, r1.yzyy, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r3.xy, r1.xxxx, r2.wwww
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
mul r2.w, r3.x, l(4.000000)
round_ni r3.x, r2.w
min r4.z, r3.x, l(3.000000)
frc r4.x, r2.w
mov r4.y, r3.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r2.w, r4.xyzx, t2.xxxx, s2, r3.z
add r1.w, r1.w, r2.w
dp2 r2.w, r1.yzyy, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r3.xy, r1.xxxx, r2.wwww
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
mul r2.w, r3.x, l(4.000000)
round_ni r3.x, r2.w
min r4.z, r3.x, l(3.000000)
frc r4.x, r2.w
mov r4.y, r3.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r2.w, r4.xyzx, t2.xxxx, s2, r3.z
add r1.w, r1.w, r2.w
dp2 r1.y, r1.yzyy, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r1.xy, r1.xxxx, r1.yyyy
mov r1.z, l(0)
add r1.xyz, r1.xyzx, r2.xyzx
mul r1.x, r1.x, l(4.000000)
round_ni r2.x, r1.x
min r2.z, r2.x, l(3.000000)
frc r2.x, r1.x
mov r2.y, r1.y
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r1.x, r2.xyzx, t2.xxxx, s2, r1.z
add r1.x, r1.x, r1.w
mul r1.y, r1.x, l(0.250000)
mad r1.x, -r1.x, l(0.250000), l(1.000000)
mad r0.w, r0.w, r1.x, r1.y
dp3 r1.x, v1.xyzx, cb0[1].xyzx
add_sat r1.x, r1.x, cb0[1].w
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, cb4[37].x, cb4[37].y
lt r1.x, l(0.000000), r0.w
if_nz r1.x
  dp3 r1.x, v2.xyzx, v2.xyzx
  rsq r1.x, r1.x
  mul r1.xyz, r1.xxxx, v2.xyzx
  add r2.xyz, -v1.xyzx, r8.xyzx
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r2.xyzx
  dp3_sat r2.w, r1.xyzx, cb2[2].xyzx
  mul r4.xyz, r0.xyzx, r2.wwww
  dp3_sat r1.x, r1.xyzx, r3.xyzx
  mad r1.yzw, r2.xxyz, r1.wwww, cb2[2].xxyz
  dp3 r2.x, r1.yzwy, r1.yzwy
  rsq r2.x, r2.x
  mul r1.yzw, r1.yyzw, r2.xxxx
  dp3 r1.y, r1.yzwy, cb2[2].xyzx
  mul r1.z, r2.w, r2.w
  mad r1.w, -r2.w, r2.w, l(1.000000)
  max r1.z, r1.z, l(1.000000047E-034)
  div r1.z, r1.w, r1.z
  add r1.z, r1.z, l(1.000000)
  sqrt r1.z, r1.z
  add r1.z, r1.z, l(1.000000)
  mul r1.w, r1.x, r1.x
  mad r1.x, -r1.x, r1.x, l(1.000000)
  max r1.w, r1.w, l(1.000000047E-034)
  div r1.x, r1.x, r1.w
  add r1.x, r1.x, l(1.000000)
  sqrt r1.x, r1.x
  add r1.x, r1.x, l(1.000000)
  div r1.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r1.xxzx
  mul r1.x, r1.x, r1.z
  add r1.y, -r1.y, l(1.000000)
  mul r1.z, r1.y, r1.y
  mul r1.z, r1.z, r1.z
  mul r1.y, r1.z, r1.y
  mad r1.y, r1.y, l(0.960000), l(0.040000)
  mul r1.x, r1.x, r1.y
  mul r1.x, r2.w, r1.x
  mul r1.x, r1.x, l(0.318309873)
  mad r1.xyz, r4.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r1.xxxx
  mul r1.xyz, r0.wwww, r1.xyzx
  mul r1.xyz, r1.xyzx, cb2[0].xyzx
else 
  mov r1.xyz, l(0,0,0,0)
endif 
div r2.xy, v0.xyxx, v0.wwww
mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
iadd r0.w, cb5[28].z, l(-1)
utof r0.w, r0.w
mul r1.w, r0.w, l(0.031250)
exp r1.w, r1.w
mad r1.w, r1.w, cb5[1].z, cb5[1].w
min r2.w, r1.w, v0.w
add r2.w, r2.w, -cb5[1].w
div r2.w, r2.w, cb5[1].z
log r2.w, r2.w
mul r2.w, r2.w, l(32.000000)
div r2.z, r2.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r2.xyzx, t3.xyzw, s1, l(0.000000)
div r2.xyz, r2.xyzx, cb1[176].wwww
mul r0.xyz, r0.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, l(0.0795774683, 0.0795774683, 0.0795774683, 0.000000), r1.xyzx
add r1.xyz, v1.xyzx, -cb5[30].xyzx
dp3 r1.x, r1.xyzx, cb5[33].xyzx
mul r1.yz, v4.xxyx, cb5[37].zzzz
round_ni r1.yz, r1.yyzy
mul r2.xy, r1.yzyy, cb5[17].xyxx
min r1.y, r1.w, r1.x
add r1.y, r1.y, -cb5[1].w
div r1.y, r1.y, cb5[1].z
log r1.y, r1.y
mul r1.y, r1.y, l(32.000000)
div r2.z, r1.y, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r2.xyzx, t4.xyzw, s1, l(0.000000)
mad r4.xyzw, cb5[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r2.xyxy
mov r5.xy, r4.xyxx
mov r5.z, r2.z
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t4.xyzw, s1, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t4.xyzw, s1, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mad r4.xyzw, cb5[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r2.xyxy
mov r5.xy, r4.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t4.xyzw, s1, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t4.xyzw, s1, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r1.yz, r2.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r2.xz, r1.yyzy, cb5[0].zzwz
mul r2.xy, r2.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r0.w, r1.w, cb5[0].x
add r0.w, r0.w, l(1.000000)
mov r2.z, -cb5[0].x
mul r2.xyz, r0.wwww, r2.xyzx
mov r2.w, l(1.000000)
dp4 r4.x, r2.xyzw, cb5[13].xyzw
dp4 r4.y, r2.xyzw, cb5[14].xyzw
dp4 r4.z, r2.xyzw, cb5[15].xyzw
add r2.xyzw, -r4.xyzx, cb5[30].xyzx
div r1.yzw, r3.xxyz, cb1[176].wwww
exp r0.w, r3.w
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx
div r3.x, cb5[31].w, |r2.z|
min r1.x, r1.x, r3.x
mul r3.x, r1.x, cb5[29].w
min r3.x, r3.x, l(1.000000)
add r1.x, r1.x, -cb5[33].w
mul_sat r1.x, r1.x, cb5[32].w
mul r1.x, r1.x, r3.x
mul r3.x, r1.x, cb5[34].w
mul r1.x, r1.x, cb5[30].w
mul r1.x, r1.x, l(-1.442695)
exp r1.x, r1.x
mul r3.yzw, r2.yyzw, l(0.000000, -0.488603, 0.488603, -0.488603)
mul r4.xyz, r3.yyyy, cb2[32].xyzx
mad r4.xyz, cb2[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r4.xyzx
mad r4.xyz, r3.zzzz, cb2[33].xyzx, r4.xyzx
mad r3.yzw, r3.wwww, cb2[34].xxyz, r4.xxyz
mul r4.xyzw, r2.xyzw, r2.yzzz
mul r4.xyw, r4.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r3.yzw, r4.xxxx, cb2[35].xxyz, r3.yyzw
mad r3.yzw, r4.yyyy, cb2[36].xxyz, r3.yyzw
mad r2.x, r4.z, l(3.000000), l(-1.000000)
mul r2.x, r2.x, l(0.315392)
mad r3.yzw, r2.xxxx, cb2[37].xxyz, r3.yyzw
mad r3.yzw, r4.wwww, cb2[38].xxyz, r3.yyzw
mul r2.x, r2.y, r2.y
mad r2.x, r2.w, r2.w, -r2.x
mul r2.x, r2.x, l(0.546274)
mad r2.xyz, r2.xxxx, cb2[39].xyzx, r3.yzwy
mul r2.xyz, r2.xyzx, r3.xxxx
mul r2.xyz, r2.xyzx, cb5[29].xyzx
mad r2.xyz, r2.xyzx, r0.wwww, r1.yzwy
mul r2.w, r0.w, r1.x
movc r1.xyzw, cb5[37].wwww, r2.xyzw, l(0,0,0,1.000000)
mul r0.xyz, r0.xyzx, v1.wwww
mul r0.xyz, r0.xyzx, r1.wwww
mad r0.xyz, r1.xyzx, v1.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 o0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mov o0.xyz, r0.xyzx
mov o1.xyzw, v1.wwww
ret 
// Approximately 250 instruction slots used