// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed dbf28d4ad014b1e2-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 10:36:12 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float DepthScale;                  // Offset:  128 Size:     4
//   float SSRTextureMaxMipIndex;       // Offset:  132 Size:     4
//   bool GameIsPaused;                 // Offset:  136 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// LongRangeShadowSampler          sampler_c      NA          NA    4        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    2        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    3        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    4        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    5        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    6        1
// SSR__MotionVectorTextureMS        texture  float4        2dMS    7        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    8        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    9        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS   10        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS   11        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
// SSR                               cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecubearray (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2dms(0) (float,float,float,float) t7
dcl_resource_texture2dms(0) (float,float,float,float) t8
dcl_resource_texture2dms(0) (float,float,float,float) t9
dcl_resource_texture2dms(0) (float,float,float,float) t10
dcl_resource_texture2dms(0) (float,float,float,float) t11
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 27

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r23.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed dbf28d4ad014b1e2-ps.txt

// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed dbf28d4ad014b1e2-ps.txt

mul r23.w, r23.x, r23.y
mul r25.x, r23.w, cb1[9].x
mul r25.y, r23.w, cb1[10].x
mul r25.z, r23.w, cb1[11].x
mul r25.w, r23.w, cb1[12].x
dp4 r26.x, r25.xyzw, cb1[17].xyzw
dp4 r26.y, r25.xyzw, cb1[18].xyzw
dp4 r26.z, r25.xyzw, cb1[19].xyzw
add r24.xyz, cb1[174].xyz, r26.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.z, r1.xyww, t9.zwxy, l(0)
mov r0.w, l(1.000000)
dp2 r2.x, r0.zwzz, cb1[11].zwzz
dp2 r0.z, r0.zwzz, cb1[12].zwzz
div r0.z, -r2.x, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed dbf28d4ad014b1e2-ps.txt

add r23.w, -r2.z, -r23.y
mul r23.w, r23.w, r23.x
mad r2.x, -r23.w, cb1[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb1[17].xyzw
dp4 r0.y, r2.xyzw, cb1[18].xyzw
dp4 r0.z, r2.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r1.xyww, t8.wxyz, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r1.xyww, t10.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r1.xyzw, t11.zyxw, l(0)
mad r4.x, r1.w, l(255.000000), l(0.500000)
round_ni r4.x, r4.x
ftou r4.x, r4.x
ushr r4.x, r4.x, l(5)
dp3 r4.y, r3.xyzx, r3.xyzx
rsq r4.y, r4.y
mul r4.yzw, r3.xxyz, r4.yyyy
ieq r5.xyz, r4.xxxx, l(1, 4, 0, 0)
ge r5.w, r2.x, l(0.750000)
add r6.x, r2.x, l(-0.750000)
mad r6.x, r6.x, l(-0.599999905), l(1.000000)
movc r5.w, r5.w, r6.x, l(1.000000)
movc r5.w, r5.y, r5.w, r2.x
movc r5.w, r5.x, l(1.000000), r5.w
mad r6.x, r3.w, l(0.500000), l(0.500000)
mad r6.x, r6.x, l(65535.000000), l(0.500000)
ftou r6.x, r6.x
and r6.y, r6.x, l(255)
utof r7.x, r6.y
lt r6.y, l(0.000000), r7.x
movc r6.y, r4.x, l(0), r6.y
add r8.xyz, -r0.xyzx, r24.xyzx
dp3 r6.z, r8.xyzx, r8.xyzx
rsq r6.z, r6.z
mul r9.xyz, r6.zzzz, r8.xyzx
mul r10.yzw, r2.yyzw, r5.wwww
if_nz r5.x
  mul r11.x, r7.x, l(0.00392156886)
  and r2.w, r6.x, l(0x0000ff00)
  utof r2.w, r2.w
  mul r11.z, r2.w, l(0.0000153186284)
  mul r2.w, r2.x, l(255.000000)
  ftou r2.w, r2.w
  and r12.xy, r2.wwww, l(15, 240, 0, 0)
  utof r12.xy, r12.xyxx
  mul r11.yw, r12.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r12.w, l(0)
  mov r10.x, r10.y
  mov r13.x, l(0)
else 
  mul r2.w, r1.y, r1.y
  max r1.y, r2.w, l(0.001000)
  ieq r2.w, r4.x, l(2)
  if_nz r2.w
    and r2.w, r6.x, l(0x0000ff00)
    utof r7.y, r2.w
    mov r7.z, r1.z
    mad r7.yzw, r7.xxyz, l(0.000000, 0.00784313772, 0.0000306372567, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
    add r2.w, -r2.x, l(1.000000)
    mul r2.w, r2.w, r10.y
    mad r10.x, r2.w, l(0.500000), r10.y
    dp3 r2.w, r7.yzwy, r7.yzwy
    rsq r2.w, r2.w
    mul r11.xzw, r2.wwww, r7.yyzw
    mov r11.y, l(0)
    mov r1.z, l(0.500000)
    mov r12.w, l(0)
    mov r13.x, l(0)
  else 
    ieq r2.w, r4.x, l(3)
    if_nz r2.w
      and r14.xyzw, r6.xxxx, l(0x0000f800, 2016, 31, 31)
      utof r14.xyzw, r14.xyzw
      ge r7.yzw, l(0.000000, 1.253950, 81.547195, 2568.089600), r14.wwyx
      mul r2.w, r14.w, l(0.00249675405)
      mad r15.xyz, r14.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r15.xyz, r15.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r15.xyz, r15.xyzx
      movc r11.x, r7.y, r2.w, r15.x
      mul r14.xy, r14.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r11.zw, r7.zzzw, r14.xxxy, r15.yyyz
      mov r11.y, l(0)
      mov r12.w, l(0)
      mov r13.x, l(0)
    else 
      if_nz r5.y
        mad r2.w, r3.w, l(32767.000000), l(32767.000000)
        ftou r2.w, r2.w
        and r6.w, r2.w, l(255)
        utof r6.w, r6.w
        mul r6.w, r6.w, l(0.0123199718)
        ubfe r2.w, l(8), l(8), r2.w
        utof r2.w, r2.w
        mad r2.w, r2.w, l(0.0246399436), l(-3.14159274)
        sincos r14.x, r15.x, r6.w
        sincos r16.x, r17.x, r2.w
        mul r17.x, r14.x, r17.x
        mul r17.y, r14.x, r16.x
        mov r17.z, r15.x
        dp3 r2.w, r17.xyzx, r17.xyzx
        rsq r2.w, r2.w
        mul r11.xzw, r2.wwww, r17.xxyz
        mul_sat r12.w, r2.x, l(0.250000)
        mov r11.y, l(0)
        mov r13.x, l(0)
      else 
        ieq r2.w, r4.x, l(5)
        lt r6.w, r3.z, l(0.900000)
        movc r7.yzw, r6.wwww, l(0,0,1.000000,0), l(0,1.000000,0,0)
        mul r14.xyz, r3.zxyz, r7.yzwy
        mad r7.yzw, r3.yyzx, r7.zzwy, -r14.xxyz
        dp3 r6.w, r7.yzwy, r7.yzwy
        rsq r6.w, r6.w
        mul r7.yzw, r6.wwww, r7.yyzw
        mul r14.xyz, r3.zxyz, r7.zwyz
        mad r3.xyz, r3.yzxy, r7.wyzw, -r14.xyzx
        dp3 r6.w, r3.xyzx, r3.xyzx
        rsq r6.w, r6.w
        mul r3.xyz, r3.xyzx, r6.wwww
        mad r3.w, r3.w, l(2.000000), l(-1.000000)
        mul r3.w, r3.w, l(3.14159274)
        sincos r14.x, r15.x, r3.w
        mul r7.yzw, r7.yyzw, r14.xxxx
        mad r3.xyz, r3.xyzx, r15.xxxx, r7.yzwy
        mul r7.x, r7.x, l(0.00392156886)
        and r6.x, r6.x, l(0x0000ff00)
        utof r6.x, r6.x
        mad r7.y, r6.x, l(0.0000306372567), l(-1.000000)
        movc r7.xy, r4.xxxx, l(0,0,0,0), r7.xyxx
        mov r3.w, r1.x
        mov r7.z, l(0)
        movc r11.xyzw, r2.wwww, r3.xwyz, r7.xzzz
        mov r2.yz, l(0,0,0,0)
        mov r7.w, r3.w
        movc r13.xyz, r2.wwww, r2.zxyz, r7.yzwy
        mov r12.w, r13.y
        mov r1.x, r13.z
      endif 
    endif 
    mov r10.x, r10.y
  endif 
endif 
mad r2.xy, r4.yzyy, cb4[0].xyxx, r0.xyxx
mad r2.z, r0.z, cb4[0].z, cb4[0].w
mad r2.xy, r2.xyxx, cb4[1].xyxx, cb4[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t4.xxxx, s4, r2.z
dp3 r2.y, r0.xyzx, cb0[1].xyzx
add_sat r2.y, r2.y, cb0[1].w
mul r2.x, r2.y, r2.x
mad r2.x, r2.x, cb3[37].x, cb3[37].y
lt r2.y, l(0.000000), r2.x
lt r2.z, l(0.000000), r11.x
and r2.z, r2.z, r5.z
or r2.y, r2.z, r2.y
if_nz r2.y
  dp3 r3.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r2.y, r4.yzwy, cb2[2].xyzx
  mov_sat r2.z, r2.y
  ieq r2.w, r4.x, l(2)
  dp3 r5.z, r11.xzwx, r11.xzwx
  rsq r5.z, r5.z
  mul r7.xyz, r5.zzzz, r11.xzwx
  dp3 r5.z, r7.xyzx, cb2[2].xyzx
  add r5.z, r5.z, l(1.000000)
  mul_sat r5.z, r5.z, l(0.500000)
  mul r6.x, r5.z, r5.z
  mul r5.z, r5.z, r6.x
  movc r7.xyz, r2.wwww, r11.xzwx, r4.yzwy
  movc r5.z, r2.w, r5.z, r2.z
  if_nz r5.x
    mov_sat r14.xyzw, r11.xyzw
    mov_sat r6.xw, r1.xxxy
    log r13.yzw, r10.xxzw
    mul r15.xyz, r14.yyyy, r13.yzwy
    mul r15.xyz, r15.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r13.yzw, r13.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r15.xxyz
    eq r7.w, r14.x, l(0.000000)
    add r8.w, -r6.x, l(1.000000)
    mul r15.xyz, r8.wwww, r10.xzwx
    mul r15.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r16.xyz, r13.yzwy, -r14.xxxx
    exp r16.xyz, r16.xyzx
    mul r16.xyz, r15.xyzx, r16.xyzx
    mul r16.xyz, r16.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r15.xyz, r7.wwww, r15.xyzx, r16.xyzx
    mov r15.w, l(0.180000)
    mul r8.w, r14.w, l(0.080000)
    mad r9.w, r14.x, l(48.750000), l(1.250000)
    mul r6.w, r6.w, r6.w
    max r6.w, r6.w, l(0.001000)
    mul r10.y, r14.z, r14.z
    max r10.y, r10.y, l(0.001000)
    lt r14.x, l(0.000000), r2.y
    lt r14.y, r2.y, l(0.000000)
    iadd r14.x, -r14.x, r14.y
    itof r14.x, r14.x
    mad r14.y, r2.y, r2.y, l(-1.000000)
    mad r14.y, r14.y, l(0.666860044), l(1.000000)
    sqrt r14.y, r14.y
    mul r14.x, r14.y, r14.x
    mad r2.y, r2.y, l(0.666860044), -r14.x
    mul r14.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r14.xyz, r2.yyyy, r4.yzwy, -r14.xyzx
    add r16.xyz, -r14.xyzx, -cb2[2].xyzx
    mad r14.xyz, r6.wwww, r16.xyzx, r14.xyzx
    dp3 r2.y, r14.xyzx, r14.xyzx
    rsq r2.y, r2.y
    mul r16.xyz, r2.yyyy, r14.xyzx
    dp3 r16.w, r9.xyzx, r4.yzwy
    lt r17.x, l(0.000000), r16.w
    lt r17.y, r16.w, l(0.000000)
    iadd r17.x, -r17.x, r17.y
    itof r17.x, r17.x
    mad r17.y, r16.w, r16.w, l(-1.000000)
    mad r17.y, r17.y, l(0.666860044), l(1.000000)
    sqrt r17.y, r17.y
    mul r17.x, r17.y, r17.x
    mad r17.x, r16.w, l(0.666860044), -r17.x
    mul r17.yzw, r9.xxyz, l(0.000000, 0.666860044, 0.666860044, 0.666860044)
    mad r17.xyz, r17.xxxx, r4.yzwy, -r17.yzwy
    mad r18.xyz, -r8.xyzx, r6.zzzz, -r17.xyzx
    mad r17.xyz, r6.wwww, r18.xyzx, r17.xyzx
    dp3 r17.w, r17.xyzx, r17.xyzx
    rsq r17.w, r17.w
    mul r17.xyz, r17.wwww, r17.xyzx
    dp3 r17.w, r4.yzwy, r16.xyzx
    mad r17.w, -|r17.w|, |r17.w|, l(1.000000)
    mad r17.w, -r17.w, l(0.444702327), l(1.000000)
    add r9.w, r9.w, r9.w
    sqrt r17.w, r17.w
    div r9.w, r9.w, r17.w
    mov_sat r16.w, r16.w
    mad r18.xyz, r8.xyzx, r6.zzzz, cb2[2].xyzx
    dp3 r17.w, r18.xyzx, r18.xyzx
    rsq r17.w, r17.w
    mul r18.xyz, r17.wwww, r18.xyzx
    dp3_sat r17.w, r4.yzwy, r18.xyzx
    mul r18.x, r6.w, r6.w
    mul r17.w, r17.w, r17.w
    mad r18.y, r6.w, r6.w, l(-1.000000)
    mad r17.w, r17.w, r18.y, l(1.000000)
    mul r17.w, r17.w, r17.w
    mul r17.w, r17.w, l(3.14159274)
    div r17.w, r18.x, r17.w
    mad r6.w, r6.w, l(0.500000), l(0.500000)
    mul r18.x, r2.z, r2.z
    mul r6.w, r6.w, r6.w
    mad r18.y, -r2.z, r2.z, l(1.000000)
    mul r18.y, r6.w, r18.y
    max r18.x, r18.x, l(1.000000047E-034)
    div r18.x, r18.y, r18.x
    add r18.x, r18.x, l(1.000000)
    sqrt r18.x, r18.x
    add r18.x, r18.x, l(1.000000)
    div r18.x, l(2.000000), r18.x
    mul r18.y, r16.w, r16.w
    mad r16.w, -r16.w, r16.w, l(1.000000)
    mul r6.w, r6.w, r16.w
    max r16.w, r18.y, l(1.000000047E-034)
    div r6.w, r6.w, r16.w
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r6.w, r6.w, r18.x
    mad r18.xyz, r2.zzzz, r2.zzzz, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r18.xyz, r18.xyzx
    add r19.xyz, -r2.zzzz, r18.zyzz
    add r18.xyz, r2.zzzz, r18.xyzx
    mul r20.xyz, r19.zyzz, r19.zyzz
    mul r21.xyz, r18.zyzz, r18.zyzz
    add r21.xyz, r21.xyzx, r21.xyzx
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r18.xyz, r2.zzzz, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r19.xyz, r2.zzzz, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r18.xyz, r18.xyzx, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r18.xyz, r18.xyzx, r20.xyzx
    mul r6.w, r6.w, r17.w
    mul r18.xyz, r18.xyzx, r6.wwww
    mad r19.xyz, -r14.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r19.xyz, r6.xxxx, r19.xyzx, r8.wwww
    dp3_sat r6.x, r4.yzwy, -r17.xyzx
    mad r14.xyz, -r14.xyzx, r2.yyyy, -r17.xyzx
    dp3 r2.y, r14.xyzx, r14.xyzx
    rsq r2.y, r2.y
    mul r14.xyz, r2.yyyy, r14.xyzx
    dp3 r2.y, r14.xyzx, -r16.xyzx
    dp3_sat r6.w, r4.yzwy, -r16.xyzx
    dp3_sat r8.w, r4.yzwy, r14.xyzx
    mul r14.x, r10.y, r10.y
    mul r8.w, r8.w, r8.w
    mad r14.y, r10.y, r10.y, l(-1.000000)
    mad r8.w, r8.w, r14.y, l(1.000000)
    mul r8.w, r8.w, r8.w
    mul r8.w, r8.w, l(3.14159274)
    div r8.w, r14.x, r8.w
    mad r10.y, r10.y, l(0.500000), l(0.500000)
    mul r14.x, r6.w, r6.w
    mul r10.y, r10.y, r10.y
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r10.y
    max r14.x, r14.x, l(1.000000047E-034)
    div r6.w, r6.w, r14.x
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    mul r14.x, r6.x, r6.x
    mad r6.x, -r6.x, r6.x, l(1.000000)
    mul r6.x, r6.x, r10.y
    max r10.y, r14.x, l(1.000000047E-034)
    div r6.x, r6.x, r10.y
    add r6.x, r6.x, l(1.000000)
    sqrt r6.x, r6.x
    add r6.x, r6.x, l(1.000000)
    div r6.xw, l(2.000000, 0.000000, 0.000000, 2.000000), r6.xxxw
    mul r6.x, r6.x, r6.w
    dp3 r6.w, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r6.w, r6.w, l(50.000000)
    add r2.y, -r2.y, l(1.000000)
    mul r10.y, r2.y, r2.y
    mul r10.y, r10.y, r10.y
    add r14.xyz, -r19.xyzx, r6.wwww
    mul r14.xyz, r10.yyyy, r14.xyzx
    mad r14.xyz, r14.xyzx, r2.yyyy, r19.xyzx
    mul r2.y, r6.x, r8.w
    mul r14.xyz, r14.xyzx, r2.yyyy
    mul r13.yzw, r9.wwww, -r13.yyzw
    exp r13.yzw, r13.yyzw
    mad r13.yzw, r14.xxyz, r13.yyzw, r18.xxyz
    movc r14.xyz, r7.wwww, r14.xyzx, r13.yzwy
    dp3 r14.w, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r16.xyzw, l(0,0,0,0)
  else 
    if_nz r2.w
      mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r17.w, l(0.0572957806)
      add r2.y, -r1.x, l(1.000000)
      mul r15.xyzw, r2.yyyy, r17.xyzw
    else 
      ieq r2.y, r4.x, l(3)
      if_nz r2.y
        mad r13.yzw, r8.xxyz, r6.zzzz, cb2[2].xxyz
        dp3 r2.y, r13.yzwy, r13.yzwy
        rsq r2.y, r2.y
        mul r13.yzw, r2.yyyy, r13.yyzw
        dp3_sat r2.y, r13.yzwy, r9.xyzx
        mul r6.x, r1.z, l(0.080000)
        add r2.y, -r2.y, l(1.000000)
        mul r6.w, r2.y, r2.y
        mul r6.w, r6.w, r6.w
        mad r7.w, -r1.z, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.w
        mad r2.y, r6.w, r2.y, r6.x
        add_sat r6.x, r1.y, r1.y
        mad r17.w, r6.x, -r2.y, l(1.000000)
        mul r17.xyz, r10.xzwx, r17.wwww
        mul r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r5.y
          add r13.yzw, -r11.xxzw, r7.xxyz
          mad r17.xyz, r13.yzwy, l(0.100000, 0.100000, 0.100000, 0.000000), r11.xzwx
          dp3 r2.y, r17.xyzx, r17.xyzx
          rsq r2.y, r2.y
          mul r17.xyz, r2.yyyy, r17.xyzx
          mad r13.yzw, r13.yyzw, l(0.000000, 0.300000, 0.300000, 0.300000), r11.xxzw
          dp3 r2.y, r13.yzwy, r13.yzwy
          rsq r2.y, r2.y
          mul r13.yzw, r2.yyyy, r13.yyzw
          dp3 r2.y, r11.xzwx, cb2[2].xyzx
          dp3 r6.x, r17.xyzx, cb2[2].xyzx
          dp3 r6.w, r13.yzwy, cb2[2].xyzx
          mad r12.z, r2.y, l(0.500000), l(0.500000)
          mad r13.yz, r12.zzwz, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.y, r13.yzyy, t0.wxyz, s0, l(0.000000)
          mad r12.y, r6.x, l(0.500000), l(0.500000)
          mad r12.yz, r12.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.z, r12.yzyy, t0.wxyz, s0, l(0.000000)
          mad r12.x, r6.w, l(0.500000), l(0.500000)
          mad r6.xw, r12.xxxw, l(0.984375, 0.000000, 0.000000, 0.984375), l(0.00781250000, 0.000000, 0.000000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.w, r6.xwxx, t0.wxyz, s0, l(0.000000)
          mul r17.xyz, r10.xzwx, r13.yzwy
          mov r17.w, l(0.0572957806)
          mul r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r2.y, r4.x, l(5)
          dp3 r6.x, r11.xzwx, cb2[2].xyzx
          mad r6.x, -r6.x, r6.x, l(1.000000)
          sqrt r6.x, r6.x
          mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r17.w, l(0.0572957806)
          add r6.w, -r1.x, l(1.000000)
          mul r17.xyzw, r6.wwww, r17.xyzw
          mul r18.xyzw, r6.xxxx, r17.xyzw
          mul r18.xyzw, r18.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r6.x, -r11.y, l(1.000000)
          mul r18.xyzw, r6.xxxx, r18.xyzw
          movc r15.xyzw, r2.yyyy, r18.xyzw, r17.xyzw
        endif 
      endif 
    endif 
    if_nz r2.w
      mul r2.y, r1.z, l(0.080000)
      mad r12.xyz, -r1.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
      mad r12.xyz, r1.xxxx, r12.xyzx, r2.yyyy
      dp3_sat r2.y, r4.yzwy, r9.xyzx
      mad r13.yzw, r8.xxyz, r6.zzzz, cb2[2].xxyz
      dp3 r6.x, r13.yzwy, r13.yzwy
      rsq r6.x, r6.x
      mul r13.yzw, r6.xxxx, r13.yyzw
      dp3 r6.x, r13.yzwy, cb2[2].xyzx
      dp3_sat r6.w, r4.yzwy, r13.yzwy
      mul r7.w, r1.y, r1.y
      mul r6.w, r6.w, r6.w
      mad r8.w, r1.y, r1.y, l(-1.000000)
      mad r6.w, r6.w, r8.w, l(1.000000)
      mul r6.w, r6.w, r6.w
      mul r6.w, r6.w, l(3.14159274)
      div r6.w, r7.w, r6.w
      mad r7.w, r1.y, l(0.500000), l(0.500000)
      mul r8.w, r2.z, r2.z
      mul r7.w, r7.w, r7.w
      mad r9.w, -r2.z, r2.z, l(1.000000)
      mul r9.w, r7.w, r9.w
      max r8.w, r8.w, l(1.000000047E-034)
      div r8.w, r9.w, r8.w
      add r8.w, r8.w, l(1.000000)
      sqrt r8.w, r8.w
      add r8.w, r8.w, l(1.000000)
      div r8.w, l(2.000000), r8.w
      mul r9.w, r2.y, r2.y
      mad r2.y, -r2.y, r2.y, l(1.000000)
      mul r2.y, r2.y, r7.w
      max r7.w, r9.w, l(1.000000047E-034)
      div r2.y, r2.y, r7.w
      add r2.y, r2.y, l(1.000000)
      sqrt r2.y, r2.y
      add r2.y, r2.y, l(1.000000)
      div r2.y, l(2.000000), r2.y
      mul r2.y, r2.y, r8.w
      dp3 r7.w, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r7.w, r7.w, l(50.000000)
      add r6.x, -r6.x, l(1.000000)
      mul r8.w, r6.x, r6.x
      mul r8.w, r8.w, r8.w
      add r13.yzw, -r12.xxyz, r7.wwww
      mul r13.yzw, r8.wwww, r13.yyzw
      mad r12.xyz, r13.yzwy, r6.xxxx, r12.xyzx
      mul r2.y, r2.y, r6.w
      mul r14.xyz, r12.xyzx, r2.yyyy
      dp3 r14.w, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r2.y, r4.x, l(3)
      if_nz r2.y
        mad r12.xyz, r8.xyzx, r6.zzzz, cb2[2].xyzx
        dp3 r2.y, r12.xyzx, r12.xyzx
        rsq r2.y, r2.y
        mul r12.xyz, r2.yyyy, r12.xyzx
        dp3_sat r2.y, r12.xyzx, r9.xyzx
        mul r6.x, r1.z, l(0.080000)
        add r2.y, -r2.y, l(1.000000)
        mul r6.w, r2.y, r2.y
        mul r6.w, r6.w, r6.w
        mad r7.w, -r1.z, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.w
        mad r2.y, r6.w, r2.y, r6.x
        dp3_sat r6.x, r4.yzwy, r12.xyzx
        mul r6.w, r6.x, r6.x
        mad r12.xy, -r6.xxxx, r6.xxxx, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r6.w, r6.w, r12.x
        mul r7.w, r12.y, r12.y
        mul r8.w, r1.y, r1.y
        mad r12.xy, r1.yyyy, r1.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r9.w, r12.x, l(4.000000), l(1.000000)
        mul r9.w, r9.w, l(3.14159274)
        div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
        div r6.w, -r6.w, r12.y
        mul r6.w, r6.w, l(1.442695)
        exp r6.w, r6.w
        mul r6.w, r6.w, l(4.000000)
        div r6.w, r6.w, r7.w
        add r6.w, r6.w, l(1.000000)
        mul r6.w, r6.w, r9.w
        dp3_sat r7.w, r4.yzwy, r9.xyzx
        add r9.w, r2.z, r7.w
        mad r7.w, -r2.z, r7.w, r9.w
        mul r7.w, r7.w, l(4.000000)
        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        mov_sat r7.w, r7.w
        div r8.w, l(2.000000), r8.w
        add r8.w, r8.w, l(-2.000000)
        max r8.w, r8.w, l(1.000000031E-022)
        log r6.x, r6.x
        mul r6.x, r6.x, r8.w
        exp r6.x, r6.x
        add r8.w, r8.w, l(8.000000)
        mul r6.x, r6.x, r8.w
        mul r6.x, r6.x, l(0.0397887342)
        min r6.x, r6.x, l(1.000000)
        add_sat r8.w, r1.y, r1.y
        mad r6.w, r6.w, r7.w, -r6.x
        mad r6.x, r8.w, r6.w, r6.x
        mul r17.xyz, r2.yyyy, r6.xxxx
        dp3 r17.w, r17.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r18.xyz, r11.xzwx
        mov r18.w, l(1.000000)
        mul r14.xyzw, r17.xyzw, r18.xyzw
      else 
        if_nz r5.y
          mul r6.xw, r1.zzzy, l(0.080000, 0.000000, 0.000000, 0.400000)
          mad r12.xyz, -r1.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r12.xyz, r1.xxxx, r12.xyzx, r6.xxxx
          dp3_sat r2.y, r4.yzwy, r9.xyzx
          mad r13.yzw, r8.xxyz, r6.zzzz, cb2[2].xxyz
          dp3 r6.x, r13.yzwy, r13.yzwy
          rsq r6.x, r6.x
          mul r13.yzw, r6.xxxx, r13.yyzw
          dp3 r6.x, r13.yzwy, cb2[2].xyzx
          dp3_sat r7.w, r4.yzwy, r13.yzwy
          mul r8.w, r1.y, r1.y
          mul r7.w, r7.w, r7.w
          mad r9.w, r1.y, r1.y, l(-1.000000)
          mad r9.w, r7.w, r9.w, l(1.000000)
          mul r9.w, r9.w, r9.w
          mul r9.w, r9.w, l(3.14159274)
          div r8.w, r8.w, r9.w
          mad r13.yz, r1.yyyy, l(0.000000, 0.500000, 0.200000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          mul r9.w, r2.z, r2.z
          mul r13.yz, r13.yyzy, r13.yyzy
          mad r10.y, -r2.z, r2.z, l(1.000000)
          mul r17.xy, r10.yyyy, r13.yzyy
          max r9.w, r9.w, l(1.000000047E-034)
          div r17.xy, r17.xyxx, r9.wwww
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r17.xy, r17.xyxx
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r17.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r17.xyxx
          mul r9.w, r2.y, r2.y
          mad r2.y, -r2.y, r2.y, l(1.000000)
          mul r13.yz, r2.yyyy, r13.yyzy
          max r2.y, r9.w, l(1.000000047E-034)
          div r13.yz, r13.yyzy, r2.yyyy
          add r13.yz, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
          sqrt r13.yz, r13.yyzy
          add r13.yz, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
          div r13.yz, l(0.000000, 2.000000, 2.000000, 0.000000), r13.yyzy
          mul r13.yz, r13.yyzy, r17.xxyx
          dp3 r2.y, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r2.y, r2.y, l(50.000000)
          add r6.x, -r6.x, l(1.000000)
          mul r9.w, r6.x, r6.x
          mul r9.w, r9.w, r9.w
          add r17.xyz, -r12.xyzx, r2.yyyy
          mul r17.xyz, r9.wwww, r17.xyzx
          mad r12.xyz, r17.xyzx, r6.xxxx, r12.xyzx
          mul r2.y, r8.w, r13.y
          mul r17.xyz, r12.xyzx, r2.yyyy
          dp3 r17.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r2.y, r6.w, r6.w
          mad r6.x, r6.w, r6.w, l(-1.000000)
          mad r6.x, r7.w, r6.x, l(1.000000)
          mul r6.x, r6.x, r6.x
          mul r6.x, r6.x, l(3.14159274)
          div r2.y, r2.y, r6.x
          mul r2.y, r13.z, r2.y
          mul r18.xyz, r12.xyzx, r2.yyyy
          dp3 r18.w, r18.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r18.xyzw, r18.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r14.xyzw, r17.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r18.xyzw
        else 
          ieq r2.y, r4.x, l(5)
          dp3_sat r6.x, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r6.x, r6.x, l(1.66666663), l(1.33333337)
          mul r12.xyz, r1.yyyy, r11.xzwx
          mad r12.xyz, r12.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r4.yzwy
          div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
          dp3 r6.w, -cb2[2].xyzx, r12.xyzx
          mul r7.w, r6.x, r6.x
          mad r8.w, -r6.w, r6.w, l(1.000000)
          mad r8.w, -r7.w, r8.w, l(1.000000)
          sqrt r9.w, r8.w
          mad r6.w, r6.x, r6.w, -r9.w
          mul r13.yzw, r12.xxyz, r6.wwww
          mad r13.yzw, r6.xxxx, cb2[2].xxyz, r13.yyzw
          lt r6.w, l(0.000000), r8.w
          and r6.w, r6.w, l(0x3f800000)
          mul r17.xyz, r6.wwww, r13.yzwy
          dp3 r8.w, -r9.xyzx, r12.xyzx
          mad r9.w, -r8.w, r8.w, l(1.000000)
          mad r7.w, -r7.w, r9.w, l(1.000000)
          sqrt r9.w, r7.w
          mad r8.w, r6.x, r8.w, -r9.w
          mul r12.xyz, r12.xyzx, r8.wwww
          mad r12.xyz, r6.xxxx, r9.xyzx, r12.xyzx
          lt r6.x, l(0.000000), r7.w
          and r6.x, r6.x, l(0x3f800000)
          mul r12.xyz, r6.xxxx, r12.xyzx
          mad r8.xyz, r8.xyzx, r6.zzzz, cb2[2].xyzx
          dp3 r6.x, r8.xyzx, r8.xyzx
          rsq r6.x, r6.x
          mul r8.xyz, r6.xxxx, r8.xyzx
          dp3_sat r6.x, r4.yzwy, r9.xyzx
          dp3_sat r6.z, r4.yzwy, r8.xyzx
          dp3 r7.w, r8.xyzx, cb2[2].xyzx
          mov_sat r8.w, r7.w
          dp3 r9.w, r8.xyzx, r11.xzwx
          mul r18.xyz, r4.zwyz, r11.wxzw
          mad r18.xyz, r11.zwxz, r4.wyzw, -r18.xyzx
          dp3 r10.y, r18.xyzx, r18.xyzx
          rsq r10.y, r10.y
          mul r18.xyz, r10.yyyy, r18.xyzx
          dp3 r8.x, r8.xyzx, r18.xyzx
          mul r8.yz, r1.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r19.xyz, -r1.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r19.xyz, r1.xxxx, r19.xyzx, r8.yyyy
          dp3 r8.y, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r8.y, r8.y, l(50.000000)
          add r8.w, -r8.w, l(1.000000)
          mul r10.y, r8.w, r8.w
          mul r10.y, r10.y, r10.y
          add r20.xyz, -r19.xyzx, r8.yyyy
          mul r21.xyz, r10.yyyy, r20.xyzx
          mad r21.xyz, r21.xyzx, r8.wwww, r19.xyzx
          mul r8.y, r1.y, r1.y
          mul r8.w, r6.z, r6.z
          mul r9.w, r9.w, r9.w
          div r9.w, r9.w, r8.y
          mad r8.x, r8.x, r8.x, r9.w
          mad r6.z, r6.z, r6.z, r8.x
          mul r6.z, r6.z, r6.z
          mul r6.z, r8.z, r6.z
          div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
          mul r8.x, r2.z, r2.z
          mad r9.w, -r2.z, r2.z, l(1.000000)
          mul r10.y, r8.y, r9.w
          max r8.x, r8.x, l(1.000000047E-034)
          div r10.y, r10.y, r8.x
          add r10.y, r10.y, l(1.000000)
          sqrt r10.y, r10.y
          add r10.y, r10.y, l(1.000000)
          div r10.y, l(2.000000), r10.y
          mul r17.w, r6.x, r6.x
          mad r6.x, -r6.x, r6.x, l(1.000000)
          mul r18.w, r6.x, r8.y
          max r17.w, r17.w, l(1.000000047E-034)
          div r18.w, r18.w, r17.w
          add r18.w, r18.w, l(1.000000)
          sqrt r18.w, r18.w
          add r18.w, r18.w, l(1.000000)
          div r18.w, l(2.000000), r18.w
          mul r10.y, r10.y, r18.w
          mul r6.z, r6.z, r10.y
          mul_sat r21.xyz, r21.xyzx, r6.zzzz
          mul r21.xyz, r12.wwww, r21.xyzx
          mul r22.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r13.yzw, -r13.yyzw, r6.wwww, -r12.xxyz
          dp3 r6.z, r13.yzwy, r13.yzwy
          rsq r6.z, r6.z
          mul r13.yzw, r6.zzzz, r13.yyzw
          dp3_sat r6.z, r4.yzwy, -r17.xyzx
          dp3_sat r6.w, r4.yzwy, -r12.xyzx
          dp3_sat r10.y, r4.yzwy, r13.yzwy
          dp3_sat r12.x, r13.yzwy, -r17.xyzx
          dp3 r12.y, r13.yzwy, r11.xzwx
          dp3 r12.z, r13.yzwy, r18.xyzx
          add r12.x, -r12.x, l(1.000000)
          mul r12.w, r12.x, r12.x
          mul r12.w, r12.w, r12.w
          mul r13.yzw, r12.wwww, r20.xxyz
          mad r13.yzw, r13.yyzw, r12.xxxx, r19.xxyz
          mul r12.x, r12.y, r12.y
          div r12.x, r12.x, r8.y
          mad r12.x, r12.z, r12.z, r12.x
          mad r10.y, r10.y, r10.y, r12.x
          mul r10.y, r10.y, r10.y
          mul r8.z, r8.z, r10.y
          div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r8.z
          mul r10.y, r6.z, r6.z
          mad r6.z, -r6.z, r6.z, l(1.000000)
          mul r6.z, r6.z, r8.y
          max r10.y, r10.y, l(1.000000047E-034)
          div r6.z, r6.z, r10.y
          add r6.z, r6.z, l(1.000000)
          sqrt r6.z, r6.z
          add r6.z, r6.z, l(1.000000)
          mul r10.y, r6.w, r6.w
          mad r6.w, -r6.w, r6.w, l(1.000000)
          mul r6.w, r6.w, r8.y
          max r10.y, r10.y, l(1.000000047E-034)
          div r6.w, r6.w, r10.y
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.zw, l(0.000000, 0.000000, 2.000000, 2.000000), r6.zzzw
          mul r6.z, r6.w, r6.z
          mul r6.z, r6.z, r8.z
          mul_sat r12.xyz, r13.yzwy, r6.zzzz
          sqrt r13.yzw, r10.xxzw
          mad r12.xyz, -r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r12.xyzx
          mad r12.xyz, r13.yzwy, r12.xyzx, r22.xyzx
          dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r6.z, r1.y, r1.y, l(-1.000000)
          mad r6.z, r8.w, r6.z, l(1.000000)
          mul r6.z, r6.z, r6.z
          mul r6.z, r6.z, l(3.14159274)
          div r6.z, r8.y, r6.z
          mad r6.w, r1.y, l(0.500000), l(0.500000)
          mul r6.w, r6.w, r6.w
          mul r8.y, r9.w, r6.w
          div r8.x, r8.y, r8.x
          add r8.x, r8.x, l(1.000000)
          sqrt r8.x, r8.x
          add r8.x, r8.x, l(1.000000)
          div r8.x, l(2.000000), r8.x
          mul r6.x, r6.x, r6.w
          div r6.x, r6.x, r17.w
          add r6.x, r6.x, l(1.000000)
          sqrt r6.x, r6.x
          add r6.x, r6.x, l(1.000000)
          div r6.x, l(2.000000), r6.x
          mul r6.x, r6.x, r8.x
          add r6.w, -r7.w, l(1.000000)
          mul r7.w, r6.w, r6.w
          mul r7.w, r7.w, r7.w
          mul r8.xyz, r7.wwww, r20.xyzx
          mad r8.xyz, r8.xyzx, r6.wwww, r19.xyzx
          mul r6.x, r6.x, r6.z
          mul r8.xyz, r8.xyzx, r6.xxxx
          dp3 r8.w, r8.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r14.xyzw, r2.yyyy, r12.xyzw, r8.xyzw
        endif 
      endif 
    endif 
    if_nz r2.w
      mov r16.xyzw, l(0,0,0,0)
    else 
      ieq r2.y, r4.x, l(3)
      if_nz r2.y
        mov r16.xyzw, l(0,0,0,0)
      else 
        if_nz r5.y
          mov r16.xyzw, l(0,0,0,0)
        else 
          dp3 r2.y, r11.xzwx, cb2[2].xyzx
          mad r2.y, -r2.y, r2.y, l(1.000000)
          sqrt r2.y, r2.y
          mul r2.w, r11.y, l(-1.500000)
          dp3 r6.x, r7.xyzx, cb2[2].xyzx
          mad r6.z, -r11.y, l(-1.500000), r6.x
          div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r2.w
          mul_sat r2.w, r2.w, r6.z
          mad r6.z, r2.w, l(-2.000000), l(3.000000)
          mul r2.w, r2.w, r2.w
          mul r2.w, r2.w, r6.z
          mul r8.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r6.z, -r1.x, l(1.000000)
          mul r8.xyzw, r6.zzzz, r8.xyzw
          mul r8.xyzw, r2.wwww, r8.xyzw
          mul r8.xyzw, r2.yyyy, r8.xyzw
          mul r8.xyzw, r11.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r2.yw, r4.xxxx, l(0, 5, 0, 8)
          max r6.w, |r6.x|, l(0.000001)
          rcp r6.w, r6.w
          mul r6.x, r6.w, r6.x
          dp3 r6.w, r7.xyzx, r9.xyzx
          max r7.x, |r6.w|, l(0.000001)
          rcp r7.x, r7.x
          mul r6.w, r6.w, r7.x
          eq r6.x, r6.w, r6.x
          movc r7.w, r6.x, l(0), l(1.000000)
          mul r6.xzw, r6.zzzz, r11.xxzw
          mul r7.xyz, r7.wwww, r6.xzwx
          mul r7.xyzw, r7.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r12.xyz, r10.xzwx, r11.xxxx
          mov r12.w, r11.x
          mul r12.xyzw, r12.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r7.xyzw, r2.wwww, r7.xyzw, r12.xyzw
          movc r16.xyzw, r2.yyyy, r8.xyzw, r7.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r2.y, r5.y, l(1.000000), r5.z
  dp3 r2.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r5.y, r2.x, r11.x
  add r2.w, -r2.y, r2.w
  mad r2.w, r5.y, r2.w, r2.y
  movc r2.y, r4.x, r2.y, r2.w
  mul r7.xyzw, r2.zzzz, r14.xyzw
  mad r7.xyzw, r15.xyzw, r2.yyyy, r7.xyzw
  add r7.xyzw, r16.xyzw, r7.xyzw
  mul r2.xyzw, r2.xxxx, r7.xyzw
  mov r3.xyz, cb2[0].xyzx
  mul r2.xyzw, r2.xyzw, r3.xyzw
else 
  mov r2.xyzw, l(0,0,0,0)
endif 
if_nz r5.x
  mov_sat r11.xyzw, r11.xyzw
  mov_sat r1.xyz, r1.xyzx
  mul r3.x, r1.y, r1.y
  mul r3.w, r11.z, r11.z
  max r3.yw, r3.xxxw, l(0.000000, 0.001000, 0.000000, 0.001000)
  dp3 r5.x, -r9.xyzx, r4.yzwy
  add r5.x, r5.x, r5.x
  mad r5.xyz, r4.yzwy, -r5.xxxx, -r9.xyzx
  dp3 r6.x, r4.yzwy, r5.xyzx
  mad r6.x, -|r6.x|, |r6.x|, l(1.000000)
  mad r6.x, -r6.x, l(0.444702327), l(1.000000)
  add r6.z, r11.x, r11.x
  sqrt r6.x, r6.x
  div r6.x, r6.z, r6.x
  log r7.xyz, r10.xzwx
  mul r8.xyz, r11.yyyy, r7.xyzx
  mul r8.xyz, r8.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r7.xyz, r7.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r8.xyzx
  eq r6.z, r11.x, l(0.000000)
  mul r6.w, r3.y, r3.y
  div r6.w, l(2.000000), r6.w
  add r6.w, r6.w, l(-2.000000)
  max r6.w, r6.w, l(1.000000031E-022)
  sqrt r6.w, r6.w
  div r6.w, l(-10.000000), r6.w
  exp r6.w, r6.w
  add r6.w, r6.w, l(-0.000980)
  mul_sat r6.w, r6.w, l(1.00795019)
  add r6.w, -r6.w, l(1.000000)
  mul r7.w, r6.w, cb1[183].w
  mul r8.x, r6.w, cb1[174].w
  if_z r6.y
    ge r8.y, l(0.250000), r3.y
    if_nz r8.y
      ge r8.y, r4.w, l(0.250000)
      if_nz r8.y
        mov r0.w, l(1.000000)
        dp4 r12.x, r0.xyzw, cb1[51].xyzw
        dp4 r12.y, r0.xyzw, cb1[52].xyzw
        dp4 r12.z, r0.xyzw, cb1[53].xyzw
        dp3 r14.x, r4.yzwy, cb1[51].xyzx
        dp3 r14.y, r4.yzwy, cb1[52].xyzx
        dp3 r14.z, r4.yzwy, cb1[53].xyzx
        dp3 r8.y, r5.xyzx, cb1[51].xyzx
        dp3 r8.z, r5.xyzx, cb1[52].xyzx
        dp3 r8.w, r5.xyzx, cb1[53].xyzx
        dp3 r9.w, r8.yzwy, r8.yzwy
        rsq r9.w, r9.w
        mul r15.yzw, r8.yyzw, r9.wwww
        dp2 r8.y, v0.xxxx, cb1[66].zzzz
        add r8.y, r8.y, l(-1.000000)
        log r8.y, |r8.y|
        mul r8.y, r8.y, l(10.000000)
        exp r8.y, r8.y
        mad r8.y, r8.y, l(0.100000), l(1.000000)
        div r15.x, r15.y, r8.y
        mul r8.y, r12.z, l(-0.010000)
        max r8.y, r8.y, l(0.001000)
        mad r14.xyz, r14.xyzx, r8.yyyy, r12.xyzx
        mad r15.xyz, r15.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r14.xyzx
        mov r14.w, l(1.000000)
        dp4 r12.y, r14.xyzw, cb5[4].xyzw
        dp4 r12.x, r14.xyzw, cb5[5].xyzw
        dp4 r8.y, r14.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r8.y, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r12.y, r23.w, l(0.5), r12.y

        mov r15.w, l(1.000000)
        dp4 r14.x, r15.xyzw, cb5[4].xyzw
        dp4 r14.y, r15.xyzw, cb5[5].xyzw
        dp4 r8.z, r15.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r8.z, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r14.x, r23.w, l(0.5), r14.x

        div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.y
        div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r8.z
        mul r13.yz, r8.yyyy, r12.xxyx
        mul r15.xy, r8.zzzz, r14.xyxx
        mul r8.w, r8.y, r14.z
        mul r9.w, r8.z, r15.z
        add r15.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r16.xy, r15.zwzz, r15.yxyy
        lt r16.zw, r15.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r16.zw, r16.zzzw, r16.xxxy
        movc r15.zw, r16.xxxy, -r15.zzzw, l(0,0,-0.500000,-0.500000)
        mad r15.zw, r14.yyyx, r8.zzzz, r15.zzzw
        mad r14.xy, r14.yxyy, r8.zzzz, -r13.yzyy
        div r14.xy, r15.zwzz, r14.xyxx
        and r10.y, r14.x, r16.z
        max r11.y, r14.y, r10.y
        movc r10.y, r16.w, r11.y, r10.y
        mad r14.xy, r12.yxyy, r8.yyyy, -r15.xyxx
        mad r14.xy, r10.yyyy, r14.xyxx, r15.xyxx
        add r11.y, -r8.z, r8.y
        mad r8.z, r10.y, r11.y, r8.z
        mad r11.y, r14.z, r8.y, -r9.w
        mad r9.w, r10.y, r11.y, r9.w
        mad r15.xy, r12.yxyy, r8.yyyy, -r14.xyxx
        dp2 r10.y, r15.xyxx, r15.xyxx
        lt r10.y, r10.y, l(0.000100)
        mad r15.xy, r12.yxyy, r8.yyyy, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r15.xy, r10.yyyy, r15.xyxx, r14.xyxx
        mad r15.zw, -r12.yyyx, r8.yyyy, r15.xxxy
        lt r10.y, |r15.z|, |r15.w|
        movc r12.xy, r10.yyyy, r13.yzyy, r13.zyzz
        movc r13.yzw, r10.yyyy, r15.yywz, r15.xxzw
        lt r11.y, l(0.000000), r13.z
        lt r12.w, r13.z, l(0.000000)
        iadd r11.y, -r11.y, r12.w
        itof r14.x, r11.y
        div r11.y, r14.x, r13.z
        mul r14.y, r13.w, r11.y
        mad r9.w, -r14.z, r8.y, r9.w
        mul r9.w, r11.y, r9.w
        add r8.z, -r8.y, r8.z
        mul r8.z, r11.y, r8.z
        mul r11.y, r13.y, r14.x
        ge r12.w, r14.z, l(99999.796875)
        ge r13.y, l(100000.000000), r14.z
        and r12.w, r12.w, r13.y
        mov r15.y, l(1.000000)
        mov r16.xy, r8.wyww
        mov r17.xy, r12.xyxx
        mov r13.yzw, l(0,-1.000000,-1.000000,0)
        mov r14.w, r12.w
        mov r18.y, r14.z
        mov r15.z, r12.w
        loop 
          mul r15.w, r14.x, r17.x
          ge r15.w, r11.y, r15.w
          ilt r17.z, r13.w, l(100)
          and r15.w, r15.w, r17.z
          not r17.z, r15.z
          and r15.w, r15.w, r17.z
          breakc_z r15.w
          mad r16.xz, r9.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
          mad r16.yw, r8.zzzz, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
          div r18.x, r16.z, r16.w
          lt r15.w, r18.x, r18.y
          movc r16.zw, r15.wwww, r18.xxxy, r18.yyyx
          movc r13.yz, r10.yyyy, r17.yyxy, r17.xxyx
          mul r17.zw, r13.yyyz, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r15.x, r17.zwzz, t5.xyzw, s1, l(0.000000)
          dp2 r15.w, r15.xyxx, cb1[11].zwzz
          dp2 r15.x, r15.xyxx, cb1[12].zwzz
          div r15.x, -r15.w, r15.x
          ge r15.w, -r15.x, r16.z
          add r15.x, -r15.x, l(-0.200000)
          ge r15.x, r16.w, r15.x
          and r15.z, r15.x, r15.w
          mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
          iadd r13.w, r13.w, l(1)
          mov r14.w, r15.z
          mov r18.y, r18.x
        endloop 
        if_nz r14.w
          if_z cb5[8].z
            ftoi r8.yz, r13.yyzy
            imax r8.yz, r8.yyzy, l(0, 0, 0, 0)
            ftoi r12.xy, cb1[66].xyxx
            iadd r12.xy, r12.xyxx, l(-1, -1, 0, 0)
            imin r14.xy, r8.yzyy, r12.xyxx
            mov r14.zw, l(0,0,0,0)
            ldms_indexable(texture2dms)(float,float,float,float) r8.yz, r14.xyzw, t7.wxyz, l(0)
            ne r12.xy, r8.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r9.w, r12.y, r12.x
            if_z r9.w
              itof r12.xy, r14.xyxx
              mul r14.xy, r12.xyxx, cb5[8].xxxx
              ftoi r14.xy, r14.xyxx
              mov r14.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r14.x, r14.xyzw, t5.xyzw
              mov r14.yw, l(0,1.000000,0,1.000000)
              dp2 r9.w, r14.xyxx, cb1[11].zwzz
              dp2 r10.y, r14.xyxx, cb1[12].zwzz
              div r9.w, -r9.w, r10.y
              mad r12.xy, r12.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r12.xy, r12.xyxx, cb1[0].xyxx
              mul r14.xy, r12.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r9.w, r9.w, cb1[67].x
              mov r14.z, -cb1[67].x
              mul r14.xyz, r9.wwww, r14.xyzx
              dp4 r12.x, r14.xyzw, cb1[24].xyzw
              dp4 r12.y, r14.xyzw, cb1[25].xyzw
              dp4 r9.w, r14.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r23.w, r9.w, -r23.y
mad r12.x, r23.w, r23.x, r12.x

              dp4 r15.x, r14.xyzw, cb5[0].xyzw
              dp4 r15.y, r14.xyzw, cb5[1].xyzw
              dp4 r10.y, r14.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r23.w, r10.y, -r23.y
mad r15.x, r23.w, r23.x, r15.x

              max r10.y, r10.y, l(0.000100)
              div r14.xy, r15.xyxx, r10.yyyy
              div r12.xy, r12.xyxx, r9.wwww
              add r12.xy, -r14.xyxx, r12.xyxx
              mul r8.yw, r12.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
              mov r8.z, -r8.w
            endif 
          else 
            mov r8.yz, l(0,0,0,0)
          endif 
          mad r8.yz, r13.yyzy, cb1[66].zzwz, -r8.yyzy
          mul r12.xy, r8.yzyy, cb1[66].xyxx
          mul r12.xy, r12.xyxx, cb5[8].xxxx
          ftoi r14.xy, r12.xyxx
          mov r14.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r12.x, r14.xyzw, t5.xyzw
          mov r12.y, l(1.000000)
          dp2 r9.w, r12.xyxx, cb1[11].zwzz
          dp2 r10.y, r12.xyxx, cb1[12].zwzz
          div r9.w, -r9.w, r10.y
          ge r9.w, r12.z, -r9.w
          not r10.y, r9.w
          add r12.xy, -r13.yzyy, v0.xyxx
          dp2 r11.y, r12.xyxx, r12.xyxx
          sqrt r11.y, r11.y
          ge r12.x, r11.y, l(350.000000)
          add r11.y, r11.y, l(-350.000000)
          mad r11.y, -r11.y, l(0.00666666683), l(1.000000)
          movc r11.y, r12.x, r11.y, l(1.000000)
          add r8.w, -r8.z, l(1.000000)
          mul_sat r12.xy, r8.zwzz, l(10.000000, 10.000000, 0.000000, 0.000000)
          mul r8.w, r12.y, r12.x
          mul r8.w, r8.w, r11.y
          lt r11.y, l(0.137000), r3.y
          mad r12.x, -r3.y, l(4.000000), l(1.000000)
          max r12.x, r12.x, l(0.000000)
          mul r12.x, r8.w, r12.x
          movc r8.w, r11.y, r12.x, r8.w
          movc r8.w, r9.w, r8.w, l(1.000000)
        else 
          mov r8.yzw, l(0,0,0,0)
          mov r10.y, l(0)
        endif 
        if_z r10.y
          lt r9.w, l(0.000000), r8.w
          if_nz r9.w
            mul r6.w, r6.w, cb5[8].y
            sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r8.yzyy, t6.xyzw, s2, r6.w
          else 
            mov r12.xyz, l(0,0,0,0)
          endif 
        else 
          mov r12.xyz, l(0,0,0,0)
          mov r8.w, l(0)
        endif 
      else 
        mov r12.xyz, l(0,0,0,0)
        mov r8.w, l(0)
      endif 
    else 
      mov r12.xyz, l(0,0,0,0)
      mov r8.w, l(0)
    endif 
  else 
    mov r12.xyz, l(0,0,0,0)
    mov r8.w, l(0)
  endif 
  lt r6.w, l(0.000000), r8.w
  if_nz r6.w
    div r12.xyz, r12.xyzx, cb1[176].wwww
    lt r6.w, r8.w, l(1.000000)
    if_nz r6.w
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r14.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
        mov r8.y, l(0)
        loop 
          uge r8.z, r8.y, l(15)
          breakc_nz r8.z
          imul null, r8.z, r8.y, l(7)
          dp4 r15.x, r0.xyzw, cb1[r8.z + 68].xyzw
          dp4 r15.y, r0.xyzw, cb1[r8.z + 69].xyzw
          dp4 r15.z, r0.xyzw, cb1[r8.z + 70].xyzw
          ge r13.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r13.yzw, r13.yyzw, cb1[r8.z + 72].xxyz, cb1[r8.z + 73].xxyz
          add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r13.yzw, r13.yyzw, r15.xxyz
          mul r9.w, r13.z, r13.y
          mul r9.w, r13.w, r9.w
          lt r10.y, l(0.000000), r9.w
          if_nz r10.y
            dp3 r15.x, r5.xyzx, cb1[r8.z + 68].xyzx
            dp3 r15.y, r5.xyzx, cb1[r8.z + 69].xyzx
            dp3 r15.z, r5.xyzx, cb1[r8.z + 70].xyzx
            mul r9.w, r9.w, cb1[r8.z + 73].w
            mov r15.w, cb1[r8.z + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t3.xyzw, s3, r8.x
            mul r15.xyzw, r15.xyzw, cb1[r8.z + 74].xxxy
            min r8.z, r6.w, r9.w
            mad r15.xyzw, r15.xyzw, r8.zzzz, r14.xyzw
            add r8.z, r6.w, -r8.z
            ge r9.w, l(0.000000), r8.z
            if_nz r9.w
              mov r14.xyzw, r15.xyzw
              mov r6.w, r8.z
              break 
            endif 
            mov r14.xyzw, r15.xyzw
            mov r6.w, r8.z
          endif 
          iadd r8.y, r8.y, l(1)
        endloop 
      else 
        mov r14.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
      endif 
      add r8.y, r6.w, r14.w
      lt r8.z, l(0.000000), r8.y
      if_nz r8.z
        add r8.z, -|r5.z|, r5.z
        mad r6.w, r6.w, r8.z, |r5.z|
        mad r6.w, r6.w, l(2.000000), l(2.000000)
        div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r6.wwww
        mul r13.yz, r5.yyxy, r13.yyzy
        mad r13.yz, r13.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t2.wxyz, s2, r7.w
        mov_sat r15.xyz, r13.yzwy
        movc r13.yzw, cb1[184].zzzz, r15.xxyz, r13.yyzw
        div r13.yzw, r13.yyzw, cb1[176].wwww
        mad r14.xyz, r13.yzwy, r8.yyyy, r14.xyzx
      endif 
      mov_sat r8.w, r8.w
      add r13.yzw, r12.xxyz, -r14.xxyz
      mad r12.xyz, r8.wwww, r13.yzwy, r14.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r12.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
      mov r8.y, l(0)
      loop 
        uge r8.z, r8.y, l(15)
        breakc_nz r8.z
        imul null, r8.z, r8.y, l(7)
        dp4 r14.x, r0.xyzw, cb1[r8.z + 68].xyzw
        dp4 r14.y, r0.xyzw, cb1[r8.z + 69].xyzw
        dp4 r14.z, r0.xyzw, cb1[r8.z + 70].xyzw
        ge r13.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r8.z + 72].xxyz, cb1[r8.z + 73].xxyz
        add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.yzw, r13.yyzw, r14.xxyz
        mul r8.w, r13.z, r13.y
        mul r8.w, r13.w, r8.w
        lt r9.w, l(0.000000), r8.w
        if_nz r9.w
          dp3 r14.x, r5.xyzx, cb1[r8.z + 68].xyzx
          dp3 r14.y, r5.xyzx, cb1[r8.z + 69].xyzx
          dp3 r14.z, r5.xyzx, cb1[r8.z + 70].xyzx
          mul r8.w, r8.w, cb1[r8.z + 73].w
          mov r14.w, cb1[r8.z + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s3, r8.x
          mul r14.xyzw, r14.xyzw, cb1[r8.z + 74].xxxy
          min r8.z, r6.w, r8.w
          mad r14.xyzw, r14.xyzw, r8.zzzz, r12.xyzw
          add r8.z, r6.w, -r8.z
          ge r8.w, l(0.000000), r8.z
          if_nz r8.w
            mov r12.xyzw, r14.xyzw
            mov r6.w, r8.z
            break 
          endif 
          mov r12.xyzw, r14.xyzw
          mov r6.w, r8.z
        endif 
        iadd r8.y, r8.y, l(1)
      endloop 
    else 
      mov r12.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
    endif 
    add r8.x, r6.w, r12.w
    lt r8.y, l(0.000000), r8.x
    if_nz r8.y
      add r8.y, -|r5.z|, r5.z
      mad r6.w, r6.w, r8.y, |r5.z|
      mad r6.w, r6.w, l(2.000000), l(2.000000)
      div r8.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r6.wwww
      mul r8.yz, r5.yyxy, r8.yyzy
      mad r8.yz, r8.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r8.yzw, r8.yzyy, t2.wxyz, s2, r7.w
      mov_sat r13.yzw, r8.yyzw
      movc r8.yzw, cb1[184].zzzz, r13.yyzw, r8.yyzw
      div r8.yzw, r8.yyzw, cb1[176].wwww
      mad r12.xyz, r8.yzwy, r8.xxxx, r12.xyzx
    endif 
  endif 
  mul r6.w, r1.z, l(0.080000)
  dp3 r7.w, r6.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r3.x, r4.yzwy, r9.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xy, r3.xyxx, t1.xyzw, s2, l(0.000000)
  mad r6.w, r6.w, r8.x, r8.y
  mul r6.w, r7.w, r6.w
  mul r8.xyz, r6.wwww, r12.xyzx
  mul r8.xyz, r5.wwww, r8.xyzx
  add r3.y, r3.w, r3.y
  min r3.z, r3.y, l(1.000000)
  mul r3.y, r3.z, r3.z
  div r3.y, l(2.000000), r3.y
  add r3.y, r3.y, l(-2.000000)
  max r3.y, r3.y, l(1.000000031E-022)
  sqrt r3.y, r3.y
  div r3.y, l(-10.000000), r3.y
  exp r3.y, r3.y
  add r3.y, r3.y, l(-0.000980)
  mul r3.y, r3.y, l(1.00795019)
  max r3.y, r3.y, l(0.000000)
  add r3.y, -r3.y, l(1.000000)
  mul r3.w, r3.y, cb1[183].w
  mul r6.w, r3.y, cb1[174].w
  if_z r6.y
    ge r7.w, l(0.250000), r3.z
    if_nz r7.w
      ge r7.w, r4.w, l(0.250000)
      if_nz r7.w
        mov r0.w, l(1.000000)
        dp4 r12.x, r0.xyzw, cb1[51].xyzw
        dp4 r12.y, r0.xyzw, cb1[52].xyzw
        dp4 r12.z, r0.xyzw, cb1[53].xyzw
        dp3 r14.x, r4.yzwy, cb1[51].xyzx
        dp3 r14.y, r4.yzwy, cb1[52].xyzx
        dp3 r14.z, r4.yzwy, cb1[53].xyzx
        dp3 r13.y, r5.xyzx, cb1[51].xyzx
        dp3 r13.z, r5.xyzx, cb1[52].xyzx
        dp3 r13.w, r5.xyzx, cb1[53].xyzx
        dp3 r7.w, r13.yzwy, r13.yzwy
        rsq r7.w, r7.w
        mul r15.yzw, r7.wwww, r13.yyzw
        dp2 r7.w, v0.xxxx, cb1[66].zzzz
        add r7.w, r7.w, l(-1.000000)
        log r7.w, |r7.w|
        mul r7.w, r7.w, l(10.000000)
        exp r7.w, r7.w
        mad r7.w, r7.w, l(0.100000), l(1.000000)
        div r15.x, r15.y, r7.w
        mul r7.w, r12.z, l(-0.010000)
        max r7.w, r7.w, l(0.001000)
        mad r14.xyz, r14.xyzx, r7.wwww, r12.xyzx
        mad r15.xyz, r15.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r14.xyzx
        mov r14.w, l(1.000000)
        dp4 r12.y, r14.xyzw, cb5[4].xyzw
        dp4 r12.x, r14.xyzw, cb5[5].xyzw
        dp4 r7.w, r14.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r7.w, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r12.y, r23.w, l(0.5), r12.y

        mov r15.w, l(1.000000)
        dp4 r14.x, r15.xyzw, cb5[4].xyzw
        dp4 r14.y, r15.xyzw, cb5[5].xyzw
        dp4 r8.w, r15.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r8.w, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r14.x, r23.w, l(0.5), r14.x

        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        mul r13.yz, r7.wwww, r12.xxyx
        mul r15.xy, r8.wwww, r14.xyxx
        mul r9.w, r7.w, r14.z
        mul r10.y, r8.w, r15.z
        add r15.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r16.xy, r15.zwzz, r15.yxyy
        lt r16.zw, r15.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r16.zw, r16.zzzw, r16.xxxy
        movc r15.zw, r16.xxxy, -r15.zzzw, l(0,0,-0.500000,-0.500000)
        mad r15.zw, r14.yyyx, r8.wwww, r15.zzzw
        mad r14.xy, r14.yxyy, r8.wwww, -r13.yzyy
        div r14.xy, r15.zwzz, r14.xyxx
        and r11.y, r14.x, r16.z
        max r12.w, r14.y, r11.y
        movc r11.y, r16.w, r12.w, r11.y
        mad r14.xy, r12.yxyy, r7.wwww, -r15.xyxx
        mad r14.xy, r11.yyyy, r14.xyxx, r15.xyxx
        add r12.w, r7.w, -r8.w
        mad r8.w, r11.y, r12.w, r8.w
        mad r12.w, r14.z, r7.w, -r10.y
        mad r10.y, r11.y, r12.w, r10.y
        mad r15.xy, r12.yxyy, r7.wwww, -r14.xyxx
        dp2 r11.y, r15.xyxx, r15.xyxx
        lt r11.y, r11.y, l(0.000100)
        mad r15.xy, r12.yxyy, r7.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r15.xy, r11.yyyy, r15.xyxx, r14.xyxx
        mad r15.zw, -r12.yyyx, r7.wwww, r15.xxxy
        lt r11.y, |r15.z|, |r15.w|
        movc r12.xy, r11.yyyy, r13.yzyy, r13.zyzz
        movc r13.yzw, r11.yyyy, r15.yywz, r15.xxzw
        lt r12.w, l(0.000000), r13.z
        lt r14.x, r13.z, l(0.000000)
        iadd r12.w, -r12.w, r14.x
        itof r14.x, r12.w
        div r12.w, r14.x, r13.z
        mul r14.y, r13.w, r12.w
        mad r10.y, -r14.z, r7.w, r10.y
        mul r10.y, r12.w, r10.y
        add r8.w, -r7.w, r8.w
        mul r8.w, r12.w, r8.w
        mul r12.w, r13.y, r14.x
        ge r13.y, r14.z, l(99999.796875)
        ge r13.z, l(100000.000000), r14.z
        and r13.y, r13.z, r13.y
        mov r15.y, l(1.000000)
        mov r16.x, r9.w
        mov r16.y, r7.w
        mov r13.zw, l(0,0,-1.000000,-1.000000)
        mov r17.xy, r12.xyxx
        mov r14.w, l(0)
        mov r18.y, r14.z
        mov r15.zw, r13.yyyy
        loop 
          mul r17.z, r14.x, r17.x
          ge r17.z, r12.w, r17.z
          ilt r17.w, r14.w, l(100)
          and r17.z, r17.w, r17.z
          not r17.w, r15.w
          and r17.z, r17.w, r17.z
          breakc_z r17.z
          mad r16.xz, r10.yyyy, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
          mad r16.yw, r8.wwww, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
          div r18.x, r16.z, r16.w
          lt r16.z, r18.x, r18.y
          movc r16.zw, r16.zzzz, r18.xxxy, r18.yyyx
          movc r13.zw, r11.yyyy, r17.yyyx, r17.xxxy
          mul r17.zw, r13.zzzw, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r15.x, r17.zwzz, t5.xyzw, s1, l(0.000000)
          dp2 r17.z, r15.xyxx, cb1[11].zwzz
          dp2 r15.x, r15.xyxx, cb1[12].zwzz
          div r15.x, -r17.z, r15.x
          ge r16.z, -r15.x, r16.z
          add r15.x, -r15.x, l(-0.200000)
          ge r15.x, r16.w, r15.x
          and r15.w, r15.x, r16.z
          mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
          iadd r14.w, r14.w, l(1)
          mov r15.z, r15.w
          mov r18.y, r18.x
        endloop 
        if_nz r15.z
          if_z cb5[8].z
            ftoi r12.xy, r13.zwzz
            imax r12.xy, r12.xyxx, l(0, 0, 0, 0)
            ftoi r14.xy, cb1[66].xyxx
            iadd r14.xy, r14.xyxx, l(-1, -1, 0, 0)
            imin r14.xy, r12.xyxx, r14.xyxx
            mov r14.zw, l(0,0,0,0)
            ldms_indexable(texture2dms)(float,float,float,float) r12.xy, r14.xyzw, t7.xywz, l(0)
            ne r14.zw, r12.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r7.w, r14.w, r14.z
            if_z r7.w
              itof r14.xy, r14.xyxx
              mul r14.zw, r14.xxxy, cb5[8].xxxx
              ftoi r15.xy, r14.zwzz
              mov r15.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r14.z, r15.xyzw, t5.zwxy
              mov r14.w, l(1.000000)
              dp2 r7.w, r14.zwzz, cb1[11].zwzz
              dp2 r8.w, r14.zwzz, cb1[12].zwzz
              div r7.w, -r7.w, r8.w
              mad r14.xy, r14.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r14.xy, r14.xyxx, cb1[0].xyxx
              mul r14.xy, r14.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r7.w, r7.w, cb1[67].x
              mov r14.z, -cb1[67].x
              mul r14.xyz, r7.wwww, r14.xyzx
              mov r14.w, l(1.000000)
              dp4 r15.x, r14.xyzw, cb1[24].xyzw
              dp4 r15.y, r14.xyzw, cb1[25].xyzw
              dp4 r7.w, r14.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r23.w, r7.w, -r23.y
mad r15.x, r23.w, r23.x, r15.x

              dp4 r16.x, r14.xyzw, cb5[0].xyzw
              dp4 r16.y, r14.xyzw, cb5[1].xyzw
              dp4 r8.w, r14.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r23.w, r8.w, -r23.y
mad r16.x, r23.w, r23.x, r16.x

              max r8.w, r8.w, l(0.000100)
              div r14.xy, r16.xyxx, r8.wwww
              div r14.zw, r15.xxxy, r7.wwww
              add r14.xy, -r14.xyxx, r14.zwzz
              mul r12.xw, r14.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
              mov r12.y, -r12.w
            endif 
          else 
            mov r12.xy, l(0,0,0,0)
          endif 
          mad r12.xy, r13.zwzz, cb1[66].zwzz, -r12.xyxx
          mul r14.xy, r12.xyxx, cb1[66].xyxx
          mul r14.xy, r14.xyxx, cb5[8].xxxx
          ftoi r14.xy, r14.xyxx
          mov r14.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r14.x, r14.xyzw, t5.xyzw
          mov r14.y, l(1.000000)
          dp2 r7.w, r14.xyxx, cb1[11].zwzz
          dp2 r8.w, r14.xyxx, cb1[12].zwzz
          div r7.w, -r7.w, r8.w
          ge r7.w, r12.z, -r7.w
          not r8.w, r7.w
          add r13.yz, -r13.zzwz, v0.xxyx
          dp2 r9.w, r13.yzyy, r13.yzyy
          sqrt r9.w, r9.w
          ge r10.y, r9.w, l(350.000000)
          add r9.w, r9.w, l(-350.000000)
          mad r9.w, -r9.w, l(0.00666666683), l(1.000000)
          movc r9.w, r10.y, r9.w, l(1.000000)
          add r12.w, -r12.y, l(1.000000)
          mul_sat r12.zw, r12.yyyw, l(0.000000, 0.000000, 10.000000, 10.000000)
          mul r10.y, r12.w, r12.z
          mul r9.w, r9.w, r10.y
          lt r10.y, l(0.137000), r3.z
          mad r11.y, -r3.z, l(4.000000), l(1.000000)
          max r11.y, r11.y, l(0.000000)
          mul r11.y, r9.w, r11.y
          movc r9.w, r10.y, r11.y, r9.w
          movc r7.w, r7.w, r9.w, l(1.000000)
        else 
          mov r12.xy, l(0,0,0,0)
          mov r7.w, l(0)
          mov r8.w, l(0)
        endif 
        if_z r8.w
          lt r8.w, l(0.000000), r7.w
          if_nz r8.w
            mul r3.y, r3.y, cb5[8].y
            sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t6.xyzw, s2, r3.y
          else 
            mov r12.xyz, l(0,0,0,0)
          endif 
        else 
          mov r12.xyz, l(0,0,0,0)
          mov r7.w, l(0)
        endif 
      else 
        mov r12.xyz, l(0,0,0,0)
        mov r7.w, l(0)
      endif 
    else 
      mov r12.xyz, l(0,0,0,0)
      mov r7.w, l(0)
    endif 
  else 
    mov r12.xyz, l(0,0,0,0)
    mov r7.w, l(0)
  endif 
  lt r3.y, l(0.000000), r7.w
  if_nz r3.y
    div r12.xyz, r12.xyzx, cb1[176].wwww
    lt r3.y, r7.w, l(1.000000)
    if_nz r3.y
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r14.xyzw, l(0,0,0,0)
        mov r3.y, l(1.000000)
        mov r8.w, l(0)
        loop 
          uge r9.w, r8.w, l(15)
          breakc_nz r9.w
          imul null, r9.w, r8.w, l(7)
          dp4 r15.x, r0.xyzw, cb1[r9.w + 68].xyzw
          dp4 r15.y, r0.xyzw, cb1[r9.w + 69].xyzw
          dp4 r15.z, r0.xyzw, cb1[r9.w + 70].xyzw
          ge r13.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r13.yzw, r13.yyzw, cb1[r9.w + 72].xxyz, cb1[r9.w + 73].xxyz
          add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r13.yzw, r13.yyzw, r15.xxyz
          mul r10.y, r13.z, r13.y
          mul r10.y, r13.w, r10.y
          lt r11.y, l(0.000000), r10.y
          if_nz r11.y
            dp3 r15.x, r5.xyzx, cb1[r9.w + 68].xyzx
            dp3 r15.y, r5.xyzx, cb1[r9.w + 69].xyzx
            dp3 r15.z, r5.xyzx, cb1[r9.w + 70].xyzx
            mul r10.y, r10.y, cb1[r9.w + 73].w
            mov r15.w, cb1[r9.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t3.xyzw, s3, r6.w
            mul r15.xyzw, r15.xyzw, cb1[r9.w + 74].xxxy
            min r9.w, r3.y, r10.y
            mad r15.xyzw, r15.xyzw, r9.wwww, r14.xyzw
            add r9.w, r3.y, -r9.w
            ge r10.y, l(0.000000), r9.w
            if_nz r10.y
              mov r14.xyzw, r15.xyzw
              mov r3.y, r9.w
              break 
            endif 
            mov r14.xyzw, r15.xyzw
            mov r3.y, r9.w
          endif 
          iadd r8.w, r8.w, l(1)
        endloop 
      else 
        mov r14.xyzw, l(0,0,0,0)
        mov r3.y, l(1.000000)
      endif 
      add r8.w, r3.y, r14.w
      lt r9.w, l(0.000000), r8.w
      if_nz r9.w
        add r9.w, -|r5.z|, r5.z
        mad r3.y, r3.y, r9.w, |r5.z|
        mad r3.y, r3.y, l(2.000000), l(2.000000)
        div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.yyyy
        mul r13.yz, r5.yyxy, r13.yyzy
        mad r13.yz, r13.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t2.wxyz, s2, r3.w
        mov_sat r15.xyz, r13.yzwy
        movc r13.yzw, cb1[184].zzzz, r15.xxyz, r13.yyzw
        div r13.yzw, r13.yyzw, cb1[176].wwww
        mad r14.xyz, r13.yzwy, r8.wwww, r14.xyzx
      endif 
      mov_sat r7.w, r7.w
      add r13.yzw, r12.xxyz, -r14.xxyz
      mad r12.xyz, r7.wwww, r13.yzwy, r14.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r12.xyzw, l(0,0,0,0)
      mov r3.y, l(1.000000)
      mov r7.w, l(0)
      loop 
        uge r8.w, r7.w, l(15)
        breakc_nz r8.w
        imul null, r8.w, r7.w, l(7)
        dp4 r14.x, r0.xyzw, cb1[r8.w + 68].xyzw
        dp4 r14.y, r0.xyzw, cb1[r8.w + 69].xyzw
        dp4 r14.z, r0.xyzw, cb1[r8.w + 70].xyzw
        ge r13.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
        add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.yzw, r13.yyzw, r14.xxyz
        mul r9.w, r13.z, r13.y
        mul r9.w, r13.w, r9.w
        lt r10.y, l(0.000000), r9.w
        if_nz r10.y
          dp3 r14.x, r5.xyzx, cb1[r8.w + 68].xyzx
          dp3 r14.y, r5.xyzx, cb1[r8.w + 69].xyzx
          dp3 r14.z, r5.xyzx, cb1[r8.w + 70].xyzx
          mul r9.w, r9.w, cb1[r8.w + 73].w
          mov r14.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s3, r6.w
          mul r14.xyzw, r14.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r3.y, r9.w
          mad r14.xyzw, r14.xyzw, r8.wwww, r12.xyzw
          add r8.w, r3.y, -r8.w
          ge r9.w, l(0.000000), r8.w
          if_nz r9.w
            mov r12.xyzw, r14.xyzw
            mov r3.y, r8.w
            break 
          endif 
          mov r12.xyzw, r14.xyzw
          mov r3.y, r8.w
        endif 
        iadd r7.w, r7.w, l(1)
      endloop 
    else 
      mov r12.xyzw, l(0,0,0,0)
      mov r3.y, l(1.000000)
    endif 
    add r6.w, r3.y, r12.w
    lt r7.w, l(0.000000), r6.w
    if_nz r7.w
      add r7.w, -|r5.z|, r5.z
      mad r3.y, r3.y, r7.w, |r5.z|
      mad r3.y, r3.y, l(2.000000), l(2.000000)
      div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.yyyy
      mul r5.xy, r5.yxyy, r13.yzyy
      mad r5.xy, r5.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t2.xyzw, s2, r3.w
      mov_sat r13.yzw, r5.xxyz
      movc r5.xyz, cb1[184].zzzz, r13.yzwy, r5.xyzx
      div r5.xyz, r5.xyzx, cb1[176].wwww
      mad r12.xyz, r5.xyzx, r6.wwww, r12.xyzx
    endif 
  endif 
  mul r3.y, r11.w, l(0.080000)
  mad r5.xyz, -r11.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
  mad r5.xyz, r1.xxxx, r5.xyzx, r3.yyyy
  dp3 r3.y, r5.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r3.y, r3.y, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xz, r3.xzxx, t1.xzyw, s2, l(0.000000)
  mad r3.xzw, r5.xxyz, r3.xxxx, r3.zzzz
  mul r3.xyz, r3.yyyy, r3.xzwx
  mul r3.xyz, r3.xyzx, r12.xyzx
  mul r3.xyz, r5.wwww, r3.xyzx
  mul r5.xyz, r6.xxxx, -r7.xyzx
  exp r5.xyz, r5.xyzx
  mad r5.xyz, r3.xyzx, r5.xyzx, r8.xyzx
  movc r3.xyz, r6.zzzz, r3.xyzx, r5.xyzx
  dp3 r3.w, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r4.x, r4.x, l(5)
  if_nz r4.x
    dp3 r4.x, -r9.xyzx, r4.yzwy
    add r4.x, r4.x, r4.x
    mad r5.xyz, r4.yzwy, -r4.xxxx, -r9.xyzx
    dp3 r4.x, r5.xyzx, r11.xzwx
    dp3 r5.x, r5.xyzx, r4.yzwy
    mul r5.xyz, r4.yzwy, r5.xxxx
    mad r5.xyz, r11.xzwx, r4.xxxx, r5.xyzx
    dp3 r4.x, r11.xzwx, r9.xyzx
    mad r4.x, -r4.x, r4.x, l(1.000000)
    sqrt r4.x, r4.x
    mul r6.x, r1.y, r1.y
    div r6.x, l(2.000000), r6.x
    add r6.x, r6.x, l(-2.000000)
    max r6.x, r6.x, l(1.000000031E-022)
    sqrt r6.x, r6.x
    div r6.x, l(-10.000000), r6.x
    exp r6.x, r6.x
    add r6.x, r6.x, l(-0.000980)
    mul_sat r6.x, r6.x, l(1.00795019)
    add r6.x, -r6.x, l(1.000000)
    if_z cb1[184].z
      mul r6.z, r6.x, cb1[174].w
      mov r0.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
      mov r8.x, l(0)
      loop 
        uge r8.y, r8.x, l(15)
        breakc_nz r8.y
        imul null, r8.y, r8.x, l(7)
        dp4 r11.x, r0.xyzw, cb1[r8.y + 68].xyzw
        dp4 r11.y, r0.xyzw, cb1[r8.y + 69].xyzw
        dp4 r11.z, r0.xyzw, cb1[r8.y + 70].xyzw
        ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.xyz, r12.xyzx, cb1[r8.y + 72].xyzx, cb1[r8.y + 73].xyzx
        add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r11.xyz, r12.xyzx, r11.xyzx
        mul r8.z, r11.y, r11.x
        mul r8.z, r11.z, r8.z
        lt r8.w, l(0.000000), r8.z
        if_nz r8.w
          dp3 r11.x, r5.xyzx, cb1[r8.y + 68].xyzx
          dp3 r11.y, r5.xyzx, cb1[r8.y + 69].xyzx
          dp3 r11.z, r5.xyzx, cb1[r8.y + 70].xyzx
          mul r8.z, r8.z, cb1[r8.y + 73].w
          mov r11.w, cb1[r8.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s3, r6.z
          mul r11.xyzw, r11.xyzw, cb1[r8.y + 74].xxxy
          min r8.y, r6.w, r8.z
          mad r11.xyzw, r11.xyzw, r8.yyyy, r7.xyzw
          add r8.y, r6.w, -r8.y
          ge r8.z, l(0.000000), r8.y
          if_nz r8.z
            mov r7.xyzw, r11.xyzw
            mov r6.w, r8.y
            break 
          endif 
          mov r7.xyzw, r11.xyzw
          mov r6.w, r8.y
        endif 
        iadd r8.x, r8.x, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
    endif 
    add r6.z, r6.w, r7.w
    lt r7.w, l(0.000000), r6.z
    if_nz r7.w
      mul r6.x, r6.x, cb1[183].w
      add r7.w, -|r5.z|, r5.z
      mad r5.z, r6.w, r7.w, |r5.z|
      mad r5.z, r5.z, l(2.000000), l(2.000000)
      div r8.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r5.zzzz
      mul r5.xy, r5.yxyy, r8.xyxx
      mad r5.xy, r5.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t2.xyzw, s2, r6.x
      mov_sat r8.xyz, r5.xyzx
      movc r5.xyz, cb1[184].zzzz, r8.xyzx, r5.xyzx
      div r5.xyz, r5.xyzx, cb1[176].wwww
      mad r7.xyz, r5.xyzx, r6.zzzz, r7.xyzx
    endif 
    sqrt r5.xyz, r10.xzwx
    dp3 r6.x, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r5.xyz, r5.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r5.wwww
    mad r5.xyz, r6.xxxx, r5.xyzx, r5.wwww
    mul r5.xyz, r5.xyzx, r7.xyzx
    mul r6.x, r1.z, l(0.080000)
    mad r7.xyz, -r1.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r6.xzw, r1.xxxx, r7.xxyz, r6.xxxx
    dp3 r7.x, r6.xzwx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r7.x, r7.x, l(50.000000)
    dp3_sat r1.w, r4.yzwy, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.yz, r1.wyww, t1.zxyw, s2, l(0.000000)
    mad r6.xzw, r6.xxzw, r7.yyyy, r7.zzzz
    mul r6.xzw, r7.xxxx, r6.xxzw
    mul r6.xzw, r4.xxxx, r6.xxzw
    mul r3.xyz, r5.xyzx, r6.xzwx
    dp3 r3.w, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r4.x, r1.y, r13.x
    dp3 r5.x, -r9.xyzx, r4.yzwy
    add r5.x, r5.x, r5.x
    mad r5.xyz, r4.yzwy, -r5.xxxx, -r9.xyzx
    mul r6.x, r4.x, r4.x
    div r6.x, l(2.000000), r6.x
    add r6.x, r6.x, l(-2.000000)
    max r6.x, r6.x, l(1.000000031E-022)
    sqrt r6.x, r6.x
    div r6.x, l(-10.000000), r6.x
    exp r6.x, r6.x
    add r6.x, r6.x, l(-0.000980)
    mul_sat r6.x, r6.x, l(1.00795019)
    add r6.x, -r6.x, l(1.000000)
    mul r6.z, r6.x, cb1[183].w
    mul r6.w, r6.x, cb1[174].w
    if_z r6.y
      ge r6.y, l(0.250000), r4.x
      if_nz r6.y
        ge r6.y, r4.w, l(0.250000)
        if_nz r6.y
          mov r0.w, l(1.000000)
          dp4 r7.x, r0.xyzw, cb1[51].xyzw
          dp4 r7.y, r0.xyzw, cb1[52].xyzw
          dp4 r7.z, r0.xyzw, cb1[53].xyzw
          dp3 r8.x, r4.yzwy, cb1[51].xyzx
          dp3 r8.y, r4.yzwy, cb1[52].xyzx
          dp3 r8.z, r4.yzwy, cb1[53].xyzx
          dp3 r11.y, r5.xyzx, cb1[51].xyzx
          dp3 r11.z, r5.xyzx, cb1[52].xyzx
          dp3 r11.w, r5.xyzx, cb1[53].xyzx
          dp3 r6.y, r11.yzwy, r11.yzwy
          rsq r6.y, r6.y
          mul r11.yzw, r6.yyyy, r11.yyzw
          dp2 r6.y, v0.xxxx, cb1[66].zzzz
          add r6.y, r6.y, l(-1.000000)
          log r6.y, |r6.y|
          mul r6.y, r6.y, l(10.000000)
          exp r6.y, r6.y
          mad r6.y, r6.y, l(0.100000), l(1.000000)
          div r11.x, r11.y, r6.y
          mul r6.y, r7.z, l(-0.010000)
          max r6.y, r6.y, l(0.001000)
          mad r8.xyz, r8.xyzx, r6.yyyy, r7.xyzx
          mad r11.xyz, r11.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r8.xyzx
          mov r8.w, l(1.000000)
          dp4 r7.y, r8.xyzw, cb5[4].xyzw
          dp4 r7.x, r8.xyzw, cb5[5].xyzw
          dp4 r6.y, r8.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r6.y, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r7.y, r23.w, l(0.5), r7.y

          mov r11.w, l(1.000000)
          dp4 r8.x, r11.xyzw, cb5[4].xyzw
          dp4 r8.y, r11.xyzw, cb5[5].xyzw
          dp4 r7.w, r11.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r23.w, r7.w, -r23.y
mul r23.w, r23.w, r23.x
mul r23.w, r23.w, cb1[66].x
mad r8.x, r23.w, l(0.5), r8.x

          div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          mul r11.xy, r6.yyyy, r7.xyxx
          mul r12.xy, r7.wwww, r8.xyxx
          mul r8.w, r6.y, r8.z
          mul r9.w, r7.w, r11.z
          add r11.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
          lt r12.zw, r11.zzzw, r12.yyyx
          lt r13.xy, r12.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
          or r13.xy, r12.zwzz, r13.xyxx
          movc r11.zw, r12.zzzw, -r11.zzzw, l(0,0,-0.500000,-0.500000)
          mad r11.zw, r8.yyyx, r7.wwww, r11.zzzw
          mad r8.xy, r8.yxyy, r7.wwww, -r11.xyxx
          div r8.xy, r11.zwzz, r8.xyxx
          and r8.x, r8.x, r13.x
          max r8.y, r8.y, r8.x
          movc r8.x, r13.y, r8.y, r8.x
          mad r11.zw, r7.yyyx, r6.yyyy, -r12.xxxy
          mad r11.zw, r8.xxxx, r11.zzzw, r12.xxxy
          add r8.y, r6.y, -r7.w
          mad r7.w, r8.x, r8.y, r7.w
          mad r8.y, r8.z, r6.y, -r9.w
          mad r8.x, r8.x, r8.y, r9.w
          mad r12.xy, r7.yxyy, r6.yyyy, -r11.zwzz
          dp2 r8.y, r12.xyxx, r12.xyxx
          lt r8.y, r8.y, l(0.000100)
          mad r12.xy, r7.yxyy, r6.yyyy, l(0.010000, 0.010000, 0.000000, 0.000000)
          movc r12.xy, r8.yyyy, r12.xyxx, r11.zwzz
          mad r12.zw, -r7.yyyx, r6.yyyy, r12.xxxy
          lt r7.x, |r12.z|, |r12.w|
          movc r11.xy, r7.xxxx, r11.xyxx, r11.yxyy
          movc r12.xyz, r7.xxxx, r12.ywzy, r12.xzwx
          lt r7.y, l(0.000000), r12.y
          lt r8.y, r12.y, l(0.000000)
          iadd r7.y, -r7.y, r8.y
          itof r13.x, r7.y
          div r7.y, r13.x, r12.y
          mul r13.y, r12.z, r7.y
          mad r8.x, -r8.z, r6.y, r8.x
          mul r8.x, r7.y, r8.x
          add r7.w, -r6.y, r7.w
          mul r7.y, r7.y, r7.w
          mul r7.w, r12.x, r13.x
          ge r8.y, r8.z, l(99999.796875)
          ge r9.w, l(100000.000000), r8.z
          and r8.y, r8.y, r9.w
          mov r12.y, l(1.000000)
          mov r14.x, r8.w
          mov r14.y, r6.y
          mov r11.zw, l(0,0,-1.000000,-1.000000)
          mov r15.xy, r11.xyxx
          mov r9.w, l(0)
          mov r10.y, r8.y
          mov r16.y, r8.z
          mov r12.z, r8.y
          loop 
            mul r12.w, r13.x, r15.x
            ge r12.w, r7.w, r12.w
            ilt r13.z, r9.w, l(100)
            and r12.w, r12.w, r13.z
            not r13.z, r12.z
            and r12.w, r12.w, r13.z
            breakc_z r12.w
            mad r14.xz, r8.xxxx, l(5.000000, 0.000000, 2.500000, 0.000000), r14.xxxx
            mad r14.yw, r7.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r14.yyyy
            div r16.x, r14.z, r14.w
            lt r12.w, r16.x, r16.y
            movc r13.zw, r12.wwww, r16.xxxy, r16.yyyx
            movc r11.zw, r7.xxxx, r15.yyyx, r15.xxxy
            mul r14.zw, r11.zzzw, cb1[66].zzzw
            sample_l_indexable(texture2d)(float,float,float,float) r12.x, r14.zwzz, t5.xyzw, s1, l(0.000000)
            dp2 r12.w, r12.xyxx, cb1[11].zwzz
            dp2 r12.x, r12.xyxx, cb1[12].zwzz
            div r12.x, -r12.w, r12.x
            ge r12.w, -r12.x, r13.z
            add r12.x, -r12.x, l(-0.200000)
            ge r12.x, r13.w, r12.x
            and r12.z, r12.x, r12.w
            mad r15.xy, r13.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r15.xyxx
            iadd r9.w, r9.w, l(1)
            mov r10.y, r12.z
            mov r16.y, r16.x
          endloop 
          if_nz r10.y
            if_z cb5[8].z
              ftoi r7.xy, r11.zwzz
              imax r7.xy, r7.xyxx, l(0, 0, 0, 0)
              ftoi r8.xy, cb1[66].xyxx
              iadd r8.xy, r8.xyxx, l(-1, -1, 0, 0)
              imin r8.xy, r7.xyxx, r8.xyxx
              mov r8.zw, l(0,0,0,0)
              ldms_indexable(texture2dms)(float,float,float,float) r7.xy, r8.xyzw, t7.xywz, l(0)
              ne r8.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              and r6.y, r8.w, r8.z
              if_z r6.y
                itof r8.xy, r8.xyxx
                mul r8.zw, r8.xxxy, cb5[8].xxxx
                ftoi r12.xy, r8.zwzz
                mov r12.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r8.z, r12.xyzw, t5.zwxy
                mov r8.w, l(1.000000)
                dp2 r6.y, r8.zwzz, cb1[11].zwzz
                dp2 r8.z, r8.zwzz, cb1[12].zwzz
                div r6.y, -r6.y, r8.z
                mad r8.xy, r8.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                mul r8.xy, r8.xyxx, cb1[0].xyxx
                mul r8.xy, r8.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                div r6.y, r6.y, cb1[67].x
                mov r8.z, -cb1[67].x
                mul r8.xyz, r6.yyyy, r8.xyzx
                mov r8.w, l(1.000000)
                dp4 r11.x, r8.xyzw, cb1[24].xyzw
                dp4 r11.y, r8.xyzw, cb1[25].xyzw
                dp4 r6.y, r8.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r23.w, r6.y, -r23.y
mad r11.x, r23.w, r23.x, r11.x

                dp4 r12.x, r8.xyzw, cb5[0].xyzw
                dp4 r12.y, r8.xyzw, cb5[1].xyzw
                dp4 r8.x, r8.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r23.w, r8.x, -r23.y
mad r12.x, r23.w, r23.x, r12.x

                max r8.x, r8.x, l(0.000100)
                div r8.xy, r12.xyxx, r8.xxxx
                div r8.zw, r11.xxxy, r6.yyyy
                add r8.xy, -r8.xyxx, r8.zwzz
                mul r7.xw, r8.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                mov r7.y, -r7.w
              endif 
            else 
              mov r7.xy, l(0,0,0,0)
            endif 
            mad r7.xy, r11.zwzz, cb1[66].zwzz, -r7.xyxx
            mul r8.xy, r7.xyxx, cb1[66].xyxx
            mul r8.xy, r8.xyxx, cb5[8].xxxx
            ftoi r8.xy, r8.xyxx
            mov r8.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r8.x, r8.xyzw, t5.xyzw
            mov r8.y, l(1.000000)
            dp2 r6.y, r8.xyxx, cb1[11].zwzz
            dp2 r8.x, r8.xyxx, cb1[12].zwzz
            div r6.y, -r6.y, r8.x
            ge r6.y, r7.z, -r6.y
            not r7.z, r6.y
            add r8.xy, -r11.zwzz, v0.xyxx
            dp2 r8.x, r8.xyxx, r8.xyxx
            sqrt r8.x, r8.x
            ge r8.y, r8.x, l(350.000000)
            add r8.x, r8.x, l(-350.000000)
            mad r8.x, -r8.x, l(0.00666666683), l(1.000000)
            movc r8.x, r8.y, r8.x, l(1.000000)
            add r7.w, -r7.y, l(1.000000)
            mul_sat r8.yz, r7.yywy, l(0.000000, 10.000000, 10.000000, 0.000000)
            mul r7.w, r8.z, r8.y
            mul r7.w, r7.w, r8.x
            lt r8.x, l(0.137000), r4.x
            mad r4.x, -r4.x, l(4.000000), l(1.000000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r7.w
            movc r4.x, r8.x, r4.x, r7.w
            movc r4.x, r6.y, r4.x, l(1.000000)
          else 
            mov r4.x, l(0)
            mov r7.xyz, l(0,0,0,0)
          endif 
          if_z r7.z
            lt r6.y, l(0.000000), r4.x
            if_nz r6.y
              mul r6.x, r6.x, cb5[8].y
              sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t6.xyzw, s2, r6.x
            else 
              mov r7.xyz, l(0,0,0,0)
            endif 
          else 
            mov r7.xyz, l(0,0,0,0)
            mov r4.x, l(0)
          endif 
        else 
          mov r7.xyz, l(0,0,0,0)
          mov r4.x, l(0)
        endif 
      else 
        mov r7.xyz, l(0,0,0,0)
        mov r4.x, l(0)
      endif 
    else 
      mov r7.xyz, l(0,0,0,0)
      mov r4.x, l(0)
    endif 
    lt r6.x, l(0.000000), r4.x
    if_nz r6.x
      div r7.xyz, r7.xyzx, cb1[176].wwww
      lt r6.x, r4.x, l(1.000000)
      if_nz r6.x
        if_z cb1[184].z
          mov r0.w, l(1.000000)
          mov r8.xyzw, l(0,0,0,0)
          mov r6.xy, l(1.000000,0,0,0)
          loop 
            uge r9.w, r6.y, l(15)
            breakc_nz r9.w
            imul null, r9.w, r6.y, l(7)
            dp4 r11.x, r0.xyzw, cb1[r9.w + 68].xyzw
            dp4 r11.y, r0.xyzw, cb1[r9.w + 69].xyzw
            dp4 r11.z, r0.xyzw, cb1[r9.w + 70].xyzw
            ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r12.xyz, r12.xyzx, cb1[r9.w + 72].xyzx, cb1[r9.w + 73].xyzx
            add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r11.xyz, r12.xyzx, r11.xyzx
            mul r10.y, r11.y, r11.x
            mul r10.y, r11.z, r10.y
            lt r11.x, l(0.000000), r10.y
            if_nz r11.x
              dp3 r11.x, r5.xyzx, cb1[r9.w + 68].xyzx
              dp3 r11.y, r5.xyzx, cb1[r9.w + 69].xyzx
              dp3 r11.z, r5.xyzx, cb1[r9.w + 70].xyzx
              mul r10.y, r10.y, cb1[r9.w + 73].w
              mov r11.w, cb1[r9.w + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s3, r6.w
              mul r11.xyzw, r11.xyzw, cb1[r9.w + 74].xxxy
              min r9.w, r6.x, r10.y
              mad r11.xyzw, r11.xyzw, r9.wwww, r8.xyzw
              add r9.w, r6.x, -r9.w
              ge r10.y, l(0.000000), r9.w
              if_nz r10.y
                mov r8.xyzw, r11.xyzw
                mov r6.x, r9.w
                break 
              endif 
              mov r8.xyzw, r11.xyzw
              mov r6.x, r9.w
            endif 
            iadd r6.y, r6.y, l(1)
          endloop 
        else 
          mov r8.xyzw, l(0,0,0,0)
          mov r6.x, l(1.000000)
        endif 
        add r6.y, r6.x, r8.w
        lt r8.w, l(0.000000), r6.y
        if_nz r8.w
          add r8.w, -|r5.z|, r5.z
          mad r6.x, r6.x, r8.w, |r5.z|
          mad r6.x, r6.x, l(2.000000), l(2.000000)
          div r11.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r6.xxxx
          mul r11.xy, r5.yxyy, r11.xyxx
          mad r11.xy, r11.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r11.xyxx, t2.xyzw, s2, r6.z
          mov_sat r12.xyz, r11.xyzx
          movc r11.xyz, cb1[184].zzzz, r12.xyzx, r11.xyzx
          div r11.xyz, r11.xyzx, cb1[176].wwww
          mad r8.xyz, r11.xyzx, r6.yyyy, r8.xyzx
        endif 
        mov_sat r4.x, r4.x
        add r11.xyz, r7.xyzx, -r8.xyzx
        mad r7.xyz, r4.xxxx, r11.xyzx, r8.xyzx
      endif 
    else 
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r7.xyzw, l(0,0,0,0)
        mov r4.x, l(1.000000)
        mov r6.x, l(0)
        loop 
          uge r6.y, r6.x, l(15)
          breakc_nz r6.y
          imul null, r6.y, r6.x, l(7)
          dp4 r8.x, r0.xyzw, cb1[r6.y + 68].xyzw
          dp4 r8.y, r0.xyzw, cb1[r6.y + 69].xyzw
          dp4 r8.z, r0.xyzw, cb1[r6.y + 70].xyzw
          ge r11.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r11.xyz, r11.xyzx, cb1[r6.y + 72].xyzx, cb1[r6.y + 73].xyzx
          add r8.xyz, -|r8.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r8.xyz, r11.xyzx, r8.xyzx
          mul r8.x, r8.y, r8.x
          mul r8.x, r8.z, r8.x
          lt r8.y, l(0.000000), r8.x
          if_nz r8.y
            dp3 r11.x, r5.xyzx, cb1[r6.y + 68].xyzx
            dp3 r11.y, r5.xyzx, cb1[r6.y + 69].xyzx
            dp3 r11.z, r5.xyzx, cb1[r6.y + 70].xyzx
            mul r8.x, r8.x, cb1[r6.y + 73].w
            mov r11.w, cb1[r6.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s3, r6.w
            mul r11.xyzw, r11.xyzw, cb1[r6.y + 74].xxxy
            min r6.y, r4.x, r8.x
            mad r8.xyzw, r11.xyzw, r6.yyyy, r7.xyzw
            add r6.y, r4.x, -r6.y
            ge r9.w, l(0.000000), r6.y
            if_nz r9.w
              mov r7.xyzw, r8.xyzw
              mov r4.x, r6.y
              break 
            endif 
            mov r7.xyzw, r8.xyzw
            mov r4.x, r6.y
          endif 
          iadd r6.x, r6.x, l(1)
        endloop 
      else 
        mov r7.xyzw, l(0,0,0,0)
        mov r4.x, l(1.000000)
      endif 
      add r0.x, r4.x, r7.w
      lt r0.y, l(0.000000), r0.x
      if_nz r0.y
        add r0.y, -|r5.z|, r5.z
        mad r0.y, r4.x, r0.y, |r5.z|
        mad r0.y, r0.y, l(2.000000), l(2.000000)
        div r0.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r0.yyyy
        mul r0.yz, r0.yyzy, r5.yyxy
        mad r0.yz, r0.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t2.wxyz, s2, r6.z
        mov_sat r5.xyz, r0.yzwy
        movc r0.yzw, cb1[184].zzzz, r5.xxyz, r0.yyzw
        div r0.yzw, r0.yyzw, cb1[176].wwww
        mad r7.xyz, r0.yzwy, r0.xxxx, r7.xyzx
      endif 
    endif 
    mul r0.x, r1.z, l(0.080000)
    mad r0.yzw, -r1.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r10.xxzw
    mad r0.xyz, r1.xxxx, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r1.w, r4.yzwy, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.wyww, t1.xyzw, s2, l(0.000000)
    mad r0.xyz, r0.xyzx, r1.xxxx, r1.yyyy
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r7.xyzx
    mul r3.xyz, r5.wwww, r0.xyzx
    dp3 r3.w, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.xyzw, r2.wxyz, r3.wxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 2070 instruction slots used