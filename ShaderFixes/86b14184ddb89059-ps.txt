// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 86b14184ddb89059-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:02:34 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LongRangeShadowSampler          sampler_c      NA          NA    0        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// Viewport__DepthVPSamplerMS        texture   float        2dMS    1        1
// Viewport__GBufferNormalTextureMS    texture  float4        2dMS    2        1
// Viewport__GBufferParamsTextureMS    texture  float4        2dMS    3        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// LongRangeShadow                   cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[55], dynamicIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective sample v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 12

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 86b14184ddb89059-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.z, r0.xyww, t1.yzxw, v1.x
mov r1.w, l(1.000000)
dp2 r2.x, r1.zwzz, cb0[11].zwzz
dp2 r2.y, r1.zwzz, cb0[12].zwzz
div r2.x, -r2.x, r2.y
mad r2.yz, v0.xxyx, cb0[66].zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.xy, r2.yzyy, l(2.000000, -2.000000, 0.000000, 0.000000)
dp4 r3.x, r1.xyzw, cb0[9].xyzw
dp4 r3.y, r1.xyzw, cb0[10].xyzw
dp4 r3.z, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r1.xyzw, cb0[12].xyzw
div r1.xyz, r3.xyzx, r1.xxxx

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 86b14184ddb89059-ps.txt

add r8.w, -r1.z, -r8.y
mul r8.w, r8.w, r8.x
mad r1.x, -r8.w, cb0[9].x, r1.x

mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[17].xyzw
dp4 r3.y, r1.xyzw, cb0[18].xyzw
dp4 r3.z, r1.xyzw, cb0[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r1.xyz, r0.xyww, t2.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t3.yxzw, v1.x
max r4.xyzw, cb1[9].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r5.xyzw, cb1[10].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r6.xyzw, cb1[11].xywz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r7.x, r1.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r7.y, r1.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r7.z, r1.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r0.y, -r1.z, l(0.500000)
mul r7.w, r0.y, l(0.666666687)
max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r5.xxyz, r7.yyyy
mad r0.yzw, r7.xxxx, r4.xxyz, r0.yyzw
mad r0.yzw, r7.zzzz, r6.xxyw, r0.yyzw
mov r6.x, r4.w
mov r6.y, r5.w
mad r0.yzw, r7.wwww, r6.xxyz, r0.yyzw
add r1.w, r7.y, r7.x
add r1.w, r7.z, r1.w
add r1.w, r7.w, r1.w
div r0.yzw, r0.yyzw, r1.wwww
add r2.yzw, -r3.xxyz, r9.xxyz
dp3 r1.w, r2.yzwy, r2.yzwy
rsq r1.w, r1.w
mul r2.yzw, r1.wwww, r2.yyzw
dp3 r1.w, -r2.yzwy, r1.xyzx
add r1.w, r1.w, r1.w
mad r2.yzw, r1.xxyz, -r1.wwww, -r2.yyzw
dp3 r1.z, r2.yzwy, r2.yzwy
rsq r1.z, r1.z
mul r1.z, r1.z, r2.w
ge r1.w, l(0.565600), r0.x
mad r2.y, -r0.x, l(0.0968105793), l(1.05046380)
mad r2.y, r2.y, r0.x, l(-0.601145864)
add r0.x, r0.x, l(-0.619457066)
div r0.x, r2.y, r0.x
movc r0.x, r1.w, r0.x, l(0.705081284)
mad r1.w, -r1.z, r1.z, l(1.000000)
sqrt r1.w, r1.w
mad r2.y, -r0.x, r0.x, l(1.000000)
sqrt r2.y, r2.y
mul r2.z, r1.w, r2.y
mad r4.y, r1.z, r0.x, -r2.z
mad r5.y, r1.z, r0.x, r2.z
mul r1.z, r1.z, r2.y
mad r4.x, r1.w, r0.x, r1.z
mad r5.x, r1.w, r0.x, -r1.z
lt r0.x, r4.x, l(0.000000)
movc r1.zw, r0.xxxx, l(0,0,0,-1.000000), r4.xxxy
lt r0.x, r5.x, l(0.000000)
movc r2.yz, r0.xxxx, l(0,0,1.000000,0), r5.xxyx
ge r0.x, r1.w, l(0.000000)
ge r2.w, l(0.000000), r2.z
lt r3.w, r1.w, l(0.000000)
add r4.xy, r2.yzyy, l(-1.000000, -0.000000, 0.000000, 0.000000)
dp2 r4.x, r4.xyxx, r4.xyxx
sqrt r4.x, r4.x
mul r4.x, r4.x, l(0.500000)
mul r4.x, r4.x, r4.x
add r1.zw, r1.zzzw, -r2.yyyz
dp2 r1.z, r1.zwzz, r1.zwzz
sqrt r1.z, r1.z
mul r1.z, r1.z, l(0.500000)
mul r1.z, r1.z, r1.z
movc r1.z, r3.w, r4.x, r1.z
add r2.yz, -r2.yyzy, l(0.000000, 1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.yzyy, r2.yzyy
sqrt r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
mul r1.w, r1.w, r1.w
div r1.z, r1.w, r1.z
max r1.z, r1.z, l(0.080000)
movc r1.z, r2.w, l(0.080000), r1.z
movc r0.x, r0.x, l(1.000000), r1.z
ftou r1.zw, v0.xxxy
and r4.xy, r1.zwzz, l(127, 127, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r4.xyzw, t0.yzxw
mov r4.y, l(3)
mov r2.yz, l(0,3,0,0)
mov r1.w, l(0)
loop 
  uge r2.w, r2.z, l(4)
  breakc_nz r2.w
  ishl r2.w, r2.z, l(2)
  mul r4.zw, r3.yyyy, cb2[r2.w + 1].xxxy
  mad r4.zw, cb2[r2.w + 0].xxxy, r3.xxxx, r4.zzzw
  mad r4.zw, cb2[r2.w + 2].xxxy, r3.zzzz, r4.zzzw
  add r4.zw, r4.zzzw, cb2[r2.w + 3].xxxy
  max r2.w, |r4.w|, |r4.z|
  add r1.w, r2.w, cb2[16].x
  ult r2.w, r2.z, l(3)
  if_nz r2.w
    mad r2.w, cb2[16].y, r1.z, r1.w
    lt r3.w, r2.w, l(1.000000)
    if_nz r3.w
      mov r1.w, r2.w
      mov r2.y, r2.z
      break 
    endif 
    mov r1.w, r2.w
  endif 
  iadd r4.x, r2.z, l(1)
  mov r2.yz, r4.yyxy
endloop 
ieq r1.z, r2.y, l(3)
mad_sat r1.w, r1.w, cb2[16].z, cb2[16].w
and r1.z, r1.w, r1.z
mad r1.xy, r1.xyxx, cb3[0].xyxx, r3.xyxx
mad r1.w, r3.z, cb3[0].z, cb3[0].w
mad r1.xy, r1.xyxx, cb3[1].xyxx, cb3[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t4.xxxx, s0, r1.w
add r1.x, r1.x, l(-1.000000)
mad r1.x, r1.z, r1.x, l(1.000000)
mad r1.x, r1.x, l(255.000000), l(0.500000)
round_ni r1.x, r1.x
sqrt r1.y, r0.x
min r1.y, r1.y, l(1.000000)
mad r1.y, r1.y, l(255.000000), l(0.500000)
round_ni r1.y, r1.y
ftou r1.xy, r1.xyxx
imad o1.x, r1.y, l(256), r1.x
mul_sat r1.x, r2.x, l(0.001000)
mad r1.x, r1.x, l(65535.000000), l(0.500000)
round_ni r1.x, r1.x
ftou o1.y, r1.x
mul r0.yzw, r0.yyzw, cb0[176].wwww
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.yzwy, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r0.x
ret 
// Approximately 149 instruction slots used