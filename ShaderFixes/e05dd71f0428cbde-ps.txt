// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e05dd71f0428cbde-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:59 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2FxNethack
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float OverExposeIntensity;         // Offset:   16 Size:     4
//   float SoftDistance;                // Offset:   20 Size:     4
//   int ParticleFrameJobType;          // Offset:   24 Size:     4 [unused]
//   bool BlendFrames;                  // Offset:   28 Size:     4 [unused]
//   bool Dithering;                    // Offset:   32 Size:     4 [unused]
//   bool Grayscale;                    // Offset:   36 Size:     4
//   bool Soft;                         // Offset:   40 Size:     4 [unused]
//   bool TestDepth;                    // Offset:   44 Size:     4 [unused]
//
// }
//
// cbuffer Nethack
// {
//
//   float4 EffectLights[8];            // Offset:    0 Size:   128 [unused]
//   float3 EffectCenter;               // Offset:  128 Size:    12
//   float FadeInPower;                 // Offset:  140 Size:     4
//   float FadeInSpeed;                 // Offset:  144 Size:     4
//   float StartTime;                   // Offset:  148 Size:     4
//   float TransitionModeIntensity;     // Offset:  152 Size:     4 [unused]
//   float WaterLevel;                  // Offset:  156 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorWrap                         sampler      NA          NA    0        1
// MaterialWD2FxNethack__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// MaterialWD2FxNethack__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// Nethack__NoiseTexture             texture  float4          2d    2        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialWD2FxNethack              cbuffer      NA          NA    2        1
// Nethack                           cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   x           4     NONE   float       
// TEXCOORD                 5    y          4     NONE   float    y  
// SV_Position              0   xyzw        5      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.0747012272, 0, 0, 0},
                              { 0.0271708835, 0, 0, 0},
                              { 0.661726475, 0, 0, 0},
                              { 0.995930, 0, 0, 0},
                              { 0.237397820, 0, 0, 0},
                              { 0.269059449, 0, 0, 0},
                              { 0.666550815, 0, 0, 0},
                              { 0.0896320194, 0, 0, 0},
                              { 0.911433399, 0, 0, 0},
                              { 0.875312, 0, 0, 0},
                              { 0.113883287, 0, 0, 0},
                              { 0.0430280454, 0, 0, 0},
                              { 0.290476054, 0, 0, 0},
                              { 0.919587076, 0, 0, 0},
                              { 0.926711321, 0, 0, 0},
                              { 0.392356426, 0, 0, 0},
                              { 0.449663162, 0, 0, 0},
                              { 0.977699101, 0, 0, 0},
                              { 0.458073974, 0, 0, 0},
                              { 0.0748890117, 0, 0, 0},
                              { 0.801730692, 0, 0, 0},
                              { 0.998791575, 0, 0, 0},
                              { 0.705820680, 0, 0, 0},
                              { 0.973135531, 0, 0, 0},
                              { 0.962353885, 0, 0, 0},
                              { 0.115701094, 0, 0, 0},
                              { 0.0575175136, 0, 0, 0},
                              { 0.807728112, 0, 0, 0},
                              { 0.513815761, 0, 0, 0},
                              { 0.940512776, 0, 0, 0},
                              { 0.692691565, 0, 0, 0},
                              { 0.513722956, 0, 0, 0},
                              { 0.437385023, 0, 0, 0},
                              { 0.563494623, 0, 0, 0},
                              { 0.109287798, 0, 0, 0},
                              { 0.796311259, 0, 0, 0},
                              { 0.902087212, 0, 0, 0},
                              { 0.260910541, 0, 0, 0},
                              { 0.999974966, 0, 0, 0},
                              { 0.995875955, 0, 0, 0},
                              { 0.421479940, 0, 0, 0},
                              { 0.0228500254, 0, 0, 0},
                              { 0.890108764, 0, 0, 0},
                              { 0.315129966, 0, 0, 0},
                              { 0.331979483, 0, 0, 0},
                              { 0.450051367, 0, 0, 0},
                              { 0.618979, 0, 0, 0},
                              { 0.0348280780, 0, 0, 0},
                              { 0.955897152, 0, 0, 0},
                              { 0.374959797, 0, 0, 0},
                              { 0.547439, 0, 0, 0},
                              { 0.109731354, 0, 0, 0},
                              { 0.793015897, 0, 0, 0},
                              { 0.818771541, 0, 0, 0},
                              { 0.705857575, 0, 0, 0},
                              { 0.541842341, 0, 0, 0},
                              { 0.354961365, 0, 0, 0},
                              { 0.603685558, 0, 0, 0},
                              { 0.289715707, 0, 0, 0},
                              { 0.717820406, 0, 0, 0},
                              { 0.620669663, 0, 0, 0},
                              { 0.586008251, 0, 0, 0},
                              { 0.313340217, 0, 0, 0},
                              { 0.115932733, 0, 0, 0},
                              { 0.397027284, 0, 0, 0},
                              { 0.875087857, 0, 0, 0},
                              { 0.431792349, 0, 0, 0},
                              { 0.942474246, 0, 0, 0},
                              { 0.642043054, 0, 0, 0},
                              { 0.156192943, 0, 0, 0},
                              { 0.743064642, 0, 0, 0},
                              { 0.658330858, 0, 0, 0},
                              { 0.727058589, 0, 0, 0},
                              { 0.290705413, 0, 0, 0},
                              { 0.219684, 0, 0, 0},
                              { 0.640257061, 0, 0, 0},
                              { 0.192074329, 0, 0, 0},
                              { 0.714810193, 0, 0, 0},
                              { 0.802680314, 0, 0, 0},
                              { 0.733406, 0, 0, 0},
                              { 0.890271485, 0, 0, 0},
                              { 0.714524090, 0, 0, 0},
                              { 0.878643095, 0, 0, 0},
                              { 0.901668906, 0, 0, 0},
                              { 0.970928252, 0, 0, 0},
                              { 0.551703036, 0, 0, 0},
                              { 0.566553891, 0, 0, 0},
                              { 0.969693303, 0, 0, 0},
                              { 0.272696555, 0, 0, 0},
                              { 0.750567615, 0, 0, 0},
                              { 0.425773114, 0, 0, 0},
                              { 0.109021053, 0, 0, 0},
                              { 0.660028338, 0, 0, 0},
                              { 0.294052035, 0, 0, 0},
                              { 0.673456430, 0, 0, 0},
                              { 0.660804629, 0, 0, 0},
                              { 0.540197134, 0, 0, 0},
                              { 0.139434680, 0, 0, 0},
                              { 0.672020853, 0, 0, 0},
                              { 0.448636651, 0, 0, 0} }
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[68], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v2.xyz
dcl_input_ps linear centroid v3.xy
dcl_input_ps linear centroid v4.y
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e05dd71f0428cbde-ps.txt

mul r4.w, r4.x, r4.y
mul r6.x, r4.w, cb1[9].x
mul r6.y, r4.w, cb1[10].x
mul r6.z, r4.w, cb1[11].x
mul r6.w, r4.w, cb1[12].x
dp4 r7.x, r6.xyzw, cb1[17].xyzw
dp4 r7.y, r6.xyzw, cb1[18].xyzw
dp4 r7.z, r6.xyzw, cb1[19].xyzw
add r5.xyz, cb1[174].xyz, r7.xyz

ftoi r0.xy, v5.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw
mov r0.y, l(1.000000)
dp2 r0.z, r0.xyxx, cb1[15].zwzz
dp2 r0.x, r0.xyxx, cb1[16].zwzz
div r0.x, -r0.z, r0.x
add r0.x, r0.x, -v4.y
mul r0.y, r0.x, cb1[67].z
mul_sat r0.y, r0.y, cb2[1].y
mul r1.w, r0.y, v0.w
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t1.xyzw, s1
mul r2.w, r0.x, r1.w
mov r1.xyz, v0.xyzx
mul r0.xyzw, r0.xyzw, r1.xyzw
mov r2.xyz, v0.xyzx
movc r0.xyzw, cb2[2].yyyy, r2.xyzw, r0.xyzw
add r1.x, cb0[34].x, -cb3[9].y
mul r1.x, r1.x, cb3[9].x
log r1.x, |r1.x|
mul r1.x, r1.x, cb3[8].w
exp r1.x, r1.x
lt r1.y, r1.x, l(400.000000)
if_nz r1.y
  min r1.y, r1.x, l(1.000000)
  add r2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  round_ni r2.xyz, r2.xyzx
  dp2 r1.z, r2.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r1.z, r2.z, r1.z
  sincos r1.z, null, r1.z
  mul r1.yz, r1.yyzy, l(0.000000, 6.000000, 43758.546875, 0.000000)
  frc r1.z, r1.z
  mul r1.z, r1.z, l(100.000000)
  round_ne r1.z, r1.z
  ftoi r1.z, r1.z
  add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r2.xyz, r2.xyzx, -cb3[8].xyzx
  mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 3.000000, 0.000000)
  dp3 r1.w, r2.xyzx, r2.xyzx
  sqrt r1.w, r1.w
  add r1.w, -r1.x, r1.w
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  mul_sat r1.w, r1.y, r1.w
  mad r2.x, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.x
  ge r1.z, icb[r1.z + 0].x, r1.w
  mad r2.xyz, v2.xyzx, l(2.500000, 2.500000, 2.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  round_ni r2.xyz, r2.xyzx
  dp2 r1.w, r2.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r1.w, r2.z, r1.w
  sincos r1.w, null, r1.w
  mul r1.w, r1.w, l(43758.546875)
  frc r1.w, r1.w
  mul r1.w, r1.w, l(100.000000)
  round_ne r1.w, r1.w
  ftoi r1.w, r1.w
  add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r2.xyz, r2.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), -cb3[8].xyzx
  mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 3.000000, 0.000000)
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r2.x, -r1.x, r2.x
  mul_sat r2.x, r1.y, r2.x
  mad r2.y, r2.x, l(-2.000000), l(3.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.y
  ge r1.w, icb[r1.w + 0].x, r2.x
  and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
  mad r2.xyz, v2.xyzx, l(6.66666651, 6.66666651, 6.66666651, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  round_ni r2.xyz, r2.xyzx
  dp2 r2.w, r2.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r2.w, r2.z, r2.w
  sincos r2.w, null, r2.w
  mul r2.w, r2.w, l(43758.546875)
  frc r2.w, r2.w
  mul r2.w, r2.w, l(100.000000)
  round_ne r2.w, r2.w
  ftoi r2.w, r2.w
  add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r2.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), -cb3[8].xyzx
  mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 3.000000, 0.000000)
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r2.x, -r1.x, r2.x
  mul_sat r1.y, r1.y, r2.x
  mad r2.x, r1.y, l(-2.000000), l(3.000000)
  mul r1.y, r1.y, r1.y
  mul r1.y, r1.y, r2.x
  ge r1.y, icb[r2.w + 0].x, r1.y
  add r2.xyz, v2.xyzx, -cb3[8].xyzx
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r2.y, r1.x, l(-50.000000)
  add r1.x, r1.x, -r2.y
  add r2.x, -r2.y, r2.x
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  mul_sat r1.x, r1.x, r2.x
  mad r2.x, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r2.x, r1.x, l(1.000000)
  mul r1.z, r1.w, r1.z
  movc r1.yw, r1.yyyy, l(0,0.250000,0,0.750000), l(0,0.750000,0,0.250000)
  mad r1.x, r1.x, r1.w, r1.y
  mul r1.x, r1.x, r1.z
else 
  mov r1.x, l(1.000000)
endif 
mul r1.y, r0.w, r1.x
add r1.z, v2.y, v2.x
add r1.z, r1.z, v2.z
resinfo_indexable(texture2d)(float,float,float,float) r2.xy, l(0), t2.xyzw
sincos r1.z, null, r1.z
mul r1.z, r1.z, l(43758.546875)
frc r1.z, r1.z
sincos r1.w, null, r1.z
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 100.000000, 43758.546875)
frc r1.w, r1.w
round_ne r1.z, r1.z
mul r1.w, r1.w, l(100.000000)
round_ne r1.w, r1.w
ftoi r1.zw, r1.zzzw
mov r3.x, icb[r1.z + 0].x
mov r3.y, icb[r1.w + 0].x
mul r1.zw, r2.xxxy, r3.xxxy
round_ni r1.zw, r1.zzzw
add r1.zw, r1.zzzw, v5.xxxy
div r1.zw, r1.zzzw, r2.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t2.yzxw, s0
ge r1.w, l(0.040450), r1.y
mul r1.y, r1.y, l(0.0773993805)
mad r0.w, r0.w, r1.x, l(0.055000)
mul r0.w, r0.w, l(0.947867334)
log r0.w, |r0.w|
mul r0.w, r0.w, l(2.400000)
exp r0.w, r0.w
movc r0.w, r1.w, r1.y, r0.w
ge r0.w, r1.z, r0.w
discard_nz r0.w
mul o0.xyz, r0.xyzx, cb2[1].xxxx
mov o0.w, l(1.000000)
ret 
// Approximately 144 instruction slots used