// HUD - line pointing to target

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:19 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer Primitive
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 MaterialPickingID;          // Offset:   16 Size:    16 [unused]
//   float4 ModelPickingID;             // Offset:   32 Size:    16 [unused]
//   float4 PickingID;                  // Offset:   48 Size:    16 [unused]
//   float4 ColorMultiplier;            // Offset:   64 Size:    16 [unused]
//   float4x4 SecondTextureUVTransform; // Offset:   80 Size:    64 [unused]
//   float4x4 Transform;                // Offset:  144 Size:    64
//   float4x4 UVTransform;              // Offset:  208 Size:    64
//   float4 VideoTextureUnpack[8];      // Offset:  272 Size:   128 [unused]
//   float3 GammaBrightnessContrastParams;// Offset:  400 Size:    12 [unused]
//   float CustomExposureScale;         // Offset:  412 Size:     4 [unused]
//   float MipLevel;                    // Offset:  416 Size:     4 [unused]
//   float Sharpness;                   // Offset:  420 Size:     4 [unused]
//   float VolumeTextureSizeZ;          // Offset:  424 Size:     4 [unused]
//   bool SecondTextureAdditive;        // Offset:  428 Size:     4 [unused]
//   bool TextureIsOffscreenComposited; // Offset:  432 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport                          cbuffer      NA          NA    0        1
// Primitive                         cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyz 
// color                    1   xyzw        1     NONE   float   xyzw
// texcoord                 2   xyzw        2     NONE   float   xyzw
// SV_VertexID              0   x           3   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input_sgv v3.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 10
dcl_resource_texture2d (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
ld_indexable(texture1d)(float,float,float,float) r9.xyzw, l(3, 0, 0, 0), t120.xyzw
ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mov o0.xyzw, v1.zyxw
mov r0.xyz, v2.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[9].xyzw
dp4 r1.y, r0.xyzw, cb1[10].xyzw
dp4 r1.z, r0.xyzw, cb1[11].xyzw
add r0.xyz, r1.xyzx, -cb0[174].xyzx
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[9].xyzw
dp4 r2.y, r1.xyzw, cb1[10].xyzw
dp4 r2.z, r1.xyzw, cb1[11].xyzw
add r1.xyz, r2.xyzx, -cb0[174].xyzx
add r2.xyz, -r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, cb0[173].xyzx
add r0.w, r0.w, -cb0[67].x
dp3 r2.w, r1.xyzx, cb0[173].xyzx
add r2.w, r2.w, -cb0[67].x
add r3.x, -r0.w, r2.w
div r3.x, -r0.w, r3.x
mad r2.xyz, r3.xxxx, r2.xyzx, r0.xyzx
lt r3.x, r0.w, l(0.000000)
movc r3.xyz, r3.xxxx, r2.xyzx, r0.xyzx
mov r1.w, r0.z
add r0.xyz, -r1.xyzx, r3.xyzx
add r2.x, r0.w, -r2.w
ge r0.w, l(0.000000), r0.w
div r2.x, -r2.w, r2.x
mad r0.xyz, r2.xxxx, r0.xyzx, r1.xyzx
lt r2.x, r2.w, l(0.000000)
ge r2.y, l(0.000000), r2.w
and r0.w, r0.w, r2.y
movc r2.xyz, r2.xxxx, r0.xyzx, r1.xyzx
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[58].xyzw
dp4 r0.y, r2.xyzw, cb0[59].xyzw
dp4 r0.z, r2.xyzw, cb0[60].xyzw
dp4 r1.y, r2.xyzw, cb0[61].xyzw

// The projection matrix here only gives the right depth at certain points of
// the line - we can't use it.

div r2.xyz, r0.xyzx, r1.yyyy
mad r0.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
movc r0.xy, r0.wwww, l(-2.000000,-2.000000,0,0), r0.xyxx
mov r3.w, l(1.000000)
dp4 r4.x, r3.xyzw, cb0[58].xyzw
dp4 r4.y, r3.xyzw, cb0[59].xyzw
dp4 r4.w, r3.xyzw, cb0[60].xyzw
dp4 r0.z, r3.xyzw, cb0[61].xyzw
div r3.xyz, r4.xywx, r0.zzzz
mad r2.xyw, r3.xyxz, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov r1.x, l(-2.000000)
movc r1.xyzw, r0.wwww, r1.zxxw, r2.zxyw
mul r0.zw, r0.xxxy, cb0[66].xxxy
mad r2.xy, r1.yzyy, cb0[66].xyxx, -r0.zwzz
dp2 r2.z, r2.xyxx, r2.xyxx
sqrt r2.z, r2.z
div r3.xy, r2.xyxx, r2.zzzz
mov r3.z, -r3.x
dp2 r2.x, r3.yzyy, r0.zwzz
mad r0.zw, r1.yyyz, cb0[66].xxxy, r0.zzzw
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
dp2 r0.z, r3.xyxx, r0.zwzz
mov r4.z, -r0.z
mov r3.w, -r2.x
and r0.z, v2.w, l(255)
utof r0.z, r0.z
mul r0.z, r0.z, cb0[66].y
mul r0.z, r0.z, l(0.000347222231)
max r0.z, r0.z, l(1.000000)
min r0.z, r0.z, l(32.000000)
mad r0.w, r0.z, l(0.500000), l(1.000000)
div o1.xyz, r3.yzwy, r0.wwww
add r2.x, r0.z, l(-0.500000)
add r0.z, -r0.z, r2.z
mul r0.z, r0.z, l(0.500000)
div o2.w, r0.z, r0.w
mul o1.w, r2.x, l(0.031250)
mov r4.xy, r3.xyxx
div o2.xyz, r4.xyzx, r0.wwww
mul r2.xy, r0.wwww, r4.xyxx
mov r5.x, r1.w
mad r5.yz, r1.yyzy, cb0[66].xxyx, r4.xxyx
mad r1.yz, r0.xxyx, cb0[66].xxyx, -r3.xxyx
and r0.xy, v3.xxxx, l(3, 2, 0, 0)
ieq r0.xz, r0.xxxx, l(1, 0, 2, 0)
or r0.x, r0.z, r0.x
movc r0.xzw, r0.xxxx, r5.xxyz, r1.xxyz
mov r2.z, -r2.x
add r1.xy, r0.zwzz, r2.yzyy
add r0.zw, r0.zzzw, -r2.yyyz
mov r7.z, r0.x
movc r0.xy, r0.yyyy, r1.xyxx, r0.zwzz
mov o3.zw, r0.xxxy
mul r0.xy, r0.xyxx, cb0[66].zwzz
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
ushr r0.x, v2.w, l(20)
utof r0.x, r0.x
ubfe r0.w, l(12), l(8), v2.w
utof r0.w, r0.w
mul r0.xy, r0.xwxx, l(0.000976562500, 0.000976562500, 0.000000, 0.000000)
mov r0.z, l(1.000000)
dp3 o3.x, r0.xyzx, cb1[13].xywx
dp3 o3.y, r0.xyzx, cb1[14].xywx
mov r7.w, l(1.000000)

// Output W is 1 so we can't directly apply the stereo correction, but we do
// have the depth in Z scaled like the depth buffer. Use InvProjMatrix to scale
// it back to the linear depth then use that to apply a stereo correction:

mov r8.z, r7.z
mov r8.w, l(1.0)
dp2 r8.x, r8.zwzz, cb0[11].zwzz
dp2 r8.y, r8.zwzz, cb0[12].zwzz
div r8.w, -r8.x, r8.y

add r6.w, r8.w, -r6.y
div r6.w, r6.w, r8.w
mad r7.x, r6.w, r6.x, r7.x

mov o4.xyzw, r7.xyzw

// HUD Kill switch:
eq r9.x, r9.x, l(1.0)
if_nz r9.x
	mov o4.xyzw, l(0.0, 0.0, 0.0, 0.0)
endif

ret 
// Approximately 104 instruction slots used