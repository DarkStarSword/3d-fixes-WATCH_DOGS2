// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 915af44a7ab3c735-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Sun Jun 25 05:01:53 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// LongRangeShadowSampler          sampler_c      NA          NA    4        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    2        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    3        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    4        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    5        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    6        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    7        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d    8        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d    9        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d   10        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecubearray (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 27
dcl_indexableTemp x0[3], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r23.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 915af44a7ab3c735-ps.txt

mul r23.w, r23.x, r23.y
mul r25.x, r23.w, cb1[9].x
mul r25.y, r23.w, cb1[10].x
mul r25.z, r23.w, cb1[11].x
mul r25.w, r23.w, cb1[12].x
dp4 r26.x, r25.xyzw, cb1[17].xyzw
dp4 r26.y, r25.xyzw, cb1[18].xyzw
dp4 r26.z, r25.xyzw, cb1[19].xyzw
add r24.xyz, cb1[174].xyz, r26.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r1.xyww, t3.xyzw
mov r2.yw, l(0,1.000000,0,0.500000)
dp2 r0.z, r2.xyxx, cb1[11].zwzz
dp2 r0.w, r2.xyxx, cb1[12].zwzz
div r0.z, -r0.z, r0.w
mov r3.z, -r0.z
mul r3.xy, r0.xyxx, r3.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 915af44a7ab3c735-ps.txt

add r23.w, -r3.z, -r23.y
mul r23.w, r23.w, r23.x
mad r3.x, -r23.w, cb1[9].x, r3.x

mov r3.w, l(1.000000)
dp4 r0.x, r3.xyzw, cb1[17].xyzw
dp4 r0.y, r3.xyzw, cb1[18].xyzw
dp4 r0.z, r3.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t8.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t9.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyzw, t10.zyxw
mad r1.z, r5.w, l(255.000000), l(0.500000)
round_ni r1.z, r1.z
ftou r1.z, r1.z
ushr r1.z, r1.z, l(5)
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r4.xyzx
ieq r7.xyz, r1.zzzz, l(1, 4, 0, 0)
ge r1.w, r3.x, l(0.750000)
add r2.x, r3.x, l(-0.750000)
mad r2.x, r2.x, l(-0.599999905), l(1.000000)
movc r1.w, r1.w, r2.x, l(1.000000)
movc r1.w, r7.y, r1.w, r3.x
movc r1.w, r7.x, l(1.000000), r1.w
add r8.xyz, -r0.xyzx, r24.xyzx
dp3 r2.x, r8.xyzx, r8.xyzx
rsq r2.x, r2.x
mul r9.xyz, r2.xxxx, r8.xyzx
mul r10.yzw, r1.wwww, r3.yyzw
if_nz r7.x
  mad r2.y, r4.w, l(0.500000), l(0.500000)
  mad r2.y, r2.y, l(65535.000000), l(0.500000)
  ftou r2.y, r2.y
  and r11.xy, r2.yyyy, l(255, 0x0000ff00, 0, 0)
  utof r11.xy, r11.xyxx
  mul r11.xz, r11.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.y, r3.x, l(255.000000)
  ftou r2.y, r2.y
  and r12.xy, r2.yyyy, l(15, 240, 0, 0)
  utof r12.xy, r12.xyxx
  mul r11.yw, r12.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r12.w, l(0)
  mov r10.x, r10.y
  mov r13.x, l(0)
else 
  mul r2.y, r5.y, r5.y
  max r5.y, r2.y, l(0.001000)
  ieq r2.y, r1.z, l(2)
  if_nz r2.y
    mad r2.y, r4.w, l(0.500000), l(0.500000)
    mad r2.y, r2.y, l(65535.000000), l(0.500000)
    ftou r2.y, r2.y
    and r14.xy, r2.yyyy, l(255, 0x0000ff00, 0, 0)
    utof r14.xy, r14.xyxx
    mov r14.z, r5.z
    mad r14.xyz, r14.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.y, -r3.x, l(1.000000)
    mul r2.y, r2.y, r10.y
    mad r10.x, r2.y, l(0.500000), r10.y
    dp3 r2.y, r14.xyzx, r14.xyzx
    rsq r2.y, r2.y
    mul r11.xzw, r2.yyyy, r14.xxyz
    mov r11.y, l(0)
    mov r5.z, l(0.500000)
    mov r12.w, l(0)
    mov r13.x, l(0)
  else 
    ieq r2.y, r1.z, l(3)
    if_nz r2.y
      mad r2.y, r4.w, l(0.500000), l(0.500000)
      mad r2.y, r2.y, l(65535.000000), l(0.500000)
      ftou r2.y, r2.y
      and r14.xyzw, r2.yyyy, l(0x0000f800, 2016, 31, 31)
      utof r14.xyzw, r14.xyzw
      ge r15.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r14.wyxw
      mul r2.y, r14.w, l(0.00249675405)
      mad r16.xyz, r14.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r16.xyz, r16.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r16.xyz, r16.xyzx
      movc r11.x, r15.x, r2.y, r16.x
      mul r14.xy, r14.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r11.zw, r15.yyyz, r14.xxxy, r16.yyyz
      mov r11.y, l(0)
      mov r12.w, l(0)
      mov r13.x, l(0)
    else 
      if_nz r7.y
        mad r2.y, r4.w, l(32767.000000), l(32767.000000)
        ftou r2.y, r2.y
        and r3.w, r2.y, l(255)
        utof r3.w, r3.w
        mul r3.w, r3.w, l(0.0123199718)
        ubfe r2.y, l(8), l(8), r2.y
        utof r2.y, r2.y
        mad r2.y, r2.y, l(0.0246399436), l(-3.14159274)
        sincos r14.x, r15.x, r3.w
        sincos r16.x, r17.x, r2.y
        mul r17.x, r14.x, r17.x
        mul r17.y, r14.x, r16.x
        mov r17.z, r15.x
        dp3 r2.y, r17.xyzx, r17.xyzx
        rsq r2.y, r2.y
        mul r11.xzw, r2.yyyy, r17.xxyz
        mul_sat r12.w, r3.x, l(0.250000)
        mov r11.y, l(0)
        mov r13.x, l(0)
      else 
        ieq r2.y, r1.z, l(5)
        lt r3.w, r4.z, l(0.900000)
        movc r14.xyz, r3.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r15.xyz, r4.zxyz, r14.xyzx
        mad r14.xyz, r4.yzxy, r14.yzxy, -r15.xyzx
        dp3 r3.w, r14.xyzx, r14.xyzx
        rsq r3.w, r3.w
        mul r14.xyz, r3.wwww, r14.xyzx
        mul r15.xyz, r4.zxyz, r14.yzxy
        mad r4.xyz, r4.yzxy, r14.zxyz, -r15.xyzx
        dp3 r3.w, r4.xyzx, r4.xyzx
        rsq r3.w, r3.w
        mul r4.xyz, r3.wwww, r4.xyzx
        mad r3.w, r4.w, l(2.000000), l(-1.000000)
        mul r3.w, r3.w, l(3.14159274)
        sincos r15.x, r16.x, r3.w
        mul r14.xyz, r14.xyzx, r15.xxxx
        mad r14.xyz, r4.xyzx, r16.xxxx, r14.xyzx
        mad r3.w, r4.w, l(0.500000), l(0.500000)
        mad r3.w, r3.w, l(65535.000000), l(0.500000)
        ftou r3.w, r3.w
        and r4.xy, r3.wwww, l(255, 0x0000ff00, 0, 0)
        utof r4.xy, r4.xyxx
        mul r4.x, r4.x, l(0.00392156886)
        mad r4.z, r4.y, l(0.0000306372567), l(-1.000000)
        movc r4.xy, r1.zzzz, l(0,0,0,0), r4.xzxx
        mov r14.w, r5.x
        mov r4.z, l(0)
        movc r11.xyzw, r2.yyyy, r14.xwyz, r4.xzzz
        mov r3.yz, l(0,0,0,0)
        mov r4.w, r14.w
        movc r13.xyz, r2.yyyy, r3.zxyz, r4.yzwy
        mov r12.w, r13.y
        mov r5.x, r13.z
      endif 
    endif 
    mov r10.x, r10.y
  endif 
endif 
mov r4.z, l(0)
mov r2.y, l(0)
mov r3.xyzw, l(0,0,2,0)
loop 
  uge r4.w, r3.w, l(3)
  breakc_nz r4.w
  ishl r4.w, r3.w, l(2)
  mul r13.yzw, r0.yyyy, cb3[r4.w + 1].xxyz
  mad r13.yzw, cb3[r4.w + 0].xxyz, r0.xxxx, r13.yyzw
  mad r13.yzw, cb3[r4.w + 2].xxyz, r0.zzzz, r13.yyzw
  add r13.yzw, r13.yyzw, cb3[r4.w + 3].xxyz
  max r4.w, |r13.z|, |r13.y|
  add r4.w, r4.w, cb3[16].x
  ult r6.w, r3.w, l(2)
  if_nz r6.w
    lt r6.w, r4.w, l(1.000000)
    if_nz r6.w
      mov r3.xy, r13.yzyy
      mov r4.z, r13.w
      mov r2.y, r4.w
      mov r3.z, r3.w
      break 
    endif 
  endif 
  iadd r3.w, r3.w, l(1)
  mov r3.xy, r13.yzyy
  mov r4.z, r13.w
  mov r2.y, r4.w
  mov r3.z, l(2)
endloop 
mov x0[0].z, l(0.166666672)
mov x0[1].z, l(0.500000)
mov x0[2].z, l(0.833333313)
mov r2.z, x0[r3.z + 0].z
mad r4.xy, r3.xyxx, l(0.166666672, -0.500000, 0.000000, 0.000000), r2.zwzz
dp3 r2.z, cb3[17].xyzx, icb[r3.z + 0].xyzx
ieq r2.w, r3.z, l(2)
mad_sat r2.y, r2.y, cb3[16].z, cb3[16].w
and r2.y, r2.y, r2.w
and r3.xy, r1.xyxx, l(63, 63, 0, 0)
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xy, r3.xyzw, t2.xyzw
mad r1.xy, r1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r1.xxxx, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r3.xy, r1.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r3.xyxx
dp2 r3.z, r1.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r2.zw, r2.zzzz, cb3[38].zzzw
mul r14.xy, r2.zwzz, r3.xzxx
mov r14.z, l(0)
add r13.yzw, r4.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.x, r13.yzyy, t6.xxxx, s3, r13.w
dp2 r3.w, r1.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r14.xy, r2.zwzz, r3.ywyy
mov r14.z, l(0)
add r3.yzw, r4.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.y, r3.yzyy, t6.xxxx, s3, r3.w
add r3.x, r3.y, r3.x
mul r3.yz, r1.xxxx, l(0.000000, -0.602610528, 0.987966299, 0.000000)
mad r14.xy, r1.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r3.yzyy
dp2 r14.z, r1.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r15.xy, r2.zwzz, r14.xzxx
mov r15.z, l(0)
add r3.yzw, r4.xxyz, r15.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.y, r3.yzyy, t6.xxxx, s3, r3.w
add r3.x, r3.y, r3.x
dp2 r14.w, r1.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r14.xy, r2.zwzz, r14.ywyy
mov r14.z, l(0)
add r3.yzw, r4.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r3.yzyy, t6.xxxx, s3, r3.w
add r1.x, r1.x, r3.x
mul r1.y, r1.x, l(0.250000)
mad r2.zw, r6.xxxy, cb4[0].xxxy, r0.xxxy
mad r3.x, r0.z, cb4[0].z, cb4[0].w
mad r2.zw, r2.zzzw, cb4[1].xxxy, cb4[1].zzzw
sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t7.xxxx, s4, r3.x
mad r1.x, -r1.x, l(0.250000), r2.z
mad r1.x, r2.y, r1.x, r1.y
dp3 r1.y, r0.xyzx, cb0[1].xyzx
add_sat r1.y, r1.y, cb0[1].w
mul r1.x, r1.y, r1.x
mad r1.x, r1.x, cb3[37].x, cb3[37].y
lt r1.y, l(0.000000), r1.x
lt r2.y, l(0.000000), r11.x
and r2.y, r2.y, r7.z
or r1.y, r1.y, r2.y
if_nz r1.y
  dp3 r3.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r1.y, r6.xyzx, cb2[2].xyzx
  mov_sat r2.y, r1.y
  ieq r2.z, r1.z, l(2)
  dp3 r2.w, r11.xzwx, r11.xzwx
  rsq r2.w, r2.w
  mul r4.xyz, r2.wwww, r11.xzwx
  dp3 r2.w, r4.xyzx, cb2[2].xyzx
  add r2.w, r2.w, l(1.000000)
  mul_sat r2.w, r2.w, l(0.500000)
  mul r4.x, r2.w, r2.w
  mul r2.w, r2.w, r4.x
  movc r4.xyz, r2.zzzz, r11.xzwx, r6.xyzx
  movc r2.w, r2.z, r2.w, r2.y
  if_nz r7.x
    mov_sat r14.xyzw, r11.xyzw
    mov_sat r7.zw, r5.xxxy
    log r13.yzw, r10.xxzw
    mul r15.xyz, r14.yyyy, r13.yzwy
    mul r15.xyz, r15.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r13.yzw, r13.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r15.xxyz
    eq r4.w, r14.x, l(0.000000)
    add r6.w, -r7.z, l(1.000000)
    mul r15.xyz, r6.wwww, r10.xzwx
    mul r15.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r16.xyz, r13.yzwy, -r14.xxxx
    exp r16.xyz, r16.xyzx
    mul r16.xyz, r15.xyzx, r16.xyzx
    mul r16.xyz, r16.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r15.xyz, r4.wwww, r15.xyzx, r16.xyzx
    mov r15.w, l(0.180000)
    mul r6.w, r14.w, l(0.080000)
    mad r8.w, r14.x, l(48.750000), l(1.250000)
    mul r7.w, r7.w, r7.w
    max r7.w, r7.w, l(0.001000)
    mul r9.w, r14.z, r14.z
    max r9.w, r9.w, l(0.001000)
    lt r10.y, l(0.000000), r1.y
    lt r14.x, r1.y, l(0.000000)
    iadd r10.y, -r10.y, r14.x
    itof r10.y, r10.y
    mad r14.x, r1.y, r1.y, l(-1.000000)
    mad r14.x, r14.x, l(0.666860044), l(1.000000)
    sqrt r14.x, r14.x
    mul r10.y, r10.y, r14.x
    mad r1.y, r1.y, l(0.666860044), -r10.y
    mul r14.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r14.xyz, r1.yyyy, r6.xyzx, -r14.xyzx
    add r16.xyz, -r14.xyzx, -cb2[2].xyzx
    mad r14.xyz, r7.wwww, r16.xyzx, r14.xyzx
    dp3 r1.y, r14.xyzx, r14.xyzx
    rsq r1.y, r1.y
    mul r16.xyz, r1.yyyy, r14.xyzx
    dp3 r10.y, r9.xyzx, r6.xyzx
    lt r16.w, l(0.000000), r10.y
    lt r17.x, r10.y, l(0.000000)
    iadd r16.w, -r16.w, r17.x
    itof r16.w, r16.w
    mad r17.x, r10.y, r10.y, l(-1.000000)
    mad r17.x, r17.x, l(0.666860044), l(1.000000)
    sqrt r17.x, r17.x
    mul r16.w, r16.w, r17.x
    mad r16.w, r10.y, l(0.666860044), -r16.w
    mul r17.xyz, r9.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r17.xyz, r16.wwww, r6.xyzx, -r17.xyzx
    mad r18.xyz, -r8.xyzx, r2.xxxx, -r17.xyzx
    mad r17.xyz, r7.wwww, r18.xyzx, r17.xyzx
    dp3 r16.w, r17.xyzx, r17.xyzx
    rsq r16.w, r16.w
    mul r17.xyz, r16.wwww, r17.xyzx
    dp3 r16.w, r6.xyzx, r16.xyzx
    mad r16.w, -|r16.w|, |r16.w|, l(1.000000)
    mad r16.w, -r16.w, l(0.444702327), l(1.000000)
    add r8.w, r8.w, r8.w
    sqrt r16.w, r16.w
    div r8.w, r8.w, r16.w
    mov_sat r10.y, r10.y
    mad r18.xyz, r8.xyzx, r2.xxxx, cb2[2].xyzx
    dp3 r16.w, r18.xyzx, r18.xyzx
    rsq r16.w, r16.w
    mul r18.xyz, r16.wwww, r18.xyzx
    dp3_sat r16.w, r6.xyzx, r18.xyzx
    mul r17.w, r7.w, r7.w
    mul r16.w, r16.w, r16.w
    mad r18.x, r7.w, r7.w, l(-1.000000)
    mad r16.w, r16.w, r18.x, l(1.000000)
    mul r16.w, r16.w, r16.w
    mul r16.w, r16.w, l(3.14159274)
    div r16.w, r17.w, r16.w
    mad r7.w, r7.w, l(0.500000), l(0.500000)
    mul r17.w, r2.y, r2.y
    mul r7.w, r7.w, r7.w
    mad r18.x, -r2.y, r2.y, l(1.000000)
    mul r18.x, r7.w, r18.x
    max r17.w, r17.w, l(1.000000047E-034)
    div r17.w, r18.x, r17.w
    add r17.w, r17.w, l(1.000000)
    sqrt r17.w, r17.w
    add r17.w, r17.w, l(1.000000)
    div r17.w, l(2.000000), r17.w
    mul r18.x, r10.y, r10.y
    mad r10.y, -r10.y, r10.y, l(1.000000)
    mul r7.w, r7.w, r10.y
    max r10.y, r18.x, l(1.000000047E-034)
    div r7.w, r7.w, r10.y
    add r7.w, r7.w, l(1.000000)
    sqrt r7.w, r7.w
    add r7.w, r7.w, l(1.000000)
    div r7.w, l(2.000000), r7.w
    mul r7.w, r7.w, r17.w
    mad r18.xyz, r2.yyyy, r2.yyyy, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r18.xyz, r18.xyzx
    add r19.xyz, -r2.yyyy, r18.zyzz
    add r18.xyz, r2.yyyy, r18.xyzx
    mul r20.xyz, r19.zyzz, r19.zyzz
    mul r21.xyz, r18.zyzz, r18.zyzz
    add r21.xyz, r21.xyzx, r21.xyzx
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r18.xyz, r2.yyyy, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r19.xyz, r2.yyyy, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r18.xyz, r18.xyzx, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r18.xyz, r18.xyzx, r20.xyzx
    mul r7.w, r7.w, r16.w
    mul r18.xyz, r18.xyzx, r7.wwww
    mad r19.xyz, -r14.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r19.xyz, r7.zzzz, r19.xyzx, r6.wwww
    dp3_sat r6.w, r6.xyzx, -r17.xyzx
    mad r14.xyz, -r14.xyzx, r1.yyyy, -r17.xyzx
    dp3 r1.y, r14.xyzx, r14.xyzx
    rsq r1.y, r1.y
    mul r14.xyz, r1.yyyy, r14.xyzx
    dp3 r1.y, r14.xyzx, -r16.xyzx
    dp3_sat r7.z, r6.xyzx, -r16.xyzx
    dp3_sat r7.w, r6.xyzx, r14.xyzx
    mul r10.y, r9.w, r9.w
    mul r7.w, r7.w, r7.w
    mad r14.x, r9.w, r9.w, l(-1.000000)
    mad r7.w, r7.w, r14.x, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r10.y, r7.w
    mad r9.w, r9.w, l(0.500000), l(0.500000)
    mul r10.y, r7.z, r7.z
    mul r9.w, r9.w, r9.w
    mad r7.z, -r7.z, r7.z, l(1.000000)
    mul r7.z, r7.z, r9.w
    max r10.y, r10.y, l(1.000000047E-034)
    div r7.z, r7.z, r10.y
    add r7.z, r7.z, l(1.000000)
    sqrt r7.z, r7.z
    add r7.z, r7.z, l(1.000000)
    div r7.z, l(2.000000), r7.z
    mul r10.y, r6.w, r6.w
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r9.w
    max r9.w, r10.y, l(1.000000047E-034)
    div r6.w, r6.w, r9.w
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r6.w, r6.w, r7.z
    dp3 r7.z, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r7.z, r7.z, l(50.000000)
    add r1.y, -r1.y, l(1.000000)
    mul r9.w, r1.y, r1.y
    mul r9.w, r9.w, r9.w
    add r14.xyz, -r19.xyzx, r7.zzzz
    mul r14.xyz, r9.wwww, r14.xyzx
    mad r14.xyz, r14.xyzx, r1.yyyy, r19.xyzx
    mul r1.y, r6.w, r7.w
    mul r14.xyz, r14.xyzx, r1.yyyy
    mul r13.yzw, r8.wwww, -r13.yyzw
    exp r13.yzw, r13.yyzw
    mad r13.yzw, r14.xxyz, r13.yyzw, r18.xxyz
    movc r14.xyz, r4.wwww, r14.xyzx, r13.yzwy
    dp3 r14.w, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r16.xyzw, l(0,0,0,0)
  else 
    if_nz r2.z
      mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r17.w, l(0.0572957806)
      add r1.y, -r5.x, l(1.000000)
      mul r15.xyzw, r1.yyyy, r17.xyzw
    else 
      ieq r1.y, r1.z, l(3)
      if_nz r1.y
        mad r13.yzw, r8.xxyz, r2.xxxx, cb2[2].xxyz
        dp3 r1.y, r13.yzwy, r13.yzwy
        rsq r1.y, r1.y
        mul r13.yzw, r1.yyyy, r13.yyzw
        dp3_sat r1.y, r13.yzwy, r9.xyzx
        mul r4.w, r5.z, l(0.080000)
        add r1.y, -r1.y, l(1.000000)
        mul r6.w, r1.y, r1.y
        mul r6.w, r6.w, r6.w
        mad r7.z, -r5.z, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.z
        mad r1.y, r6.w, r1.y, r4.w
        add_sat r4.w, r5.y, r5.y
        mad r17.w, r4.w, -r1.y, l(1.000000)
        mul r17.xyz, r10.xzwx, r17.wwww
        mul r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r7.y
          add r13.yzw, -r11.xxzw, r4.xxyz
          mad r17.xyz, r13.yzwy, l(0.100000, 0.100000, 0.100000, 0.000000), r11.xzwx
          dp3 r1.y, r17.xyzx, r17.xyzx
          rsq r1.y, r1.y
          mul r17.xyz, r1.yyyy, r17.xyzx
          mad r13.yzw, r13.yyzw, l(0.000000, 0.300000, 0.300000, 0.300000), r11.xxzw
          dp3 r1.y, r13.yzwy, r13.yzwy
          rsq r1.y, r1.y
          mul r13.yzw, r1.yyyy, r13.yyzw
          dp3 r1.y, r11.xzwx, cb2[2].xyzx
          dp3 r4.w, r17.xyzx, cb2[2].xyzx
          dp3 r6.w, r13.yzwy, cb2[2].xyzx
          mad r12.z, r1.y, l(0.500000), l(0.500000)
          mad r7.zw, r12.zzzw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.y, r7.zwzz, t0.wxyz, s0, l(0.000000)
          mad r12.y, r4.w, l(0.500000), l(0.500000)
          mad r7.zw, r12.yyyw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.z, r7.zwzz, t0.wxyz, s0, l(0.000000)
          mad r12.x, r6.w, l(0.500000), l(0.500000)
          mad r7.zw, r12.xxxw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r13.w, r7.zwzz, t0.wxyz, s0, l(0.000000)
          mul r17.xyz, r10.xzwx, r13.yzwy
          mov r17.w, l(0.0572957806)
          mul r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r1.y, r1.z, l(5)
          dp3 r4.w, r11.xzwx, cb2[2].xyzx
          mad r4.w, -r4.w, r4.w, l(1.000000)
          sqrt r4.w, r4.w
          mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r17.w, l(0.0572957806)
          add r6.w, -r5.x, l(1.000000)
          mul r17.xyzw, r6.wwww, r17.xyzw
          mul r18.xyzw, r4.wwww, r17.xyzw
          mul r18.xyzw, r18.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r4.w, -r11.y, l(1.000000)
          mul r18.xyzw, r4.wwww, r18.xyzw
          movc r15.xyzw, r1.yyyy, r18.xyzw, r17.xyzw
        endif 
      endif 
    endif 
    if_nz r2.z
      mul r1.y, r5.z, l(0.080000)
      mad r12.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
      mad r12.xyz, r5.xxxx, r12.xyzx, r1.yyyy
      dp3_sat r1.y, r6.xyzx, r9.xyzx
      mad r13.yzw, r8.xxyz, r2.xxxx, cb2[2].xxyz
      dp3 r4.w, r13.yzwy, r13.yzwy
      rsq r4.w, r4.w
      mul r13.yzw, r4.wwww, r13.yyzw
      dp3 r4.w, r13.yzwy, cb2[2].xyzx
      dp3_sat r6.w, r6.xyzx, r13.yzwy
      mul r7.z, r5.y, r5.y
      mul r6.w, r6.w, r6.w
      mad r7.w, r5.y, r5.y, l(-1.000000)
      mad r6.w, r6.w, r7.w, l(1.000000)
      mul r6.w, r6.w, r6.w
      mul r6.w, r6.w, l(3.14159274)
      div r6.w, r7.z, r6.w
      mad r7.z, r5.y, l(0.500000), l(0.500000)
      mul r7.w, r2.y, r2.y
      mul r7.z, r7.z, r7.z
      mad r8.w, -r2.y, r2.y, l(1.000000)
      mul r8.w, r7.z, r8.w
      max r7.w, r7.w, l(1.000000047E-034)
      div r7.w, r8.w, r7.w
      add r7.w, r7.w, l(1.000000)
      sqrt r7.w, r7.w
      add r7.w, r7.w, l(1.000000)
      div r7.w, l(2.000000), r7.w
      mul r8.w, r1.y, r1.y
      mad r1.y, -r1.y, r1.y, l(1.000000)
      mul r1.y, r1.y, r7.z
      max r7.z, r8.w, l(1.000000047E-034)
      div r1.y, r1.y, r7.z
      add r1.y, r1.y, l(1.000000)
      sqrt r1.y, r1.y
      add r1.y, r1.y, l(1.000000)
      div r1.y, l(2.000000), r1.y
      mul r1.y, r1.y, r7.w
      dp3 r7.z, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r7.z, r7.z, l(50.000000)
      add r4.w, -r4.w, l(1.000000)
      mul r7.w, r4.w, r4.w
      mul r7.w, r7.w, r7.w
      add r13.yzw, -r12.xxyz, r7.zzzz
      mul r13.yzw, r7.wwww, r13.yyzw
      mad r12.xyz, r13.yzwy, r4.wwww, r12.xyzx
      mul r1.y, r1.y, r6.w
      mul r14.xyz, r12.xyzx, r1.yyyy
      dp3 r14.w, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r1.y, r1.z, l(3)
      if_nz r1.y
        mad r12.xyz, r8.xyzx, r2.xxxx, cb2[2].xyzx
        dp3 r1.y, r12.xyzx, r12.xyzx
        rsq r1.y, r1.y
        mul r12.xyz, r1.yyyy, r12.xyzx
        dp3_sat r1.y, r12.xyzx, r9.xyzx
        mul r4.w, r5.z, l(0.080000)
        add r1.y, -r1.y, l(1.000000)
        mul r6.w, r1.y, r1.y
        mul r6.w, r6.w, r6.w
        mad r7.z, -r5.z, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.z
        mad r1.y, r6.w, r1.y, r4.w
        dp3_sat r4.w, r6.xyzx, r12.xyzx
        mul r6.w, r4.w, r4.w
        mad r7.zw, -r4.wwww, r4.wwww, l(0.000000, 0.000000, 1.000001, 1.000000)
        div r6.w, r6.w, r7.z
        mul r7.z, r7.w, r7.w
        mul r7.w, r5.y, r5.y
        mad r12.xy, r5.yyyy, r5.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r8.w, r12.x, l(4.000000), l(1.000000)
        mul r8.w, r8.w, l(3.14159274)
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        div r6.w, -r6.w, r12.y
        mul r6.w, r6.w, l(1.442695)
        exp r6.w, r6.w
        mul r6.w, r6.w, l(4.000000)
        div r6.w, r6.w, r7.z
        add r6.w, r6.w, l(1.000000)
        mul r6.w, r6.w, r8.w
        dp3_sat r7.z, r6.xyzx, r9.xyzx
        add r8.w, r2.y, r7.z
        mad r7.z, -r2.y, r7.z, r8.w
        mul r7.z, r7.z, l(4.000000)
        div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
        mov_sat r7.z, r7.z
        div r7.w, l(2.000000), r7.w
        add r7.w, r7.w, l(-2.000000)
        max r7.w, r7.w, l(1.000000031E-022)
        log r4.w, r4.w
        mul r4.w, r4.w, r7.w
        exp r4.w, r4.w
        add r7.w, r7.w, l(8.000000)
        mul r4.w, r4.w, r7.w
        mul r4.w, r4.w, l(0.0397887342)
        min r4.w, r4.w, l(1.000000)
        add_sat r7.w, r5.y, r5.y
        mad r6.w, r6.w, r7.z, -r4.w
        mad r4.w, r7.w, r6.w, r4.w
        mul r17.xyz, r1.yyyy, r4.wwww
        dp3 r17.w, r17.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r18.xyz, r11.xzwx
        mov r18.w, l(1.000000)
        mul r14.xyzw, r17.xyzw, r18.xyzw
      else 
        if_nz r7.y
          mul r7.zw, r5.zzzy, l(0.000000, 0.000000, 0.080000, 0.400000)
          mad r12.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r12.xyz, r5.xxxx, r12.xyzx, r7.zzzz
          dp3_sat r1.y, r6.xyzx, r9.xyzx
          mad r13.yzw, r8.xxyz, r2.xxxx, cb2[2].xxyz
          dp3 r4.w, r13.yzwy, r13.yzwy
          rsq r4.w, r4.w
          mul r13.yzw, r4.wwww, r13.yyzw
          dp3 r4.w, r13.yzwy, cb2[2].xyzx
          dp3_sat r6.w, r6.xyzx, r13.yzwy
          mul r7.z, r5.y, r5.y
          mul r6.w, r6.w, r6.w
          mad r8.w, r5.y, r5.y, l(-1.000000)
          mad r8.w, r6.w, r8.w, l(1.000000)
          mul r8.w, r8.w, r8.w
          mul r8.w, r8.w, l(3.14159274)
          div r7.z, r7.z, r8.w
          mad r13.yz, r5.yyyy, l(0.000000, 0.500000, 0.200000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          mul r8.w, r2.y, r2.y
          mul r13.yz, r13.yyzy, r13.yyzy
          mad r9.w, -r2.y, r2.y, l(1.000000)
          mul r17.xy, r9.wwww, r13.yzyy
          max r8.w, r8.w, l(1.000000047E-034)
          div r17.xy, r17.xyxx, r8.wwww
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r17.xy, r17.xyxx
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r17.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r17.xyxx
          mul r8.w, r1.y, r1.y
          mad r1.y, -r1.y, r1.y, l(1.000000)
          mul r13.yz, r1.yyyy, r13.yyzy
          max r1.y, r8.w, l(1.000000047E-034)
          div r13.yz, r13.yyzy, r1.yyyy
          add r13.yz, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
          sqrt r13.yz, r13.yyzy
          add r13.yz, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
          div r13.yz, l(0.000000, 2.000000, 2.000000, 0.000000), r13.yyzy
          mul r13.yz, r13.yyzy, r17.xxyx
          dp3 r1.y, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r1.y, r1.y, l(50.000000)
          add r4.w, -r4.w, l(1.000000)
          mul r8.w, r4.w, r4.w
          mul r8.w, r8.w, r8.w
          add r17.xyz, -r12.xyzx, r1.yyyy
          mul r17.xyz, r8.wwww, r17.xyzx
          mad r12.xyz, r17.xyzx, r4.wwww, r12.xyzx
          mul r1.y, r7.z, r13.y
          mul r17.xyz, r12.xyzx, r1.yyyy
          dp3 r17.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r1.y, r7.w, r7.w
          mad r4.w, r7.w, r7.w, l(-1.000000)
          mad r4.w, r6.w, r4.w, l(1.000000)
          mul r4.w, r4.w, r4.w
          mul r4.w, r4.w, l(3.14159274)
          div r1.y, r1.y, r4.w
          mul r1.y, r13.z, r1.y
          mul r18.xyz, r12.xyzx, r1.yyyy
          dp3 r18.w, r18.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r18.xyzw, r18.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r14.xyzw, r17.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r18.xyzw
        else 
          ieq r1.y, r1.z, l(5)
          dp3_sat r4.w, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r4.w, r4.w, l(1.66666663), l(1.33333337)
          mul r12.xyz, r5.yyyy, r11.xzwx
          mad r12.xyz, r12.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r6.xyzx
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          dp3 r6.w, -cb2[2].xyzx, r12.xyzx
          mul r7.z, r4.w, r4.w
          mad r7.w, -r6.w, r6.w, l(1.000000)
          mad r7.w, -r7.z, r7.w, l(1.000000)
          sqrt r8.w, r7.w
          mad r6.w, r4.w, r6.w, -r8.w
          mul r13.yzw, r12.xxyz, r6.wwww
          mad r13.yzw, r4.wwww, cb2[2].xxyz, r13.yyzw
          lt r6.w, l(0.000000), r7.w
          and r6.w, r6.w, l(0x3f800000)
          mul r17.xyz, r6.wwww, r13.yzwy
          dp3 r7.w, -r9.xyzx, r12.xyzx
          mad r8.w, -r7.w, r7.w, l(1.000000)
          mad r7.z, -r7.z, r8.w, l(1.000000)
          sqrt r8.w, r7.z
          mad r7.w, r4.w, r7.w, -r8.w
          mul r12.xyz, r12.xyzx, r7.wwww
          mad r12.xyz, r4.wwww, r9.xyzx, r12.xyzx
          lt r4.w, l(0.000000), r7.z
          and r4.w, r4.w, l(0x3f800000)
          mul r12.xyz, r4.wwww, r12.xyzx
          mad r8.xyz, r8.xyzx, r2.xxxx, cb2[2].xyzx
          dp3 r2.x, r8.xyzx, r8.xyzx
          rsq r2.x, r2.x
          mul r8.xyz, r2.xxxx, r8.xyzx
          dp3_sat r2.x, r6.xyzx, r9.xyzx
          dp3_sat r4.w, r6.xyzx, r8.xyzx
          dp3 r7.z, r8.xyzx, cb2[2].xyzx
          mov_sat r7.w, r7.z
          dp3 r8.w, r8.xyzx, r11.xzwx
          mul r18.xyz, r6.yzxy, r11.wxzw
          mad r18.xyz, r11.zwxz, r6.zxyz, -r18.xyzx
          dp3 r9.w, r18.xyzx, r18.xyzx
          rsq r9.w, r9.w
          mul r18.xyz, r9.wwww, r18.xyzx
          dp3 r8.x, r8.xyzx, r18.xyzx
          mul r8.yz, r5.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r19.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r19.xyz, r5.xxxx, r19.xyzx, r8.yyyy
          dp3 r8.y, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r8.y, r8.y, l(50.000000)
          add r7.w, -r7.w, l(1.000000)
          mul r9.w, r7.w, r7.w
          mul r9.w, r9.w, r9.w
          add r20.xyz, -r19.xyzx, r8.yyyy
          mul r21.xyz, r9.wwww, r20.xyzx
          mad r21.xyz, r21.xyzx, r7.wwww, r19.xyzx
          mul r7.w, r5.y, r5.y
          mul r8.y, r4.w, r4.w
          mul r8.w, r8.w, r8.w
          div r8.w, r8.w, r7.w
          mad r8.x, r8.x, r8.x, r8.w
          mad r4.w, r4.w, r4.w, r8.x
          mul r4.w, r4.w, r4.w
          mul r4.w, r8.z, r4.w
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          mul r8.x, r2.y, r2.y
          mad r8.w, -r2.y, r2.y, l(1.000000)
          mul r9.w, r7.w, r8.w
          max r8.x, r8.x, l(1.000000047E-034)
          div r9.w, r9.w, r8.x
          add r9.w, r9.w, l(1.000000)
          sqrt r9.w, r9.w
          add r9.w, r9.w, l(1.000000)
          div r9.w, l(2.000000), r9.w
          mul r10.y, r2.x, r2.x
          mad r2.x, -r2.x, r2.x, l(1.000000)
          mul r17.w, r2.x, r7.w
          max r10.y, r10.y, l(1.000000047E-034)
          div r17.w, r17.w, r10.y
          add r17.w, r17.w, l(1.000000)
          sqrt r17.w, r17.w
          add r17.w, r17.w, l(1.000000)
          div r17.w, l(2.000000), r17.w
          mul r9.w, r9.w, r17.w
          mul r4.w, r4.w, r9.w
          mul_sat r21.xyz, r21.xyzx, r4.wwww
          mul r21.xyz, r12.wwww, r21.xyzx
          mul r22.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r13.yzw, -r13.yyzw, r6.wwww, -r12.xxyz
          dp3 r4.w, r13.yzwy, r13.yzwy
          rsq r4.w, r4.w
          mul r13.yzw, r4.wwww, r13.yyzw
          dp3_sat r4.w, r6.xyzx, -r17.xyzx
          dp3_sat r6.w, r6.xyzx, -r12.xyzx
          dp3_sat r9.w, r6.xyzx, r13.yzwy
          dp3_sat r12.x, r13.yzwy, -r17.xyzx
          dp3 r12.y, r13.yzwy, r11.xzwx
          dp3 r12.z, r13.yzwy, r18.xyzx
          add r12.x, -r12.x, l(1.000000)
          mul r12.w, r12.x, r12.x
          mul r12.w, r12.w, r12.w
          mul r13.yzw, r12.wwww, r20.xxyz
          mad r13.yzw, r13.yyzw, r12.xxxx, r19.xxyz
          mul r12.x, r12.y, r12.y
          div r12.x, r12.x, r7.w
          mad r12.x, r12.z, r12.z, r12.x
          mad r9.w, r9.w, r9.w, r12.x
          mul r9.w, r9.w, r9.w
          mul r8.z, r8.z, r9.w
          div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r8.z
          mul r9.w, r4.w, r4.w
          mad r4.w, -r4.w, r4.w, l(1.000000)
          mul r4.w, r4.w, r7.w
          max r9.w, r9.w, l(1.000000047E-034)
          div r4.w, r4.w, r9.w
          add r4.w, r4.w, l(1.000000)
          sqrt r4.w, r4.w
          add r4.w, r4.w, l(1.000000)
          div r4.w, l(2.000000), r4.w
          mul r9.w, r6.w, r6.w
          mad r6.w, -r6.w, r6.w, l(1.000000)
          mul r6.w, r6.w, r7.w
          max r9.w, r9.w, l(1.000000047E-034)
          div r6.w, r6.w, r9.w
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.w, l(2.000000), r6.w
          mul r4.w, r4.w, r6.w
          mul r4.w, r4.w, r8.z
          mul_sat r12.xyz, r13.yzwy, r4.wwww
          sqrt r13.yzw, r10.xxzw
          mad r12.xyz, -r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r12.xyzx
          mad r12.xyz, r13.yzwy, r12.xyzx, r22.xyzx
          dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r4.w, r5.y, r5.y, l(-1.000000)
          mad r4.w, r8.y, r4.w, l(1.000000)
          mul r4.w, r4.w, r4.w
          mul r4.w, r4.w, l(3.14159274)
          div r4.w, r7.w, r4.w
          mad r6.w, r5.y, l(0.500000), l(0.500000)
          mul r6.w, r6.w, r6.w
          mul r7.w, r8.w, r6.w
          div r7.w, r7.w, r8.x
          add r7.w, r7.w, l(1.000000)
          sqrt r7.w, r7.w
          add r7.w, r7.w, l(1.000000)
          div r7.w, l(2.000000), r7.w
          mul r2.x, r2.x, r6.w
          div r2.x, r2.x, r10.y
          add r2.x, r2.x, l(1.000000)
          sqrt r2.x, r2.x
          add r2.x, r2.x, l(1.000000)
          div r2.x, l(2.000000), r2.x
          mul r2.x, r2.x, r7.w
          add r6.w, -r7.z, l(1.000000)
          mul r7.z, r6.w, r6.w
          mul r7.z, r7.z, r7.z
          mul r8.xyz, r7.zzzz, r20.xyzx
          mad r8.xyz, r8.xyzx, r6.wwww, r19.xyzx
          mul r2.x, r2.x, r4.w
          mul r8.xyz, r8.xyzx, r2.xxxx
          dp3 r8.w, r8.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r14.xyzw, r1.yyyy, r12.xyzw, r8.xyzw
        endif 
      endif 
    endif 
    if_nz r2.z
      mov r16.xyzw, l(0,0,0,0)
    else 
      ieq r1.y, r1.z, l(3)
      if_nz r1.y
        mov r16.xyzw, l(0,0,0,0)
      else 
        if_nz r7.y
          mov r16.xyzw, l(0,0,0,0)
        else 
          dp3 r1.y, r11.xzwx, cb2[2].xyzx
          mad r1.y, -r1.y, r1.y, l(1.000000)
          sqrt r1.y, r1.y
          mul r2.x, r11.y, l(-1.500000)
          dp3 r2.z, r4.xyzx, cb2[2].xyzx
          mad r4.w, -r11.y, l(-1.500000), r2.z
          div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), -r2.x
          mul_sat r2.x, r2.x, r4.w
          mad r4.w, r2.x, l(-2.000000), l(3.000000)
          mul r2.x, r2.x, r2.x
          mul r2.x, r2.x, r4.w
          mul r8.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r4.w, -r5.x, l(1.000000)
          mul r8.xyzw, r4.wwww, r8.xyzw
          mul r8.xyzw, r2.xxxx, r8.xyzw
          mul r8.xyzw, r1.yyyy, r8.xyzw
          mul r8.xyzw, r11.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r7.zw, r1.zzzz, l(0, 0, 5, 8)
          max r1.y, |r2.z|, l(0.000001)
          rcp r1.y, r1.y
          mul r1.y, r1.y, r2.z
          dp3 r2.x, r4.xyzx, r9.xyzx
          max r2.z, |r2.x|, l(0.000001)
          rcp r2.z, r2.z
          mul r2.x, r2.z, r2.x
          eq r1.y, r1.y, r2.x
          movc r12.w, r1.y, l(0), l(1.000000)
          mul r4.xyz, r4.wwww, r11.xzwx
          mul r12.xyz, r12.wwww, r4.xyzx
          mul r4.xyzw, r12.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r12.xyz, r10.xzwx, r11.xxxx
          mov r12.w, r11.x
          mul r12.xyzw, r12.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r4.xyzw, r7.wwww, r4.xyzw, r12.xyzw
          movc r16.xyzw, r7.zzzz, r8.xyzw, r4.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r1.y, r7.y, l(1.000000), r2.w
  dp3 r2.x, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r2.z, r1.x, r11.x
  add r2.x, -r1.y, r2.x
  mad r2.x, r2.z, r2.x, r1.y
  movc r1.y, r1.z, r1.y, r2.x
  mul r2.xyzw, r2.yyyy, r14.xyzw
  mad r2.xyzw, r15.xyzw, r1.yyyy, r2.xyzw
  add r2.xyzw, r16.xyzw, r2.xyzw
  mul r2.xyzw, r1.xxxx, r2.xyzw
  mov r3.xyz, cb2[0].xyzx
  mul r2.xyzw, r2.xyzw, r3.xyzw
else 
  mov r2.xyzw, l(0,0,0,0)
endif 
if_nz r7.x
  mov_sat r11.xyzw, r11.xyzw
  mov_sat r5.xyz, r5.xyzx
  mul r1.x, r5.y, r5.y
  max r3.y, r1.x, l(0.001000)
  mul r1.x, r11.z, r11.z
  max r1.x, r1.x, l(0.001000)
  dp3 r1.y, -r9.xyzx, r6.xyzx
  add r1.y, r1.y, r1.y
  mad r4.xyz, r6.xyzx, -r1.yyyy, -r9.xyzx
  dp3 r1.y, r6.xyzx, r4.xyzx
  mad r1.y, -|r1.y|, |r1.y|, l(1.000000)
  mad r1.y, -r1.y, l(0.444702327), l(1.000000)
  add r3.w, r11.x, r11.x
  sqrt r1.y, r1.y
  div r1.y, r3.w, r1.y
  log r7.xyz, r10.xzwx
  mul r8.xyz, r11.yyyy, r7.xyzx
  mul r8.xyz, r8.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r7.xyz, r7.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r8.xyzx
  eq r3.w, r11.x, l(0.000000)
  mul r4.w, r3.y, r3.y
  div r4.w, l(2.000000), r4.w
  add r4.w, r4.w, l(-2.000000)
  max r4.w, r4.w, l(1.000000031E-022)
  sqrt r4.w, r4.w
  div r4.w, l(-10.000000), r4.w
  exp r4.w, r4.w
  add r4.w, r4.w, l(-0.000980)
  mul_sat r4.w, r4.w, l(1.00795019)
  add r4.w, -r4.w, l(1.000000)
  ine r6.w, cb1[184].z, l(0)
  if_z r6.w
    mul r7.w, r4.w, cb1[174].w
    mov r0.w, l(1.000000)
    mov r8.xyzw, l(0,0,0,0)
    mov r9.w, l(1.000000)
    mov r10.y, l(0)
    loop 
      uge r11.y, r10.y, l(15)
      breakc_nz r11.y
      imul null, r11.y, r10.y, l(7)
      dp4 r12.x, r0.xyzw, cb1[r11.y + 68].xyzw
      dp4 r12.y, r0.xyzw, cb1[r11.y + 69].xyzw
      dp4 r12.z, r0.xyzw, cb1[r11.y + 70].xyzw
      ge r13.yzw, r12.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r13.yzw, r13.yyzw, cb1[r11.y + 72].xxyz, cb1[r11.y + 73].xxyz
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r12.xyz, r13.yzwy, r12.xyzx
      mul r12.x, r12.y, r12.x
      mul r12.x, r12.z, r12.x
      lt r12.y, l(0.000000), r12.x
      if_nz r12.y
        dp3 r14.x, r4.xyzx, cb1[r11.y + 68].xyzx
        dp3 r14.y, r4.xyzx, cb1[r11.y + 69].xyzx
        dp3 r14.z, r4.xyzx, cb1[r11.y + 70].xyzx
        mul r12.x, r12.x, cb1[r11.y + 73].w
        mov r14.w, cb1[r11.y + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t5.xyzw, s2, r7.w
        mul r14.xyzw, r14.xyzw, cb1[r11.y + 74].xxxy
        min r11.y, r9.w, r12.x
        mad r12.xyzw, r14.xyzw, r11.yyyy, r8.xyzw
        add r11.y, r9.w, -r11.y
        ge r13.y, l(0.000000), r11.y
        if_nz r13.y
          mov r8.xyzw, r12.xyzw
          mov r9.w, r11.y
          break 
        endif 
        mov r8.xyzw, r12.xyzw
        mov r9.w, r11.y
      endif 
      iadd r10.y, r10.y, l(1)
    endloop 
  else 
    mov r8.xyzw, l(0,0,0,0)
    mov r9.w, l(1.000000)
  endif 
  add r7.w, r8.w, r9.w
  lt r8.w, l(0.000000), r7.w
  if_nz r8.w
    mul r4.w, r4.w, cb1[183].w
    add r8.w, -|r4.z|, r4.z
    mad r8.w, r9.w, r8.w, |r4.z|
    mad r8.w, r8.w, l(2.000000), l(2.000000)
    div r12.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r8.wwww
    mul r12.xy, r4.yxyy, r12.xyxx
    mad r12.xy, r12.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t4.xyzw, s1, r4.w
    mov_sat r13.yzw, r12.xxyz
    movc r12.xyz, cb1[184].zzzz, r13.yzwy, r12.xyzx
    div r12.xyz, r12.xyzx, cb1[176].wwww
    mad r8.xyz, r12.xyzx, r7.wwww, r8.xyzx
  endif 
  mul r4.w, r5.z, l(0.080000)
  dp3 r7.w, r4.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r3.x, r6.xyzx, r9.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r12.xy, r3.xyxx, t1.xyzw, s1, l(0.000000)
  mad r4.w, r4.w, r12.x, r12.y
  mul r4.w, r7.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mul r8.xyz, r1.wwww, r8.xyzx
  add r1.x, r1.x, r3.y
  min r3.z, r1.x, l(1.000000)
  mul r1.x, r3.z, r3.z
  div r1.x, l(2.000000), r1.x
  add r1.x, r1.x, l(-2.000000)
  max r1.x, r1.x, l(1.000000031E-022)
  sqrt r1.x, r1.x
  div r1.x, l(-10.000000), r1.x
  exp r1.x, r1.x
  add r1.x, r1.x, l(-0.000980)
  mul r1.x, r1.x, l(1.00795019)
  max r1.x, r1.x, l(0.000000)
  add r1.x, -r1.x, l(1.000000)
  if_z r6.w
    mul r3.y, r1.x, cb1[174].w
    mov r0.w, l(1.000000)
    mov r12.xyzw, l(0,0,0,0)
    mov r4.w, l(1.000000)
    mov r7.w, l(0)
    loop 
      uge r8.w, r7.w, l(15)
      breakc_nz r8.w
      imul null, r8.w, r7.w, l(7)
      dp4 r14.x, r0.xyzw, cb1[r8.w + 68].xyzw
      dp4 r14.y, r0.xyzw, cb1[r8.w + 69].xyzw
      dp4 r14.z, r0.xyzw, cb1[r8.w + 70].xyzw
      ge r13.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r13.yzw, r13.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
      add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r13.yzw, r13.yyzw, r14.xxyz
      mul r9.w, r13.z, r13.y
      mul r9.w, r13.w, r9.w
      lt r10.y, l(0.000000), r9.w
      if_nz r10.y
        dp3 r14.x, r4.xyzx, cb1[r8.w + 68].xyzx
        dp3 r14.y, r4.xyzx, cb1[r8.w + 69].xyzx
        dp3 r14.z, r4.xyzx, cb1[r8.w + 70].xyzx
        mul r9.w, r9.w, cb1[r8.w + 73].w
        mov r14.w, cb1[r8.w + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t5.xyzw, s2, r3.y
        mul r14.xyzw, r14.xyzw, cb1[r8.w + 74].xxxy
        min r8.w, r4.w, r9.w
        mad r14.xyzw, r14.xyzw, r8.wwww, r12.xyzw
        add r8.w, r4.w, -r8.w
        ge r9.w, l(0.000000), r8.w
        if_nz r9.w
          mov r12.xyzw, r14.xyzw
          mov r4.w, r8.w
          break 
        endif 
        mov r12.xyzw, r14.xyzw
        mov r4.w, r8.w
      endif 
      iadd r7.w, r7.w, l(1)
    endloop 
  else 
    mov r12.xyzw, l(0,0,0,0)
    mov r4.w, l(1.000000)
  endif 
  add r3.y, r4.w, r12.w
  lt r7.w, l(0.000000), r3.y
  if_nz r7.w
    mul r1.x, r1.x, cb1[183].w
    add r7.w, -|r4.z|, r4.z
    mad r4.z, r4.w, r7.w, |r4.z|
    mad r4.z, r4.z, l(2.000000), l(2.000000)
    div r4.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.zzzz
    mul r4.xy, r4.zwzz, r4.yxyy
    mad r4.xy, r4.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t4.xyzw, s1, r1.x
    ge r1.x, l(0.900000), r5.x
    and r1.x, r1.x, r6.w
    mov_sat r13.yzw, r4.xxyz
    movc r4.xyz, r1.xxxx, r13.yzwy, r4.xyzx
    div r4.xyz, r4.xyzx, cb1[176].wwww
    mad r12.xyz, r4.xyzx, r3.yyyy, r12.xyzx
  endif 
  mul r1.x, r11.w, l(0.080000)
  mad r4.xyz, -r11.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
  mad r4.xyz, r5.xxxx, r4.xyzx, r1.xxxx
  dp3 r1.x, r4.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r1.x, r1.x, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xzxx, t1.xyzw, s1, l(0.000000)
  mad r3.xyz, r4.xyzx, r3.xxxx, r3.yyyy
  mul r3.xyz, r1.xxxx, r3.xyzx
  mul r3.xyz, r3.xyzx, r12.xyzx
  mul r3.xyz, r1.wwww, r3.xyzx
  mul r4.xyz, r1.yyyy, -r7.xyzx
  exp r4.xyz, r4.xyzx
  mad r4.xyz, r3.xyzx, r4.xyzx, r8.xyzx
  movc r3.xyz, r3.wwww, r3.xyzx, r4.xyzx
  dp3 r1.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r1.y, r1.z, l(5)
  if_nz r1.y
    dp3 r1.y, -r9.xyzx, r6.xyzx
    add r1.y, r1.y, r1.y
    mad r4.xyz, r6.xyzx, -r1.yyyy, -r9.xyzx
    dp3 r1.y, r4.xyzx, r11.xzwx
    dp3 r1.z, r4.xyzx, r6.xyzx
    mul r4.xyz, r1.zzzz, r6.xyzx
    mad r4.xyz, r11.xzwx, r1.yyyy, r4.xyzx
    dp3 r1.y, r11.xzwx, r9.xyzx
    mad r1.y, -r1.y, r1.y, l(1.000000)
    mul r1.z, r5.y, r5.y
    div r1.z, l(2.000000), r1.z
    add r1.z, r1.z, l(-2.000000)
    max r1.z, r1.z, l(1.000000031E-022)
    sqrt r1.yz, r1.yyzy
    div r1.z, l(-10.000000), r1.z
    exp r1.z, r1.z
    add r1.z, r1.z, l(-0.000980)
    mul_sat r1.z, r1.z, l(1.00795019)
    add r1.z, -r1.z, l(1.000000)
    if_z cb1[184].z
      mul r3.w, r1.z, cb1[174].w
      mov r0.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r4.w, l(1.000000)
      mov r6.w, l(0)
      loop 
        uge r8.x, r6.w, l(15)
        breakc_nz r8.x
        imul null, r8.x, r6.w, l(7)
        dp4 r11.x, r0.xyzw, cb1[r8.x + 68].xyzw
        dp4 r11.y, r0.xyzw, cb1[r8.x + 69].xyzw
        dp4 r11.z, r0.xyzw, cb1[r8.x + 70].xyzw
        ge r8.yzw, r11.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r8.yzw, r8.yyzw, cb1[r8.x + 72].xxyz, cb1[r8.x + 73].xxyz
        add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r8.yzw, r8.yyzw, r11.xxyz
        mul r8.y, r8.z, r8.y
        mul r8.y, r8.w, r8.y
        lt r8.z, l(0.000000), r8.y
        if_nz r8.z
          dp3 r11.x, r4.xyzx, cb1[r8.x + 68].xyzx
          dp3 r11.y, r4.xyzx, cb1[r8.x + 69].xyzx
          dp3 r11.z, r4.xyzx, cb1[r8.x + 70].xyzx
          mul r8.y, r8.y, cb1[r8.x + 73].w
          mov r11.w, cb1[r8.x + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t5.xyzw, s2, r3.w
          mul r11.xyzw, r11.xyzw, cb1[r8.x + 74].xxxy
          min r8.x, r4.w, r8.y
          mad r11.xyzw, r11.xyzw, r8.xxxx, r7.xyzw
          add r8.x, r4.w, -r8.x
          ge r8.y, l(0.000000), r8.x
          if_nz r8.y
            mov r7.xyzw, r11.xyzw
            mov r4.w, r8.x
            break 
          endif 
          mov r7.xyzw, r11.xyzw
          mov r4.w, r8.x
        endif 
        iadd r6.w, r6.w, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r4.w, l(1.000000)
    endif 
    add r3.w, r4.w, r7.w
    lt r6.w, l(0.000000), r3.w
    if_nz r6.w
      mul r1.z, r1.z, cb1[183].w
      add r6.w, -|r4.z|, r4.z
      mad r4.z, r4.w, r6.w, |r4.z|
      mad r4.z, r4.z, l(2.000000), l(2.000000)
      div r4.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.zzzz
      mul r4.xy, r4.zwzz, r4.yxyy
      mad r4.xy, r4.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t4.xyzw, s1, r1.z
      mov_sat r8.xyz, r4.xyzx
      movc r4.xyz, cb1[184].zzzz, r8.xyzx, r4.xyzx
      div r4.xyz, r4.xyzx, cb1[176].wwww
      mad r7.xyz, r4.xyzx, r3.wwww, r7.xyzx
    endif 
    sqrt r4.xyz, r10.xzwx
    dp3 r1.z, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r1.wwww
    mad r4.xyz, r1.zzzz, r4.xyzx, r1.wwww
    mul r4.xyz, r4.xyzx, r7.xyzx
    mul r1.z, r5.z, l(0.080000)
    mad r7.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r7.xyz, r5.xxxx, r7.xyzx, r1.zzzz
    dp3 r1.z, r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r1.z, r1.z, l(50.000000)
    dp3_sat r5.w, r6.xyzx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.xy, r5.wyww, t1.xyzw, s1, l(0.000000)
    mad r7.xyz, r7.xyzx, r8.xxxx, r8.yyyy
    mul r7.xyz, r1.zzzz, r7.xyzx
    mul r7.xyz, r1.yyyy, r7.xyzx
    mul r3.xyz, r4.xyzx, r7.xyzx
    dp3 r1.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r1.y, r5.y, r13.x
    dp3 r1.z, -r9.xyzx, r6.xyzx
    add r1.z, r1.z, r1.z
    mad r4.xyz, r6.xyzx, -r1.zzzz, -r9.xyzx
    mul r1.y, r1.y, r1.y
    div r1.y, l(2.000000), r1.y
    add r1.y, r1.y, l(-2.000000)
    max r1.y, r1.y, l(1.000000031E-022)
    sqrt r1.y, r1.y
    div r1.y, l(-10.000000), r1.y
    exp r1.y, r1.y
    add r1.y, r1.y, l(-0.000980)
    mul_sat r1.y, r1.y, l(1.00795019)
    add r1.y, -r1.y, l(1.000000)
    if_z cb1[184].z
      mul r1.z, r1.y, cb1[174].w
      mov r0.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
      mov r4.w, l(0)
      loop 
        uge r6.w, r4.w, l(15)
        breakc_nz r6.w
        imul null, r6.w, r4.w, l(7)
        dp4 r8.x, r0.xyzw, cb1[r6.w + 68].xyzw
        dp4 r8.y, r0.xyzw, cb1[r6.w + 69].xyzw
        dp4 r8.z, r0.xyzw, cb1[r6.w + 70].xyzw
        ge r11.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r11.xyz, r11.xyzx, cb1[r6.w + 72].xyzx, cb1[r6.w + 73].xyzx
        add r8.xyz, -|r8.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r8.xyz, r11.xyzx, r8.xyzx
        mul r8.x, r8.y, r8.x
        mul r8.x, r8.z, r8.x
        lt r8.y, l(0.000000), r8.x
        if_nz r8.y
          dp3 r11.x, r4.xyzx, cb1[r6.w + 68].xyzx
          dp3 r11.y, r4.xyzx, cb1[r6.w + 69].xyzx
          dp3 r11.z, r4.xyzx, cb1[r6.w + 70].xyzx
          mul r8.x, r8.x, cb1[r6.w + 73].w
          mov r11.w, cb1[r6.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t5.xyzw, s2, r1.z
          mul r11.xyzw, r11.xyzw, cb1[r6.w + 74].xxxy
          min r6.w, r3.w, r8.x
          mad r8.xyzw, r11.xyzw, r6.wwww, r7.xyzw
          add r6.w, r3.w, -r6.w
          ge r9.w, l(0.000000), r6.w
          if_nz r9.w
            mov r7.xyzw, r8.xyzw
            mov r3.w, r6.w
            break 
          endif 
          mov r7.xyzw, r8.xyzw
          mov r3.w, r6.w
        endif 
        iadd r4.w, r4.w, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
    endif 
    add r0.x, r3.w, r7.w
    lt r0.y, l(0.000000), r0.x
    if_nz r0.y
      mul r0.y, r1.y, cb1[183].w
      add r0.z, -|r4.z|, r4.z
      mad r0.z, r3.w, r0.z, |r4.z|
      mad r0.z, r0.z, l(2.000000), l(2.000000)
      div r0.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.zzzz
      mul r0.zw, r0.zzzw, r4.yyyx
      mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t4.wxyz, s1, r0.y
      ine r1.y, cb1[184].z, l(0)
      ge r1.z, l(0.900000), r5.x
      and r1.y, r1.z, r1.y
      mov_sat r4.xyz, r0.yzwy
      movc r0.yzw, r1.yyyy, r4.xxyz, r0.yyzw
      div r0.yzw, r0.yyzw, cb1[176].wwww
      mad r7.xyz, r0.yzwy, r0.xxxx, r7.xyzx
    endif 
    mul r0.x, r5.z, l(0.080000)
    mad r0.yzw, -r5.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r10.xxzw
    mad r0.xyz, r5.xxxx, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r5.w, r6.xyzx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r5.wyww, t1.zxyw, s1, l(0.000000)
    mad r0.xyz, r0.xyzx, r1.yyyy, r1.zzzz
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r7.xyzx
    mul r3.xyz, r1.wwww, r0.xyzx
    dp3 r1.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r1.x, r2.w
add r0.yzw, r2.xxyz, r3.xxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 1285 instruction slots used