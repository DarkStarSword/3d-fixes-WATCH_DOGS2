// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1d797cfa0a8f984b-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:02:05 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2FxSmoke
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   16 Size:    16 [unused]
//   float4 FakeLightColor;             // Offset:   32 Size:    16
//   float AlphaScale;                  // Offset:   48 Size:     4
//   float AlphaTestValue;              // Offset:   52 Size:     4
//   float ColorFromSprite;             // Offset:   56 Size:     4
//   float ColorFromTexture;            // Offset:   60 Size:     4
//   float FakeLightScale;              // Offset:   64 Size:     4
//   float LightContrast;               // Offset:   68 Size:     4
//   float SoftDistance;                // Offset:   72 Size:     4
//   float Translucency;                // Offset:   76 Size:     4 [unused]
//   float Transparency;                // Offset:   80 Size:     4
//   bool AlphaTestEnabled;             // Offset:   84 Size:     4 [unused]
//   bool Blend;                        // Offset:   88 Size:     4 [unused]
//   bool Lit;                          // Offset:   92 Size:     4 [unused]
//   bool Soft;                         // Offset:   96 Size:     4 [unused]
//   bool Sun;                          // Offset:  100 Size:     4 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
// cbuffer Emitter
// {
//
//   float4 CustomDataOverEmitterLifeTime;// Offset:    0 Size:    16
//   float2 AlphaScaleOffset;           // Offset:   16 Size:     8 [unused]
//   float ParticleZOffset;             // Offset:   24 Size:     4 [unused]
//   float QuadTessellationFactor;      // Offset:   28 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// Viewport__DepthVPSamplerMS        texture   float        2dMS    0        1
// MaterialWD2FxSmoke__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    2        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// MaterialWD2FxSmoke                cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
// Emitter                           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   x   
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xy  
// SV_SampleIndex           0   x           6   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2dms(0) (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear sample v0.xyzw
dcl_input_ps constant v1.x
dcl_input_ps linear sample v2.xyzw
dcl_input_ps linear sample v3.xyzw
dcl_input_ps linear sample v4.xy
dcl_input_ps_siv linear noperspective sample v5.xy, position
dcl_input_ps_sgv v6.x, sampleIndex
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1d797cfa0a8f984b-ps.txt

mul r7.w, r7.x, r7.y
mul r9.x, r7.w, cb0[9].x
mul r9.y, r7.w, cb0[10].x
mul r9.z, r7.w, cb0[11].x
mul r9.w, r7.w, cb0[12].x
dp4 r10.x, r9.xyzw, cb0[17].xyzw
dp4 r10.y, r9.xyzw, cb0[18].xyzw
dp4 r10.z, r9.xyzw, cb0[19].xyzw
add r8.xyz, cb3[30].xyz, r10.xyz

ftoi r0.xy, v5.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw, v6.x
mov r0.y, l(1.000000)
dp2 r0.z, r0.xyxx, cb0[15].zwzz
dp2 r0.x, r0.xyxx, cb0[16].zwzz
div r0.x, -r0.z, r0.x
add r0.x, r0.x, -v3.w
mul r0.x, r0.x, cb0[67].z
mul_sat r0.x, r0.x, cb2[4].z
mul r0.y, r0.x, v0.w
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t1.xyzw, s0
mad r0.x, -v0.w, r0.x, l(1.000000)
mad r0.z, -r0.x, cb2[5].x, l(1.000000)
mad r0.x, -r0.x, cb2[5].x, r1.w
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul_sat r0.x, r0.z, r0.x
mad r0.z, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.z
mul r0.z, r0.x, r0.y
mul r0.z, r0.z, cb2[3].x
mov_sat r2.xyz, r0.zzzz
ge r0.z, cb2[3].y, r2.z
discard_nz r0.z
add r3.xyz, v0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb2[3].zzzz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xzw, r3.xxyz, r1.xxyz, -r3.xxyz
mad r1.xzw, cb2[3].wwww, r1.xxzw, r3.xxyz
dp3 r0.z, cb1[2].xyzx, cb0[173].xyzx
mad r0.x, r0.y, r0.x, l(-1.000000)
mad_sat r0.x, -r0.z, r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb2[4].y
exp r0.x, r0.x
mad r0.xyz, v3.xyzx, r0.xxxx, v2.xyzx
mul r0.xyz, r0.xyzx, r1.xzwx
add r0.w, -r1.y, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r2.z, r0.w
div r0.w, r0.w, cb0[176].w
mul r0.w, r0.w, cb2[4].x
mul r0.w, r0.w, v1.x
mul r0.w, r0.w, cb4[0].x
mul r1.xyz, r0.wwww, cb2[2].xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mul r1.xy, v5.xyxx, cb3[37].zzzz
round_ni r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, cb3[17].xyxx
iadd r0.w, cb3[28].z, l(-1)
utof r0.w, r0.w
mul r1.w, r0.w, l(0.031250)
exp r1.w, r1.w
mad r1.w, r1.w, cb3[1].z, cb3[1].w
min r2.w, r1.w, v2.w
add r2.w, r2.w, -cb3[1].w
div r2.w, r2.w, cb3[1].z
log r2.w, r2.w
mul r2.w, r2.w, l(32.000000)
div r1.z, r2.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r1.xyzx, t2.xyzw, s0, l(0.000000)
mad r4.xyzw, cb3[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r1.xyxy
mov r5.xy, r4.xyxx
mov r5.z, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mad r4.xyzw, cb3[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r1.xyxy
mov r5.xy, r4.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r5.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xz, r1.xxyx, cb3[0].zzwz
mul r1.xy, r4.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r0.w, r1.w, cb3[0].x
add r0.w, r0.w, l(1.000000)
mov r1.z, -cb3[0].x
mul r1.xyz, r0.wwww, r1.xyzx
mov r1.w, l(1.000000)
dp4 r4.x, r1.xyzw, cb3[13].xyzw
dp4 r4.y, r1.xyzw, cb3[14].xyzw
dp4 r4.z, r1.xyzw, cb3[15].xyzw
add r1.xyzw, -r4.xyzx, r8.xyzx
div r3.xyz, r3.xyzx, cb0[176].wwww
exp r0.w, r3.w
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r1.xyzw, r1.xyzw, r2.wwww
div r2.w, cb3[31].w, |r1.z|
min r2.w, r2.w, v2.w
mul r3.w, r2.w, cb3[29].w
min r3.w, r3.w, l(1.000000)
add r2.w, r2.w, -cb3[33].w
mul_sat r2.w, r2.w, cb3[32].w
mul r2.w, r2.w, r3.w
mul r3.w, r2.w, cb3[34].w
mul r2.w, r2.w, cb3[30].w
mul r2.w, r2.w, l(-1.442695)
exp r2.w, r2.w
mul r4.xyz, r1.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r5.xyz, r4.xxxx, cb1[32].xyzx
mad r5.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r5.xyzx
mad r4.xyw, r4.yyyy, cb1[33].xyxz, r5.xyxz
mad r4.xyz, r4.zzzz, cb1[34].xyzx, r4.xywx
mul r5.xyzw, r1.xyzw, r1.yzzz
mul r5.xyw, r5.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r4.xyz, r5.xxxx, cb1[35].xyzx, r4.xyzx
mad r4.xyz, r5.yyyy, cb1[36].xyzx, r4.xyzx
mad r1.x, r5.z, l(3.000000), l(-1.000000)
mul r1.x, r1.x, l(0.315392)
mad r4.xyz, r1.xxxx, cb1[37].xyzx, r4.xyzx
mad r4.xyz, r5.wwww, cb1[38].xyzx, r4.xyzx
mul r1.x, r1.y, r1.y
mad r1.x, r1.w, r1.w, -r1.x
mul r1.x, r1.x, l(0.546274)
mad r1.xyz, r1.xxxx, cb1[39].xyzx, r4.xyzx
mul r1.xyz, r1.xyzx, r3.wwww
mul r1.xyz, r1.xyzx, cb3[29].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r3.xyzx
mul r1.w, r0.w, r2.w
movc r1.xyzw, cb3[37].wwww, r1.xyzw, l(0,0,0,1.000000)
mul r0.xyz, r0.xyzx, r1.wwww
mad r0.xyz, r1.xyzx, r2.zzzz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 o0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
dp3 o1.w, r2.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mov o0.xyz, r0.xyzx
mov o1.xyz, r2.xyzx
ret 
// Approximately 137 instruction slots used