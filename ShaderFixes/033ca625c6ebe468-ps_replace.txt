// HBAO+

// ---- Created with 3Dmigoto v1.2.42 on Tue Dec 27 10:50:05 2016
Texture2D<float4> t1 : register(t1);

Texture2DArray<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[2];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[14];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  out float o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 s = StereoParams.Load(0);
// Found with frame analysis compared against an inverse projection matrix:
float fov_h = -cb0[2].z;

  r0.xy = floor(v0.xy);
  r0.xy = r0.xy * float2(4,4) + cb1[1].xy;
  r0.zw = cb0[1].xy * r0.xy;
  r1.xy = float2(0.25,0.25) * r0.zw;
  r1.z = 0;
  r2.z = t0.SampleLevel(s0_s, r1.xyz, 0).x;
  r0.z = cb0[3].x / r2.z;
  r0.w = cb0[8].x / r0.z;
  r0.w = max(1, r0.w);
  r0.z = r0.z * r0.w;
  r1.z = cmp(r0.z < 1);
  if (r1.z != 0) {
    o0.x = 1;
    return;
  }
  r1.zw = cb0[2].xy * r1.xy + cb0[2].zw;
  r2.xy = r1.zw * r2.zz;

// The fix for HBAO+ is pretty simple. We need to remove the view-space stereo
// formula each time the shader generates a 3D coordinate from the depth
// buffer. It is important that we adjust all of them, otherwise we will make
// it more broken.

// Unlike previous times we fixed HBAO+, here we use the fov_h value passed
// into this shader by the game to perform the view space correction, which we
// identified via the constant buffer debug shader comparing to the value from
// the inverse projection matrix in another shader.

r2.x -= s.x * (r2.z - s.y) * fov_h;

  r0.xy = cb0[7].xy + r0.xy;
  r3.xy = (int2)r0.xy;
  r3.zw = float2(0,0);
  r3.xyz = t1.Load(r3.xyz).xyz;
  r3.xyz = r3.xyz * cb0[13].xxx + cb0[13].yyy;
  r4.xyz = cb0[10].xyz * r3.yyy;
  r3.xyw = r3.xxx * cb0[9].xyz + r4.xyz;
  r3.xyz = r3.zzz * cb0[11].xyz + r3.xyw;
  r0.x = dot(r3.xyz, r3.xyz);
  r0.x = rsqrt(r0.x);
  r3.xyz = r3.xyz * r0.xxx;
  r0.x = r0.w * r0.w;
  r0.x = 1 / r0.x;
  r0.x = cb0[3].z * r0.x;
  r0.y = 0.0500000007 * r0.z;
  r0.y = cb1[0].z * r0.y + 1;
  r1.zw = cb1[0].xy * r0.yy;
  r1.zw = round(r1.zw);
  r4.xy = r1.zw * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r1.zw = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r1.zw * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r0.w = r0.z * 0.0500000007 + r0.y;
  r4.xyz = r5.xyz + -r2.xyz;
  r1.z = dot(r4.xyz, r4.xyz);
  r1.w = dot(r3.xyz, r4.xyz);
  r2.w = rsqrt(r1.z);
  r1.w = saturate(r1.w * r2.w + -cb0[3].w);
  r1.z = saturate(r1.z * r0.x + 1);
  r4.xy = cb1[0].xy * r0.ww;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r2.w = r0.z * 0.0500000007 + r0.w;
  r4.xyz = r5.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r4.yz = cb1[0].xy * r2.ww;
  r4.yz = round(r4.yz);
  r5.xy = r4.yz * cb0[1].xy + r1.xy;
  r5.z = 0;
  r4.w = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r5.xy = cb0[2].xy * r5.xy + cb0[2].zw;
  r4.yz = r5.xy * r4.ww;

r4.y -= s.x * (r4.w - s.y) * fov_h;

  r0.z = r0.z * 0.0500000007 + r2.w;
  r4.yzw = r4.yzw + -r2.xyz;
  r5.x = dot(r4.yzw, r4.yzw);
  r4.y = dot(r3.xyz, r4.yzw);
  r4.z = rsqrt(r5.x);
  r4.y = saturate(r4.y * r4.z + -cb0[3].w);
  r4.z = saturate(r5.x * r0.x + 1);
  r4.y = r4.y * r4.z;
  r3.w = r4.x * r3.w + r4.y;
  r4.xy = cb1[0].xy * r0.zz;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r4.xyz = r5.xyz + -r2.xyz;
  r4.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r4.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r4.y = saturate(r4.w * r0.x + 1);
  r3.w = r4.x * r4.y + r3.w;
  r4.xy = float2(0.707106769,0.707106769) * cb1[0].xy;
  r5.x = cb1[0].x * 0.707106769 + -r4.y;
  r5.y = r4.y + r4.x;
  r4.zw = r5.xy * r0.yy;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r4.z = dot(r6.xyz, r6.xyz);
  r4.w = dot(r3.xyz, r6.xyz);
  r5.z = rsqrt(r4.z);
  r4.w = saturate(r4.w * r5.z + -cb0[3].w);
  r4.z = saturate(r4.z * r0.x + 1);
  r4.z = r4.w * r4.z;
  r1.z = r1.w * r1.z + r4.z;
  r4.zw = r5.xy * r0.ww;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r1.w = dot(r6.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  r4.w = rsqrt(r1.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r1.w = saturate(r1.w * r0.x + 1);
  r1.w = r4.z * r1.w + r3.w;
  r4.zw = r5.xy * r2.ww;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r3.w = dot(r6.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r5.xy * r0.zz;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r5.x = cb1[0].x * -4.37113883e-008 + -cb1[0].y;
  r5.y = cb1[0].y * -4.37113883e-008 + cb1[0].x;
  r4.zw = r5.xy * r0.yy;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r3.w = dot(r6.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.z = r4.z * r3.w + r1.z;
  r4.zw = r5.xy * r0.ww;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r3.w = dot(r6.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r5.xy * r2.ww;
  r4.zw = round(r4.zw);
  r6.xy = r4.zw * cb0[1].xy + r1.xy;
  r6.z = 0;
  r7.z = t0.SampleLevel(s0_s, r6.xyz, 0).x;
  r4.zw = cb0[2].xy * r6.xy + cb0[2].zw;
  r7.xy = r4.zw * r7.zz;

r7.x -= s.x * (r7.z - s.y) * fov_h;

  r6.xyz = r7.xyz + -r2.xyz;
  r3.w = dot(r6.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r5.xy * r0.zz;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r5.x = cb1[0].x * -0.707106769 + -r4.y;
  r5.y = cb1[0].y * -0.707106769 + r4.x;
  r4.xy = r5.xy * r0.yy;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r6.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r6.xy = r4.xy * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r4.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.z = r4.x * r3.w + r1.z;
  r4.xy = r5.xy * r0.ww;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r6.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r6.xy = r4.xy * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r4.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r4.xy = r5.xy * r2.ww;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r6.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r6.xy = r4.xy * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r4.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r4.xy = r5.xy * r0.zz;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r4.xyz = r5.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r4.x = -cb1[0].y * -8.74227766e-008 + -cb1[0].x;
  r4.y = cb1[0].x * -8.74227766e-008 + -cb1[0].y;
  r4.zw = r4.xy * r0.yy;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.z = r4.z * r3.w + r1.z;
  r4.zw = r4.xy * r0.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r4.xy * r2.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.xy = r4.xy * r0.zz;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r4.xyz = r5.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r3.w = -0.707106888 * cb1[0].y;
  r4.x = cb1[0].x * -0.70710665 + -r3.w;
  r4.y = dot(cb1[0].yx, float2(-0.70710665,-0.707106888));
  r4.zw = r4.xy * r0.yy;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.z = r4.z * r3.w + r1.z;
  r4.zw = r4.xy * r0.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r4.xy * r2.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.xy = r4.xy * r0.zz;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r4.xyz = r5.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r4.x = cb1[0].x * 1.19248806e-008 + cb1[0].y;
  r4.y = cb1[0].y * 1.19248806e-008 + -cb1[0].x;
  r4.zw = r4.xy * r0.yy;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.z = r4.z * r3.w + r1.z;
  r4.zw = r4.xy * r0.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.zw = r4.xy * r2.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r4.z = dot(r3.xyz, r5.xyz);
  r4.w = rsqrt(r3.w);
  r4.z = saturate(r4.z * r4.w + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.z * r3.w + r1.w;
  r4.xy = r4.xy * r0.zz;
  r4.xy = round(r4.xy);
  r4.xy = r4.xy * cb0[1].xy + r1.xy;
  r4.z = 0;
  r5.z = t0.SampleLevel(s0_s, r4.xyz, 0).x;
  r4.xy = cb0[2].xy * r4.xy + cb0[2].zw;
  r5.xy = r4.xy * r5.zz;

r5.x -= s.x * (r5.z - s.y) * fov_h;

  r4.xyz = r5.xyz + -r2.xyz;
  r3.w = dot(r4.xyz, r4.xyz);
  r4.x = dot(r3.xyz, r4.xyz);
  r4.y = rsqrt(r3.w);
  r4.x = saturate(r4.x * r4.y + -cb0[3].w);
  r3.w = saturate(r3.w * r0.x + 1);
  r1.w = r4.x * r3.w + r1.w;
  r3.w = -0.707106531 * cb1[0].y;
  r4.x = cb1[0].x * 0.707107008 + -r3.w;
  r4.y = dot(cb1[0].yx, float2(0.707107008,-0.707106531));
  r4.zw = r4.xy * r0.yy;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r0.y = dot(r5.xyz, r5.xyz);
  r3.w = dot(r3.xyz, r5.xyz);
  r4.z = rsqrt(r0.y);
  r3.w = saturate(r3.w * r4.z + -cb0[3].w);
  r0.y = saturate(r0.y * r0.x + 1);
  r0.y = r3.w * r0.y + r1.z;
  r4.zw = r4.xy * r0.ww;
  r4.zw = round(r4.zw);
  r5.xy = r4.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r4.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r4.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r0.w = dot(r5.xyz, r5.xyz);
  r1.z = dot(r3.xyz, r5.xyz);
  r3.w = rsqrt(r0.w);
  r1.z = saturate(r1.z * r3.w + -cb0[3].w);
  r0.w = saturate(r0.w * r0.x + 1);
  r0.w = r1.z * r0.w + r1.w;
  r1.zw = r4.xy * r2.ww;
  r1.zw = round(r1.zw);
  r5.xy = r1.zw * cb0[1].xy + r1.xy;
  r5.z = 0;
  r6.z = t0.SampleLevel(s0_s, r5.xyz, 0).x;
  r1.zw = cb0[2].xy * r5.xy + cb0[2].zw;
  r6.xy = r1.zw * r6.zz;

r6.x -= s.x * (r6.z - s.y) * fov_h;

  r5.xyz = r6.xyz + -r2.xyz;
  r1.z = dot(r5.xyz, r5.xyz);
  r1.w = dot(r3.xyz, r5.xyz);
  r2.w = rsqrt(r1.z);
  r1.w = saturate(r1.w * r2.w + -cb0[3].w);
  r1.z = saturate(r1.z * r0.x + 1);
  r0.w = r1.w * r1.z + r0.w;
  r1.zw = r4.xy * r0.zz;
  r1.zw = round(r1.zw);
  r1.xy = r1.zw * cb0[1].xy + r1.xy;
  r1.z = 0;
  r4.z = t0.SampleLevel(s0_s, r1.xyz, 0).x;
  r1.xy = cb0[2].xy * r1.xy + cb0[2].zw;
  r4.xy = r1.xy * r4.zz;

r4.x -= s.x * (r4.z - s.y) * fov_h;

  r1.xyz = r4.xyz + -r2.xyz;
  r0.z = dot(r1.xyz, r1.xyz);
  r1.x = dot(r3.xyz, r1.xyz);
  r1.y = rsqrt(r0.z);
  r1.x = saturate(r1.x * r1.y + -cb0[3].w);
  r0.x = saturate(r0.z * r0.x + 1);
  r0.x = r1.x * r0.x + r0.w;
  r0.x = cb0[4].y * r0.x;
  r0.x = r0.y * cb0[4].x + r0.x;
  o0.x = saturate(-r0.x * 0.0625 + 1);
  return;
}
