// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 2ab35beda1f6ece7-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:55:14 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer TemporalFiltering
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 CurrentInvViewMatrix;     // Offset:   64 Size:    64 [unused]
//   float4x4 PreviousProjectionMatrix; // Offset:  128 Size:    64 [unused]
//   float4x4 PreviousViewMatrix;       // Offset:  192 Size:    64 [unused]
//   float4 SceneTextureSize;           // Offset:  256 Size:    16
//   uint ConfidenceInitialValue;       // Offset:  272 Size:     4 [unused]
//   bool GameIsPaused;                 // Offset:  276 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TemporalFiltering__SceneColorTextureSRV__TexObj__    texture  float4          2d    0        1
// TemporalFiltering__DepthTextureSRV    texture  float4        2dMS    1        1
// TemporalFiltering__MotionVectorTextureSRV    texture  float4        2dMS    2        1
// TemporalFiltering__SceneFullMotionVectorRW        UAV  float2          2d    0        1
// TemporalFiltering__SceneColorYCoCgAndLumaDiffRW        UAV  float4          2d    1        1
// TemporalFiltering__MotionVectorSampleOffsetsRW        UAV    uint          2d    2        1
// Viewport                          cbuffer      NA          NA    0        1
// TemporalFiltering                 cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[68], immediateIndexed
dcl_constantbuffer cb1[18], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_uav_typed_texture2d (uint,uint,uint,uint) u2
dcl_input vThreadID.xy
dcl_temps 12
dcl_indexableTemp x0[8], 4
dcl_thread_group 16, 16, 1

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 2ab35beda1f6ece7-cs.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

ftou r0.xy, cb1[16].xyxx
ult r0.yz, r0.xxyx, vThreadID.xxyx
or r0.y, r0.z, r0.y
if_nz r0.y
  ret 
endif 
ftoi r0.yz, cb1[16].xxyx
imin r1.xy, r0.yzyy, vThreadID.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.w, r1.xyww, t1.yzwx, l(1)
mov x0[0].x, r0.w
iadd r2.xyzw, vThreadID.xxyy, l(-1, -1, -1, 0)
imax r2.xyz, r2.xyzx, l(0, 0, 0, 0)
imin r3.xy, r0.yzyy, r2.xwxx
mov r3.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r4.x, r3.xyww, t1.xyzw, l(0)
mov x0[1].x, r4.x
imin r5.xy, r0.yzyy, r2.yzyy
mov r5.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r2.y, r5.xyzw, t1.yxzw, l(0)
mov x0[2].x, r2.y
ldms_indexable(texture2dms)(float,float,float,float) r2.z, r3.xyzw, t1.yzxw, l(1)
mov x0[3].x, r2.z
ldms_indexable(texture2dms)(float,float,float,float) r1.x, r1.xyzw, t1.xyzw, l(0)
mov x0[4].x, r1.x
iadd r3.xyzw, vThreadID.xxyy, l(0, 0, 1, -1)
imin r5.xy, r0.yzyy, r3.yzyy
mov r5.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.y, r5.xyzw, t1.yxzw, l(1)
mov x0[5].x, r1.y
imax r3.y, r3.w, l(0)
imin r3.xy, r0.yzyy, r3.xyxx
mov r3.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.z, r3.xyzw, t1.yzxw, l(0)
mov x0[6].x, r1.z
iadd r3.yzw, vThreadID.xxyx, l(0, -1, 1, 1)
imax r3.x, r3.y, l(0)
imin r5.xy, r0.yzyy, r3.xzxx
mov r5.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.w, r5.xyzw, t1.yzwx, l(1)
mov x0[7].x, r1.w
lt r0.w, r4.x, r0.w
movc r0.w, r0.w, l(0), l(1)
lt r3.x, r2.z, r2.y
lt r3.y, r1.y, r1.x
movc r3.xy, r3.xyxx, l(2,4,0,0), l(3,5,0,0)
mov r3.z, x0[r0.w + 0].x
mov r4.x, x0[r3.x + 0].x
lt r4.x, r4.x, r3.z
movc r3.x, r4.x, r0.w, r3.x
mov r4.x, x0[r3.y + 0].x
lt r4.x, r4.x, r3.z
movc r3.y, r4.x, r0.w, r3.y
lt r1.z, r2.y, r1.z
movc r1.z, r1.z, l(6), l(2)
mov r2.y, x0[r1.z + 0].x
lt r1.x, r1.x, r2.y
movc r1.x, r1.x, r1.z, l(4)
mov r1.z, x0[r1.x + 0].x
lt r1.z, r3.z, r1.z
movc r1.x, r1.z, r1.x, r0.w
lt r1.z, r2.z, r1.w
movc r1.z, r1.z, l(7), l(3)
mov r1.w, x0[r1.z + 0].x
lt r1.y, r1.y, r1.w
movc r1.y, r1.y, r1.z, l(5)
mov r1.z, x0[r1.y + 0].x
lt r1.z, r3.z, r1.z
movc r0.w, r1.z, r1.y, r0.w
ishl r0.w, r0.w, l(8)
imad r0.w, r1.x, l(4096), r0.w
ishl r1.x, r3.x, l(4)
iadd r0.w, r0.w, r1.x
iadd r0.w, r0.w, r3.y
store_uav_typed u2.xyzw, vThreadID.xyyy, r0.wwww
iadd r0.yz, r0.yyzy, l(0, -1, -1, 0)
imin r1.xy, r0.yzyy, vThreadID.xyxx
bfi r0.w, l(31), l(1), r1.y, l(1)
iadd r1.z, r0.w, l(-1)
mov r1.w, l(0)
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xzww, t0.xyzw
imin r2.xy, r0.yzyy, r2.xwxx
bfi r2.z, l(31), l(1), r2.y, l(1)
mov r2.w, l(0)
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xzww, t0.xyzw
add r0.y, -r4.z, r4.x
mad r0.z, r0.y, l(0.500000), r4.z
mul r0.z, r0.z, l(0.500000)
mad r4.x, r4.y, l(0.500000), r0.z
mad r0.z, r4.y, l(0.500000), -r0.z
mad r4.y, r0.y, l(0.500000), l(0.500000)
add r4.z, r0.z, l(0.500000)
add r0.y, -r5.z, r5.x
mad r0.z, r0.y, l(0.500000), r5.z
mul r0.z, r0.z, l(0.500000)
mad r5.x, r5.y, l(0.500000), r0.z
mad r0.z, r5.y, l(0.500000), -r0.z
mad r5.y, r0.y, l(0.500000), l(0.500000)
add r5.z, r0.z, l(0.500000)
ishl r6.yzw, vThreadID.yyyy, l(0, 1, 1, 1)
mov r6.x, vThreadID.x
store_uav_typed u1.xyzw, r6.xwww, r4.xyzw
iadd r4.xyzw, r6.xwww, l(-1, 1, 1, 1)
store_uav_typed u1.xyzw, r4.xwww, r5.xyzw
if_z cb1[17].y
  ldms_indexable(texture2dms)(float,float,float,float) r0.yz, r1.xyww, t2.wxyz, l(1)
  ne r3.xy, r0.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r1.z, r3.y, r3.x
  if_nz r1.z
    lt r1.z, l(1.000000), r0.y
    add r2.z, r0.y, l(-2.000000)
    movc r0.y, r1.z, r2.z, r0.y
  else 
    ldms_indexable(texture2dms)(float,float,float,float) r1.z, r1.xyww, t1.zwxy, l(1)
    mov r1.w, l(1.000000)
    dp2 r2.z, r1.zwzz, cb0[11].zwzz
    dp2 r1.z, r1.zwzz, cb0[12].zwzz
    div r1.z, -r2.z, r1.z
    itof r1.xy, r1.xyxx
    mad r1.xy, r1.xyxx, cb1[16].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r1.xy, r1.xyxx, cb0[0].xyxx
    mul r3.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
    div r1.x, r1.z, cb0[67].x
    mov r3.z, -cb0[67].x
    mul r1.xyz, r1.xxxx, r3.xyzx
    mov r1.w, l(1.000000)
    dp4 r3.x, r1.xyzw, cb0[24].xyzw
    dp4 r3.y, r1.xyzw, cb0[25].xyzw
    dp4 r2.z, r1.xyzw, cb0[27].xyzw
    dp4 r7.x, r1.xyzw, cb1[0].xyzw
    dp4 r7.y, r1.xyzw, cb1[1].xyzw
    dp4 r1.x, r1.xyzw, cb1[3].xyzw
    max r1.x, r1.x, l(0.000100)
    div r1.xy, r7.xyxx, r1.xxxx
    div r1.zw, r3.xxxy, r2.zzzz
    add r1.xy, -r1.xyxx, r1.zwzz
    mul r0.yw, r1.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
    mov r0.z, -r0.w
  endif 
  ldms_indexable(texture2dms)(float,float,float,float) r1.xy, r2.xyww, t2.xyzw, l(0)
  ne r3.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r0.w, r3.y, r3.x
  if_nz r0.w
    lt r0.w, l(1.000000), r1.x
    add r1.w, r1.x, l(-2.000000)
    movc r1.x, r0.w, r1.w, r1.x
  else 
    ldms_indexable(texture2dms)(float,float,float,float) r2.z, r2.xyww, t1.zwxy, l(0)
    mov r2.w, l(1.000000)
    dp2 r0.w, r2.zwzz, cb0[11].zwzz
    dp2 r1.w, r2.zwzz, cb0[12].zwzz
    div r0.w, -r0.w, r1.w
    itof r2.xy, r2.xyxx
    mad r2.xy, r2.xyxx, cb1[16].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r2.xy, r2.xyxx, cb0[0].xyxx
    mul r2.xy, r2.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
    div r0.w, r0.w, cb0[67].x
    mov r2.z, -cb0[67].x
    mul r2.xyz, r0.wwww, r2.xyzx
    mov r2.w, l(1.000000)
    dp4 r3.x, r2.xyzw, cb0[24].xyzw
    dp4 r3.y, r2.xyzw, cb0[25].xyzw
    dp4 r0.w, r2.xyzw, cb0[27].xyzw
    dp4 r7.x, r2.xyzw, cb1[0].xyzw
    dp4 r7.y, r2.xyzw, cb1[1].xyzw
    dp4 r1.w, r2.xyzw, cb1[3].xyzw
    max r1.w, r1.w, l(0.000100)
    div r2.xy, r7.xyxx, r1.wwww
    div r2.zw, r3.xxxy, r0.wwww
    add r2.xy, -r2.xyxx, r2.zwzz
    mul r1.xz, r2.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
    mov r1.y, -r1.z
  endif 
else 
  mov r0.yz, l(0,0,0,0)
  mov r1.xy, l(0,0,0,0)
endif 
store_uav_typed u0.xyzw, r6.xwww, r0.yzyy
store_uav_typed u0.xyzw, r4.xyzw, r1.xyxx
ieq r0.x, r0.x, r3.w
if_nz r0.x
  iadd r0.xyzw, r6.xyzw, l(0, 1, 1, 1)
  store_uav_typed u0.xyzw, r0.xwww, r1.xyxx
  store_uav_typed u1.xyzw, r0.xyzw, r5.xyzw
endif 
ret 
// Approximately 186 instruction slots used