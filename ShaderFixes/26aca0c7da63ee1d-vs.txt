// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 26aca0c7da63ee1d-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:07:48 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer MaterialWD2Emissive
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 LightIntensityCurveSel;     // Offset:   16 Size:    16 [unused]
//   float4 VideoTexture1Unpack[8];     // Offset:   32 Size:   128 [unused]
//   float3 DiffuseColor1;              // Offset:  160 Size:    12 [unused]
//   float IntensityOffsetInEV;         // Offset:  172 Size:     4 [unused]
//   float3 DiffuseTextureRemap;        // Offset:  176 Size:    12 [unused]
//   float InverseNormalAttenuation;    // Offset:  188 Size:     4 [unused]
//   float3 Intensity;                  // Offset:  192 Size:    12 [unused]
//   float NormalAttenuationPower;      // Offset:  204 Size:     4 [unused]
//   float3 LightOffColor;              // Offset:  208 Size:    12 [unused]
//   float Reflectance;                 // Offset:  220 Size:     4 [unused]
//   float2 DiffuseTiling1;             // Offset:  224 Size:     8
//   float Roughness;                   // Offset:  232 Size:     4 [unused]
//   float Translucency;                // Offset:  236 Size:     4 [unused]
//   float2 FadeoutParams;              // Offset:  240 Size:     8 [unused]
//   int AnimType;                      // Offset:  248 Size:     4
//   int DiffuseUV1;                    // Offset:  252 Size:     4
//   float2 UVSpeed;                    // Offset:  256 Size:     8
//   int NbFrames;                      // Offset:  264 Size:     4
//   bool AffectsGI;                    // Offset:  268 Size:     4 [unused]
//   bool AlphaTestEnabled;             // Offset:  272 Size:     4 [unused]
//   bool IsAffectedByTimeOfDay;        // Offset:  276 Size:     4 [unused]
//   bool NeedsElectricPower;           // Offset:  280 Size:     4 [unused]
//   bool PreMultiplyEmissiveByDiffuseAlpha;// Offset:  284 Size:     4 [unused]
//   bool UseDiffuseTexture;            // Offset:  288 Size:     4 [unused]
//   bool UseVertexColor;               // Offset:  292 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// MaterialWD2Emissive               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xyzw        1     NONE     int   xyzw
// normal                   0   xyzw        2     NONE   float       
// color                    1   xyzw        3     NONE   float       
// texcoord                 4   xyzw        4     NONE   float   xyzw
// texcoord                 5   xyzw        5     NONE   float   xyzw
// texcoord                 6   xyzw        6     NONE   float   xyzw
// texcoord                 7   xyzw        7     NONE     int   xyzw
// texcoord                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[17], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
itof r1.xyzw, v1.xyzw
itof r2.xyzw, v7.xyzw
mad r0.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mad r1.xyzw, r1.xyzw, cb2[2].zwzw, cb2[2].xyxy
mov r3.x, v4.w
mov r3.y, v5.w
mov r3.z, v6.w
add r3.xyw, r2.xyxz, r3.xyxz
mad r0.w, r2.w, l(0.00781273842), l(256.000000)
mul r0.xyz, r0.wwww, r0.xyzx
movc r1.xy, cb3[15].wwww, r1.zwzz, r1.xyxx
ieq r1.z, cb3[15].z, l(1)
if_nz r1.z
  mad r1.zw, cb0[34].xxxx, cb3[16].xxxy, r1.xxxy
else 
  ieq r2.x, cb3[15].z, l(2)
  if_nz r2.x
    itof r2.x, cb3[16].z
    div r2.y, cb0[34].x, r2.x
    frc r2.y, r2.y
    mul r2.y, r2.x, r2.y
    mul r2.y, r2.y, cb3[16].x
    round_ni r2.y, r2.y
    add r2.y, r1.x, r2.y
    div r1.z, r2.y, r2.x
    mad r1.w, cb0[34].x, cb3[16].y, r1.y
  else 
    sincos r2.x, r4.x, cb0[34].x
    mad r4.x, r4.x, cb3[16].x, r1.x
    mad r4.y, r2.x, cb3[16].y, r1.y
    mul r2.xy, cb0[34].xxxx, cb3[16].xyxx
    sincos null, r2.z, r2.x
    sincos r2.y, null, r2.y
    mul r2.yw, r1.yyyx, r2.yyyy
    mad r5.x, r2.z, r1.x, -r2.y
    mad r5.y, r2.z, r1.y, r2.w
    ieq r2.yzw, cb3[15].zzzz, l(0, 3, 4, 5)
    itof r4.z, cb3[16].z
    add r4.w, r4.z, l(-1.000000)
    add r2.x, r2.x, r2.x
    ishl r5.z, cb3[16].z, l(1)
    itof r5.z, r5.z
    div r2.x, r2.x, r5.z
    add r2.x, r2.x, l(0.500000)
    frc r2.x, r2.x
    mad r2.x, r2.x, l(2.000000), l(-1.000000)
    mad r2.x, r4.w, |r2.x|, l(0.500000)
    round_ni r2.x, r2.x
    add r2.x, r1.x, r2.x
    div r6.x, r2.x, r4.z
    mad r6.y, cb0[34].x, cb3[16].y, r1.y
    movc r1.xy, r2.wwww, r6.xyxx, r1.xyxx
    movc r1.xy, r2.zzzz, r5.xyxx, r1.xyxx
    movc r1.zw, r2.yyyy, r4.xxxy, r1.xxxy
  endif 
endif 
mul o1.xy, r1.zwzz, cb3[14].xyxx
mov r0.w, l(1.000000)
mov r1.xyz, v4.xyzx
mov r1.w, r3.x
dp4 r1.x, r0.xyzw, r1.xyzw
mov r2.xyz, v5.xyzx
mov r2.w, r3.y
dp4 r1.y, r0.xyzw, r2.xyzw
mov r3.xyz, v6.xyzx
dp4 r1.z, r0.xyzw, r3.xyzw
add r0.xyz, r1.xyzx, -cb1[174].xyzx
mul r1.x, r0.x, cb1[58].x
mul r1.y, r0.x, cb1[59].x
mul r1.z, r0.x, cb1[60].x
mul r1.w, r0.x, cb1[61].x
mul r2.x, r0.y, cb1[58].y
mul r2.y, r0.y, cb1[59].y
mul r2.z, r0.y, cb1[60].y
mul r2.w, r0.y, cb1[61].y
mad r3.x, r0.z, cb1[58].z, cb1[58].w
mad r3.y, r0.z, cb1[59].z, cb1[59].w
mad r3.z, r0.z, cb1[60].z, cb1[60].w
mad r3.w, r0.z, cb1[61].z, cb1[61].w
add r2.xyzw, r2.xyzw, r3.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw

// Relocated to here with asmtool.py
mov o2.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 26aca0c7da63ee1d-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mul r2.xy, r1.xyxx, cb1[66].xyxx
mul o0.xy, r2.xyxx, l(0.00390625000, -0.00390625000, 0.000000, 0.000000)
dp3 o0.w, r0.xyzx, cb1[173].xyzx
mov o0.z, r1.w

// mov o2.xyzw, r1.xyzw // Relocated from here with asmtool.py

ret 
// Approximately 88 instruction slots used