// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d24505bb5426dc1a-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:54:08 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528 [unused]
//
// }
//
// cbuffer MaterialWD2Cloth
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 DetailUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 DetailUVTiling2;            // Offset:   32 Size:    16 [unused]
//   float4 DetailUVTiling3;            // Offset:   48 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   64 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   80 Size:    16
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  112 Size:    12 [unused]
//   float DetailIntensity1;            // Offset:  124 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:  128 Size:    12 [unused]
//   float DetailIntensity2;            // Offset:  140 Size:     4 [unused]
//   float3 DiffuseColor3;              // Offset:  144 Size:    12 [unused]
//   float DetailIntensity3;            // Offset:  156 Size:     4 [unused]
//   float3 DiffuseColor4;              // Offset:  160 Size:    12 [unused]
//   float GlobalReflectance;           // Offset:  172 Size:     4 [unused]
//   float3 ModulationColor;            // Offset:  176 Size:    12 [unused]
//   float Metalness;                   // Offset:  188 Size:     4 [unused]
//   float3 PatternColor;               // Offset:  192 Size:    12 [unused]
//   float ModulationRoughness;         // Offset:  204 Size:     4 [unused]
//   float3 VelvetColor1;               // Offset:  208 Size:    12 [unused]
//   float NormalIntensity;             // Offset:  220 Size:     4 [unused]
//   float3 VelvetColor2;               // Offset:  224 Size:    12 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float3 VelvetColor3;               // Offset:  240 Size:    12 [unused]
//   float Roughness;                   // Offset:  252 Size:     4 [unused]
//   float2 DiffuseTexture1Offset;      // Offset:  256 Size:     8 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DetailColorType;               // Offset:  268 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  272 Size:     4 [unused]
//   bool CinematicMode;                // Offset:  276 Size:     4 [unused]
//   bool ModulationColorInvert;        // Offset:  280 Size:     4 [unused]
//   bool ModulationRoughInvert;        // Offset:  284 Size:     4 [unused]
//   bool isVelvet1;                    // Offset:  288 Size:     4 [unused]
//   bool isVelvet2;                    // Offset:  292 Size:     4 [unused]
//   bool isVelvet3;                    // Offset:  296 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SkinningConfig                    texture   uint4         buf    0        1
// Viewport                          cbuffer      NA          NA    0        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// MaterialWD2Cloth                  cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// texcoord                 9   xyzw        3     NONE   float   xyzw
// normal                   0   xyzw        4     NONE   float       
// texcoord                 1   xyzw        5     NONE   float       
// texcoord                 0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[1533], dynamicIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_resource_buffer (uint,uint,uint,uint) t0
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_output o0.xyz
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 15

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
itof r1.xyzw, v1.xyzw
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r2.x, r0.w, l(1)
if_nz r2.x
  and r2.x, v0.w, l(8191)
  mov r3.xyzw, l(1.000000,0,0,0)
  mov r4.xyzw, l(0,0,0,0)
  mov r2.yzw, l(0,0,0,0)
  mov r5.xyzw, l(0,0,0,0)
else 
  and r6.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.xyzw, r6.xxxx, t0.xyzw
  and r2.xyzw, r6.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  ushr r5.xyzw, r6.xyzw, l(16, 16, 16, 16)
  mov r3.xyzw, v2.zyxw
  mov r4.xyzw, v3.zyxw
endif 
mad r6.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mad r1.xyzw, r1.xyzw, cb2[2].zwzw, cb2[2].xyxy
mov r7.xyzw, l(0,0,0,0)
mov r8.xyzw, l(0,0,0,0)
mov r9.xyzw, l(0,0,0,0)
mov r0.x, l(0)
loop 
  uge r0.y, r0.x, r0.w
  breakc_nz r0.y
  ieq r10.xyzw, r0.xxxx, l(0, 1, 2, 3)
  ieq r11.xyzw, r0.xxxx, l(4, 5, 6, 7)
  and r12.xyzw, r10.wzyx, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  and r13.xyzw, r11.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r0.y, r12.wzyx, r3.xyzw
  mad r0.y, r13.x, r4.x, r0.y
  mad r0.y, r13.y, r4.y, r0.y
  mad r0.y, r13.z, r4.z, r0.y
  mad r0.y, r13.w, r4.w, r0.y
  and r10.xyzw, r2.xyzw, r10.xyzw
  or r0.z, r10.x, r10.y
  or r0.z, r0.z, r10.z
  or r0.z, r0.z, r10.w
  and r10.xyzw, r5.xyzw, r11.xyzw
  or r0.z, r0.z, r10.x
  or r0.z, r0.z, r10.y
  or r0.z, r0.z, r10.z
  or r0.z, r0.z, r10.w
  imul null, r0.z, r0.z, l(3)
  mad r7.xyzw, r0.yyyy, cb3[r0.z + 0].xyzw, r7.xyzw
  mad r8.xyzw, r0.yyyy, cb3[r0.z + 1].xyzw, r8.xyzw
  mad r9.xyzw, r0.yyyy, cb3[r0.z + 2].xyzw, r9.xyzw
  iadd r0.x, r0.x, l(1)
endloop 
mov r6.w, l(1.000000)
dp4 r0.x, r6.xyzw, r7.xyzw
dp4 r0.y, r6.xyzw, r8.xyzw
dp4 r0.z, r6.xyzw, r9.xyzw
mov r0.w, l(1.000000)
dp4 r2.x, r0.xyzw, cb1[0].xyzw
dp4 r2.y, r0.xyzw, cb1[1].xyzw
dp4 r2.z, r0.xyzw, cb1[2].xyzw
add r0.xyz, r2.xyzx, -cb0[174].xyzx
mul r2.x, r0.x, cb0[58].x
mul r2.y, r0.x, cb0[59].x
mul r2.z, r0.x, cb0[60].x
mul r2.w, r0.x, cb0[61].x
mul r3.x, r0.y, cb0[58].y
mul r3.y, r0.y, cb0[59].y
mul r3.z, r0.y, cb0[60].y
mul r3.w, r0.y, cb0[61].y
mad r4.x, r0.z, cb0[58].z, cb0[58].w
mad r4.y, r0.z, cb0[59].z, cb0[59].w
mad r4.z, r0.z, cb0[60].z, cb0[60].w
mad r4.w, r0.z, cb0[61].z, cb0[61].w
add r0.xyzw, r3.xyzw, r4.xyzw
add r0.xyzw, r0.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, cb4[5].xyzw
add o1.xy, r1.zwzz, r1.xyxx

// Relocated to here with asmtool.py
mov o2.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d24505bb5426dc1a-vs.txt
ne r14.w, r0.w, l(1.0)
if_nz r14.w
  add r14.w, r0.w, -r14.y
  mad r0.x, r14.w, r14.x, r0.x
endif

mul r1.xy, r0.xyxx, cb0[66].xyxx
mul o0.xy, r1.xyxx, l(0.00390625000, -0.00390625000, 0.000000, 0.000000)

// mov o2.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o0.z, r0.w
ret 
// Approximately 82 instruction slots used