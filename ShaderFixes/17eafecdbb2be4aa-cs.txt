// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 17eafecdbb2be4aa-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:54:20 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer ScreenSpacePlanarReflectionForWater
// {
//
//   float4 SSPRWHomogenousToFinalCoords;// Offset:    0 Size:    16
//   float4x4 SSPRWInvViewMatrix;       // Offset:   16 Size:    64
//   float4x4 SSPRWMirrorViewProjMatrix;// Offset:   80 Size:    64
//   float4 SSPRWParams0;               // Offset:  144 Size:    16
//   float4 SSPRWParams1;               // Offset:  160 Size:    16
//   float4 SSPRWResolution;            // Offset:  176 Size:    16
//   float4x4 SSPRWViewProjMatrix;      // Offset:  192 Size:    64 [unused]
//   uint4 VisibilityGridParams;        // Offset:  256 Size:    16 [unused]
//   float2 ClearScale;                 // Offset:  272 Size:     8 [unused]
//   float2 ReflectionFallOffMulAdd;    // Offset:  280 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ScreenSpacePlanarReflectionForWater__ColorTexture__TexObj__    texture  float4          2d    0        1
// ScreenSpacePlanarReflectionForWater__DepthTexture__TexObj__    texture  float4          2d    1        1
// ScreenSpacePlanarReflectionForWater__OutputTexture        UAV  float4          2d    0        1
// ScreenSpacePlanarReflectionForWater__SSPRWDepthTexture        UAV    uint          2d    1        1
// Viewport                          cbuffer      NA          NA    0        1
// ScreenSpacePlanarReflectionForWater    cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 0, 0, 0},
                              { 1, 0, 0, 0},
                              { -1, -1, 0, 0},
                              { 0, 1, 0, 0} }
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (uint,uint,uint,uint) u1
dcl_input vThreadID.xyz
dcl_temps 8
dcl_thread_group 16, 16, 1

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix (Compute Shader variant) inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 17eafecdbb2be4aa-cs.txt

// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 17eafecdbb2be4aa-cs.txt

mul r4.w, r4.x, r4.y
mul r6.x, r4.w, cb0[9].x
mul r6.y, r4.w, cb0[10].x
mul r6.z, r4.w, cb0[11].x
mul r6.w, r4.w, cb0[12].x
dp4 r7.x, r6.xyzw, cb0[17].xyzw
dp4 r7.y, r6.xyzw, cb0[18].xyzw
dp4 r7.z, r6.xyzw, cb0[19].xyzw
add r5.xyz, cb0[174].xyz, r7.xyz

itof r0.x, vThreadID.y
ge r0.y, r0.x, cb1[11].y
if_nz r0.y
  ret 
endif 
itof r0.y, vThreadID.x
lt r0.z, cb1[11].x, r0.y
lt r0.w, cb1[11].y, r0.x
or r0.z, r0.w, r0.z
if_nz r0.z
  ret 
endif 
itof r0.zw, vThreadID.xxxy
mul r1.xy, r0.zwzz, cb1[11].zwzz
mad r0.z, r1.x, l(2.000000), l(-1.000000)
log r0.z, |r0.z|
mul r0.z, r0.z, l(40.000000)
exp r0.z, r0.z
add r2.x, r0.y, l(0.500000)
add r2.y, r0.x, l(0.500000)
mul r0.xy, r2.xyxx, cb1[11].zwzz
mov r2.xy, vThreadID.xyxx
mov r2.zw, l(0,0,0,0)
ld_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r2.xyww, t1.xzwy
mov r1.w, l(1.000000)
dp2 r3.x, r1.xwxx, cb0[11].zwzz
dp2 r1.x, r1.xwxx, cb0[12].zwzz
div r1.x, -r3.x, r1.x
mad r0.xy, cb1[9].xyxx, r0.xyxx, cb1[9].zwzz
mul r3.xy, r1.xxxx, r0.xyxx

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 17eafecdbb2be4aa-cs.txt

add r4.w, r1.x, -r4.y
mul r4.w, r4.w, r4.x
mad r3.x, -r4.w, cb0[9].x, r3.x

mad r0.x, r0.z, l(0.120000), l(1.000000)
mul r3.x, r0.x, r3.x
mov r3.z, -r1.x
mov r3.w, l(1.000000)
dp4 r0.x, r3.xyzw, cb1[3].xyzw
add r0.y, r1.x, l(-20.000000)
mul_sat r0.y, r0.y, l(0.010000)
add r0.y, r0.y, cb1[10].w
lt r0.x, r0.x, r0.y
add r0.y, cb1[0].z, l(-100.000000)
lt r0.y, r0.y, r1.x
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
mul r0.x, r1.x, l(65536.000000)
ftou r0.x, r0.x
ld_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.xyz, r2.xyzw, t0.xyzw
mad r1.z, -r0.w, cb1[11].w, l(1.000000)
mul_sat r0.yw, r1.yyyz, l(0.000000, 10.000000, 0.000000, 10.000000)
mul r2.w, r0.w, r0.y
dp4 r1.x, r3.xyzw, cb1[5].xyzw
dp4 r1.y, r3.xyzw, cb1[6].xyzw
dp4 r0.y, r3.xyzw, cb1[8].xyzw

// SSPRWMirrorViewProjMatrix - subtract stereo correction:
add r4.w, r0.y, -r4.y
mad r1.x, -r4.w, r4.x, r1.x

div r1.xyzw, r1.xyxy, r0.yyyy
mad r1.xyzw, -r1.xyzw, cb1[0].xyxy, cb1[0].xyxy
ftou r1.xyzw, r1.xyzw
iadd r0.y, vThreadID.z, l(-3)
ult r0.w, vThreadID.z, l(2)
movc r3.x, r0.w, vThreadID.z, r0.y
mov r0.y, vThreadID.z
mov r3.yzw, icb[r0.y + 0].yyyy
iadd r3.xyzw, r1.zwww, r3.xyzw
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, r3.xwww, u1.yxzw
ieq r0.y, r0.y, r0.x
if_nz r0.y
  store_uav_typed u0.xyzw, r3.xyzw, r2.xyzw
endif 
lt r0.y, l(0.010000), r0.z
if_nz r0.y
  iadd r3.xyzw, r1.zwzw, l(1, 0, -1, 0)
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, r3.xyyy, u1.yxzw
  ieq r0.y, r0.y, r0.x
  if_nz r0.y
    store_uav_typed u0.xyzw, r3.xyyy, r2.xyzw
  endif 
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, r3.zwww, u1.yxzw
  ieq r0.y, r0.y, r0.x
  if_nz r0.y
    store_uav_typed u0.xyzw, r3.zwww, r2.xyzw
  endif 
  iadd r1.xyzw, r1.xyzw, l(0, 1, 0, -1)
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, r1.xyyy, u1.yxzw
  ieq r0.y, r0.y, r0.x
  if_nz r0.y
    store_uav_typed u0.xyzw, r1.xyyy, r2.xyzw
  endif 
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, r1.zwww, u1.yxzw
  ieq r0.x, r0.y, r0.x
  if_nz r0.x
    store_uav_typed u0.xyzw, r1.zwww, r2.xyzw
  endif 
endif 
ret 
// Approximately 94 instruction slots used