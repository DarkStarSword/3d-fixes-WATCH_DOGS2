// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 7789e903f3c7cddb-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:49:45 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb13[133], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2darray (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xy, -cb13[109].yxyy, cb13[109].wzww
add r0.zw, v0.xxxy, -cb13[109].yyyx
div r0.xy, r0.zwzz, r0.xyxx
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t1.zwxy
eq r1.x, cb13[132].y, l(1.000000)
mov r0.w, l(1.000000)
dp2 r1.y, r0.zwzz, cb13[42].zwzz
dp2 r0.w, r0.zwzz, cb13[43].zwzz
div r0.w, r1.y, r0.w
movc r1.z, r1.x, r0.w, r0.z
mad r1.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb13[36].xyzw
dp4 r0.y, r1.xyzw, cb13[37].xyzw
dp4 r0.z, r1.xyzw, cb13[38].xyzw
dp4 r0.w, r1.xyzw, cb13[39].xyzw
div r0.xyzw, r0.xyzw, r0.wwww

// WATCH_DOGS2 soft shadows fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 7789e903f3c7cddb-ps.txt

add r13.w, r0.z, -r13.y
mul r13.w, r13.w, r13.x
mad r0.x, -r13.w, cb13[36].x, r0.x

add r1.x, -cb13[131].y, l(0.500000)
mul r1.y, r1.x, cb13[131].z
mad r1.x, -r1.x, cb13[131].z, r1.x
div r1.z, cb13[129].z, cb13[119].z
log r1.z, |r1.z|
mul r1.z, r1.z, |cb13[119].w|
exp r1.z, r1.z
mad r1.z, cb13[119].y, r1.z, cb13[119].x
mov r1.w, l(-1)
mov r2.xyzw, l(0,0,0,-1)
mov r3.xyzw, l(0,0,0,0)
mov r4.x, l(0)
loop 
  itof r4.y, r4.x
  ge r4.y, r4.y, cb13[129].x
  breakc_nz r4.y
  dp4 r4.y, cb13[120].xyzw, icb[r4.x + 0].xyzw
  eq r4.y, r4.y, l(1.000000)
  if_nz r4.y
    ishl r4.y, r4.x, l(2)
    dp4 r5.x, r0.xyzw, cb13[r4.y + 84].xyzw
    dp4 r5.y, r0.xyzw, cb13[r4.y + 85].xyzw
    dp4 r5.z, r0.xyzw, cb13[r4.y + 86].xyzw
    dp4 r4.y, r0.xyzw, cb13[r4.y + 87].xyzw
    div r5.xyz, r5.xyzx, r4.yyyy
    add_sat r5.w, -r1.z, r5.z
    add r4.yz, r5.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
    lt r6.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyxx
    lt r6.zw, r5.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
    and r4.w, r6.z, r6.x
    and r4.w, r6.y, r4.w
    and r4.w, r6.w, r4.w
    lt r6.xy, r1.xxxx, |r4.yzyy|
    or r5.z, r6.y, r6.x
    if_nz r4.w
      if_nz r5.z
        iadd r4.w, r4.x, l(1)
        itof r4.w, r4.w
        lt r4.w, r4.w, cb13[129].x
        iadd r4.w, -r4.w, r4.x
        add r4.yz, -r1.xxxx, |r4.yyzy|
        div r4.yz, r4.yyzy, r1.yyyy
        lt r5.z, r4.z, r4.y
        movc_sat r4.y, r5.z, r4.y, r4.z
        mov r6.xyz, r3.xyzx
        mov r2.w, r4.w
        mov r4.z, r3.w
        mov r5.z, r4.w
        loop 
          itof r6.w, r5.z
          ge r6.w, r6.w, cb13[129].x
          breakc_nz r6.w
          dp4 r6.w, cb13[120].xyzw, icb[r5.z + 0].xyzw
          eq r6.w, r6.w, l(1.000000)
          if_nz r6.w
            ishl r6.w, r5.z, l(2)
            dp4 r7.x, r0.xyzw, cb13[r6.w + 84].xyzw
            dp4 r7.y, r0.xyzw, cb13[r6.w + 85].xyzw
            dp4 r7.z, r0.xyzw, cb13[r6.w + 86].xyzw
            dp4 r6.w, r0.xyzw, cb13[r6.w + 87].xyzw
            div r7.xyz, r7.xyzx, r6.wwww
            add_sat r7.w, -r1.z, r7.z
            add r8.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
            lt r8.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xxxy
            lt r9.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            and r6.w, r8.z, r9.x
            and r6.w, r8.w, r6.w
            and r6.w, r9.y, r6.w
            lt r8.xy, r1.xxxx, |r8.xyxx|
            or r7.z, r8.y, r8.x
            not r7.z, r7.z
            and r6.w, r6.w, r7.z
            if_nz r6.w
              mov r6.xyz, r7.xywx
              mov r4.z, r4.y
              mov r2.w, r5.z
              break 
            endif 
            mov r6.xyz, r7.xywx
          endif 
          iadd r5.z, r5.z, l(1)
          mov r4.z, l(0)
        endloop 
        mov r3.xyz, r6.xyzx
        mov r3.w, r4.z
      endif 
      mov r2.xyz, r5.xywx
      mov r1.w, r4.x
      break 
    endif 
    mov r2.xyz, r5.xywx
  endif 
  iadd r4.x, r4.x, l(1)
  mov r1.w, l(-1)
  mov r2.w, l(-1)
  mov r3.xyzw, l(0,0,0,0)
endloop 
ine r1.x, r1.w, l(-1)
if_nz r1.x
  eq r1.x, r3.w, l(0.000000)
  if_nz r1.x
    if_z r1.w
      mul r1.xy, r2.xyxx, cb13[112].xyxx
      ftoi r4.xy, r1.xyxx
      mov r4.w, l(0)
      ld_indexable(texture2d)(uint,uint,uint,uint) r1.x, r4.xyww, t6.xyzw
      if_nz r1.x
        div r1.y, r0.z, cb13[129].z
        add r1.y, r1.y, l(1.000000)
        dp4 r5.x, r0.xyzw, cb13[44].xyzw
        dp4 r5.y, r0.xyzw, cb13[45].xyzw
        dp4 r5.z, r0.xyzw, cb13[46].xyzw
        dp4 r1.z, r0.xyzw, cb13[47].xyzw
        div r5.xyz, r5.xyzx, r1.zzzz
        eq r1.z, cb13[129].w, l(0.000000)
        add r6.xyz, cb13[114].xyzx, -cb13[115].xyzx
        dp3 r5.w, r6.xyzx, r6.xyzx
        rsq r5.w, r5.w
        mul r6.xyz, r5.wwww, r6.xyzx
        add r7.xyz, -r5.xyzx, cb13[114].xyzx
        dp3 r5.w, r7.xyzx, r7.xyzx
        rsq r5.w, r5.w
        mul r7.xyz, r5.wwww, r7.xyzx
        movc r6.xyz, r1.zzzz, r6.xyzx, r7.xyzx
        ftou r1.z, cb13[113].x
        mul r5.w, r1.y, r1.y
        mul r5.w, r5.w, r5.w
        mul r1.y, r1.y, r5.w
        mul r1.y, r1.y, cb13[106].x
        mov r7.z, l(0)
        mov r8.y, l(0)
        mov r8.zw, l(0,0,0,0)
        mov r5.w, l(0)
        loop 
          uge r6.w, r8.w, r1.x
          mov r5.w, l(0)
          breakc_nz r6.w
          mov r4.z, r8.w
          ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r4.xyzw, t7.yzxw
          udiv r9.x, r10.x, r4.z, r1.z
          imul null, r7.x, r10.x, l(9)
          mov r7.y, r9.x
          ld_indexable(texture2d)(float,float,float,float) r9.x, r7.xyzz, t8.xyzw
          imad r11.xyzw, r10.xxxx, l(9, 9, 9, 9), l(1, 2, 3, 4)
          mov r7.w, r11.x
          ld_indexable(texture2d)(float,float,float,float) r9.y, r7.wyzz, t8.yxzw
          mov r12.xw, r11.yyyz
          mov r12.yz, r7.yyzy
          ld_indexable(texture2d)(float,float,float,float) r9.z, r12.xyzz, t8.yzxw
          ld_indexable(texture2d)(float,float,float,float) r7.w, r12.wyzz, t8.yzwx
          mov r12.x, r11.w
          ld_indexable(texture2d)(float,float,float,float) r7.x, r12.xyzz, t8.xywz
          imad r10.xyzw, r10.xxxx, l(9, 9, 9, 9), l(8, 5, 6, 7)
          mov r12.w, r10.y
          ld_indexable(texture2d)(float,float,float,float) r7.y, r12.wyzz, t8.yxwz
          mov r12.xw, r10.zzzw
          ld_indexable(texture2d)(float,float,float,float) r11.x, r12.xyzz, t8.xyzw
          ld_indexable(texture2d)(float,float,float,float) r11.y, r12.wyzz, t8.yxzw
          mov r10.yzw, r12.yyzz
          ld_indexable(texture2d)(float,float,float,float) r11.z, r10.xyzw, t8.yzxw
          add r7.xyw, -r9.yzyx, r7.xyxw
          add r10.xyz, -r9.xyzx, r11.xyzx
          mul r11.xyz, r6.zxyz, r10.yzxy
          mad r11.xyz, r6.yzxy, r10.zxyz, -r11.xyzx
          dp3 r4.z, r7.wxyw, r11.xyzx
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
          add r9.xyz, r5.xyzx, -r9.xyzx
          mul r12.xyz, r7.xywx, r9.zxyz
          mad r7.xyw, r9.yzyx, r7.ywyx, -r12.xyxz
          dp3 r9.x, r9.xyzx, r11.xyzx
          dp3 r9.z, r6.xyzx, r7.xywx
          mul r9.yz, r6.wwww, r9.xxzx
          dp3 r7.x, r10.xyzx, r7.xywx
          mul r7.x, r6.w, r7.x
          ge r7.y, r9.y, l(-0.001000)
          ge r7.w, l(1.001000), r9.y
          and r7.yw, r7.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
          mul r7.y, r7.w, r7.y
          ge r7.w, r9.z, l(-0.001000)
          and r7.w, r7.w, l(0x3f800000)
          mad r6.w, r9.x, r6.w, r9.z
          ge r6.w, l(1.001000), r6.w
          and r6.w, r6.w, l(0x3f800000)
          mul r6.w, r6.w, r7.w
          lt r7.x, r1.y, r7.x
          and r7.x, r7.x, l(0x3f800000)
          mul r6.w, r6.w, r7.y
          mul r6.w, r7.x, r6.w
          lt r4.z, |r4.z|, l(9.999999939E-009)
          ne r6.w, r6.w, l(0.000000)
          movc r4.z, r4.z, l(0), r6.w
          if_nz r4.z
            mov r8.z, l(1.000000)
            mov r5.w, l(-1)
            break 
          endif 
          iadd r8.x, r8.w, l(1)
          mov r8.zw, r8.yyyx
          mov r5.w, r4.z
        endloop 
      else 
        mov r5.w, l(0)
      endif 
      and r1.x, r8.z, r5.w
      add r1.x, -r1.x, l(1.000000)
    else 
      add r1.yz, cb13[110].zzwz, cb13[110].zzwz
      mad r4.xy, -cb13[110].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      lt r4.zw, r4.xxxy, r2.xxxy
      movc r4.xy, r4.zwzz, r4.xyxx, r2.xyxx
      lt r4.zw, r4.xxxy, r1.yyyz
      movc r4.xy, r4.zwzz, r1.yzyy, r4.xyxx
      itof r4.z, r1.w
      sample_l_indexable(texture2darray)(float,float,float,float) r1.y, r4.xyzx, t0.yxzw, s0, l(0.000000)
      lt r1.y, r1.y, r2.z
      movc r1.x, r1.y, l(0), l(1.000000)
    endif 
    dp4 r1.y, cb13[121].xyzw, icb[r1.w + 0].xyzw
    add r1.y, -r1.y, l(1.000000)
    mul r1.z, r1.y, r1.x
    mad r1.x, -r1.x, r1.y, l(1.000000)
    mad r1.x, cb13[130].x, r1.x, r1.z
  else 
    eq r1.y, r3.w, l(1.000000)
    if_nz r1.y
      if_z r2.w
        mul r1.yz, r3.xxyx, cb13[112].xxyx
        ftoi r4.xy, r1.yzyy
        mov r4.w, l(0)
        ld_indexable(texture2d)(uint,uint,uint,uint) r1.y, r4.xyww, t6.yxzw
        if_nz r1.y
          div r1.z, r0.z, cb13[129].z
          add r1.z, r1.z, l(1.000000)
          dp4 r5.x, r0.xyzw, cb13[44].xyzw
          dp4 r5.y, r0.xyzw, cb13[45].xyzw
          dp4 r5.z, r0.xyzw, cb13[46].xyzw
          dp4 r5.w, r0.xyzw, cb13[47].xyzw
          div r5.xyz, r5.xyzx, r5.wwww
          eq r5.w, cb13[129].w, l(0.000000)
          add r6.xyz, cb13[114].xyzx, -cb13[115].xyzx
          dp3 r6.w, r6.xyzx, r6.xyzx
          rsq r6.w, r6.w
          mul r6.xyz, r6.wwww, r6.xyzx
          add r7.xyz, -r5.xyzx, cb13[114].xyzx
          dp3 r6.w, r7.xyzx, r7.xyzx
          rsq r6.w, r6.w
          mul r7.xyz, r6.wwww, r7.xyzx
          movc r6.xyz, r5.wwww, r6.xyzx, r7.xyzx
          ftou r5.w, cb13[113].x
          mul r6.w, r1.z, r1.z
          mul r6.w, r6.w, r6.w
          mul r1.z, r1.z, r6.w
          mul r1.z, r1.z, cb13[106].x
          mov r7.z, l(0)
          mov r8.y, l(0)
          mov r8.zw, l(0,0,0,0)
          mov r6.w, l(0)
          loop 
            uge r9.x, r8.w, r1.y
            mov r6.w, l(0)
            breakc_nz r9.x
            mov r4.z, r8.w
            ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r4.xyzw, t7.yzxw
            udiv r9.x, r10.x, r4.z, r5.w
            imul null, r7.x, r10.x, l(9)
            mov r7.y, r9.x
            ld_indexable(texture2d)(float,float,float,float) r9.x, r7.xyzz, t8.xyzw
            imad r11.xyzw, r10.xxxx, l(9, 9, 9, 9), l(1, 2, 3, 4)
            mov r7.w, r11.x
            ld_indexable(texture2d)(float,float,float,float) r9.y, r7.wyzz, t8.yxzw
            mov r12.xw, r11.yyyz
            mov r12.yz, r7.yyzy
            ld_indexable(texture2d)(float,float,float,float) r9.z, r12.xyzz, t8.yzxw
            ld_indexable(texture2d)(float,float,float,float) r7.w, r12.wyzz, t8.yzwx
            mov r12.x, r11.w
            ld_indexable(texture2d)(float,float,float,float) r7.x, r12.xyzz, t8.xywz
            imad r10.xyzw, r10.xxxx, l(9, 9, 9, 9), l(8, 5, 6, 7)
            mov r12.w, r10.y
            ld_indexable(texture2d)(float,float,float,float) r7.y, r12.wyzz, t8.yxwz
            mov r12.xw, r10.zzzw
            ld_indexable(texture2d)(float,float,float,float) r11.x, r12.xyzz, t8.xyzw
            ld_indexable(texture2d)(float,float,float,float) r11.y, r12.wyzz, t8.yxzw
            mov r10.yzw, r12.yyzz
            ld_indexable(texture2d)(float,float,float,float) r11.z, r10.xyzw, t8.yzxw
            add r7.xyw, -r9.yzyx, r7.xyxw
            add r10.xyz, -r9.xyzx, r11.xyzx
            mul r11.xyz, r6.zxyz, r10.yzxy
            mad r11.xyz, r6.yzxy, r10.zxyz, -r11.xyzx
            dp3 r4.z, r7.wxyw, r11.xyzx
            div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
            add r9.xyz, r5.xyzx, -r9.xyzx
            mul r12.xyz, r7.xywx, r9.zxyz
            mad r7.xyw, r9.yzyx, r7.ywyx, -r12.xyxz
            dp3 r9.x, r9.xyzx, r11.xyzx
            dp3 r9.z, r6.xyzx, r7.xywx
            mul r9.yz, r9.wwww, r9.xxzx
            dp3 r7.x, r10.xyzx, r7.xywx
            ge r7.y, r9.y, l(-0.001000)
            ge r7.w, l(1.001000), r9.y
            and r7.yw, r7.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
            mul r7.y, r7.w, r7.y
            ge r7.w, r9.z, l(-0.001000)
            and r7.w, r7.w, l(0x3f800000)
            mad r9.x, r9.x, r9.w, r9.z
            ge r9.x, l(1.001000), r9.x
            and r9.x, r9.x, l(0x3f800000)
            mul r7.xw, r7.xxxw, r9.wwwx
            lt r7.x, r1.z, r7.x
            and r7.x, r7.x, l(0x3f800000)
            mul r7.y, r7.w, r7.y
            mul r7.x, r7.x, r7.y
            lt r4.z, |r4.z|, l(9.999999939E-009)
            ne r7.x, r7.x, l(0.000000)
            movc r4.z, r4.z, l(0), r7.x
            if_nz r4.z
              mov r8.z, l(1.000000)
              mov r6.w, l(-1)
              break 
            endif 
            iadd r8.x, r8.w, l(1)
            mov r8.zw, r8.yyyx
            mov r6.w, r4.z
          endloop 
        else 
          mov r6.w, l(0)
        endif 
        and r1.y, r8.z, r6.w
        add r1.y, -r1.y, l(1.000000)
      else 
        add r4.xy, cb13[110].zwzz, cb13[110].zwzz
        mad r4.zw, -cb13[110].zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
        lt r5.xy, r4.zwzz, r3.xyxx
        movc r4.zw, r5.xxxy, r4.zzzw, r3.xxxy
        lt r5.xy, r4.zwzz, r4.xyxx
        movc r4.xy, r5.xyxx, r4.xyxx, r4.zwzz
        itof r4.z, r2.w
        sample_l_indexable(texture2darray)(float,float,float,float) r1.z, r4.xyzx, t0.yzxw, s0, l(0.000000)
        lt r1.z, r1.z, r3.z
        movc r1.y, r1.z, l(0), l(1.000000)
      endif 
      dp4 r1.z, cb13[121].xyzw, icb[r2.w + 0].xyzw
      add r1.z, -r1.z, l(1.000000)
      mul r4.x, r1.z, r1.y
      mad r1.y, -r1.y, r1.z, l(1.000000)
      mad r1.x, cb13[130].x, r1.y, r4.x
    else 
      if_z r1.w
        mul r1.yz, r2.xxyx, cb13[112].xxyx
        ftoi r4.xy, r1.yzyy
        mov r4.w, l(0)
        ld_indexable(texture2d)(uint,uint,uint,uint) r1.y, r4.xyww, t6.yxzw
        if_nz r1.y
          div r1.z, r0.z, cb13[129].z
          add r1.z, r1.z, l(1.000000)
          dp4 r5.x, r0.xyzw, cb13[44].xyzw
          dp4 r5.y, r0.xyzw, cb13[45].xyzw
          dp4 r5.z, r0.xyzw, cb13[46].xyzw
          dp4 r0.x, r0.xyzw, cb13[47].xyzw
          div r0.xyz, r5.xyzx, r0.xxxx
          eq r0.w, cb13[129].w, l(0.000000)
          add r5.xyz, cb13[114].xyzx, -cb13[115].xyzx
          dp3 r5.w, r5.xyzx, r5.xyzx
          rsq r5.w, r5.w
          mul r5.xyz, r5.wwww, r5.xyzx
          add r6.xyz, -r0.xyzx, cb13[114].xyzx
          dp3 r5.w, r6.xyzx, r6.xyzx
          rsq r5.w, r5.w
          mul r6.xyz, r5.wwww, r6.xyzx
          movc r5.xyz, r0.wwww, r5.xyzx, r6.xyzx
          ftou r0.w, cb13[113].x
          mul r5.w, r1.z, r1.z
          mul r5.w, r5.w, r5.w
          mul r1.z, r1.z, r5.w
          mul r1.z, r1.z, cb13[106].x
          mov r6.z, l(0)
          mov r7.y, l(0)
          mov r7.zw, l(0,0,0,0)
          mov r5.w, l(0)
          loop 
            uge r8.x, r7.w, r1.y
            mov r5.w, l(0)
            breakc_nz r8.x
            mov r4.z, r7.w
            ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r4.xyzw, t7.yzxw
            udiv r8.x, r9.x, r4.z, r0.w
            imul null, r6.x, r9.x, l(9)
            mov r6.y, r8.x
            ld_indexable(texture2d)(float,float,float,float) r8.x, r6.xyzz, t8.xyzw
            imad r10.xyzw, r9.xxxx, l(9, 9, 9, 9), l(1, 2, 3, 4)
            mov r6.w, r10.x
            ld_indexable(texture2d)(float,float,float,float) r8.y, r6.wyzz, t8.yxzw
            mov r11.xw, r10.yyyz
            mov r11.yz, r6.yyzy
            ld_indexable(texture2d)(float,float,float,float) r8.z, r11.xyzz, t8.yzxw
            ld_indexable(texture2d)(float,float,float,float) r6.w, r11.wyzz, t8.yzwx
            mov r11.x, r10.w
            ld_indexable(texture2d)(float,float,float,float) r6.x, r11.xyzz, t8.xywz
            imad r9.xyzw, r9.xxxx, l(9, 9, 9, 9), l(8, 5, 6, 7)
            mov r11.w, r9.y
            ld_indexable(texture2d)(float,float,float,float) r6.y, r11.wyzz, t8.yxwz
            mov r11.xw, r9.zzzw
            ld_indexable(texture2d)(float,float,float,float) r10.x, r11.xyzz, t8.xyzw
            ld_indexable(texture2d)(float,float,float,float) r10.y, r11.wyzz, t8.yxzw
            mov r9.yzw, r11.yyzz
            ld_indexable(texture2d)(float,float,float,float) r10.z, r9.xyzw, t8.yzxw
            add r6.xyw, -r8.yzyx, r6.xyxw
            add r9.xyz, -r8.xyzx, r10.xyzx
            mul r10.xyz, r5.zxyz, r9.yzxy
            mad r10.xyz, r5.yzxy, r9.zxyz, -r10.xyzx
            dp3 r4.z, r6.wxyw, r10.xyzx
            div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
            add r8.xyz, r0.xyzx, -r8.xyzx
            mul r11.xyz, r6.xywx, r8.zxyz
            mad r6.xyw, r8.yzyx, r6.ywyx, -r11.xyxz
            dp3 r8.x, r8.xyzx, r10.xyzx
            dp3 r8.z, r5.xyzx, r6.xywx
            mul r8.yz, r8.wwww, r8.xxzx
            dp3 r6.x, r9.xyzx, r6.xywx
            ge r6.y, r8.y, l(-0.001000)
            ge r6.w, l(1.001000), r8.y
            and r6.yw, r6.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
            mul r6.y, r6.w, r6.y
            ge r6.w, r8.z, l(-0.001000)
            and r6.w, r6.w, l(0x3f800000)
            mad r8.x, r8.x, r8.w, r8.z
            ge r8.x, l(1.001000), r8.x
            and r8.x, r8.x, l(0x3f800000)
            mul r6.xw, r6.xxxw, r8.wwwx
            lt r6.x, r1.z, r6.x
            and r6.x, r6.x, l(0x3f800000)
            mul r6.y, r6.w, r6.y
            mul r6.x, r6.x, r6.y
            lt r4.z, |r4.z|, l(9.999999939E-009)
            ne r6.x, r6.x, l(0.000000)
            movc r4.z, r4.z, l(0), r6.x
            if_nz r4.z
              mov r7.z, l(1.000000)
              mov r5.w, l(-1)
              break 
            endif 
            iadd r7.x, r7.w, l(1)
            mov r7.zw, r7.yyyx
            mov r5.w, r4.z
          endloop 
        else 
          mov r5.w, l(0)
        endif 
        and r0.x, r7.z, r5.w
        add r0.x, -r0.x, l(1.000000)
      else 
        add r0.yz, cb13[110].zzwz, cb13[110].zzwz
        mad r1.yz, -cb13[110].zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
        lt r4.xy, r1.yzyy, r2.xyxx
        movc r1.yz, r4.xxyx, r1.yyzy, r2.xxyx
        lt r2.xy, r1.yzyy, r0.yzyy
        movc r4.xy, r2.xyxx, r0.yzyy, r1.yzyy
        itof r4.z, r1.w
        sample_l_indexable(texture2darray)(float,float,float,float) r0.y, r4.xyzx, t0.yxzw, s0, l(0.000000)
        lt r0.y, r0.y, r2.z
        movc r0.x, r0.y, l(0), l(1.000000)
      endif 
      add r0.yz, cb13[110].zzwz, cb13[110].zzwz
      mad r1.yz, -cb13[110].zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
      lt r2.xy, r1.yzyy, r3.xyxx
      movc r1.yz, r2.xxyx, r1.yyzy, r3.xxyx
      lt r2.xy, r1.yzyy, r0.yzyy
      movc r2.xy, r2.xyxx, r0.yzyy, r1.yzyy
      itof r2.z, r2.w
      sample_l_indexable(texture2darray)(float,float,float,float) r0.y, r2.xyzx, t0.yxzw, s0, l(0.000000)
      lt r0.y, r0.y, r3.z
      movc r0.y, r0.y, l(0), l(1.000000)
      dp4 r0.z, cb13[121].xyzw, icb[r1.w + 0].xyzw
      add r0.z, -r0.z, l(1.000000)
      mul r0.x, r0.z, r0.x
      dp4 r0.z, cb13[121].xyzw, icb[r2.w + 0].xyzw
      add r0.z, -r0.z, l(1.000000)
      mad r0.y, r0.y, r0.z, -r0.x
      mad r0.x, r3.w, r0.y, r0.x
      add r0.y, -r0.x, l(1.000000)
      mad r1.x, cb13[130].x, r0.y, r0.x
    endif 
  endif 
else 
  mov r1.x, l(1.000000)
endif 
mov o0.xyz, r1.xxxx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used