// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed b5a5b3565ae20f19-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:56:08 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12 [unused]
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4 MinAmbient;                 // Offset:    0 Size:    16
//   float4x4 ViewProjectionMatrixWithZBias;// Offset:   16 Size:    64 [unused]
//   float4 WorldEdgeFadeParams;        // Offset:   80 Size:    16 [unused]
//   float2 LightProbesGlobal_GIGenerationSunInterlacePixelsXY;// Offset:   96 Size:     8 [unused]
//   float DrawDistance;                // Offset:  104 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// Viewport__GBufferNormalTexture__TexObj__    texture  float4          2d    1        1
// Viewport__GBufferParamsTexture__TexObj__    texture  float4          2d    2        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    3        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    4        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    5        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    6        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d    7        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d    8        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// LightProbesGlobal                 cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 17

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed b5a5b3565ae20f19-ps.txt

mul r13.w, r13.x, r13.y
mul r15.x, r13.w, cb0[9].x
mul r15.y, r13.w, cb0[10].x
mul r15.z, r13.w, cb0[11].x
mul r15.w, r13.w, cb0[12].x
dp4 r16.x, r15.xyzw, cb0[17].xyzw
dp4 r16.y, r15.xyzw, cb0[18].xyzw
dp4 r16.z, r15.xyzw, cb0[19].xyzw
add r14.xyz, cb0[174].xyz, r16.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t0.yzxw
mad r2.xy, v0.xyxx, cb0[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[9].xyzw
dp4 r2.y, r1.xyzw, cb0[10].xyzw
dp4 r2.z, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r1.xyzw, cb0[12].xyzw
div r1.xyz, r2.xyzx, r1.xxxx

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed b5a5b3565ae20f19-ps.txt

add r13.w, -r1.z, -r13.y
mul r13.w, r13.w, r13.x
mad r1.x, -r13.w, cb0[9].x, r1.x

mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[17].xyzw
dp4 r2.y, r1.xyzw, cb0[18].xyzw
dp4 r2.z, r1.xyzw, cb0[19].xyzw
mov r2.w, l(1.000000)
dp4 r1.x, r2.xyzw, cb2[14].xyzw
add r1.y, r1.x, l(-0.500000)
add r1.y, |r1.y|, l(-0.500000)
lt r1.z, l(0.000000), r1.x
movc r1.z, r1.z, cb2[18].x, cb2[18].y
mul_sat r1.y, r1.z, r1.y
add r3.xyzw, -r1.yyyy, l(1.000000, 1.000000, 1.000000, 1.000000)
eq r1.y, r3.w, l(0.000000)
discard_nz r1.y
dp4 r4.x, r2.xyzw, cb2[12].xyzw
dp4 r4.y, r2.xyzw, cb2[13].xyzw
add r4.xyzw, r4.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.xyww, t1.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyzw, t2.ywxz
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.y, r0.y
ushr r0.y, r0.y, l(5)
mad r0.z, r5.w, l(0.500000), l(0.500000)
mad r0.z, r0.z, l(65535.000000), l(0.500000)
ftou r0.z, r0.z
and r0.z, r0.z, l(255)
utof r0.z, r0.z
mul r0.z, r0.z, l(0.00392156886)
movc r0.y, r0.y, l(0), r0.z
add r6.xyzw, cb2[16].xyxy, l(-1.000000, -1.000000, -1.000000, -1.000000)
div r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyxy
mul r7.xyzw, r5.xyxy, r7.xyzw
mad_sat r4.xyzw, r7.xyzw, l(0.300000, 0.300000, 0.900000, 0.900000), r4.xyzw
div r6.xyzw, r6.zwzw, cb2[16].xyxy
div r7.xyzw, l(0.500000, 0.500000, 0.200000, 0.600000), cb2[16].xyzz
mov_sat r1.x, r1.x
add r0.z, cb2[16].z, l(-1.000000)
lt r0.w, l(0.000000), cb2[17].y
div_sat r1.y, r1.x, cb2[17].y
mul r1.y, r1.y, cb2[17].x
and r0.w, r0.w, r1.y
lt r1.y, cb2[17].y, l(1.000000)
add_sat r1.x, r1.x, -cb2[17].y
add r1.z, -cb2[17].y, l(1.000000)
div r1.x, r1.x, r1.z
log r1.x, |r1.x|
mul r1.x, r1.x, cb2[16].w
exp r1.x, r1.x
add r0.z, r0.z, -cb2[17].x
mul r0.z, r0.z, r1.x
and r0.z, r0.z, r1.y
add r0.z, r0.z, r0.w
div r0.z, r0.z, cb2[16].z
mad r1.xyzw, r4.xyzw, r6.xyzw, r7.xyxy
mad r0.zw, r5.zzzz, r7.zzzw, r0.zzzz
mul r2.w, r0.z, cb2[16].z
round_ni r4.x, r2.w
div r4.x, r4.x, cb2[16].z
round_pi r2.w, r2.w
div r2.w, r2.w, cb2[16].z
mov_sat r4.y, r1.y
div r4.y, r4.y, cb2[16].z
add r6.y, r4.x, r4.y
mov r6.x, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r4.yz, r6.xyxx, t3.zxyw, s0, l(0.000000)
add r6.xy, -r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r4.z, r6.y, l(0.250000), r4.z
min r4.z, r4.z, r6.x
div r4.y, r4.y, cb2[16].z
add r4.y, r4.y, r4.x
add r0.zw, r0.zzzw, -r4.yyyy
mul r0.zw, r0.zzzw, cb2[16].zzzz
div_sat r0.zw, r0.zzzw, r4.zzzz
add r2.w, -r4.x, r2.w
mad r0.zw, r0.zzzw, r2.wwww, r4.xxxx
div r2.w, l(0.500000), cb2[16].z
add r4.xz, r0.zzwz, r2.wwww
mov r4.yw, r1.xxxy
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r4.ywxy, t6.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r4.ywxy, t5.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r4.ywxy, t4.xyzw, s0, l(0.000000)
mov r4.xy, r1.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r4.xyzx, t7.xyzw, s0, l(0.000000)
log r6.xyzw, |r6.xyzw|
mul r6.xyzw, r6.xyzw, cb2[22].xxxx
exp r6.xyzw, r6.xyzw
log r7.xyzw, |r7.xyzw|
mul r7.xyzw, r7.xyzw, cb2[22].xxxx
exp r7.xyzw, r7.xyzw
log r8.xyzw, |r8.xyzw|
mul r8.xyzw, r8.xyzw, cb2[22].xxxx
exp r8.xyzw, r8.xyzw
mul r9.xyzw, cb1[12].xyzw, cb3[0].xxxw
mul r10.xyzw, cb1[13].xyzw, cb3[0].yyyw
mul r11.xyzw, cb1[14].xyzw, cb3[0].zzzw
max r6.xyzw, r6.xyzw, r9.xyzw
max r7.xyzw, r7.xyzw, r10.xyzw
max r8.xyzw, r8.xyzw, r11.xyzw
dp3 r9.x, r5.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r9.y, r5.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r9.z, r5.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
mov r9.w, -r5.z
mad r10.xyzw, r9.xyzw, l(1.000000, 1.000000, 1.000000, 0.666666687), l(0.000000, 0.000000, 0.000000, 0.333333343)
max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r11.xyz, r7.xyzx, r10.yyyy
mad r11.xyz, r10.xxxx, r6.xyzx, r11.xyzx
mad r11.xyz, r10.zzzz, r8.xyzx, r11.xyzx
mov r12.x, r6.w
mov r12.y, r7.w
mov r12.z, r8.w
mad r11.xyz, r10.wwww, r12.xyzx, r11.xyzx
add r0.z, r10.y, r10.x
add r0.z, r10.z, r0.z
add r0.z, r10.w, r0.z
div r10.xyz, r11.xyzx, r0.zzzz
mad r9.xyzw, -r9.xyzw, l(1.000000, 1.000000, 1.000000, 0.666666687), l(0.000000, 0.000000, 0.000000, 0.333333343)
max r9.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r7.xyzx, r9.yyyy
mad r6.xyz, r9.xxxx, r6.xyzx, r7.xyzx
mad r6.xyz, r9.zzzz, r8.xyzx, r6.xyzx
mad r6.xyz, r9.wwww, r12.xyzx, r6.xyzx
add r0.z, r9.y, r9.x
add r0.z, r9.z, r0.z
add r0.z, r9.w, r0.z
mul r6.xyz, r0.yyyy, r6.xyzx
div r0.yzw, r6.xxyz, r0.zzzz
add r0.yzw, r0.yyzw, r10.xxyz
add r2.xyz, -r2.xyzx, r14.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r2.w, -r2.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r2.xyz, r5.xyzx, -r2.wwww, -r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r2.xyzx
if_nz cb2[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r4.xyzx, t8.xyzw, s0, l(0.000000)
  dp2 r2.x, r5.xyxx, r5.xyxx
  rsq r2.x, r2.x
  mul r2.xy, r2.xxxx, r5.xyxx
  dp2 r5.w, r2.xyxx, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r5.w, r5.w, l(-0.707106769)
  mul_sat r5.w, r5.w, l(3.41421342)
  dp2 r6.x, r2.xyxx, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r6.x, r6.x, l(-0.707106769)
  mul_sat r6.x, r6.x, l(3.41421342)
  add r6.y, r5.w, r6.x
  dp2 r6.z, r2.xyxx, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r6.z, r6.z, l(-0.707106769)
  mul_sat r6.z, r6.z, l(3.41421342)
  add r6.y, r6.z, r6.y
  dp2 r6.w, r2.xyxx, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r6.w, r6.w, l(-0.707106769)
  mul_sat r6.w, r6.w, l(3.41421342)
  add r6.y, r6.w, r6.y
  dp2 r7.x, r2.xyxx, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r7.x, r7.x, l(-0.707106769)
  mul_sat r7.x, r7.x, l(3.41421342)
  add r6.y, r6.y, r7.x
  dp2 r7.y, r2.xyxx, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r7.y, r7.y, l(-0.707106769)
  mul_sat r7.y, r7.y, l(3.41421342)
  add r6.y, r6.y, r7.y
  dp2 r7.z, r2.xyxx, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r7.z, r7.z, l(-0.707106769)
  mul_sat r7.z, r7.z, l(3.41421342)
  add r6.y, r6.y, r7.z
  dp2 r2.x, r2.xyxx, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r2.x, r2.x, l(-0.707106769)
  mul_sat r2.x, r2.x, l(3.41421342)
  add r2.y, r2.x, r6.y
  div r5.w, r5.w, r2.y
  div r6.xy, r6.xzxx, r2.yyyy
  div r6.z, r6.w, r2.y
  div r6.w, r7.x, r2.y
  div r7.x, r7.y, r2.y
  div r7.y, r7.z, r2.y
  div r2.x, r2.x, r2.y
  mul r2.y, r1.y, r6.x
  mad r2.y, r1.x, r5.w, r2.y
  mad r2.y, r1.z, r6.y, r2.y
  mad r2.y, r1.w, r6.z, r2.y
  mad r2.y, r4.x, r6.w, r2.y
  mad r2.y, r4.y, r7.x, r2.y
  mad r2.y, r4.z, r7.y, r2.y
  mad r2.y, r4.w, r2.x, r2.y
  ge r4.x, l(0.565600), r0.x
  mad r4.y, -r0.x, l(0.0968105793), l(1.05046380)
  mad r4.y, r4.y, r0.x, l(-0.601145864)
  add r0.x, r0.x, l(-0.619457066)
  div r0.x, r4.y, r0.x
  movc r0.x, r4.x, r0.x, l(0.705081284)
  mad r4.x, -r5.z, r5.z, l(1.000000)
  mad r4.y, -r0.x, r0.x, l(1.000000)
  sqrt r4.xy, r4.xyxx
  mul r4.z, r4.y, r4.x
  mad r6.y, r5.z, r0.x, -r4.z
  mad r7.y, r5.z, r0.x, r4.z
  mul r4.y, r5.z, r4.y
  mad r6.x, r4.x, r0.x, r4.y
  mad r7.x, r4.x, r0.x, -r4.y
  lt r0.x, r6.x, l(0.000000)
  movc r4.xy, r0.xxxx, l(0,-1.000000,0,0), r6.xyxx
  lt r0.x, r7.x, l(0.000000)
  movc r4.zw, r0.xxxx, l(0,0,0,1.000000), r7.xxxy
  ge r0.x, r4.y, r2.y
  ge r5.w, r2.y, r4.w
  mul r6.x, r2.y, r2.y
  mad r6.y, -r2.y, r2.y, l(1.000000)
  sqrt r2.x, r6.y
  lt r6.y, r4.y, l(0.000000)
  add r6.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, -0.000000)
  dp2 r6.z, r6.zwzz, r6.zwzz
  sqrt r6.z, r6.z
  mul r6.z, r6.z, l(0.500000)
  mul r6.z, r6.z, r6.z
  add r4.xy, -r4.zwzz, r4.xyxx
  dp2 r4.x, r4.xyxx, r4.xyxx
  sqrt r4.x, r4.x
  mul r4.x, r4.x, l(0.500000)
  mul r4.x, r4.x, r4.x
  movc r4.x, r6.y, r6.z, r4.x
  add r2.xy, r2.xyxx, -r4.zwzz
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  mul r2.x, r2.x, l(0.500000)
  mul r2.x, r2.x, r2.x
  div r2.x, r2.x, r4.x
  movc r2.x, r5.w, l(0), r2.x
  movc r0.x, r0.x, l(1.000000), r2.x
  mad r2.x, r6.x, l(-0.080000), l(0.080000)
  max o0.w, r0.x, r2.x
else 
  dp3 r4.x, r5.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r4.y, r5.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r4.z, r5.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r0.x, -r2.z, r2.w, l(0.500000)
  mul r4.w, r0.x, l(0.666666687)
  max r2.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r0.x, r2.xyzw, r1.xyzw
  add r1.x, r2.y, r2.x
  add r1.x, r2.z, r1.x
  add r1.x, r2.w, r1.x
  div o0.w, r0.x, r1.x
endif 
mul r0.xyz, r0.yzwy, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o1.xyzw, r3.xyzw
ret 
// Approximately 264 instruction slots used