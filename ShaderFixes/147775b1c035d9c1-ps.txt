// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 147775b1c035d9c1-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:05:40 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer FogVolumeUpscale
// {
//
//   float4 FVDepthParams;              // Offset:    0 Size:    16
//   float4x4 FVLastFrameViewProjMatrix;// Offset:   16 Size:    64 [unused]
//   float4 FVViewDirReconstruction;    // Offset:   80 Size:    16
//   float3 FVCameraXAxis;              // Offset:   96 Size:    12
//   float FVViewportSizeScale;         // Offset:  108 Size:     4
//   float3 FVCameraYAxis;              // Offset:  112 Size:    12
//   float VFAirDensity;                // Offset:  124 Size:     4
//   float3 FVCameraZAxis;              // Offset:  128 Size:    12
//   float VFAirExtinction;             // Offset:  140 Size:     4
//   float3 VFAirColor;                 // Offset:  144 Size:    12
//   float VFAirHeightMax;              // Offset:  156 Size:     4
//   float VFAirInvNearSafeFalloff;     // Offset:  160 Size:     4
//   float VFAirNearSafeDistance;       // Offset:  164 Size:     4
//   float VFAirScattering;             // Offset:  168 Size:     4
//   uint FVFrameCounter;               // Offset:  172 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FogVolumeUpscale__FVDownscaledDepthTexture    texture  float4          2d    0        1
// FogVolumeUpscale__FVFogAtMaxDepthTexture    texture  float4          2d    1        1
// FogVolumeUpscale__FVFogAtMinDepthTexture    texture  float4          2d    2        1
// FogVolumeUpscale__VFDepthTextureMS    texture  float4        2dMS    3        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// FogVolumeUpscale                  cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyz         0   TARGET   float   xyz 
// SV_Target                1   xy          1   TARGET   float   xy  
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyz
dcl_output o1.xy
dcl_temps 7
dcl_indexableTemp x0[8], 4
dcl_indexableTemp x1[8], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t3.xyzw, v1.x
add r0.x, -r0.x, l(1.000000)
add r0.y, r0.x, -cb2[0].x
div r0.y, cb2[0].y, r0.y
frc r1.xyzw, v0.xyxy
mul r2.xyzw, v0.xyxy, cb2[6].wwww
mul r2.xyzw, r2.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
round_ni r2.xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
ftoi r2.xy, r1.zwzz
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.zw, r2.xyww, t0.zwxy
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyww, t2.xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyzw, t1.xyzw
add r4.xy, -r0.zzzz, r0.xwxx
add r4.y, r4.y, l(0.000010)
div_sat r4.y, r4.x, r4.y
add r5.xyzw, -r3.xyzw, r2.xyzw
mad r5.xyzw, r4.yyyy, r5.xyzw, r3.xyzw
dp3 r2.x, r2.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
dp3 r2.y, r3.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r2.x, -r2.y, r2.x
lt r2.x, l(0.200000), r2.x
lt r0.z, r0.z, l(0.999000)
and r0.z, r0.z, r2.x
if_nz r0.z
  add r0.z, -r0.w, r0.x
  add r0.z, |r0.z|, |r4.x|
  add r2.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000)
  ftoi r2.xyzw, r2.zwxy
  mov x0[0].xy, r2.zwzz
  mov r3.xy, r2.zwzz
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyzw, t0.xyzw
  mov x1[0].xy, r3.xyxx
  add r0.w, r0.x, -r3.x
  add r3.z, -r0.x, r3.y
  add r0.w, |r0.w|, |r3.z|
  lt r3.z, r0.w, r0.z
  ge r3.x, r0.x, r3.x
  and r3.x, r3.x, r3.z
  ge r3.y, r3.y, r0.x
  and r3.x, r3.y, r3.x
  not r4.x, r3.x
  movc r4.y, r3.x, r0.w, r0.z
  mov x0[1].xy, r2.xyxx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.zw, r2.xyzw, t0.zwxy
  mov x1[1].xy, r0.zwzz
  add r2.x, -r0.z, r0.x
  add r2.y, -r0.x, r0.w
  add r2.y, |r2.y|, |r2.x|
  lt r3.x, r2.y, r4.y
  ge r0.z, r0.x, r0.z
  and r0.z, r0.z, r3.x
  ge r0.w, r0.w, r0.x
  and r0.z, r0.w, r0.z
  mov r2.xz, l(1,0,2,0)
  movc r0.zw, r0.zzzz, r2.xxxy, r4.xxxy
  add r3.xyzw, r1.zwzw, l(1.000000, 1.000000, -1.000000, 1.000000)
  ftoi r3.xyzw, r3.zwxy
  mov x0[2].xy, r3.zwzz
  mov r4.xy, r3.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xy, r4.xyzw, t0.xyzw
  mov x1[2].xy, r2.xyxx
  add r4.x, r0.x, -r2.x
  add r4.y, -r0.x, r2.y
  add r2.w, |r4.y|, |r4.x|
  lt r4.x, r2.w, r0.w
  ge r2.x, r0.x, r2.x
  and r2.x, r2.x, r4.x
  ge r2.y, r2.y, r0.x
  and r2.x, r2.y, r2.x
  movc r0.zw, r2.xxxx, r2.zzzw, r0.zzzw
  mov x0[3].xy, r3.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xy, r3.xyzw, t0.xyzw
  mov x1[3].xy, r2.xyxx
  add r2.z, r0.x, -r2.x
  add r2.w, -r0.x, r2.y
  add r3.y, |r2.w|, |r2.z|
  lt r2.z, r3.y, r0.w
  ge r2.x, r0.x, r2.x
  and r2.x, r2.x, r2.z
  ge r2.y, r2.y, r0.x
  and r2.x, r2.y, r2.x
  mov r3.xz, l(3,0,4,0)
  movc r0.zw, r2.xxxx, r3.xxxy, r0.zzzw
  add r2.xyzw, r1.zwzw, l(-1.000000, 0.000000, -1.000000, -1.000000)
  ftoi r2.xyzw, r2.zwxy
  mov x0[4].xy, r2.zwzz
  mov r4.xy, r2.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.xy, r4.xyzw, t0.xyzw
  mov x1[4].xy, r3.xyxx
  add r4.x, r0.x, -r3.x
  add r4.y, -r0.x, r3.y
  add r3.w, |r4.y|, |r4.x|
  lt r4.x, r3.w, r0.w
  ge r3.x, r0.x, r3.x
  and r3.x, r3.x, r4.x
  ge r3.y, r3.y, r0.x
  and r3.x, r3.y, r3.x
  movc r0.zw, r3.xxxx, r3.zzzw, r0.zzzw
  mov x0[5].xy, r2.xyxx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t0.xyzw
  mov x1[5].xy, r2.xyxx
  add r2.z, r0.x, -r2.x
  add r2.w, -r0.x, r2.y
  add r3.y, |r2.w|, |r2.z|
  lt r2.z, r3.y, r0.w
  ge r2.x, r0.x, r2.x
  and r2.x, r2.x, r2.z
  ge r2.y, r2.y, r0.x
  and r2.x, r2.y, r2.x
  mov r3.xz, l(5,0,6,0)
  movc r0.zw, r2.xxxx, r3.xxxy, r0.zzzw
  add r1.xyzw, r1.xyzw, l(0.000000, -1.000000, 1.000000, -1.000000)
  ftoi r1.xyzw, r1.zwxy
  mov x0[6].xy, r1.zwzz
  mov r2.xy, r1.zwzz
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t0.xyzw
  mov x1[6].xy, r2.xyxx
  add r2.z, r0.x, -r2.x
  add r2.w, -r0.x, r2.y
  add r3.w, |r2.w|, |r2.z|
  lt r2.z, r3.w, r0.w
  ge r2.x, r0.x, r2.x
  and r2.x, r2.x, r2.z
  ge r2.y, r2.y, r0.x
  and r2.x, r2.y, r2.x
  movc r0.zw, r2.xxxx, r3.zzzw, r0.zzzw
  mov x0[7].xy, r1.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyzw, t0.xyzw
  mov x1[7].xy, r1.xyxx
  add r1.z, r0.x, -r1.x
  add r1.w, -r0.x, r1.y
  add r1.z, |r1.w|, |r1.z|
  lt r0.w, r1.z, r0.w
  ge r1.x, r0.x, r1.x
  and r0.w, r0.w, r1.x
  ge r1.x, r1.y, r0.x
  and r0.w, r0.w, r1.x
  movc r0.z, r0.w, l(7), r0.z
  ine r0.w, r0.z, l(-1)
  if_nz r0.w
    mov r1.xy, x0[r0.z + 0].xyxx
    mov r1.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t2.xyzw
    ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t1.xyzw
    mov r0.w, x1[r0.z + 0].x
    add r3.x, -r0.w, r0.x
    mov r0.z, x1[r0.z + 0].y
    add r0.z, -r0.w, r0.z
    add r0.z, r0.z, l(0.000010)
    div_sat r0.z, r3.x, r0.z
    add r1.xyzw, -r2.xyzw, r1.xyzw
    mad r5.xyzw, r0.zzzz, r1.xyzw, r2.xyzw
  endif 
endif 
mul r0.zw, v0.xxxy, cb0[66].zzzw
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.zw, r0.zzzw, cb2[5].xxxy
mul r0.w, r0.w, l(-1.000000)
mul r1.xyzw, r0.wwww, cb2[7].xyzx
mad r1.xyzw, r0.zzzz, cb2[6].xyzx, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[8].xyzx
add r2.x, -r0.x, l(1.000000)
mov r2.y, l(1.000000)
dp2 r0.x, r2.xyxx, cb0[11].zwzz
dp2 r0.z, r2.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.z
dp3 r0.z, r1.yzwy, r1.yzwy
rsq r0.z, r0.z
mul r1.xyzw, r0.zzzz, r1.xyzw
div r0.z, cb2[9].w, |r1.z|
min r0.x, r0.z, r0.x
mul r0.z, r0.x, cb2[7].w

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 147775b1c035d9c1-ps.txt

add r6.w, r0.x, -r6.y
mul r6.w, r6.w, r6.x
mad r0.z, -r6.w, cb0[9].x, r0.z

min r0.z, r0.z, l(1.000000)
add r0.x, r0.x, -cb2[10].y
mul_sat r0.x, r0.x, cb2[10].x
mul r0.x, r0.x, r0.z
mul r0.z, r0.x, cb2[10].z
mul r0.x, r0.x, cb2[8].w
mul r0.x, r0.x, l(-1.442695)
exp r0.x, r0.x
mul r2.xyz, r1.yzwy, l(0.488603, -0.488603, 0.488603, 0.000000)
mul r3.xyz, r2.xxxx, cb1[32].xyzx
mad r3.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r3.xyzx
mad r2.xyw, r2.yyyy, cb1[33].xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, cb1[34].xyzx, r2.xywx
mul r3.xyzw, r1.xyzw, r1.yzzz
mul r3.xyw, r3.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r2.xyz, r3.xxxx, cb1[35].xyzx, r2.xyzx
mad r2.xyz, r3.yyyy, cb1[36].xyzx, r2.xyzx
mad r0.w, r3.z, l(3.000000), l(-1.000000)
mul r0.w, r0.w, l(0.315392)
mad r2.xyz, r0.wwww, cb1[37].xyzx, r2.xyzx
mad r2.xyz, r3.wwww, cb1[38].xyzx, r2.xyzx
mul r0.w, r1.y, r1.y
mad r0.w, r1.w, r1.w, -r0.w
mul r0.w, r0.w, l(0.546274)
mad r1.xyz, r0.wwww, cb1[39].xyzx, r2.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r1.xyz, r1.xyzx, cb2[9].xyzx
mul r1.xyz, r1.xyzx, cb0[176].wwww
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xyz, r1.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mad o0.xyz, r1.xyzx, r5.wwww, r5.xyzx
mul r0.x, r0.x, r5.w
rsq r0.x, r0.x
div o1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.y, l(-0.250000)
mul r0.x, r0.x, l(0.000111111112)
rsq r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min o1.y, r0.x, l(1.000000)
ret 
// Approximately 224 instruction slots used