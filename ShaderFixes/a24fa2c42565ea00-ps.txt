// asmtool.py --fix-wd2-lens-grit=y2 -i -f --only-autofixed a24fa2c42565ea00-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:08:28 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer HDREffects
// {
//
//   float4 AdditionalBlurParams;       // Offset:    0 Size:    16 [unused]
//   float4 BokehParams;                // Offset:   16 Size:    16
//   float4 CoCComputation;             // Offset:   32 Size:    16
//   float4 DirectionalBlurUVScaleBias; // Offset:   48 Size:    16 [unused]
//   float4 SourceSize;                 // Offset:   64 Size:    16 [unused]
//   float2 BokehContrast;              // Offset:   80 Size:     8 [unused]
//   float CoCTexelBlurRange;           // Offset:   88 Size:     4
//   float2 CoCRange;                   // Offset:   96 Size:     8
//
// }
//
// cbuffer HDRLighting
// {
//
//   float4 AdaptationState;            // Offset:    0 Size:    16 [unused]
//   float4 ExpositionParams;           // Offset:   16 Size:    16 [unused]
//   float4 LensParams1;                // Offset:   32 Size:    16
//   float4 LensParams2;                // Offset:   48 Size:    16
//   float4 UIParams;                   // Offset:   64 Size:    16 [unused]
//   float4 ViewportResolution;         // Offset:   80 Size:    16 [unused]
//   float3 CameraXAxis;                // Offset:   96 Size:    12 [unused]
//   float ChromaticAberationStrength;  // Offset:  108 Size:     4
//   float3 CameraYAxis;                // Offset:  112 Size:    12 [unused]
//   float DistoritionKCube;            // Offset:  124 Size:     4
//   float3 CameraZAxis;                // Offset:  128 Size:    12 [unused]
//   float DistoritionKCylindrical;     // Offset:  140 Size:     4
//   float3 MPEGArtefactColorProbability;// Offset:  144 Size:    12
//   float FilmGrainIntensity;          // Offset:  156 Size:     4 [unused]
//   float2 ProjectionOffset;           // Offset:  160 Size:     8
//   float FilmGrainVignetingRelation;  // Offset:  168 Size:     4 [unused]
//   float MPEGArtefactArtefactBlockShift;// Offset:  172 Size:     4
//   float MPEGArtefactBlocksPerLargeBlock;// Offset:  176 Size:     4
//   float MPEGArtefactBlockyFactor;    // Offset:  180 Size:     4
//   float MPEGArtefactBlockyFactorBlend;// Offset:  184 Size:     4
//   float MPEGArtefactLineProbability; // Offset:  188 Size:     4
//   float MPEGArtefactSmallBlockSize;  // Offset:  192 Size:     4
//   float MPEGArtefactSquareProbability;// Offset:  196 Size:     4
//   float MPEGArtefactTimeScale;       // Offset:  200 Size:     4
//   float ProjectionScaleInv;          // Offset:  204 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorClamp2D                      sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// PostFxDistortion__DistortionSampler__SampObj__    sampler      NA          NA    3        1
// HDRLighting__LensDirtTexture__SampObj__    sampler      NA          NA    4        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// HDREffects__ColorAndMaskTexture__TexObj__    texture  float4          2d    1        1
// HDREffects__DepthTextureMS        texture   float        2dMS    2        1
// PostFxDistortion__DistortionSampler__TexObj__    texture  float4          2d    3        1
// HDRLighting__BloomMap__TexObj__    texture  float4          2d    4        1
// HDRLighting__Frame__TexObj__      texture  float4          2d    5        1
// HDRLighting__LensDirtBloomSource__TexObj__    texture  float4          2d    6        1
// HDRLighting__LensDirtTexture__TexObj__    texture  float4          2d    7        1
// HDRLighting__PostFxMaskTexture__TexObj__    texture  float4          2d    8        1
// HDRLighting__ColorRemapHDRTexture    texture  float4          3d    9        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// HDREffects                        cbuffer      NA          NA    2        1
// HDRLighting                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear centroid v0.xy
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

// 3DMigoto IniParams:
dcl_resource_texture1d (float,float,float,float) t120

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


ld_indexable(texture1d)(float,float,float,float) r9.xyzw, l(2, 0, 0, 0), t120.xyzw

mad r0.xy, v0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t3.xyzw, s3
lt r0.z, l(0.000000), r1.z
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r1.zzzz, r1.xyxx
mad r1.xy, r1.xyxx, r1.zzzz, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t3.xyzw, s3
if_nz r0.z
  mad r0.xy, r2.xyxx, r0.wwww, r0.xyxx
endif 
add r1.xyzw, r0.xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
mul r0.zw, r1.xxxy, r1.xxxy
add r0.z, r0.w, r0.z
sqrt r0.w, r0.z
mad r0.w, cb3[7].w, r0.w, cb3[8].w
mad r0.z, r0.z, r0.w, l(1.000000)
mad r1.xy, cb3[7].wwww, l(0.707106769, 0.500000, 0.000000, 0.000000), cb3[8].wwww
mad r1.xy, r1.xyxx, l(0.500000, 0.250000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
max r0.w, r1.y, r1.x
rcp r0.w, r0.w
mul r0.z, r0.z, r0.w
mad r1.zw, r0.zzzz, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r0.z, cb1[66].z, cb3[6].w
add r0.xy, -r0.xyxx, r1.zwzz
dp2 r0.x, r0.xyxx, r0.xyxx
mul r0.x, r0.x, cb1[66].x
mul r0.xzw, r0.xxzz, l(0.500000, 0.000000, 8.000000, -8.000000)
mad_sat r1.xy, r0.zwzz, r0.xxxx, r1.zzzz
mov_sat r0.xyz, r1.xwzx
mov r0.w, r1.w
mov_sat r2.xy, r0.zwzz
mov_sat r2.zw, r1.yyyw
mul r0.z, cb0[34].x, l(0.000244140625)
ge r0.w, r0.z, -r0.z
frc r0.z, |r0.z|
movc r0.z, r0.w, r0.z, -r0.z
mul r0.z, r0.z, cb3[12].z
div r1.xy, v1.xyxx, cb3[12].xxxx
round_ni r1.xy, r1.xyxx
div r1.xy, r1.xyxx, cb3[11].xxxx
mul r3.xyzw, r0.zzzz, l(4096.000000, 5054464.000000, 14512128.000000, 5062841.500000)
round_ni r3.yz, r3.yyzy
div r3.yz, r3.yyzy, cb3[11].xxxx
add r1.xy, r1.xyxx, r3.yzyy
frc r0.w, r3.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, cb3[12].y
mul r0.z, r0.z, l(9158842.000000)
frc r0.z, r0.z
mul r3.y, r0.z, r0.z
mul r0.z, r0.z, r3.y
mul r0.z, r0.z, cb3[11].w
ftou r3.yzw, r1.xxyy
add r4.xyz, r1.yyyy, l(1.000000, 2.000000, 2.000000, 0.000000)
ftou r4.xyz, r4.xyzx
ftou r3.x, r3.x
imad r4.xyz, r3.yyyy, l(0x0019660d, 0x0019660d, 0x0019660d, 0), r4.xyzx
iadd r4.xyz, r3.xxxx, r4.xyzx
xor r5.xyz, r4.xzzx, l(61, 61, 61, 0)
ushr r4.xyz, r4.xyzx, l(16, 16, 16, 0)
xor r4.xyz, r4.xyzx, r5.xyzx
imul null, r4.xyz, r4.xyzx, l(9, 9, 9, 0)
ushr r5.xyz, r4.xzzx, l(4, 4, 4, 0)
xor r4.xyz, r4.xyzx, r5.xyzx
imul null, r4.xyz, r4.xyzx, l(0x27d4eb2d, 0x27d4eb2d, 0x27d4eb2d, 0)
ushr r5.xyz, r4.xzzx, l(15, 15, 15, 0)
xor r4.xyz, r4.xyzx, r5.xyzx
utof r4.xyz, r4.xyzx
mul r4.xyz, r4.xyzx, l(2.328306437E-010, 2.328306437E-010, 3.492459655E-010, 0.000000)
imad r3.xyz, r3.yzwy, l(0x0019660d, 0x0019660d, 0x0019660d, 0), r3.xxxx
iadd r3.xyz, r3.xyzx, l(2, 3, 2, 0)
xor r5.xyz, r3.xyzx, l(61, 61, 61, 0)
ushr r3.xyz, r3.xyzx, l(16, 16, 16, 0)
xor r3.xyz, r3.xyzx, r5.xyzx
imul null, r3.xyz, r3.xyzx, l(9, 9, 9, 0)
ushr r5.xyz, r3.xyzx, l(4, 4, 4, 0)
xor r3.xyz, r3.xyzx, r5.xyzx
imul null, r3.xyz, r3.xyzx, l(0x27d4eb2d, 0x27d4eb2d, 0x27d4eb2d, 0)
ushr r5.xyz, r3.xyzx, l(15, 15, 15, 0)
xor r3.xyz, r3.xyzx, r5.xyzx
utof r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(2.328306437E-010, 8.149072528E-010, 5.820766091E-010, 0.000000)
lt r4.xyz, r4.xyzx, r0.wwww
lt r3.xyz, r3.xyzx, r0.zzzz
or r0.zw, r3.xxxz, r4.xxxz
frc r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb3[10].wwww
mad r3.xz, r1.xxyx, cb3[9].xxxx, r0.xxyx
mad r5.xy, r1.xyxx, cb3[9].yyyy, r2.xyxx
mad r5.zw, -r1.xxxy, cb3[9].zzzz, r2.zzzw
movc r0.xy, r0.zzzz, r3.xzxx, r0.xyxx
movc r2.xyzw, r0.zzzz, r5.xyzw, r2.xyzw
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t5.yzxw, s2
sample_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t5.yxzw, s2
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t5.xzyw, s2
div r5.x, cb1[66].x, cb1[66].y
mov r5.yw, l(0,1.000000,0,1.000000)
mul r0.xy, r0.xyxx, r5.xyxx
mul r0.xy, r0.xyxx, cb3[11].yyyy
round_ni r0.xy, r0.xyxx
mul r3.xz, r5.xxyx, cb3[11].yyyy
div r0.xy, r0.xyxx, r3.xzxx
add r0.xy, r0.xyxx, cb1[66].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t5.xyzw, s2
mad r0.x, cb3[11].z, r0.x, -r0.z
mad r0.x, cb3[11].z, r0.x, r0.z
mul r2.xyzw, r2.xyzw, r5.xyxy
mul r2.xyzw, r2.xyzw, cb3[11].yyyy
round_ni r2.xyzw, r2.xyzw
div r2.xyzw, r2.xyzw, r3.xzxz
add r2.xyzw, r2.xyzw, cb1[66].zwzw
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t5.yxzw, s2
mad r2.x, cb3[11].z, r2.x, -r1.x
mad r0.y, cb3[11].z, r2.x, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t5.zxyw, s2
mad r1.x, cb3[11].z, r1.x, -r1.y
mad r0.z, cb3[11].z, r1.x, r1.y
dp3 r1.x, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
movc r0.xyz, r4.yyyy, r1.xxxx, r0.xyzx
dp3 r2.y, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r2.xz, l(0,0,0,0)
movc r0.xyz, r3.yyyy, r2.xyzx, r0.xyzx
mul r1.x, v1.y, l(0.333333343)
frc r1.x, r1.x
lt r2.xyz, cb3[9].xyzx, r1.xxxx
movc r3.xyz, r2.xxxx, l(3.000000,0,0,0), l(3.000000,3.000000,3.000000,0)
movc r2.xyw, r2.yyyy, l(0,3.000000,0,0), r3.xyxz
movc r2.xyz, r2.zzzz, l(0,0,3.000000,0), r2.xywx
mul r2.xyz, r0.xyzx, r2.xyzx
movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
mul r1.xy, r1.zwzz, cb1[66].xyxx
mul r1.xy, r1.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000)
ftoi r2.xy, r1.xyxx
mov r2.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r5.z, r2.xyzw, t2.yzxw, l(0)
dp2 r0.w, r5.zwzz, cb1[15].zwzz
dp2 r1.x, r5.zwzz, cb1[16].zwzz
div r0.w, -r0.w, r1.x
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t1.xyzw, s0
mad r0.w, r0.w, cb2[2].x, cb2[2].y
div r0.w, cb2[2].z, r0.w
add r0.w, r0.w, cb2[2].w
mul r0.w, r0.w, cb2[5].z
max r0.w, r0.w, cb2[6].x
min r0.w, r0.w, cb2[6].y
mul r0.w, r0.w, r0.w
mad_sat r0.w, r0.w, cb2[1].z, l(-0.500000)
max r0.w, r2.w, r0.w
min r0.w, r0.w, l(1.000000)
add r2.xyz, -r0.xyzx, r2.xyzx
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t4.xyzw, s0
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.xyz, r0.xyzx, r2.xyzx
add r0.w, r2.w, l(1.000000)
div r0.xyz, r0.xyzx, r0.wwww
mad r1.xy, r1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), cb3[10].xyxx
mul r1.xy, r1.xyxx, cb3[12].wwww
mad r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

// WATCH_DOGS2 lens grit adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-lens-grit=y2 -i -f --only-autofixed a24fa2c42565ea00-ps.txt

mov r6.xyzw, r1.xyzw
mul r8.w, r8.x, r9.y
eq r7.x, r8.z, l(1.0)
if_nz r7.x
  add r7.x, r8.w, l(1.0)
  add r7.y, r6.x, l(-1.0)
  mad r6.x, r7.x, r7.y, l(1.0)
else
  add r7.x, l(1.0), -r8.w
  mul r6.x, r6.x, r7.x
endif

sample_indexable(texture2d)(float,float,float,float) r2.xyz, r6.xyxx, t7.xyzw, s4

eq r7.x, r9.y, l(-1.0)
if_nz r7.x
  mov r2.xyz, l(0.0, 0.0, 0.0, 0.0)
endif

mul r2.xyz, r2.xyzx, cb3[2].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s0
add r0.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r0.wwww
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
log r0.xyz, |r0.xyzx|
mad_sat r0.xyz, r0.xyzx, l(0.0632478595, 0.0632478595, 0.0632478595, 0.000000), l(0.690302372, 0.690302372, 0.690302372, 0.000000)
mad r0.xyz, r0.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), l(0.015625, 0.015625, 0.015625, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.xyz, r0.xyzx, t9.xyzw, s1, l(0.000000)
mul r0.w, cb3[2].w, cb3[3].w
mul r1.y, r0.w, cb1[180].y
mov r1.xzw, l(1.000000,0,0,0)
mul r1.xy, r1.xyxx, v0.xyxx
dp2 r0.w, r1.xyxx, r1.xyxx
sqrt r0.w, r0.w
add r0.w, r0.w, -cb3[3].x
div r0.w, r0.w, cb3[3].y
add_sat r0.w, r0.w, l(0.500000)
mul r1.x, r0.w, r0.w
dp2 r0.w, r0.wwww, r1.xxxx
mad r0.w, r1.x, l(3.000000), -r0.w
mad r0.w, -r0.w, cb3[3].z, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xy, v1.xyxx, cb0[35].yyyy
frc r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, cb0[35].xxxx
ftoi r1.xy, r1.xyxx
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw
ge r2.xyz, l(0.00313080009, 0.00313080009, 0.00313080009, 0.000000), r0.xyzx
mul r3.xyz, r0.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
log r0.xyz, |r0.xyzx|
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
movc r0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r0.xyz, r1.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), r0.xyzx
ge r1.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r0.xyzx
mul r2.xyz, r0.xyzx, l(0.0773993805, 0.0773993805, 0.0773993805, 0.000000)
add r0.xyz, r0.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
mul r0.xyz, r0.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r0.xyz, |r0.xyzx|
mul r0.xyz, r0.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r0.xyz, r0.xyzx
movc o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
ftoi r0.xy, v1.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t8.wxyz
add o0.w, -r0.x, l(1.000000)
ret 
// Approximately 214 instruction slots used