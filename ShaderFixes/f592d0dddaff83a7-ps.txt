// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed f592d0dddaff83a7-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:12 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float SSRTextureMaxMipIndex;       // Offset:  128 Size:     4
//   bool GameIsPaused;                 // Offset:  132 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    2        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    3        1
// DeferredLightingBase__SunShadowMaskTextureMS    texture  float2        2dMS    4        1
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    5        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    6        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    7        1
// SSR__MotionVectorTextureMS        texture  float4        2dMS    8        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    9        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS   10        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS   11        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS   12        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// SSR                               cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecubearray (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2dms(0) (float,float,float,float) t8
dcl_resource_texture2dms(0) (float,float,float,float) t9
dcl_resource_texture2dms(0) (float,float,float,float) t10
dcl_resource_texture2dms(0) (float,float,float,float) t11
dcl_resource_texture2dms(0) (float,float,float,float) t12
dcl_input_ps_siv linear noperspective sample v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_temps 28

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r24.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed f592d0dddaff83a7-ps.txt

// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed f592d0dddaff83a7-ps.txt

mul r24.w, r24.x, r24.y
mul r26.x, r24.w, cb1[9].x
mul r26.y, r24.w, cb1[10].x
mul r26.z, r24.w, cb1[11].x
mul r26.w, r24.w, cb1[12].x
dp4 r27.x, r26.xyzw, cb1[17].xyzw
dp4 r27.y, r26.xyzw, cb1[18].xyzw
dp4 r27.z, r26.xyzw, cb1[19].xyzw
add r25.xyz, cb1[174].xyz, r27.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.z, r1.xyww, t10.zwxy, v1.x
mov r0.w, l(1.000000)
dp2 r2.x, r0.zwzz, cb1[11].zwzz
dp2 r0.z, r0.zwzz, cb1[12].zwzz
div r0.z, -r2.x, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed f592d0dddaff83a7-ps.txt

add r24.w, -r2.z, -r24.y
mul r24.w, r24.w, r24.x
mad r2.x, -r24.w, cb1[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb1[17].xyzw
dp4 r0.y, r2.xyzw, cb1[18].xyzw
dp4 r0.z, r2.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r1.xyww, t9.wxyz, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r1.xyww, t11.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r4.xyzw, r1.xyww, t12.zyxw, v1.x
mad r5.x, r4.w, l(255.000000), l(0.500000)
round_ni r5.x, r5.x
ftou r5.x, r5.x
ushr r5.x, r5.x, l(5)
dp3 r5.y, r3.xyzx, r3.xyzx
rsq r5.y, r5.y
mul r5.yzw, r3.xxyz, r5.yyyy
ieq r6.xyz, r5.xxxx, l(1, 4, 0, 0)
ge r6.w, r2.x, l(0.750000)
add r7.x, r2.x, l(-0.750000)
mad r7.x, r7.x, l(-0.599999905), l(1.000000)
movc r6.w, r6.w, r7.x, l(1.000000)
movc r6.w, r6.y, r6.w, r2.x
movc r6.w, r6.x, l(1.000000), r6.w
add r7.xyz, -r0.xyzx, r25.xyzx
dp3 r7.w, r7.xyzx, r7.xyzx
rsq r7.w, r7.w
mul r8.xyz, r7.wwww, r7.xyzx
mul r9.yzw, r2.yyzw, r6.wwww
if_nz r6.x
  mad r2.w, r3.w, l(0.500000), l(0.500000)
  mad r2.w, r2.w, l(65535.000000), l(0.500000)
  ftou r2.w, r2.w
  and r10.xy, r2.wwww, l(255, 0x0000ff00, 0, 0)
  utof r10.xy, r10.xyxx
  mul r10.xz, r10.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.w, r2.x, l(255.000000)
  ftou r2.w, r2.w
  and r11.xy, r2.wwww, l(15, 240, 0, 0)
  utof r11.xy, r11.xyxx
  mul r10.yw, r11.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r11.w, l(0)
  mov r9.x, r9.y
  mov r12.x, l(0)
else 
  mul r2.w, r4.y, r4.y
  max r4.y, r2.w, l(0.001000)
  ieq r2.w, r5.x, l(2)
  if_nz r2.w
    mad r2.w, r3.w, l(0.500000), l(0.500000)
    mad r2.w, r2.w, l(65535.000000), l(0.500000)
    ftou r2.w, r2.w
    and r13.xy, r2.wwww, l(255, 0x0000ff00, 0, 0)
    utof r13.xy, r13.xyxx
    mov r13.z, r4.z
    mad r13.xyz, r13.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.w, -r2.x, l(1.000000)
    mul r2.w, r2.w, r9.y
    mad r9.x, r2.w, l(0.500000), r9.y
    dp3 r2.w, r13.xyzx, r13.xyzx
    rsq r2.w, r2.w
    mul r10.xzw, r2.wwww, r13.xxyz
    mov r10.y, l(0)
    mov r4.z, l(0.500000)
    mov r11.w, l(0)
    mov r12.x, l(0)
  else 
    ieq r2.w, r5.x, l(3)
    if_nz r2.w
      mad r2.w, r3.w, l(0.500000), l(0.500000)
      mad r2.w, r2.w, l(65535.000000), l(0.500000)
      ftou r2.w, r2.w
      and r13.xyzw, r2.wwww, l(0x0000f800, 2016, 31, 31)
      utof r13.xyzw, r13.xyzw
      ge r14.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r13.wyxw
      mul r2.w, r13.w, l(0.00249675405)
      mad r15.xyz, r13.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r15.xyz, r15.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r15.xyz, r15.xyzx
      movc r10.x, r14.x, r2.w, r15.x
      mul r13.xy, r13.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r10.zw, r14.yyyz, r13.xxxy, r15.yyyz
      mov r10.y, l(0)
      mov r11.w, l(0)
      mov r12.x, l(0)
    else 
      if_nz r6.y
        mad r2.w, r3.w, l(32767.000000), l(32767.000000)
        ftou r2.w, r2.w
        and r8.w, r2.w, l(255)
        utof r8.w, r8.w
        mul r8.w, r8.w, l(0.0123199718)
        ubfe r2.w, l(8), l(8), r2.w
        utof r2.w, r2.w
        mad r2.w, r2.w, l(0.0246399436), l(-3.14159274)
        sincos r13.x, r14.x, r8.w
        sincos r15.x, r16.x, r2.w
        mul r16.x, r13.x, r16.x
        mul r16.y, r13.x, r15.x
        mov r16.z, r14.x
        dp3 r2.w, r16.xyzx, r16.xyzx
        rsq r2.w, r2.w
        mul r10.xzw, r2.wwww, r16.xxyz
        mul_sat r11.w, r2.x, l(0.250000)
        mov r10.y, l(0)
        mov r12.x, l(0)
      else 
        ieq r2.w, r5.x, l(5)
        lt r8.w, r3.z, l(0.900000)
        movc r13.xyz, r8.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r14.xyz, r3.zxyz, r13.xyzx
        mad r13.xyz, r3.yzxy, r13.yzxy, -r14.xyzx
        dp3 r8.w, r13.xyzx, r13.xyzx
        rsq r8.w, r8.w
        mul r13.xyz, r8.wwww, r13.xyzx
        mul r14.xyz, r3.zxyz, r13.yzxy
        mad r3.xyz, r3.yzxy, r13.zxyz, -r14.xyzx
        dp3 r8.w, r3.xyzx, r3.xyzx
        rsq r8.w, r8.w
        mul r3.xyz, r3.xyzx, r8.wwww
        mad r8.w, r3.w, l(2.000000), l(-1.000000)
        mul r8.w, r8.w, l(3.14159274)
        sincos r14.x, r15.x, r8.w
        mul r13.xyz, r13.xyzx, r14.xxxx
        mad r13.xyz, r3.xyzx, r15.xxxx, r13.xyzx
        mad r3.x, r3.w, l(0.500000), l(0.500000)
        mad r3.x, r3.x, l(65535.000000), l(0.500000)
        ftou r3.x, r3.x
        and r3.xy, r3.xxxx, l(255, 0x0000ff00, 0, 0)
        utof r3.xy, r3.xyxx
        mul r3.x, r3.x, l(0.00392156886)
        mad r3.z, r3.y, l(0.0000306372567), l(-1.000000)
        movc r3.xy, r5.xxxx, l(0,0,0,0), r3.xzxx
        mov r13.w, r4.x
        mov r3.z, l(0)
        movc r10.xyzw, r2.wwww, r13.xwyz, r3.xzzz
        mov r2.yz, l(0,0,0,0)
        mov r3.w, r13.w
        movc r12.xyz, r2.wwww, r2.zxyz, r3.yzwy
        mov r11.w, r12.y
        mov r4.x, r12.z
      endif 
    endif 
    mov r9.x, r9.y
  endif 
endif 
ldms_indexable(texture2dms)(float,float,float,float) r2.xyz, r1.xyww, t5.xyzw, v1.x
div r2.xyz, r2.xyzx, cb1[176].wwww
ldms_indexable(texture2dms)(float,float,float,float) r1.xy, r1.xyzw, t4.xyzw, v1.x
mul r1.y, r1.y, r1.y
dp3 r1.z, r0.xyzx, cb0[1].xyzx
add_sat r1.z, r1.z, cb0[1].w
mul r1.x, r1.z, r1.x
mad r1.x, r1.x, cb3[37].x, cb3[37].y
lt r1.z, l(0.000000), r1.x
lt r1.w, l(0.000000), r10.x
and r1.w, r1.w, r6.z
or r1.z, r1.w, r1.z
if_nz r1.z
  dp3 r3.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r1.z, r5.yzwy, cb2[2].xyzx
  mov_sat r1.w, r1.z
  ieq r6.z, r5.x, l(2)
  dp3 r8.w, r10.xzwx, r10.xzwx
  rsq r8.w, r8.w
  mul r12.yzw, r8.wwww, r10.xxzw
  dp3 r8.w, r12.yzwy, cb2[2].xyzx
  add r8.w, r8.w, l(1.000000)
  mul_sat r8.w, r8.w, l(0.500000)
  mul r9.y, r8.w, r8.w
  mul r8.w, r8.w, r9.y
  movc r12.yzw, r6.zzzz, r10.xxzw, r5.yyzw
  movc r8.w, r6.z, r8.w, r1.w
  if_nz r6.x
    mov_sat r13.xyzw, r10.xyzw
    mov_sat r14.xy, r4.xyxx
    log r15.xyz, r9.xzwx
    mul r16.xyz, r13.yyyy, r15.xyzx
    mul r16.xyz, r16.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r15.xyz, r15.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r16.xyzx
    eq r9.y, r13.x, l(0.000000)
    add r13.y, -r14.x, l(1.000000)
    mul r16.xyz, r9.xzwx, r13.yyyy
    mul r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r17.xyz, -r13.xxxx, r15.xyzx
    exp r17.xyz, r17.xyzx
    mul r17.xyz, r16.xyzx, r17.xyzx
    mul r17.xyz, r17.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r16.xyz, r9.yyyy, r16.xyzx, r17.xyzx
    mov r16.w, l(0.180000)
    mul r13.y, r13.w, l(0.080000)
    mad r13.x, r13.x, l(48.750000), l(1.250000)
    mul r14.y, r14.y, r14.y
    max r14.y, r14.y, l(0.001000)
    mul r13.z, r13.z, r13.z
    max r13.z, r13.z, l(0.001000)
    lt r14.z, l(0.000000), r1.z
    lt r14.w, r1.z, l(0.000000)
    iadd r14.z, -r14.z, r14.w
    itof r14.z, r14.z
    mad r14.w, r1.z, r1.z, l(-1.000000)
    mad r14.w, r14.w, l(0.666860044), l(1.000000)
    sqrt r14.w, r14.w
    mul r14.z, r14.w, r14.z
    mad r1.z, r1.z, l(0.666860044), -r14.z
    mul r17.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r17.xyz, r1.zzzz, r5.yzwy, -r17.xyzx
    add r18.xyz, -r17.xyzx, -cb2[2].xyzx
    mad r17.xyz, r14.yyyy, r18.xyzx, r17.xyzx
    dp3 r1.z, r17.xyzx, r17.xyzx
    rsq r1.z, r1.z
    mul r18.xyz, r1.zzzz, r17.xyzx
    dp3 r14.z, r8.xyzx, r5.yzwy
    lt r14.w, l(0.000000), r14.z
    lt r15.w, r14.z, l(0.000000)
    iadd r14.w, -r14.w, r15.w
    itof r14.w, r14.w
    mad r15.w, r14.z, r14.z, l(-1.000000)
    mad r15.w, r15.w, l(0.666860044), l(1.000000)
    sqrt r15.w, r15.w
    mul r14.w, r14.w, r15.w
    mad r14.w, r14.z, l(0.666860044), -r14.w
    mul r19.xyz, r8.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r19.xyz, r14.wwww, r5.yzwy, -r19.xyzx
    mad r20.xyz, -r7.xyzx, r7.wwww, -r19.xyzx
    mad r19.xyz, r14.yyyy, r20.xyzx, r19.xyzx
    dp3 r14.w, r19.xyzx, r19.xyzx
    rsq r14.w, r14.w
    mul r19.xyz, r14.wwww, r19.xyzx
    dp3 r14.w, r5.yzwy, r18.xyzx
    mad r14.w, -|r14.w|, |r14.w|, l(1.000000)
    mad r14.w, -r14.w, l(0.444702327), l(1.000000)
    add r13.x, r13.x, r13.x
    sqrt r14.w, r14.w
    div r13.x, r13.x, r14.w
    mov_sat r14.z, r14.z
    mad r20.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
    dp3 r14.w, r20.xyzx, r20.xyzx
    rsq r14.w, r14.w
    mul r20.xyz, r14.wwww, r20.xyzx
    dp3_sat r14.w, r5.yzwy, r20.xyzx
    mul r15.w, r14.y, r14.y
    mul r14.w, r14.w, r14.w
    mad r17.w, r14.y, r14.y, l(-1.000000)
    mad r14.w, r14.w, r17.w, l(1.000000)
    mul r14.w, r14.w, r14.w
    mul r14.w, r14.w, l(3.14159274)
    div r14.w, r15.w, r14.w
    mad r14.y, r14.y, l(0.500000), l(0.500000)
    mul r15.w, r1.w, r1.w
    mul r14.y, r14.y, r14.y
    mad r17.w, -r1.w, r1.w, l(1.000000)
    mul r17.w, r14.y, r17.w
    max r15.w, r15.w, l(1.000000047E-034)
    div r15.w, r17.w, r15.w
    add r15.w, r15.w, l(1.000000)
    sqrt r15.w, r15.w
    add r15.w, r15.w, l(1.000000)
    div r15.w, l(2.000000), r15.w
    mul r17.w, r14.z, r14.z
    mad r14.z, -r14.z, r14.z, l(1.000000)
    mul r14.y, r14.z, r14.y
    max r14.z, r17.w, l(1.000000047E-034)
    div r14.y, r14.y, r14.z
    add r14.y, r14.y, l(1.000000)
    sqrt r14.y, r14.y
    add r14.y, r14.y, l(1.000000)
    div r14.y, l(2.000000), r14.y
    mul r14.y, r14.y, r15.w
    mad r20.xyz, r1.wwww, r1.wwww, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r20.xyz, r20.xyzx
    add r21.xyz, -r1.wwww, r20.zyzz
    add r20.xyz, r1.wwww, r20.xyzx
    mul r22.xyz, r21.zyzz, r21.zyzz
    mul r23.xyz, r20.zyzz, r20.zyzz
    add r23.xyz, r23.xyzx, r23.xyzx
    div r22.xyz, r22.xyzx, r23.xyzx
    mad r20.xyz, r1.wwww, r20.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r21.xyz, r1.wwww, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r20.xyz, r20.xyzx, r20.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r20.xyz, r20.xyzx, r22.xyzx
    mul r14.y, r14.y, r14.w
    mul r14.yzw, r20.xxyz, r14.yyyy
    mad r20.xyz, -r13.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
    mad r20.xyz, r14.xxxx, r20.xyzx, r13.yyyy
    dp3_sat r13.y, r5.yzwy, -r19.xyzx
    mad r17.xyz, -r17.xyzx, r1.zzzz, -r19.xyzx
    dp3 r1.z, r17.xyzx, r17.xyzx
    rsq r1.z, r1.z
    mul r17.xyz, r1.zzzz, r17.xyzx
    dp3 r1.z, r17.xyzx, -r18.xyzx
    dp3_sat r13.w, r5.yzwy, -r18.xyzx
    dp3_sat r14.x, r5.yzwy, r17.xyzx
    mul r15.w, r13.z, r13.z
    mul r14.x, r14.x, r14.x
    mad r17.x, r13.z, r13.z, l(-1.000000)
    mad r14.x, r14.x, r17.x, l(1.000000)
    mul r14.x, r14.x, r14.x
    mul r14.x, r14.x, l(3.14159274)
    div r14.x, r15.w, r14.x
    mad r13.z, r13.z, l(0.500000), l(0.500000)
    mul r15.w, r13.w, r13.w
    mul r13.z, r13.z, r13.z
    mad r13.w, -r13.w, r13.w, l(1.000000)
    mul r13.w, r13.w, r13.z
    max r15.w, r15.w, l(1.000000047E-034)
    div r13.w, r13.w, r15.w
    add r13.w, r13.w, l(1.000000)
    sqrt r13.w, r13.w
    add r13.w, r13.w, l(1.000000)
    mul r15.w, r13.y, r13.y
    mad r13.y, -r13.y, r13.y, l(1.000000)
    mul r13.y, r13.y, r13.z
    max r13.z, r15.w, l(1.000000047E-034)
    div r13.y, r13.y, r13.z
    add r13.y, r13.y, l(1.000000)
    sqrt r13.y, r13.y
    add r13.y, r13.y, l(1.000000)
    div r13.yw, l(0.000000, 2.000000, 0.000000, 2.000000), r13.yyyw
    mul r13.y, r13.y, r13.w
    dp3 r13.z, r20.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r13.z, r13.z, l(50.000000)
    add r1.z, -r1.z, l(1.000000)
    mul r13.w, r1.z, r1.z
    mul r13.w, r13.w, r13.w
    add r17.xyz, -r20.xyzx, r13.zzzz
    mul r17.xyz, r13.wwww, r17.xyzx
    mad r17.xyz, r17.xyzx, r1.zzzz, r20.xyzx
    mul r1.z, r13.y, r14.x
    mul r13.yzw, r17.xxyz, r1.zzzz
    mul r15.xyz, r13.xxxx, -r15.xyzx
    exp r15.xyz, r15.xyzx
    mad r14.xyz, r13.yzwy, r15.xyzx, r14.yzwy
    movc r13.xyz, r9.yyyy, r13.yzwy, r14.xyzx
    dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r14.xyzw, l(0,0,0,0)
  else 
    if_nz r6.z
      mul r15.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r15.w, l(0.0572957806)
      add r1.z, -r4.x, l(1.000000)
      mul r16.xyzw, r1.zzzz, r15.xyzw
    else 
      ieq r1.z, r5.x, l(3)
      if_nz r1.z
        mad r15.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
        dp3 r1.z, r15.xyzx, r15.xyzx
        rsq r1.z, r1.z
        mul r15.xyz, r1.zzzz, r15.xyzx
        dp3_sat r1.z, r15.xyzx, r8.xyzx
        mul r9.y, r4.z, l(0.080000)
        add r1.z, -r1.z, l(1.000000)
        mul r15.x, r1.z, r1.z
        mul r15.x, r15.x, r15.x
        mad r15.y, -r4.z, l(0.080000), l(1.000000)
        mul r15.x, r15.x, r15.y
        mad r1.z, r15.x, r1.z, r9.y
        add_sat r9.y, r4.y, r4.y
        mad r15.w, r9.y, -r1.z, l(1.000000)
        mul r15.xyz, r9.xzwx, r15.wwww
        mul r16.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r6.y
          add r15.xyz, -r10.xzwx, r12.yzwy
          mad r17.xyz, r15.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r10.xzwx
          dp3 r1.z, r17.xyzx, r17.xyzx
          rsq r1.z, r1.z
          mul r17.xyz, r1.zzzz, r17.xyzx
          mad r15.xyz, r15.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r10.xzwx
          dp3 r1.z, r15.xyzx, r15.xyzx
          rsq r1.z, r1.z
          mul r15.xyz, r1.zzzz, r15.xyzx
          dp3 r1.z, r10.xzwx, cb2[2].xyzx
          dp3 r9.y, r17.xyzx, cb2[2].xyzx
          dp3 r15.x, r15.xyzx, cb2[2].xyzx
          mad r11.z, r1.z, l(0.500000), l(0.500000)
          mad r15.yz, r11.zzwz, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.y, r15.yzyy, t0.wxyz, s0, l(0.000000)
          mad r11.y, r9.y, l(0.500000), l(0.500000)
          mad r11.yz, r11.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.z, r11.yzyy, t0.wxyz, s0, l(0.000000)
          mad r11.x, r15.x, l(0.500000), l(0.500000)
          mad r11.xy, r11.xwxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.w, r11.xyxx, t0.wxyz, s0, l(0.000000)
          mul r15.xyz, r9.xzwx, r15.yzwy
          mov r15.w, l(0.0572957806)
          mul r16.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r1.z, r5.x, l(5)
          dp3 r9.y, r10.xzwx, cb2[2].xyzx
          mad r9.y, -r9.y, r9.y, l(1.000000)
          sqrt r9.y, r9.y
          mul r15.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r15.w, l(0.0572957806)
          add r11.x, -r4.x, l(1.000000)
          mul r15.xyzw, r11.xxxx, r15.xyzw
          mul r17.xyzw, r9.yyyy, r15.xyzw
          mul r17.xyzw, r17.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r9.y, -r10.y, l(1.000000)
          mul r17.xyzw, r9.yyyy, r17.xyzw
          movc r16.xyzw, r1.zzzz, r17.xyzw, r15.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mul r1.z, r4.z, l(0.080000)
      mad r11.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
      mad r11.xyz, r4.xxxx, r11.xyzx, r1.zzzz
      dp3_sat r1.z, r5.yzwy, r8.xyzx
      mad r15.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
      dp3 r9.y, r15.xyzx, r15.xyzx
      rsq r9.y, r9.y
      mul r15.xyz, r9.yyyy, r15.xyzx
      dp3 r9.y, r15.xyzx, cb2[2].xyzx
      dp3_sat r15.x, r5.yzwy, r15.xyzx
      mul r15.y, r4.y, r4.y
      mul r15.x, r15.x, r15.x
      mad r15.z, r4.y, r4.y, l(-1.000000)
      mad r15.x, r15.x, r15.z, l(1.000000)
      mul r15.x, r15.x, r15.x
      mul r15.x, r15.x, l(3.14159274)
      div r15.x, r15.y, r15.x
      mad r15.y, r4.y, l(0.500000), l(0.500000)
      mul r15.z, r1.w, r1.w
      mul r15.y, r15.y, r15.y
      mad r15.w, -r1.w, r1.w, l(1.000000)
      mul r15.w, r15.w, r15.y
      max r15.z, r15.z, l(1.000000047E-034)
      div r15.z, r15.w, r15.z
      add r15.z, r15.z, l(1.000000)
      sqrt r15.z, r15.z
      add r15.z, r15.z, l(1.000000)
      div r15.z, l(2.000000), r15.z
      mul r15.w, r1.z, r1.z
      mad r1.z, -r1.z, r1.z, l(1.000000)
      mul r1.z, r1.z, r15.y
      max r15.y, r15.w, l(1.000000047E-034)
      div r1.z, r1.z, r15.y
      add r1.z, r1.z, l(1.000000)
      sqrt r1.z, r1.z
      add r1.z, r1.z, l(1.000000)
      div r1.z, l(2.000000), r1.z
      mul r1.z, r1.z, r15.z
      dp3 r15.y, r11.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r15.y, r15.y, l(50.000000)
      add r9.y, -r9.y, l(1.000000)
      mul r15.z, r9.y, r9.y
      mul r15.z, r15.z, r15.z
      add r17.xyz, -r11.xyzx, r15.yyyy
      mul r15.yzw, r15.zzzz, r17.xxyz
      mad r11.xyz, r15.yzwy, r9.yyyy, r11.xyzx
      mul r1.z, r1.z, r15.x
      mul r13.xyz, r11.xyzx, r1.zzzz
      dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r1.z, r5.x, l(3)
      if_nz r1.z
        mad r11.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
        dp3 r1.z, r11.xyzx, r11.xyzx
        rsq r1.z, r1.z
        mul r11.xyz, r1.zzzz, r11.xyzx
        dp3_sat r1.z, r11.xyzx, r8.xyzx
        mul r9.y, r4.z, l(0.080000)
        add r1.z, -r1.z, l(1.000000)
        mul r15.x, r1.z, r1.z
        mul r15.x, r15.x, r15.x
        mad r15.y, -r4.z, l(0.080000), l(1.000000)
        mul r15.x, r15.x, r15.y
        mad r1.z, r15.x, r1.z, r9.y
        dp3_sat r9.y, r5.yzwy, r11.xyzx
        mul r11.x, r9.y, r9.y
        mad r11.yz, -r9.yyyy, r9.yyyy, l(0.000000, 1.000001, 1.000000, 0.000000)
        div r11.x, r11.x, r11.y
        mul r11.y, r11.z, r11.z
        mul r11.z, r4.y, r4.y
        mad r15.xy, r4.yyyy, r4.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r15.x, r15.x, l(4.000000), l(1.000000)
        mul r15.x, r15.x, l(3.14159274)
        div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
        div r11.x, -r11.x, r15.y
        mul r11.x, r11.x, l(1.442695)
        exp r11.x, r11.x
        mul r11.x, r11.x, l(4.000000)
        div r11.x, r11.x, r11.y
        add r11.x, r11.x, l(1.000000)
        mul r11.x, r11.x, r15.x
        dp3_sat r11.y, r5.yzwy, r8.xyzx
        add r15.x, r1.w, r11.y
        mad r11.y, -r1.w, r11.y, r15.x
        mul r11.y, r11.y, l(4.000000)
        div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
        mov_sat r11.y, r11.y
        div r11.z, l(2.000000), r11.z
        add r11.z, r11.z, l(-2.000000)
        max r11.z, r11.z, l(1.000000031E-022)
        log r9.y, r9.y
        mul r9.y, r9.y, r11.z
        exp r9.y, r9.y
        add r11.z, r11.z, l(8.000000)
        mul r9.y, r9.y, r11.z
        mul r9.y, r9.y, l(0.0397887342)
        min r9.y, r9.y, l(1.000000)
        add_sat r11.z, r4.y, r4.y
        mad r11.x, r11.x, r11.y, -r9.y
        mad r9.y, r11.z, r11.x, r9.y
        mul r15.xyz, r1.zzzz, r9.yyyy
        dp3 r15.w, r15.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r17.xyz, r10.xzwx
        mov r17.w, l(1.000000)
        mul r13.xyzw, r15.xyzw, r17.xyzw
      else 
        if_nz r6.y
          mul r11.xy, r4.zyzz, l(0.080000, 0.400000, 0.000000, 0.000000)
          mad r15.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r15.xyz, r4.xxxx, r15.xyzx, r11.xxxx
          dp3_sat r1.z, r5.yzwy, r8.xyzx
          mad r17.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r9.y, r17.xyzx, r17.xyzx
          rsq r9.y, r9.y
          mul r17.xyz, r9.yyyy, r17.xyzx
          dp3 r9.y, r17.xyzx, cb2[2].xyzx
          dp3_sat r11.x, r5.yzwy, r17.xyzx
          mul r11.z, r4.y, r4.y
          mul r11.x, r11.x, r11.x
          mad r15.w, r4.y, r4.y, l(-1.000000)
          mad r15.w, r11.x, r15.w, l(1.000000)
          mul r15.w, r15.w, r15.w
          mul r15.w, r15.w, l(3.14159274)
          div r11.z, r11.z, r15.w
          mad r17.xy, r4.yyyy, l(0.500000, 0.200000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mul r15.w, r1.w, r1.w
          mul r17.xy, r17.xyxx, r17.xyxx
          mad r17.z, -r1.w, r1.w, l(1.000000)
          mul r17.zw, r17.zzzz, r17.xxxy
          max r15.w, r15.w, l(1.000000047E-034)
          div r17.zw, r17.zzzw, r15.wwww
          add r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          sqrt r17.zw, r17.zzzw
          add r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul r15.w, r1.z, r1.z
          mad r1.z, -r1.z, r1.z, l(1.000000)
          mul r17.xy, r1.zzzz, r17.xyxx
          max r1.z, r15.w, l(1.000000047E-034)
          div r17.xy, r17.xyxx, r1.zzzz
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r17.xy, r17.xyxx
          add r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r17.xyzw
          mul r17.xy, r17.xyxx, r17.zwzz
          dp3 r1.z, r15.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r1.z, r1.z, l(50.000000)
          add r9.y, -r9.y, l(1.000000)
          mul r15.w, r9.y, r9.y
          mul r15.w, r15.w, r15.w
          add r18.xyz, -r15.xyzx, r1.zzzz
          mul r18.xyz, r15.wwww, r18.xyzx
          mad r15.xyz, r18.xyzx, r9.yyyy, r15.xyzx
          mul r1.z, r11.z, r17.x
          mul r18.xyz, r15.xyzx, r1.zzzz
          dp3 r18.w, r18.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r1.z, r11.y, r11.y
          mad r9.y, r11.y, r11.y, l(-1.000000)
          mad r9.y, r11.x, r9.y, l(1.000000)
          mul r9.y, r9.y, r9.y
          mul r9.y, r9.y, l(3.14159274)
          div r1.z, r1.z, r9.y
          mul r1.z, r17.y, r1.z
          mul r15.xyz, r15.xyzx, r1.zzzz
          dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r15.xyzw, r15.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r13.xyzw, r18.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r15.xyzw
        else 
          ieq r1.z, r5.x, l(5)
          dp3_sat r9.y, r9.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r9.y, r9.y, l(1.66666663), l(1.33333337)
          mul r11.xyz, r4.yyyy, r10.xzwx
          mad r11.xyz, r11.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.yzwy
          div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r9.y
          dp3 r15.x, -cb2[2].xyzx, r11.xyzx
          mul r15.y, r9.y, r9.y
          mad r15.z, -r15.x, r15.x, l(1.000000)
          mad r15.z, -r15.y, r15.z, l(1.000000)
          sqrt r15.w, r15.z
          mad r15.x, r9.y, r15.x, -r15.w
          mul r17.xyz, r11.xyzx, r15.xxxx
          mad r17.xyz, r9.yyyy, cb2[2].xyzx, r17.xyzx
          lt r15.x, l(0.000000), r15.z
          and r15.x, r15.x, l(0x3f800000)
          mul r18.xyz, r15.xxxx, r17.xyzx
          dp3 r15.z, -r8.xyzx, r11.xyzx
          mad r15.w, -r15.z, r15.z, l(1.000000)
          mad r15.y, -r15.y, r15.w, l(1.000000)
          sqrt r15.w, r15.y
          mad r15.z, r9.y, r15.z, -r15.w
          mul r11.xyz, r11.xyzx, r15.zzzz
          mad r11.xyz, r9.yyyy, r8.xyzx, r11.xyzx
          lt r9.y, l(0.000000), r15.y
          and r9.y, r9.y, l(0x3f800000)
          mul r11.xyz, r9.yyyy, r11.xyzx
          mad r7.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r7.w, r7.xyzx, r7.xyzx
          rsq r7.w, r7.w
          mul r7.xyz, r7.wwww, r7.xyzx
          dp3_sat r7.w, r5.yzwy, r8.xyzx
          dp3_sat r9.y, r5.yzwy, r7.xyzx
          dp3 r15.y, r7.xyzx, cb2[2].xyzx
          mov_sat r15.z, r15.y
          dp3 r15.w, r7.xyzx, r10.xzwx
          mul r19.xyz, r5.zwyz, r10.wxzw
          mad r19.xyz, r10.zwxz, r5.wyzw, -r19.xyzx
          dp3 r17.w, r19.xyzx, r19.xyzx
          rsq r17.w, r17.w
          mul r19.xyz, r17.wwww, r19.xyzx
          dp3 r7.x, r7.xyzx, r19.xyzx
          mul r7.yz, r4.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r20.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r20.xyz, r4.xxxx, r20.xyzx, r7.yyyy
          dp3 r7.y, r20.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r7.y, r7.y, l(50.000000)
          add r15.z, -r15.z, l(1.000000)
          mul r17.w, r15.z, r15.z
          mul r17.w, r17.w, r17.w
          add r21.xyz, -r20.xyzx, r7.yyyy
          mul r22.xyz, r17.wwww, r21.xyzx
          mad r22.xyz, r22.xyzx, r15.zzzz, r20.xyzx
          mul r7.y, r4.y, r4.y
          mul r15.z, r9.y, r9.y
          mul r15.w, r15.w, r15.w
          div r15.w, r15.w, r7.y
          mad r7.x, r7.x, r7.x, r15.w
          mad r7.x, r9.y, r9.y, r7.x
          mul r7.x, r7.x, r7.x
          mul r7.x, r7.z, r7.x
          div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
          mul r9.y, r1.w, r1.w
          mad r15.w, -r1.w, r1.w, l(1.000000)
          mul r17.w, r7.y, r15.w
          max r9.y, r9.y, l(1.000000047E-034)
          div r17.w, r17.w, r9.y
          add r17.w, r17.w, l(1.000000)
          sqrt r17.w, r17.w
          add r17.w, r17.w, l(1.000000)
          div r17.w, l(2.000000), r17.w
          mul r18.w, r7.w, r7.w
          mad r7.w, -r7.w, r7.w, l(1.000000)
          mul r19.w, r7.w, r7.y
          max r18.w, r18.w, l(1.000000047E-034)
          div r19.w, r19.w, r18.w
          add r19.w, r19.w, l(1.000000)
          sqrt r19.w, r19.w
          add r19.w, r19.w, l(1.000000)
          div r19.w, l(2.000000), r19.w
          mul r17.w, r17.w, r19.w
          mul r7.x, r7.x, r17.w
          mul_sat r22.xyz, r22.xyzx, r7.xxxx
          mul r22.xyz, r11.wwww, r22.xyzx
          mul r23.xyz, r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r17.xyz, -r17.xyzx, r15.xxxx, -r11.xyzx
          dp3 r7.x, r17.xyzx, r17.xyzx
          rsq r7.x, r7.x
          mul r17.xyz, r7.xxxx, r17.xyzx
          dp3_sat r7.x, r5.yzwy, -r18.xyzx
          dp3_sat r11.x, r5.yzwy, -r11.xyzx
          dp3_sat r11.y, r5.yzwy, r17.xyzx
          dp3_sat r11.z, r17.xyzx, -r18.xyzx
          dp3 r11.w, r17.xyzx, r10.xzwx
          dp3 r15.x, r17.xyzx, r19.xyzx
          add r11.z, -r11.z, l(1.000000)
          mul r17.x, r11.z, r11.z
          mul r17.x, r17.x, r17.x
          mul r17.xyz, r17.xxxx, r21.xyzx
          mad r17.xyz, r17.xyzx, r11.zzzz, r20.xyzx
          mul r11.z, r11.w, r11.w
          div r11.z, r11.z, r7.y
          mad r11.z, r15.x, r15.x, r11.z
          mad r11.y, r11.y, r11.y, r11.z
          mul r11.y, r11.y, r11.y
          mul r7.z, r7.z, r11.y
          div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
          mul r11.y, r7.x, r7.x
          mad r7.x, -r7.x, r7.x, l(1.000000)
          mul r7.x, r7.x, r7.y
          max r11.y, r11.y, l(1.000000047E-034)
          div r7.x, r7.x, r11.y
          add r7.x, r7.x, l(1.000000)
          sqrt r7.x, r7.x
          add r7.x, r7.x, l(1.000000)
          div r7.x, l(2.000000), r7.x
          mul r11.y, r11.x, r11.x
          mad r11.x, -r11.x, r11.x, l(1.000000)
          mul r11.x, r7.y, r11.x
          max r11.y, r11.y, l(1.000000047E-034)
          div r11.x, r11.x, r11.y
          add r11.x, r11.x, l(1.000000)
          sqrt r11.x, r11.x
          add r11.x, r11.x, l(1.000000)
          div r11.x, l(2.000000), r11.x
          mul r7.x, r7.x, r11.x
          mul r7.x, r7.x, r7.z
          mul_sat r11.xyz, r17.xyzx, r7.xxxx
          sqrt r17.xyz, r9.xzwx
          mad r11.xyz, -r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r11.xyzx
          mad r11.xyz, r17.xyzx, r11.xyzx, r23.xyzx
          dp3 r11.w, r11.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r7.x, r4.y, r4.y, l(-1.000000)
          mad r7.x, r15.z, r7.x, l(1.000000)
          mul r7.x, r7.x, r7.x
          mul r7.x, r7.x, l(3.14159274)
          div r7.x, r7.y, r7.x
          mad r7.y, r4.y, l(0.500000), l(0.500000)
          mul r7.y, r7.y, r7.y
          mul r7.z, r15.w, r7.y
          div r7.z, r7.z, r9.y
          add r7.z, r7.z, l(1.000000)
          sqrt r7.z, r7.z
          add r7.z, r7.z, l(1.000000)
          mul r7.y, r7.w, r7.y
          div r7.y, r7.y, r18.w
          add r7.y, r7.y, l(1.000000)
          sqrt r7.y, r7.y
          add r7.y, r7.y, l(1.000000)
          div r7.yz, l(0.000000, 2.000000, 2.000000, 0.000000), r7.yyzy
          mul r7.y, r7.y, r7.z
          add r7.z, -r15.y, l(1.000000)
          mul r7.xw, r7.yyyz, r7.xxxz
          mul r7.w, r7.w, r7.w
          mul r15.xyz, r7.wwww, r21.xyzx
          mad r15.xyz, r15.xyzx, r7.zzzz, r20.xyzx
          mul r7.xyz, r7.xxxx, r15.xyzx
          dp3 r7.w, r7.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r13.xyzw, r1.zzzz, r11.xyzw, r7.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mov r14.xyzw, l(0,0,0,0)
    else 
      ieq r1.z, r5.x, l(3)
      if_nz r1.z
        mov r14.xyzw, l(0,0,0,0)
      else 
        if_nz r6.y
          mov r14.xyzw, l(0,0,0,0)
        else 
          dp3 r1.z, r10.xzwx, cb2[2].xyzx
          mad r1.z, -r1.z, r1.z, l(1.000000)
          sqrt r1.z, r1.z
          mul r6.z, r10.y, l(-1.500000)
          dp3 r7.x, r12.yzwy, cb2[2].xyzx
          mad r7.y, -r10.y, l(-1.500000), r7.x
          div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), -r6.z
          mul_sat r6.z, r6.z, r7.y
          mad r7.y, r6.z, l(-2.000000), l(3.000000)
          mul r6.z, r6.z, r6.z
          mul r6.z, r6.z, r7.y
          mul r11.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r11.w, l(0.0572957806)
          add r7.y, -r4.x, l(1.000000)
          mul r11.xyzw, r7.yyyy, r11.xyzw
          mul r11.xyzw, r6.zzzz, r11.xyzw
          mul r11.xyzw, r1.zzzz, r11.xyzw
          mul r11.xyzw, r10.yyyy, r11.xyzw
          mul r11.xyzw, r11.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r7.zw, r5.xxxx, l(0, 0, 5, 8)
          max r1.z, |r7.x|, l(0.000001)
          rcp r1.z, r1.z
          mul r1.z, r1.z, r7.x
          dp3 r6.z, r12.yzwy, r8.xyzx
          max r7.x, |r6.z|, l(0.000001)
          rcp r7.x, r7.x
          mul r6.z, r6.z, r7.x
          eq r1.z, r1.z, r6.z
          movc r15.w, r1.z, l(0), l(1.000000)
          mul r12.yzw, r7.yyyy, r10.xxzw
          mul r15.xyz, r15.wwww, r12.yzwy
          mul r15.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r17.xyz, r9.xzwx, r10.xxxx
          mov r17.w, r10.x
          mul r17.xyzw, r17.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r15.xyzw, r7.wwww, r15.xyzw, r17.xyzw
          movc r14.xyzw, r7.zzzz, r11.xyzw, r15.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r1.z, r6.y, l(1.000000), r8.w
  dp3 r6.z, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r7.x, r1.x, r10.x
  add r6.z, -r1.z, r6.z
  mad r6.z, r7.x, r6.z, r1.z
  movc r1.z, r5.x, r1.z, r6.z
  mul r7.xyzw, r1.wwww, r13.xyzw
  mad r7.xyzw, r16.xyzw, r1.zzzz, r7.xyzw
  add r7.xyzw, r14.xyzw, r7.xyzw
  mul r7.xyzw, r1.xxxx, r7.xyzw
  mov r3.xyz, cb2[0].xyzx
  mul r3.xyzw, r3.xyzw, r7.xyzw
else 
  mov r3.xyzw, l(0,0,0,0)
endif 
dp3 r2.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r6.y
  mul r2.xyz, r2.xyzx, r9.xzwx
  mul r7.xyzw, r2.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r6.x
    mov_sat r1.xz, r10.xxyx
    mov_sat r1.w, r4.x
    log r11.xyz, r9.xzwx
    mul r12.yzw, r1.zzzz, r11.xxyz
    mul r12.yzw, r12.yyzw, l(0.000000, -12.780000, -12.780000, -12.780000)
    mad r11.xyz, r11.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r12.yzwy
    eq r1.z, r1.x, l(0.000000)
    add r1.w, -r1.w, l(1.000000)
    mul r12.yzw, r1.wwww, r9.xxzw
    mul r12.yzw, r12.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r11.xyz, -r1.xxxx, r11.xyzx
    exp r11.xyz, r11.xyzx
    mul r11.xyz, r12.yzwy, r11.xyzx
    mul r11.xyz, r11.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r11.xyz, r1.zzzz, r12.yzwy, r11.xyzx
    mov r11.w, l(0.180000)
  else 
    ieq r1.x, r5.x, l(2)
    if_nz r1.x
      mul r13.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r13.w, l(0.0572957806)
      add r1.x, -r4.x, l(1.000000)
      mul r11.xyzw, r1.xxxx, r13.xyzw
    else 
      ieq r1.x, r5.x, l(3)
      if_nz r1.x
        dp3 r1.x, r8.xyzx, r8.xyzx
        min r1.x, r1.x, l(1.000000)
        mul r1.z, r4.z, l(0.080000)
        add r1.x, -r1.x, l(1.000000)
        mul r1.w, r1.x, r1.x
        mul r1.w, r1.w, r1.w
        mad r6.y, -r4.z, l(0.080000), l(1.000000)
        mul r1.w, r1.w, r6.y
        mad r1.x, r1.w, r1.x, r1.z
        add_sat r1.z, r4.y, r4.y
        mad r13.w, r1.z, -r1.x, l(1.000000)
        mul r13.xyz, r9.xzwx, r13.wwww
        mul r11.xyzw, r13.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r13.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r13.w, l(0.0572957806)
        add r14.w, -r4.x, l(1.000000)
        mul r13.xyzw, r13.xyzw, r14.wwww
        mov r14.xyz, r13.xyzx
        mul r15.xyzw, r14.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r1.x, -r10.y, l(1.000000)
        mul r16.xyzw, r10.yyyy, r13.xyzw
        mul r16.xyzw, r16.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r15.xyzw, r15.xyzw, r1.xxxx, r16.xyzw
        ieq r1.xz, r5.xxxx, l(5, 0, 8, 0)
        dp3 r1.w, r5.yzwy, r8.xyzx
        max r6.y, |r1.w|, l(0.000001)
        rcp r6.y, r6.y
        mul r1.w, r1.w, r6.y
        eq r1.w, r1.w, l(0.000000)
        movc r16.w, r1.w, l(0), l(1.000000)
        mul r12.yzw, r10.xxzw, r14.wwww
        mul r16.xyz, r16.wwww, r12.yzwy
        mad r14.xyzw, r16.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r13.xyzw
        mul r16.xyz, r9.xzwx, r10.xxxx
        mov r16.w, r10.x
        mad r13.xyzw, r16.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r13.xyzw
        movc r13.xyzw, r1.zzzz, r14.xyzw, r13.xyzw
        movc r11.xyzw, r1.xxxx, r15.xyzw, r13.xyzw
      endif 
    endif 
  endif 
  mul r7.xyzw, r2.xyzw, r11.xyzw
endif 
add r1.x, r3.w, r7.w
add r2.xyz, r3.xyzx, r7.xyzx
if_nz r6.x
  mov_sat r10.xyzw, r10.xyzw
  mov_sat r4.xyz, r4.xyzx
  mul r1.z, r4.y, r4.y
  max r3.y, r1.z, l(0.001000)
  mul r1.z, r10.z, r10.z
  max r1.z, r1.z, l(0.001000)
  dp3 r1.w, -r8.xyzx, r5.yzwy
  add r1.w, r1.w, r1.w
  mad r6.xyz, r5.yzwy, -r1.wwww, -r8.xyzx
  dp3 r1.w, r5.yzwy, r6.xyzx
  mad r1.w, -|r1.w|, |r1.w|, l(1.000000)
  mad r1.w, -r1.w, l(0.444702327), l(1.000000)
  add r2.w, r10.x, r10.x
  sqrt r1.w, r1.w
  div r1.w, r2.w, r1.w
  log r7.xyz, r9.xzwx
  mul r11.xyz, r10.yyyy, r7.xyzx
  mul r11.xyz, r11.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r7.xyz, r7.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r11.xyzx
  eq r2.w, r10.x, l(0.000000)
  mul r3.w, r3.y, r3.y
  div r3.w, l(2.000000), r3.w
  add r3.w, r3.w, l(-2.000000)
  max r3.w, r3.w, l(1.000000031E-022)
  sqrt r3.w, r3.w
  div r3.w, l(-10.000000), r3.w
  exp r3.w, r3.w
  add r3.w, r3.w, l(-0.000980)
  mul_sat r3.w, r3.w, l(1.00795019)
  add r3.w, -r3.w, l(1.000000)
  mul r7.w, r3.w, cb1[183].w
  mul r8.w, r3.w, cb1[174].w
  ge r9.y, l(0.250000), r3.y
  if_nz r9.y
    ge r9.y, r5.w, l(0.250000)
    if_nz r9.y
      dp3 r11.x, r6.xyzx, cb1[51].xyzx
      dp3 r11.y, r6.xyzx, cb1[52].xyzx
      dp3 r11.z, r6.xyzx, cb1[53].xyzx
      dp3 r9.y, r11.xyzx, r11.xyzx
      rsq r9.y, r9.y
      mul r11.xyz, r9.yyyy, r11.xyzx
      mov r0.w, l(1.000000)
      dp4 r13.x, r0.xyzw, cb1[51].xyzw
      dp4 r13.y, r0.xyzw, cb1[52].xyzw
      dp4 r13.z, r0.xyzw, cb1[53].xyzw
      dp3 r14.x, r5.yzwy, cb1[51].xyzx
      dp3 r14.y, r5.yzwy, cb1[52].xyzx
      dp3 r14.z, r5.yzwy, cb1[53].xyzx
      mul r9.y, r13.z, l(-0.010000)
      max r9.y, r9.y, l(0.001000)
      mad r14.xyz, r14.xyzx, r9.yyyy, r13.xyzx
      mad r9.y, r11.z, l(1000.000000), r14.z
      lt r9.y, l(-0.010000), r9.y
      add r10.y, -r14.z, l(-0.010000)
      div r10.y, r10.y, r11.z
      movc r9.y, r9.y, r10.y, l(1000.000000)
      mad r11.xyz, r11.xyzx, r9.yyyy, r14.xyzx
      mov r14.w, l(1.000000)
      dp4 r13.y, r14.xyzw, cb4[4].xyzw
      dp4 r13.x, r14.xyzw, cb4[5].xyzw
      dp4 r9.y, r14.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r9.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r13.y, r24.w, l(0.5), r13.y

      mov r11.w, l(1.000000)
      dp4 r14.x, r11.xyzw, cb4[4].xyzw
      dp4 r14.y, r11.xyzw, cb4[5].xyzw
      dp4 r10.y, r11.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r10.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r14.x, r24.w, l(0.5), r14.x

      div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r9.y
      div r10.y, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
      mul r11.xy, r9.yyyy, r13.xyxx
      mul r12.yz, r10.yyyy, r14.xxyx
      mul r11.w, r9.y, r14.z
      mul r11.z, r10.y, r11.z
      add r15.xy, cb1[66].yxyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
      lt r15.zw, r15.xxxy, r12.zzzy
      lt r16.xy, r12.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
      or r16.xy, r15.zwzz, r16.xyxx
      movc r15.xy, r15.zwzz, -r15.xyxx, l(-0.500000,-0.500000,0,0)
      mad r15.xy, r14.yxyy, r10.yyyy, r15.xyxx
      mad r14.xy, r14.yxyy, r10.yyyy, -r11.xyxx
      div r14.xy, r15.xyxx, r14.xyxx
      and r12.w, r14.x, r16.x
      max r13.w, r14.y, r12.w
      movc r12.w, r16.y, r13.w, r12.w
      mad r14.xy, r13.yxyy, r9.yyyy, -r12.yzyy
      mad r12.yz, r12.wwww, r14.xxyx, r12.yyzy
      add r13.w, r9.y, -r10.y
      mad r10.y, r12.w, r13.w, r10.y
      mad r13.w, r14.z, r9.y, -r11.z
      mad r11.z, r12.w, r13.w, r11.z
      mad r14.xy, r13.yxyy, r9.yyyy, -r12.yzyy
      dp2 r12.w, r14.xyxx, r14.xyxx
      lt r12.w, r12.w, l(0.000100)
      mad r14.xy, r13.yxyy, r9.yyyy, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r15.xy, r12.wwww, r14.xyxx, r12.yzyy
      mad r15.zw, -r13.yyyx, r9.yyyy, r15.xxxy
      lt r12.y, |r15.z|, |r15.w|
      movc r11.xy, r12.yyyy, r11.xyxx, r11.yxyy
      movc r13.xyw, r12.yyyy, r15.ywyz, r15.xzxw
      lt r12.z, l(0.000000), r13.y
      lt r12.w, r13.y, l(0.000000)
      iadd r12.z, -r12.z, r12.w
      itof r14.x, r12.z
      div r12.z, r14.x, r13.y
      mul r14.y, r13.w, r12.z
      mad r11.z, -r14.z, r9.y, r11.z
      mul r11.z, r12.z, r11.z
      add r10.y, -r9.y, r10.y
      mul r10.y, r12.z, r10.y
      mul r12.z, r13.x, r14.x
      ge r12.w, r14.z, l(99999.796875)
      ge r13.x, l(100000.000000), r14.z
      and r12.w, r12.w, r13.x
      mov r13.y, l(1.000000)
      mov r15.x, r11.w
      mov r15.y, r9.y
      mov r16.xy, l(-1.000000,-1.000000,0,0)
      mov r17.xy, r11.xyxx
      mov r13.w, l(0)
      mov r14.w, r12.w
      mov r18.y, r14.z
      mov r16.z, r12.w
      loop 
        mul r16.w, r14.x, r17.x
        ge r16.w, r12.z, r16.w
        ilt r17.z, r13.w, l(200)
        and r16.w, r16.w, r17.z
        not r17.z, r16.z
        and r16.w, r16.w, r17.z
        breakc_z r16.w
        mad r15.xz, r11.zzzz, l(5.000000, 0.000000, 2.500000, 0.000000), r15.xxxx
        mad r15.yw, r10.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r15.yyyy
        div r18.x, r15.z, r15.w
        lt r15.z, r18.x, r18.y
        movc r15.zw, r15.zzzz, r18.xxxy, r18.yyyx
        movc r16.xy, r12.yyyy, r17.yxyy, r17.xyxx
        mul r17.zw, r16.xxxy, cb1[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r13.x, r17.zwzz, t6.xyzw, s1, l(0.000000)
        dp2 r16.w, r13.xyxx, cb1[11].zwzz
        dp2 r13.x, r13.xyxx, cb1[12].zwzz
        div r13.x, -r16.w, r13.x
        ge r15.z, -r13.x, r15.z
        add r13.x, -r13.x, l(-0.200000)
        ge r13.x, r15.w, r13.x
        and r16.z, r13.x, r15.z
        mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
        iadd r13.w, r13.w, l(1)
        mov r14.w, r16.z
        mov r18.y, r18.x
      endloop 
      if_nz r14.w
        if_z cb4[8].y
          ftoi r11.xy, r16.xyxx
          imax r11.xy, r11.xyxx, l(0, 0, 0, 0)
          ftoi r11.zw, cb1[66].xxxy
          iadd r11.zw, r11.zzzw, l(0, 0, -1, -1)
          imin r11.xy, r11.zwzz, r11.xyxx
          mov r11.zw, l(0,0,0,0)
          ldms_indexable(texture2dms)(float,float,float,float) r12.yz, r11.xyww, t8.wxyz, l(0)
          ne r13.xy, r12.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r9.y, r13.y, r13.x
          if_nz r9.y
            lt r9.y, l(1.000000), r12.y
            add r10.y, r12.y, l(-2.000000)
            movc r12.y, r9.y, r10.y, r12.y
          else 
            ld_indexable(texture2d)(float,float,float,float) r11.z, r11.xyzw, t6.zwxy
            mov r11.w, l(1.000000)
            dp2 r9.y, r11.zwzz, cb1[11].zwzz
            dp2 r10.y, r11.zwzz, cb1[12].zwzz
            div r9.y, -r9.y, r10.y
            itof r11.xy, r11.xyxx
            mad r11.xy, r11.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r11.xy, r11.xyxx, cb1[0].xyxx
            mul r11.xy, r11.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r9.y, r9.y, cb1[67].x
            mov r11.z, -cb1[67].x
            mul r11.xyz, r9.yyyy, r11.xyzx
            mov r11.w, l(1.000000)
            dp4 r13.x, r11.xyzw, cb1[24].xyzw
            dp4 r13.y, r11.xyzw, cb1[25].xyzw
            dp4 r9.y, r11.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r9.y, -r24.y
mad r13.x, r24.w, r24.x, r13.x

            dp4 r14.x, r11.xyzw, cb4[0].xyzw
            dp4 r14.y, r11.xyzw, cb4[1].xyzw
            dp4 r10.y, r11.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r10.y, -r24.y
mad r14.x, r24.w, r24.x, r14.x

            max r10.y, r10.y, l(0.000100)
            div r11.xy, r14.xyxx, r10.yyyy
            div r11.zw, r13.xxxy, r9.yyyy
            add r11.xy, -r11.xyxx, r11.zwzz
            mul r12.yw, r11.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
            mov r12.z, -r12.w
          endif 
        else 
          mov r12.yz, l(0,0,0,0)
        endif 
        mad r11.xy, r16.xyxx, cb1[66].zwzz, -r12.yzyy
        mul r12.yz, r11.xxyx, cb1[66].xxyx
        ftoi r14.xy, r12.yzyy
        mov r14.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r12.y, r14.xyzw, t6.zxyw
        mov r12.z, l(1.000000)
        dp2 r9.y, r12.yzyy, cb1[11].zwzz
        dp2 r10.y, r12.yzyy, cb1[12].zwzz
        div r9.y, -r9.y, r10.y
        ge r9.y, r13.z, -r9.y
        not r10.y, r9.y
        add r12.yz, -r16.xxyx, v0.xxyx
        dp2 r12.y, r12.yzyy, r12.yzyy
        sqrt r12.y, r12.y
        ge r12.z, r12.y, l(700.000000)
        add r12.y, r12.y, l(-700.000000)
        mad r12.y, -r12.y, l(0.00333333341), l(1.000000)
        movc r12.y, r12.z, r12.y, l(1.000000)
        add r11.zw, -r11.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r13.xyzw, r11.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r11.z, r13.y, r13.x
        mul r11.z, r13.z, r11.z
        mul r11.z, r13.w, r11.z
        mul r11.z, r11.z, r12.y
        lt r11.w, l(0.137000), r3.y
        mad r12.y, -r3.y, l(4.000000), l(1.000000)
        max r12.y, r12.y, l(0.000000)
        mul r12.y, r11.z, r12.y
        movc r11.z, r11.w, r12.y, r11.z
        movc r9.y, r9.y, r11.z, l(1.000000)
      else 
        mov r11.xy, l(0,0,0,0)
        mov r9.y, l(0)
        mov r10.y, l(0)
      endif 
      if_z r10.y
        lt r10.y, l(0.000000), r9.y
        if_nz r10.y
          mul r3.w, r3.w, cb4[8].x
          sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r11.xyxx, t7.xyzw, s2, r3.w
        else 
          mov r11.xyz, l(0,0,0,0)
        endif 
      else 
        mov r11.xyz, l(0,0,0,0)
        mov r9.y, l(0)
      endif 
    else 
      mov r11.xyz, l(0,0,0,0)
      mov r9.y, l(0)
    endif 
  else 
    mov r11.xyz, l(0,0,0,0)
    mov r9.y, l(0)
  endif 
  lt r3.w, l(0.000000), r9.y
  if_nz r3.w
    div r11.xyz, r11.xyzx, cb1[176].wwww
    lt r3.w, r9.y, l(1.000000)
    if_nz r3.w
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r13.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
        mov r10.y, l(0)
        loop 
          uge r12.y, r10.y, l(15)
          breakc_nz r12.y
          imul null, r12.y, r10.y, l(7)
          dp4 r14.x, r0.xyzw, cb1[r12.y + 68].xyzw
          dp4 r14.y, r0.xyzw, cb1[r12.y + 69].xyzw
          dp4 r14.z, r0.xyzw, cb1[r12.y + 70].xyzw
          ge r15.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r15.xyz, r15.xyzx, cb1[r12.y + 72].xyzx, cb1[r12.y + 73].xyzx
          add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r14.xyz, r15.xyzx, r14.xyzx
          mul r12.z, r14.y, r14.x
          mul r12.z, r14.z, r12.z
          lt r12.w, l(0.000000), r12.z
          if_nz r12.w
            dp3 r14.x, r6.xyzx, cb1[r12.y + 68].xyzx
            dp3 r14.y, r6.xyzx, cb1[r12.y + 69].xyzx
            dp3 r14.z, r6.xyzx, cb1[r12.y + 70].xyzx
            mul r12.z, r12.z, cb1[r12.y + 73].w
            mov r14.w, cb1[r12.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s3, r8.w
            mul r14.xyzw, r14.xyzw, cb1[r12.y + 74].xxxy
            min r12.y, r3.w, r12.z
            mad r14.xyzw, r14.xyzw, r12.yyyy, r13.xyzw
            add r12.y, r3.w, -r12.y
            ge r12.z, l(0.000000), r12.y
            if_nz r12.z
              mov r13.xyzw, r14.xyzw
              mov r3.w, r12.y
              break 
            endif 
            mov r13.xyzw, r14.xyzw
            mov r3.w, r12.y
          endif 
          iadd r10.y, r10.y, l(1)
        endloop 
      else 
        mov r13.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
      endif 
      add r10.y, r3.w, r13.w
      mul r10.y, r1.y, r10.y
      lt r12.y, l(0.000000), r10.y
      if_nz r12.y
        add r12.y, -|r6.z|, r6.z
        mad r3.w, r3.w, r12.y, |r6.z|
        mad r3.w, r3.w, l(2.000000), l(2.000000)
        div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.wwww
        mul r12.yz, r6.yyxy, r12.yyzy
        mad r12.yz, r12.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.yzw, r12.yzyy, t2.wxyz, s2, r7.w
        mov_sat r14.xyz, r12.yzwy
        movc r12.yzw, cb1[184].zzzz, r14.xxyz, r12.yyzw
        div r12.yzw, r12.yyzw, cb1[176].wwww
        mad r13.xyz, r12.yzwy, r10.yyyy, r13.xyzx
      endif 
      mov_sat r9.y, r9.y
      add r12.yzw, r11.xxyz, -r13.xxyz
      mad r11.xyz, r9.yyyy, r12.yzwy, r13.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r11.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
      mov r9.y, l(0)
      loop 
        uge r10.y, r9.y, l(15)
        breakc_nz r10.y
        imul null, r10.y, r9.y, l(7)
        dp4 r13.x, r0.xyzw, cb1[r10.y + 68].xyzw
        dp4 r13.y, r0.xyzw, cb1[r10.y + 69].xyzw
        dp4 r13.z, r0.xyzw, cb1[r10.y + 70].xyzw
        ge r12.yzw, r13.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.yzw, r12.yyzw, cb1[r10.y + 72].xxyz, cb1[r10.y + 73].xxyz
        add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r12.yzw, r12.yyzw, r13.xxyz
        mul r12.y, r12.z, r12.y
        mul r12.y, r12.w, r12.y
        lt r12.z, l(0.000000), r12.y
        if_nz r12.z
          dp3 r13.x, r6.xyzx, cb1[r10.y + 68].xyzx
          dp3 r13.y, r6.xyzx, cb1[r10.y + 69].xyzx
          dp3 r13.z, r6.xyzx, cb1[r10.y + 70].xyzx
          mul r12.y, r12.y, cb1[r10.y + 73].w
          mov r13.w, cb1[r10.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t3.xyzw, s3, r8.w
          mul r13.xyzw, r13.xyzw, cb1[r10.y + 74].xxxy
          min r10.y, r3.w, r12.y
          mad r13.xyzw, r13.xyzw, r10.yyyy, r11.xyzw
          add r10.y, r3.w, -r10.y
          ge r12.y, l(0.000000), r10.y
          if_nz r12.y
            mov r11.xyzw, r13.xyzw
            mov r3.w, r10.y
            break 
          endif 
          mov r11.xyzw, r13.xyzw
          mov r3.w, r10.y
        endif 
        iadd r9.y, r9.y, l(1)
      endloop 
    else 
      mov r11.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
    endif 
    add r8.w, r3.w, r11.w
    mul r8.w, r1.y, r8.w
    lt r9.y, l(0.000000), r8.w
    if_nz r9.y
      add r9.y, -|r6.z|, r6.z
      mad r3.w, r3.w, r9.y, |r6.z|
      mad r3.w, r3.w, l(2.000000), l(2.000000)
      div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.wwww
      mul r12.yz, r6.yyxy, r12.yyzy
      mad r12.yz, r12.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r12.yzw, r12.yzyy, t2.wxyz, s2, r7.w
      mov_sat r13.xyz, r12.yzwy
      movc r12.yzw, cb1[184].zzzz, r13.xxyz, r12.yyzw
      div r12.yzw, r12.yyzw, cb1[176].wwww
      mad r11.xyz, r12.yzwy, r8.wwww, r11.xyzx
    endif 
  endif 
  mul r3.w, r4.z, l(0.080000)
  dp3 r7.w, r3.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r3.x, r5.yzwy, r8.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r12.yz, r3.xyxx, t1.zxyw, s2, l(0.000000)
  mad r3.w, r3.w, r12.y, r12.z
  mul r3.w, r7.w, r3.w
  mul r11.xyz, r3.wwww, r11.xyzx
  mul r11.xyz, r6.wwww, r11.xyzx
  add r1.z, r1.z, r3.y
  min r3.z, r1.z, l(1.000000)
  mul r1.z, r3.z, r3.z
  div r1.z, l(2.000000), r1.z
  add r1.z, r1.z, l(-2.000000)
  max r1.z, r1.z, l(1.000000031E-022)
  sqrt r1.z, r1.z
  div r1.z, l(-10.000000), r1.z
  exp r1.z, r1.z
  add r1.z, r1.z, l(-0.000980)
  mul r1.z, r1.z, l(1.00795019)
  max r1.z, r1.z, l(0.000000)
  add r1.z, -r1.z, l(1.000000)
  mul r3.y, r1.z, cb1[183].w
  mul r3.w, r1.z, cb1[174].w
  ge r7.w, l(0.250000), r3.z
  if_nz r7.w
    ge r7.w, r5.w, l(0.250000)
    if_nz r7.w
      dp3 r13.x, r6.xyzx, cb1[51].xyzx
      dp3 r13.y, r6.xyzx, cb1[52].xyzx
      dp3 r13.z, r6.xyzx, cb1[53].xyzx
      dp3 r7.w, r13.xyzx, r13.xyzx
      rsq r7.w, r7.w
      mul r12.yzw, r7.wwww, r13.xxyz
      mov r0.w, l(1.000000)
      dp4 r13.x, r0.xyzw, cb1[51].xyzw
      dp4 r13.y, r0.xyzw, cb1[52].xyzw
      dp4 r13.z, r0.xyzw, cb1[53].xyzw
      dp3 r14.x, r5.yzwy, cb1[51].xyzx
      dp3 r14.y, r5.yzwy, cb1[52].xyzx
      dp3 r14.z, r5.yzwy, cb1[53].xyzx
      mul r7.w, r13.z, l(-0.010000)
      max r7.w, r7.w, l(0.001000)
      mad r14.xyz, r14.xyzx, r7.wwww, r13.xyzx
      mad r7.w, r12.w, l(1000.000000), r14.z
      lt r7.w, l(-0.010000), r7.w
      add r8.w, -r14.z, l(-0.010000)
      div r8.w, r8.w, r12.w
      movc r7.w, r7.w, r8.w, l(1000.000000)
      mad r15.xyz, r12.yzwy, r7.wwww, r14.xyzx
      mov r14.w, l(1.000000)
      dp4 r13.y, r14.xyzw, cb4[4].xyzw
      dp4 r13.x, r14.xyzw, cb4[5].xyzw
      dp4 r7.w, r14.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r13.y, r24.w, l(0.5), r13.y

      mov r15.w, l(1.000000)
      dp4 r14.x, r15.xyzw, cb4[4].xyzw
      dp4 r14.y, r15.xyzw, cb4[5].xyzw
      dp4 r8.w, r15.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r8.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r14.x, r24.w, l(0.5), r14.x

      div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
      div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
      mul r12.yz, r7.wwww, r13.xxyx
      mul r15.xy, r8.wwww, r14.xyxx
      mul r9.y, r7.w, r14.z
      mul r10.y, r8.w, r15.z
      add r15.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
      lt r16.xy, r15.zwzz, r15.yxyy
      lt r16.zw, r15.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
      or r16.zw, r16.zzzw, r16.xxxy
      movc r15.zw, r16.xxxy, -r15.zzzw, l(0,0,-0.500000,-0.500000)
      mad r15.zw, r14.yyyx, r8.wwww, r15.zzzw
      mad r14.xy, r14.yxyy, r8.wwww, -r12.yzyy
      div r14.xy, r15.zwzz, r14.xyxx
      and r11.w, r14.x, r16.z
      max r12.w, r14.y, r11.w
      movc r11.w, r16.w, r12.w, r11.w
      mad r14.xy, r13.yxyy, r7.wwww, -r15.xyxx
      mad r14.xy, r11.wwww, r14.xyxx, r15.xyxx
      add r12.w, r7.w, -r8.w
      mad r8.w, r11.w, r12.w, r8.w
      mad r12.w, r14.z, r7.w, -r10.y
      mad r10.y, r11.w, r12.w, r10.y
      mad r15.xy, r13.yxyy, r7.wwww, -r14.xyxx
      dp2 r11.w, r15.xyxx, r15.xyxx
      lt r11.w, r11.w, l(0.000100)
      mad r15.xy, r13.yxyy, r7.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r15.xy, r11.wwww, r15.xyxx, r14.xyxx
      mad r15.zw, -r13.yyyx, r7.wwww, r15.xxxy
      lt r11.w, |r15.z|, |r15.w|
      movc r12.yz, r11.wwww, r12.yyzy, r12.zzyz
      movc r13.xyw, r11.wwww, r15.ywyz, r15.xzxw
      lt r12.w, l(0.000000), r13.y
      lt r14.x, r13.y, l(0.000000)
      iadd r12.w, -r12.w, r14.x
      itof r14.x, r12.w
      div r12.w, r14.x, r13.y
      mul r14.y, r13.w, r12.w
      mad r10.y, -r14.z, r7.w, r10.y
      mul r10.y, r12.w, r10.y
      add r8.w, -r7.w, r8.w
      mul r8.w, r12.w, r8.w
      mul r12.w, r13.x, r14.x
      ge r13.x, r14.z, l(99999.796875)
      ge r13.y, l(100000.000000), r14.z
      and r13.x, r13.y, r13.x
      mov r15.y, l(1.000000)
      mov r16.x, r9.y
      mov r16.y, r7.w
      mov r13.yw, l(0,-1.000000,0,-1.000000)
      mov r17.xy, r12.yzyy
      mov r14.w, l(0)
      mov r18.y, r14.z
      mov r15.zw, r13.xxxx
      loop 
        mul r17.z, r14.x, r17.x
        ge r17.z, r12.w, r17.z
        ilt r17.w, r14.w, l(200)
        and r17.z, r17.w, r17.z
        not r17.w, r15.w
        and r17.z, r17.w, r17.z
        breakc_z r17.z
        mad r16.xz, r10.yyyy, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
        mad r16.yw, r8.wwww, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
        div r18.x, r16.z, r16.w
        lt r16.z, r18.x, r18.y
        movc r16.zw, r16.zzzz, r18.xxxy, r18.yyyx
        movc r13.yw, r11.wwww, r17.yyyx, r17.xxxy
        mul r17.zw, r13.yyyw, cb1[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.x, r17.zwzz, t6.xyzw, s1, l(0.000000)
        dp2 r17.z, r15.xyxx, cb1[11].zwzz
        dp2 r15.x, r15.xyxx, cb1[12].zwzz
        div r15.x, -r17.z, r15.x
        ge r16.z, -r15.x, r16.z
        add r15.x, -r15.x, l(-0.200000)
        ge r15.x, r16.w, r15.x
        and r15.w, r15.x, r16.z
        mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
        iadd r14.w, r14.w, l(1)
        mov r15.z, r15.w
        mov r18.y, r18.x
      endloop 
      if_nz r15.z
        if_z cb4[8].y
          ftoi r12.yz, r13.yywy
          imax r12.yz, r12.yyzy, l(0, 0, 0, 0)
          ftoi r14.xy, cb1[66].xyxx
          iadd r14.xy, r14.xyxx, l(-1, -1, 0, 0)
          imin r14.xy, r12.yzyy, r14.xyxx
          mov r14.zw, l(0,0,0,0)
          ldms_indexable(texture2dms)(float,float,float,float) r12.yz, r14.xyww, t8.wxyz, l(0)
          ne r15.xy, r12.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r7.w, r15.y, r15.x
          if_nz r7.w
            lt r7.w, l(1.000000), r12.y
            add r8.w, r12.y, l(-2.000000)
            movc r12.y, r7.w, r8.w, r12.y
          else 
            ld_indexable(texture2d)(float,float,float,float) r14.z, r14.xyzw, t6.zwxy
            mov r14.w, l(1.000000)
            dp2 r7.w, r14.zwzz, cb1[11].zwzz
            dp2 r8.w, r14.zwzz, cb1[12].zwzz
            div r7.w, -r7.w, r8.w
            itof r14.xy, r14.xyxx
            mad r14.xy, r14.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r14.xy, r14.xyxx, cb1[0].xyxx
            mul r14.xy, r14.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r7.w, r7.w, cb1[67].x
            mov r14.z, -cb1[67].x
            mul r14.xyz, r7.wwww, r14.xyzx
            mov r14.w, l(1.000000)
            dp4 r15.x, r14.xyzw, cb1[24].xyzw
            dp4 r15.y, r14.xyzw, cb1[25].xyzw
            dp4 r7.w, r14.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r7.w, -r24.y
mad r15.x, r24.w, r24.x, r15.x

            dp4 r16.x, r14.xyzw, cb4[0].xyzw
            dp4 r16.y, r14.xyzw, cb4[1].xyzw
            dp4 r8.w, r14.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r8.w, -r24.y
mad r16.x, r24.w, r24.x, r16.x

            max r8.w, r8.w, l(0.000100)
            div r14.xy, r16.xyxx, r8.wwww
            div r14.zw, r15.xxxy, r7.wwww
            add r14.xy, -r14.xyxx, r14.zwzz
            mul r12.yw, r14.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
            mov r12.z, -r12.w
          endif 
        else 
          mov r12.yz, l(0,0,0,0)
        endif 
        mad r14.xy, r13.ywyy, cb1[66].zwzz, -r12.yzyy
        mul r12.yz, r14.xxyx, cb1[66].xxyx
        ftoi r15.xy, r12.yzyy
        mov r15.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r12.y, r15.xyzw, t6.zxyw
        mov r12.z, l(1.000000)
        dp2 r7.w, r12.yzyy, cb1[11].zwzz
        dp2 r8.w, r12.yzyy, cb1[12].zwzz
        div r7.w, -r7.w, r8.w
        ge r7.w, r13.z, -r7.w
        not r8.w, r7.w
        add r12.yz, -r13.yywy, v0.xxyx
        dp2 r9.y, r12.yzyy, r12.yzyy
        sqrt r9.y, r9.y
        ge r10.y, r9.y, l(700.000000)
        add r9.y, r9.y, l(-700.000000)
        mad r9.y, -r9.y, l(0.00333333341), l(1.000000)
        movc r9.y, r10.y, r9.y, l(1.000000)
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r13.xyzw, r14.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r10.y, r13.y, r13.x
        mul r10.y, r13.z, r10.y
        mul r10.y, r13.w, r10.y
        mul r9.y, r9.y, r10.y
        lt r10.y, l(0.137000), r3.z
        mad r11.w, -r3.z, l(4.000000), l(1.000000)
        max r11.w, r11.w, l(0.000000)
        mul r11.w, r9.y, r11.w
        movc r9.y, r10.y, r11.w, r9.y
        movc r7.w, r7.w, r9.y, l(1.000000)
      else 
        mov r14.xy, l(0,0,0,0)
        mov r7.w, l(0)
        mov r8.w, l(0)
      endif 
      if_z r8.w
        lt r8.w, l(0.000000), r7.w
        if_nz r8.w
          mul r1.z, r1.z, cb4[8].x
          sample_l_indexable(texture2d)(float,float,float,float) r12.yzw, r14.xyxx, t7.wxyz, s2, r1.z
        else 
          mov r12.yzw, l(0,0,0,0)
        endif 
      else 
        mov r12.yzw, l(0,0,0,0)
        mov r7.w, l(0)
      endif 
    else 
      mov r12.yzw, l(0,0,0,0)
      mov r7.w, l(0)
    endif 
  else 
    mov r12.yzw, l(0,0,0,0)
    mov r7.w, l(0)
  endif 
  lt r1.z, l(0.000000), r7.w
  if_nz r1.z
    div r13.xyz, r12.yzwy, cb1[176].wwww
    lt r1.z, r7.w, l(1.000000)
    if_nz r1.z
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r14.xyzw, l(0,0,0,0)
        mov r1.z, l(1.000000)
        mov r8.w, l(0)
        loop 
          uge r9.y, r8.w, l(15)
          breakc_nz r9.y
          imul null, r9.y, r8.w, l(7)
          dp4 r15.x, r0.xyzw, cb1[r9.y + 68].xyzw
          dp4 r15.y, r0.xyzw, cb1[r9.y + 69].xyzw
          dp4 r15.z, r0.xyzw, cb1[r9.y + 70].xyzw
          ge r12.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r12.yzw, r12.yyzw, cb1[r9.y + 72].xxyz, cb1[r9.y + 73].xxyz
          add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r12.yzw, r12.yyzw, r15.xxyz
          mul r10.y, r12.z, r12.y
          mul r10.y, r12.w, r10.y
          lt r11.w, l(0.000000), r10.y
          if_nz r11.w
            dp3 r15.x, r6.xyzx, cb1[r9.y + 68].xyzx
            dp3 r15.y, r6.xyzx, cb1[r9.y + 69].xyzx
            dp3 r15.z, r6.xyzx, cb1[r9.y + 70].xyzx
            mul r10.y, r10.y, cb1[r9.y + 73].w
            mov r15.w, cb1[r9.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t3.xyzw, s3, r3.w
            mul r15.xyzw, r15.xyzw, cb1[r9.y + 74].xxxy
            min r9.y, r1.z, r10.y
            mad r15.xyzw, r15.xyzw, r9.yyyy, r14.xyzw
            add r9.y, r1.z, -r9.y
            ge r10.y, l(0.000000), r9.y
            if_nz r10.y
              mov r14.xyzw, r15.xyzw
              mov r1.z, r9.y
              break 
            endif 
            mov r14.xyzw, r15.xyzw
            mov r1.z, r9.y
          endif 
          iadd r8.w, r8.w, l(1)
        endloop 
      else 
        mov r14.xyzw, l(0,0,0,0)
        mov r1.z, l(1.000000)
      endif 
      add r8.w, r1.z, r14.w
      mul r8.w, r1.y, r8.w
      lt r9.y, l(0.000000), r8.w
      if_nz r9.y
        add r9.y, -|r6.z|, r6.z
        mad r1.z, r1.z, r9.y, |r6.z|
        mad r1.z, r1.z, l(2.000000), l(2.000000)
        div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r1.zzzz
        mul r12.yz, r6.yyxy, r12.yyzy
        mad r12.yz, r12.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.yzw, r12.yzyy, t2.wxyz, s2, r3.y
        mov_sat r15.xyz, r12.yzwy
        movc r12.yzw, cb1[184].zzzz, r15.xxyz, r12.yyzw
        div r12.yzw, r12.yyzw, cb1[176].wwww
        mad r14.xyz, r12.yzwy, r8.wwww, r14.xyzx
      endif 
      mov_sat r7.w, r7.w
      add r12.yzw, r13.xxyz, -r14.xxyz
      mad r13.xyz, r7.wwww, r12.yzwy, r14.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r13.xyzw, l(0,0,0,0)
      mov r1.z, l(1.000000)
      mov r7.w, l(0)
      loop 
        uge r8.w, r7.w, l(15)
        breakc_nz r8.w
        imul null, r8.w, r7.w, l(7)
        dp4 r14.x, r0.xyzw, cb1[r8.w + 68].xyzw
        dp4 r14.y, r0.xyzw, cb1[r8.w + 69].xyzw
        dp4 r14.z, r0.xyzw, cb1[r8.w + 70].xyzw
        ge r12.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.yzw, r12.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
        add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r12.yzw, r12.yyzw, r14.xxyz
        mul r9.y, r12.z, r12.y
        mul r9.y, r12.w, r9.y
        lt r10.y, l(0.000000), r9.y
        if_nz r10.y
          dp3 r14.x, r6.xyzx, cb1[r8.w + 68].xyzx
          dp3 r14.y, r6.xyzx, cb1[r8.w + 69].xyzx
          dp3 r14.z, r6.xyzx, cb1[r8.w + 70].xyzx
          mul r9.y, r9.y, cb1[r8.w + 73].w
          mov r14.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s3, r3.w
          mul r14.xyzw, r14.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r1.z, r9.y
          mad r14.xyzw, r14.xyzw, r8.wwww, r13.xyzw
          add r8.w, r1.z, -r8.w
          ge r9.y, l(0.000000), r8.w
          if_nz r9.y
            mov r13.xyzw, r14.xyzw
            mov r1.z, r8.w
            break 
          endif 
          mov r13.xyzw, r14.xyzw
          mov r1.z, r8.w
        endif 
        iadd r7.w, r7.w, l(1)
      endloop 
    else 
      mov r13.xyzw, l(0,0,0,0)
      mov r1.z, l(1.000000)
    endif 
    add r3.w, r1.z, r13.w
    mul r3.w, r1.y, r3.w
    lt r7.w, l(0.000000), r3.w
    if_nz r7.w
      add r7.w, -|r6.z|, r6.z
      mad r1.z, r1.z, r7.w, |r6.z|
      mad r1.z, r1.z, l(2.000000), l(2.000000)
      div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r1.zzzz
      mul r6.xy, r6.yxyy, r12.yzyy
      mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t2.xyzw, s2, r3.y
      mov_sat r12.yzw, r6.xxyz
      movc r6.xyz, cb1[184].zzzz, r12.yzwy, r6.xyzx
      div r6.xyz, r6.xyzx, cb1[176].wwww
      mad r13.xyz, r6.xyzx, r3.wwww, r13.xyzx
    endif 
  endif 
  mul r1.z, r10.w, l(0.080000)
  mad r6.xyz, -r10.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
  mad r6.xyz, r4.xxxx, r6.xyzx, r1.zzzz
  dp3 r1.z, r6.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r1.z, r1.z, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xzxx, t1.xyzw, s2, l(0.000000)
  mad r3.xyz, r6.xyzx, r3.xxxx, r3.yyyy
  mul r3.xyz, r1.zzzz, r3.xyzx
  mul r3.xyz, r3.xyzx, r13.xyzx
  mul r3.xyz, r6.wwww, r3.xyzx
  mul r6.xyz, r1.wwww, -r7.xyzx
  exp r6.xyz, r6.xyzx
  mad r6.xyz, r3.xyzx, r6.xyzx, r11.xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, r6.xyzx
  dp3 r1.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r1.w, r5.x, l(5)
  if_nz r1.w
    dp3 r1.w, -r8.xyzx, r5.yzwy
    add r1.w, r1.w, r1.w
    mad r6.xyz, r5.yzwy, -r1.wwww, -r8.xyzx
    dp3 r1.w, r6.xyzx, r10.xzwx
    dp3 r2.w, r6.xyzx, r5.yzwy
    mul r6.xyz, r2.wwww, r5.yzwy
    mad r6.xyz, r10.xzwx, r1.wwww, r6.xyzx
    dp3 r1.w, r10.xzwx, r8.xyzx
    mad r1.w, -r1.w, r1.w, l(1.000000)
    sqrt r1.w, r1.w
    mul r2.w, r4.y, r4.y
    div r2.w, l(2.000000), r2.w
    add r2.w, r2.w, l(-2.000000)
    max r2.w, r2.w, l(1.000000031E-022)
    sqrt r2.w, r2.w
    div r2.w, l(-10.000000), r2.w
    exp r2.w, r2.w
    add r2.w, r2.w, l(-0.000980)
    mul_sat r2.w, r2.w, l(1.00795019)
    add r2.w, -r2.w, l(1.000000)
    if_z cb1[184].z
      mul r3.w, r2.w, cb1[174].w
      mov r0.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
      mov r8.w, l(0)
      loop 
        uge r9.y, r8.w, l(15)
        breakc_nz r9.y
        imul null, r9.y, r8.w, l(7)
        dp4 r10.x, r0.xyzw, cb1[r9.y + 68].xyzw
        dp4 r10.y, r0.xyzw, cb1[r9.y + 69].xyzw
        dp4 r10.z, r0.xyzw, cb1[r9.y + 70].xyzw
        ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r11.xyz, r11.xyzx, cb1[r9.y + 72].xyzx, cb1[r9.y + 73].xyzx
        add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r10.xyz, r11.xyzx, r10.xyzx
        mul r10.x, r10.y, r10.x
        mul r10.x, r10.z, r10.x
        lt r10.y, l(0.000000), r10.x
        if_nz r10.y
          dp3 r11.x, r6.xyzx, cb1[r9.y + 68].xyzx
          dp3 r11.y, r6.xyzx, cb1[r9.y + 69].xyzx
          dp3 r11.z, r6.xyzx, cb1[r9.y + 70].xyzx
          mul r10.x, r10.x, cb1[r9.y + 73].w
          mov r11.w, cb1[r9.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s3, r3.w
          mul r11.xyzw, r11.xyzw, cb1[r9.y + 74].xxxy
          min r9.y, r5.x, r10.x
          mad r10.xyzw, r11.xyzw, r9.yyyy, r7.xyzw
          add r9.y, r5.x, -r9.y
          ge r11.x, l(0.000000), r9.y
          if_nz r11.x
            mov r7.xyzw, r10.xyzw
            mov r5.x, r9.y
            break 
          endif 
          mov r7.xyzw, r10.xyzw
          mov r5.x, r9.y
        endif 
        iadd r8.w, r8.w, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
    endif 
    add r3.w, r5.x, r7.w
    mul r3.w, r1.y, r3.w
    lt r7.w, l(0.000000), r3.w
    if_nz r7.w
      mul r2.w, r2.w, cb1[183].w
      add r7.w, -|r6.z|, r6.z
      mad r5.x, r5.x, r7.w, |r6.z|
      mad r5.x, r5.x, l(2.000000), l(2.000000)
      div r10.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r5.xxxx
      mul r6.xy, r6.yxyy, r10.xyxx
      mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t2.xyzw, s2, r2.w
      mov_sat r10.xyz, r6.xyzx
      movc r6.xyz, cb1[184].zzzz, r10.xyzx, r6.xyzx
      div r6.xyz, r6.xyzx, cb1[176].wwww
      mad r7.xyz, r6.xyzx, r3.wwww, r7.xyzx
    endif 
    sqrt r6.xyz, r9.xzwx
    dp3 r2.w, r9.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r6.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r6.wwww
    mad r6.xyz, r2.wwww, r6.xyzx, r6.wwww
    mul r6.xyz, r6.xyzx, r7.xyzx
    mul r2.w, r4.z, l(0.080000)
    mad r7.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
    mad r7.xyz, r4.xxxx, r7.xyzx, r2.wwww
    dp3 r2.w, r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r2.w, r2.w, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r8.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r4.wyww, t1.xyzw, s2, l(0.000000)
    mad r7.xyz, r7.xyzx, r10.xxxx, r10.yyyy
    mul r7.xyz, r2.wwww, r7.xyzx
    mul r7.xyz, r1.wwww, r7.xyzx
    mul r3.xyz, r6.xyzx, r7.xyzx
    dp3 r1.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r1.w, r4.y, r12.x
    dp3 r2.w, -r8.xyzx, r5.yzwy
    add r2.w, r2.w, r2.w
    mad r6.xyz, r5.yzwy, -r2.wwww, -r8.xyzx
    mul r2.w, r1.w, r1.w
    div r2.w, l(2.000000), r2.w
    add r2.w, r2.w, l(-2.000000)
    max r2.w, r2.w, l(1.000000031E-022)
    sqrt r2.w, r2.w
    div r2.w, l(-10.000000), r2.w
    exp r2.w, r2.w
    add r2.w, r2.w, l(-0.000980)
    mul_sat r2.w, r2.w, l(1.00795019)
    add r2.w, -r2.w, l(1.000000)
    mul r3.w, r2.w, cb1[183].w
    mul r5.x, r2.w, cb1[174].w
    ge r7.x, l(0.250000), r1.w
    if_nz r7.x
      ge r7.x, r5.w, l(0.250000)
      if_nz r7.x
        dp3 r7.x, r6.xyzx, cb1[51].xyzx
        dp3 r7.y, r6.xyzx, cb1[52].xyzx
        dp3 r7.z, r6.xyzx, cb1[53].xyzx
        dp3 r7.w, r7.xyzx, r7.xyzx
        rsq r7.w, r7.w
        mul r7.xyz, r7.wwww, r7.xyzx
        mov r0.w, l(1.000000)
        dp4 r10.x, r0.xyzw, cb1[51].xyzw
        dp4 r10.y, r0.xyzw, cb1[52].xyzw
        dp4 r10.z, r0.xyzw, cb1[53].xyzw
        dp3 r11.x, r5.yzwy, cb1[51].xyzx
        dp3 r11.y, r5.yzwy, cb1[52].xyzx
        dp3 r11.z, r5.yzwy, cb1[53].xyzx
        mul r7.w, r10.z, l(-0.010000)
        max r7.w, r7.w, l(0.001000)
        mad r11.xyz, r11.xyzx, r7.wwww, r10.xyzx
        mad r7.w, r7.z, l(1000.000000), r11.z
        lt r7.w, l(-0.010000), r7.w
        add r8.w, -r11.z, l(-0.010000)
        div r8.w, r8.w, r7.z
        movc r7.w, r7.w, r8.w, l(1000.000000)
        mad r7.xyz, r7.xyzx, r7.wwww, r11.xyzx
        mov r11.w, l(1.000000)
        dp4 r10.y, r11.xyzw, cb4[4].xyzw
        dp4 r10.x, r11.xyzw, cb4[5].xyzw
        dp4 r8.w, r11.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r8.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r10.y, r24.w, l(0.5), r10.y

        mov r7.w, l(1.000000)
        dp4 r11.x, r7.xyzw, cb4[4].xyzw
        dp4 r11.y, r7.xyzw, cb4[5].xyzw
        dp4 r7.x, r7.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.x, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r11.x, r24.w, l(0.5), r11.x

        div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
        mul r12.xy, r7.yyyy, r10.xyxx
        mul r12.zw, r7.xxxx, r11.xxxy
        mul r7.w, r7.y, r11.z
        mul r7.z, r7.x, r7.z
        add r13.xy, cb1[66].yxyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
        lt r13.zw, r13.xxxy, r12.wwwz
        lt r14.xy, r12.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
        or r14.xy, r13.zwzz, r14.xyxx
        movc r13.xy, r13.zwzz, -r13.xyxx, l(-0.500000,-0.500000,0,0)
        mad r13.xy, r11.yxyy, r7.xxxx, r13.xyxx
        mad r11.xy, r11.yxyy, r7.xxxx, -r12.xyxx
        div r11.xy, r13.xyxx, r11.xyxx
        and r8.w, r11.x, r14.x
        max r9.y, r11.y, r8.w
        movc r8.w, r14.y, r9.y, r8.w
        mad r11.xy, r10.yxyy, r7.yyyy, -r12.zwzz
        mad r11.xy, r8.wwww, r11.xyxx, r12.zwzz
        add r9.y, -r7.x, r7.y
        mad r7.x, r8.w, r9.y, r7.x
        mad r9.y, r11.z, r7.y, -r7.z
        mad r7.z, r8.w, r9.y, r7.z
        mad r12.zw, r10.yyyx, r7.yyyy, -r11.xxxy
        dp2 r8.w, r12.zwzz, r12.zwzz
        lt r8.w, r8.w, l(0.000100)
        mad r12.zw, r10.yyyx, r7.yyyy, l(0.000000, 0.000000, 0.010000, 0.010000)
        movc r13.xy, r8.wwww, r12.zwzz, r11.xyxx
        mad r13.zw, -r10.yyyx, r7.yyyy, r13.xxxy
        lt r8.w, |r13.z|, |r13.w|
        movc r10.xy, r8.wwww, r12.xyxx, r12.yxyy
        movc r11.xyw, r8.wwww, r13.ywyz, r13.xzxw
        lt r9.y, l(0.000000), r11.y
        lt r10.w, r11.y, l(0.000000)
        iadd r9.y, -r9.y, r10.w
        itof r12.x, r9.y
        div r9.y, r12.x, r11.y
        mul r12.y, r11.w, r9.y
        mad r7.z, -r11.z, r7.y, r7.z
        add r7.x, -r7.y, r7.x
        mul r7.xz, r9.yyyy, r7.xxzx
        mul r9.y, r11.x, r12.x
        ge r10.w, r11.z, l(99999.796875)
        ge r11.x, l(100000.000000), r11.z
        and r10.w, r10.w, r11.x
        mov r11.y, l(1.000000)
        mov r13.xy, r7.wyww
        mov r12.zw, l(0,0,-1.000000,-1.000000)
        mov r11.w, l(0)
        mov r15.y, r11.z
        mov r14.xyzw, r10.xyww
        loop 
          mul r15.z, r12.x, r14.x
          ge r15.z, r9.y, r15.z
          ilt r15.w, r11.w, l(200)
          and r15.z, r15.w, r15.z
          not r15.w, r14.w
          and r15.z, r15.w, r15.z
          breakc_z r15.z
          mad r13.xz, r7.zzzz, l(5.000000, 0.000000, 2.500000, 0.000000), r13.xxxx
          mad r13.yw, r7.xxxx, l(0.000000, 5.000000, 0.000000, 2.500000), r13.yyyy
          div r15.x, r13.z, r13.w
          lt r13.z, r15.x, r15.y
          movc r13.zw, r13.zzzz, r15.xxxy, r15.yyyx
          movc r12.zw, r8.wwww, r14.yyyx, r14.xxxy
          mul r15.zw, r12.zzzw, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r11.x, r15.zwzz, t6.xyzw, s1, l(0.000000)
          dp2 r15.z, r11.xyxx, cb1[11].zwzz
          dp2 r11.x, r11.xyxx, cb1[12].zwzz
          div r11.x, -r15.z, r11.x
          ge r13.z, -r11.x, r13.z
          add r11.x, -r11.x, l(-0.200000)
          ge r11.x, r13.w, r11.x
          and r14.w, r11.x, r13.z
          mad r14.xy, r12.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r14.xyxx
          iadd r11.w, r11.w, l(1)
          mov r14.xyz, r14.xywx
          mov r15.y, r15.x
        endloop 
        if_nz r14.z
          if_z cb4[8].y
            ftoi r7.xy, r12.zwzz
            imax r7.xy, r7.xyxx, l(0, 0, 0, 0)
            ftoi r7.zw, cb1[66].xxxy
            iadd r7.zw, r7.zzzw, l(0, 0, -1, -1)
            imin r7.xy, r7.zwzz, r7.xyxx
            mov r7.zw, l(0,0,0,0)
            ldms_indexable(texture2dms)(float,float,float,float) r10.xy, r7.xyww, t8.xywz, l(0)
            ne r11.xy, r10.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r8.w, r11.y, r11.x
            if_nz r8.w
              lt r8.w, l(1.000000), r10.x
              add r9.y, r10.x, l(-2.000000)
              movc r10.x, r8.w, r9.y, r10.x
            else 
              ld_indexable(texture2d)(float,float,float,float) r7.z, r7.xyzw, t6.zwxy
              mov r7.w, l(1.000000)
              dp2 r8.w, r7.zwzz, cb1[11].zwzz
              dp2 r7.z, r7.zwzz, cb1[12].zwzz
              div r7.z, -r8.w, r7.z
              itof r7.xy, r7.xyxx
              mad r7.xy, r7.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r7.xy, r7.xyxx, cb1[0].xyxx
              mul r11.xy, r7.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r7.x, r7.z, cb1[67].x
              mov r11.z, -cb1[67].x
              mul r7.xyz, r7.xxxx, r11.xyzx
              mov r7.w, l(1.000000)
              dp4 r11.x, r7.xyzw, cb1[24].xyzw
              dp4 r11.y, r7.xyzw, cb1[25].xyzw
              dp4 r8.w, r7.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r8.w, -r24.y
mad r11.x, r24.w, r24.x, r11.x

              dp4 r12.x, r7.xyzw, cb4[0].xyzw
              dp4 r12.y, r7.xyzw, cb4[1].xyzw
              dp4 r7.x, r7.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r7.x, -r24.y
mad r12.x, r24.w, r24.x, r12.x

              max r7.x, r7.x, l(0.000100)
              div r7.xy, r12.xyxx, r7.xxxx
              div r7.zw, r11.xxxy, r8.wwww
              add r7.xy, -r7.xyxx, r7.zwzz
              mul r10.xw, r7.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
              mov r10.y, -r10.w
            endif 
          else 
            mov r10.xy, l(0,0,0,0)
          endif 
          mad r7.xy, r12.zwzz, cb1[66].zwzz, -r10.xyxx
          mul r10.xy, r7.xyxx, cb1[66].xyxx
          ftoi r11.xy, r10.xyxx
          mov r11.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r10.x, r11.xyzw, t6.xyzw
          mov r10.y, l(1.000000)
          dp2 r8.w, r10.xyxx, cb1[11].zwzz
          dp2 r9.y, r10.xyxx, cb1[12].zwzz
          div r8.w, -r8.w, r9.y
          ge r8.w, r10.z, -r8.w
          not r9.y, r8.w
          add r10.xy, -r12.zwzz, v0.xyxx
          dp2 r10.x, r10.xyxx, r10.xyxx
          sqrt r10.x, r10.x
          ge r10.y, r10.x, l(700.000000)
          add r10.x, r10.x, l(-700.000000)
          mad r10.x, -r10.x, l(0.00333333341), l(1.000000)
          movc r10.x, r10.y, r10.x, l(1.000000)
          add r7.zw, -r7.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul_sat r11.xyzw, r7.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
          mul r7.z, r11.y, r11.x
          mul r7.z, r11.z, r7.z
          mul r7.z, r11.w, r7.z
          mul r7.z, r7.z, r10.x
          lt r7.w, l(0.137000), r1.w
          mad r1.w, -r1.w, l(4.000000), l(1.000000)
          max r1.w, r1.w, l(0.000000)
          mul r1.w, r1.w, r7.z
          movc r1.w, r7.w, r1.w, r7.z
          movc r1.w, r8.w, r1.w, l(1.000000)
        else 
          mov r7.xy, l(0,0,0,0)
          mov r1.w, l(0)
          mov r9.y, l(0)
        endif 
        if_z r9.y
          lt r7.z, l(0.000000), r1.w
          if_nz r7.z
            mul r2.w, r2.w, cb4[8].x
            sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t7.xyzw, s2, r2.w
          else 
            mov r7.xyz, l(0,0,0,0)
          endif 
        else 
          mov r7.xyz, l(0,0,0,0)
          mov r1.w, l(0)
        endif 
      else 
        mov r7.xyz, l(0,0,0,0)
        mov r1.w, l(0)
      endif 
    else 
      mov r7.xyz, l(0,0,0,0)
      mov r1.w, l(0)
    endif 
    lt r2.w, l(0.000000), r1.w
    if_nz r2.w
      div r7.xyz, r7.xyzx, cb1[176].wwww
      lt r2.w, r1.w, l(1.000000)
      if_nz r2.w
        if_z cb1[184].z
          mov r0.w, l(1.000000)
          mov r10.xyzw, l(0,0,0,0)
          mov r2.w, l(1.000000)
          mov r8.w, l(0)
          loop 
            uge r9.y, r8.w, l(15)
            breakc_nz r9.y
            imul null, r9.y, r8.w, l(7)
            dp4 r11.x, r0.xyzw, cb1[r9.y + 68].xyzw
            dp4 r11.y, r0.xyzw, cb1[r9.y + 69].xyzw
            dp4 r11.z, r0.xyzw, cb1[r9.y + 70].xyzw
            ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r12.xyz, r12.xyzx, cb1[r9.y + 72].xyzx, cb1[r9.y + 73].xyzx
            add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r11.xyz, r12.xyzx, r11.xyzx
            mul r11.x, r11.y, r11.x
            mul r11.x, r11.z, r11.x
            lt r11.y, l(0.000000), r11.x
            if_nz r11.y
              dp3 r12.x, r6.xyzx, cb1[r9.y + 68].xyzx
              dp3 r12.y, r6.xyzx, cb1[r9.y + 69].xyzx
              dp3 r12.z, r6.xyzx, cb1[r9.y + 70].xyzx
              mul r11.x, r11.x, cb1[r9.y + 73].w
              mov r12.w, cb1[r9.y + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t3.xyzw, s3, r5.x
              mul r12.xyzw, r12.xyzw, cb1[r9.y + 74].xxxy
              min r9.y, r2.w, r11.x
              mad r11.xyzw, r12.xyzw, r9.yyyy, r10.xyzw
              add r9.y, r2.w, -r9.y
              ge r12.x, l(0.000000), r9.y
              if_nz r12.x
                mov r10.xyzw, r11.xyzw
                mov r2.w, r9.y
                break 
              endif 
              mov r10.xyzw, r11.xyzw
              mov r2.w, r9.y
            endif 
            iadd r8.w, r8.w, l(1)
          endloop 
        else 
          mov r10.xyzw, l(0,0,0,0)
          mov r2.w, l(1.000000)
        endif 
        add r8.w, r2.w, r10.w
        mul r8.w, r1.y, r8.w
        lt r9.y, l(0.000000), r8.w
        if_nz r9.y
          add r9.y, -|r6.z|, r6.z
          mad r2.w, r2.w, r9.y, |r6.z|
          mad r2.w, r2.w, l(2.000000), l(2.000000)
          div r11.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.wwww
          mul r11.xy, r6.yxyy, r11.xyxx
          mad r11.xy, r11.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r11.xyxx, t2.xyzw, s2, r3.w
          mov_sat r12.xyz, r11.xyzx
          movc r11.xyz, cb1[184].zzzz, r12.xyzx, r11.xyzx
          div r11.xyz, r11.xyzx, cb1[176].wwww
          mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
        endif 
        mov_sat r1.w, r1.w
        add r11.xyz, r7.xyzx, -r10.xyzx
        mad r7.xyz, r1.wwww, r11.xyzx, r10.xyzx
      endif 
    else 
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r7.xyzw, l(0,0,0,0)
        mov r1.w, l(1.000000)
        mov r2.w, l(0)
        loop 
          uge r8.w, r2.w, l(15)
          breakc_nz r8.w
          imul null, r8.w, r2.w, l(7)
          dp4 r10.x, r0.xyzw, cb1[r8.w + 68].xyzw
          dp4 r10.y, r0.xyzw, cb1[r8.w + 69].xyzw
          dp4 r10.z, r0.xyzw, cb1[r8.w + 70].xyzw
          ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r11.xyz, r11.xyzx, cb1[r8.w + 72].xyzx, cb1[r8.w + 73].xyzx
          add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r10.xyz, r11.xyzx, r10.xyzx
          mul r9.y, r10.y, r10.x
          mul r9.y, r10.z, r9.y
          lt r10.x, l(0.000000), r9.y
          if_nz r10.x
            dp3 r10.x, r6.xyzx, cb1[r8.w + 68].xyzx
            dp3 r10.y, r6.xyzx, cb1[r8.w + 69].xyzx
            dp3 r10.z, r6.xyzx, cb1[r8.w + 70].xyzx
            mul r9.y, r9.y, cb1[r8.w + 73].w
            mov r10.w, cb1[r8.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t3.xyzw, s3, r5.x
            mul r10.xyzw, r10.xyzw, cb1[r8.w + 74].xxxy
            min r8.w, r1.w, r9.y
            mad r10.xyzw, r10.xyzw, r8.wwww, r7.xyzw
            add r8.w, r1.w, -r8.w
            ge r9.y, l(0.000000), r8.w
            if_nz r9.y
              mov r7.xyzw, r10.xyzw
              mov r1.w, r8.w
              break 
            endif 
            mov r7.xyzw, r10.xyzw
            mov r1.w, r8.w
          endif 
          iadd r2.w, r2.w, l(1)
        endloop 
      else 
        mov r7.xyzw, l(0,0,0,0)
        mov r1.w, l(1.000000)
      endif 
      add r0.x, r1.w, r7.w
      mul r0.x, r1.y, r0.x
      lt r0.y, l(0.000000), r0.x
      if_nz r0.y
        add r0.y, -|r6.z|, r6.z
        mad r0.y, r1.w, r0.y, |r6.z|
        mad r0.y, r0.y, l(2.000000), l(2.000000)
        div r0.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r0.yyyy
        mul r0.yz, r0.yyzy, r6.yyxy
        mad r0.yz, r0.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t2.wxyz, s2, r3.w
        mov_sat r6.xyz, r0.yzwy
        movc r0.yzw, cb1[184].zzzz, r6.xxyz, r0.yyzw
        div r0.yzw, r0.yyzw, cb1[176].wwww
        mad r7.xyz, r0.yzwy, r0.xxxx, r7.xyzx
      endif 
    endif 
    mul r0.x, r4.z, l(0.080000)
    mad r0.yzw, -r4.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r9.xxzw
    mad r0.xyz, r4.xxxx, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r8.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r1.yw, r4.wyww, t1.zxwy, s2, l(0.000000)
    mad r0.xyz, r0.xyzx, r1.yyyy, r1.wwww
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r7.xyzx
    mul r3.xyz, r6.wwww, r0.xyzx
    dp3 r1.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r1.z, r1.x
add r0.yzw, r2.xxyz, r3.xxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 2146 instruction slots used