// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 479acada2820432a-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 05:02:28 2017
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorWrap                         sampler      NA          NA    1        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    1        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    2        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    3        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    4        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    5        1
// Viewport                          cbuffer      NA          NA    0        1
// GBufferMini                       cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[185], dynamicIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecubearray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 12

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 479acada2820432a-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
mad r0.z, cb1[0].y, cb0[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t3.yzxw
mad r0.z, r0.z, cb0[67].z, cb0[67].x
mov r2.z, -r0.z
mul r0.zw, r0.xxxy, r2.zzzz
movc r2.xy, cb1[0].zzzz, r0.xyxx, r0.zwzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.x, r1.xyww, t4.wxyz
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t5.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.yzw, -r0.xxyz, r9.xxyz
dp3 r1.w, r2.yzwy, r2.yzwy
rsq r1.w, r1.w
mul r2.yzw, r1.wwww, r2.yyzw
dp3 r1.w, -r2.yzwy, r1.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r1.xyzx, -r1.wwww, -r2.yzwy
if_z cb0[184].z
  mul r1.w, cb0[174].w, l(0.722615957)
  mov r0.w, l(1.000000)
  mov r4.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
  mov r5.x, l(0)
  loop 
    uge r5.y, r5.x, l(15)
    breakc_nz r5.y
    imul null, r5.y, r5.x, l(7)
    dp4 r6.x, r0.xyzw, cb0[r5.y + 68].xyzw
    dp4 r6.y, r0.xyzw, cb0[r5.y + 69].xyzw
    dp4 r6.z, r0.xyzw, cb0[r5.y + 70].xyzw
    ge r7.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r7.xyz, r7.xyzx, cb0[r5.y + 72].xyzx, cb0[r5.y + 73].xyzx
    add r6.xyz, -|r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r6.xyz, r7.xyzx, r6.xyzx
    mul r5.z, r6.y, r6.x
    mul r5.z, r6.z, r5.z
    lt r5.w, l(0.000000), r5.z
    if_nz r5.w
      dp3 r6.x, r3.xyzx, cb0[r5.y + 68].xyzx
      dp3 r6.y, r3.xyzx, cb0[r5.y + 69].xyzx
      dp3 r6.z, r3.xyzx, cb0[r5.y + 70].xyzx
      mul r5.z, r5.z, cb0[r5.y + 73].w
      mov r6.w, cb0[r5.y + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyzw, r6.xyzw, t2.xyzw, s1, r1.w
      mul r6.xyzw, r6.xyzw, cb0[r5.y + 74].xxxy
      min r5.y, r3.w, r5.z
      mad r6.xyzw, r6.xyzw, r5.yyyy, r4.xyzw
      add r5.y, r3.w, -r5.y
      ge r5.z, l(0.000000), r5.y
      if_nz r5.z
        mov r4.xyzw, r6.xyzw
        mov r3.w, r5.y
        break 
      endif 
      mov r4.xyzw, r6.xyzw
      mov r3.w, r5.y
    endif 
    iadd r5.x, r5.x, l(1)
  endloop 
else 
  mov r4.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
endif 
add r0.x, r3.w, r4.w
lt r0.y, l(0.000000), r0.x
if_nz r0.y
  mul r0.y, cb0[183].w, l(0.722615957)
  add r0.z, -|r3.z|, r3.z
  mad r0.z, r3.w, r0.z, |r3.z|
  mad r0.z, r0.z, l(2.000000), l(2.000000)
  div r0.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.zzzz
  mul r0.zw, r0.zzzw, r3.yyyx
  mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t1.wxyz, s0, r0.y
  mov_sat r3.xyz, r0.yzwy
  movc r0.yzw, cb0[184].zzzz, r3.xxyz, r0.yyzw
  div r0.yzw, r0.yyzw, cb0[176].wwww
  mad r4.xyz, r0.yzwy, r0.xxxx, r4.xyzx
endif 
dp3_sat r0.x, r1.xyzx, r2.yzwy
mov r0.y, l(0.250000)
sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.x, r0.x, l(0.003200), r0.y
mul r0.x, r0.x, l(0.160000)
mul r0.xyz, r0.xxxx, r4.xyzx
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r2.xxxx, r0.xyzx
add r0.x, -r2.x, l(1.000000)
mul o0.w, r0.x, cb1[0].x
ret 
// Approximately 102 instruction slots used