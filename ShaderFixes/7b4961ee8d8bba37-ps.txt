// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7b4961ee8d8bba37-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:56 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4 [unused]
//   float3 VolumeCentre;               // Offset:  304 Size:    12 [unused]
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4 MinAmbient;                 // Offset:    0 Size:    16
//   float4x4 ViewProjectionMatrixWithZBias;// Offset:   16 Size:    64 [unused]
//   float4 WorldEdgeFadeParams;        // Offset:   80 Size:    16 [unused]
//   float2 LightProbesGlobal_GIGenerationSunInterlacePixelsXY;// Offset:   96 Size:     8 [unused]
//   float DrawDistance;                // Offset:  104 Size:     4 [unused]
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4 [unused]
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    0        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    2        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    3        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// LightProbesGlobal                 cbuffer      NA          NA    3        1
// GBufferMini                       cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 12

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7b4961ee8d8bba37-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
mad r0.z, cb4[0].y, cb0[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t3.yzxw
mad r0.z, r0.z, cb0[67].z, cb0[67].x
mov r2.z, -r0.z
mul r0.zw, r0.xxxy, r2.zzzz
movc r2.xy, cb4[0].zzzz, r0.xyxx, r0.zwzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
mov r0.w, l(1.000000)
dp4 r2.x, r0.xyzw, cb2[14].xyzw
add r2.y, r2.x, l(-0.500000)
add r2.y, |r2.y|, l(-0.500000)
lt r2.z, l(0.000000), r2.x
movc r2.z, r2.z, cb2[18].x, cb2[18].y
mul_sat r2.y, r2.z, r2.y
add r2.y, -r2.y, l(1.000000)
eq r2.z, r2.y, l(0.000000)
discard_nz r2.z
dp4 r3.x, r0.xyzw, cb2[12].xyzw
dp4 r3.y, r0.xyzw, cb2[13].xyzw
add r0.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t4.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r3.xyzw, cb2[16].xyxy, l(-1.000000, -1.000000, -1.000000, -1.000000)
div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xxxy
mul r0.zw, r0.zzzw, r1.xxxy
mad_sat r0.xy, r0.zwzz, l(0.300000, 0.300000, 0.000000, 0.000000), r0.xyxx
div r0.zw, r3.zzzw, cb2[16].xxxy
div r3.xyzw, l(0.500000, 0.500000, 0.200000, 0.500000), cb2[16].xyzz
mad r0.xy, r0.xyxx, r0.zwzz, r3.xyxx
mov_sat r2.x, r2.x
add r0.w, cb2[16].z, l(-1.000000)
lt r1.w, l(0.000000), cb2[17].y
div_sat r2.z, r2.x, cb2[17].y
mul r2.z, r2.z, cb2[17].x
and r1.w, r1.w, r2.z
lt r2.z, cb2[17].y, l(1.000000)
add_sat r2.x, r2.x, -cb2[17].y
add r2.w, -cb2[17].y, l(1.000000)
div r2.x, r2.x, r2.w
log r2.x, |r2.x|
mul r2.x, r2.x, cb2[16].w
exp r2.x, r2.x
add r0.w, r0.w, -cb2[17].x
mul r0.w, r0.w, r2.x
and r0.w, r0.w, r2.z
add r0.w, r0.w, r1.w
div r0.w, r0.w, cb2[16].z
mad r0.w, r1.z, r3.z, r0.w
add r0.z, r3.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r0.xyzx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r0.xyzx, t1.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(0.000000)
log r3.xyzw, |r3.xyzw|
mul r3.xyzw, r3.xyzw, cb2[22].xxxx
exp r3.xyzw, r3.xyzw
log r4.xyzw, |r4.xyzw|
mul r4.xyzw, r4.xyzw, cb2[22].xxxx
exp r4.xyzw, r4.xyzw
log r0.xyzw, |r0.xyzw|
mul r0.xyzw, r0.xyzw, cb2[22].xxxx
exp r0.xyzw, r0.xyzw
mul r5.xyzw, cb1[12].xyzw, cb3[0].xxxw
mul r6.xyzw, cb1[13].xyzw, cb3[0].yyyw
mul r7.xyzw, cb1[14].xyzw, cb3[0].zzzw
max r3.xyzw, r3.xyzw, r5.xyzw
max r4.xyzw, r4.xyzw, r6.xyzw
max r0.xyzw, r0.xywz, r7.xywz
dp3 r5.x, r1.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r5.y, r1.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r5.z, r1.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r1.x, -r1.z, l(0.500000)
mul r5.w, r1.x, l(0.666666687)
max r1.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xzw, r4.xxyz, r1.yyyy
mad r2.xzw, r1.xxxx, r3.xxyz, r2.xxzw
mad r2.xzw, r1.zzzz, r0.xxyw, r2.xxzw
mov r0.x, r3.w
mov r0.y, r4.w
mad r0.xyz, r1.wwww, r0.xyzx, r2.xzwx
add r0.w, r1.y, r1.x
add r0.w, r1.z, r0.w
add r0.w, r1.w, r0.w
div r0.xyz, r0.xyzx, r0.wwww
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r2.y
ret 
// Approximately 95 instruction slots used