// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed daf4c2ede6a202e8-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:14:05 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2Water
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 SurfaceUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 WaveUVTiling;               // Offset:   48 Size:    16
//   float3 WaterColor;                 // Offset:   64 Size:    12
//   float NormalIntensity;             // Offset:   76 Size:     4 [unused]
//   float2 NormalScrolling1;           // Offset:   80 Size:     8 [unused]
//   float SkyLightFactor;              // Offset:   88 Size:     4
//   float SurfaceIntensity;            // Offset:   92 Size:     4 [unused]
//   float2 SurfaceScrolling1;          // Offset:   96 Size:     8 [unused]
//   float SurfaceWaveUVInfluence;      // Offset:  104 Size:     4 [unused]
//   float UseDuDv;                     // Offset:  108 Size:     4
//   float WaterExtinction;             // Offset:  112 Size:     4
//   float WaveIntensity;               // Offset:  116 Size:     4
//   float WaveSpeed;                   // Offset:  120 Size:     4
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Water__WaveTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// LongRangeShadowSampler          sampler_c      NA          NA    4        1
// WaterGrid__AccumulationCopyTexture__SampObj__    sampler      NA          NA    5        1
// WaterGrid__DepthCopyTexture__SampObj__    sampler      NA          NA    6        1
// WaterGrid__ExtinctionTexture__SampObj__    sampler      NA          NA    7        1
// WaterGrid__ScatteringTexture__SampObj__    sampler      NA          NA    8        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    1        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    2        1
// MaterialWD2Water__WaveTexture__TexObj__    texture  float4          2d    3        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    4        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    5        1
// WaterGrid__AccumulationCopyTexture__TexObj__    texture  float4          2d    6        1
// WaterGrid__DepthCopyTexture__TexObj__    texture  float4          2d    7        1
// WaterGrid__ExtinctionTexture__TexObj__    texture  float4          2d    8        1
// WaterGrid__ScatteringTexture__TexObj__    texture  float4          2d    9        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// MaterialWD2Water                  cbuffer      NA          NA    3        1
// LightData                         cbuffer      NA          NA    4        1
// LongRangeShadow                   cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xy          3     NONE   float       
// SV_Position              0   xyzw        4      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[31], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[55], dynamicIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_comparison
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecubearray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v2.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed daf4c2ede6a202e8-ps.txt

mul r12.w, r12.x, r12.y
mul r14.x, r12.w, cb1[9].x
mul r14.y, r12.w, cb1[10].x
mul r14.z, r12.w, cb1[11].x
mul r14.w, r12.w, cb1[12].x
dp4 r15.x, r14.xyzw, cb1[17].xyzw
dp4 r15.y, r14.xyzw, cb1[18].xyzw
dp4 r15.z, r14.xyzw, cb1[19].xyzw
add r13.xyz, cb1[174].xyz, r15.xyz

mul r0.x, cb0[34].x, cb3[7].z
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[3].x
mul r1.xyzw, r0.yyyy, l(1.000000, 1.000000, 1.125480, 1.125480)
div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
mul r0.xyzw, r0.xxxx, l(0.040000, 0.020000, -0.040000, -0.020000)
mul r2.xyzw, r2.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
mad r0.xyzw, v2.xyxy, r2.xyzw, r0.xyzw
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t3.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t3.xyzw, s0
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r0.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r0.xyz, r1.wwww, r0.xyzx
mad r0.xyz, r2.xyzx, r1.yyyy, r0.xyzx
mul r0.w, cb3[7].y, l(-0.017500)
mul r1.xyw, r0.wwww, r0.xyxx
mul r1.z, r0.z, l(0.050000)
dp3 r0.x, r1.yzwy, r1.yzwy
rsq r0.x, r0.x
mul r0.xyzw, r0.xxxx, r1.xyzw
ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb3[6].w
mul r2.xyzw, r0.wyyz, l(0.100000, 0.100000, -0.488603, 0.488603)
and r1.xy, r1.xxxx, r2.xyxx
add r3.xyz, -v2.xyzx, r13.xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, r3.xyzx
div r5.xyz, v0.xyzx, v0.wwww
mad r6.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r6.z, -r6.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.w, r6.xzxx, t7.yzwx, s6
add r1.w, -r1.w, l(1.000000)
add r2.xy, r1.xyxx, r6.xzxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t7.xyzw, s6
add r2.x, -r2.x, l(1.000000)
ge r2.y, r2.x, r1.w
and r2.y, r2.y, l(0x3f800000)
add r2.x, -r1.w, r2.x
mad r7.x, r2.y, r2.x, r1.w
mad r1.xy, r1.xyxx, r2.yyyy, r6.xzxx
mov_sat r2.xy, r1.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r2.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
add r6.z, -r7.x, l(1.000000)
mov r6.w, l(1.000000)
dp4 r8.x, r6.xyzw, cb1[9].xyzw
dp4 r8.y, r6.xyzw, cb1[10].xyzw
dp4 r8.z, r6.xyzw, cb1[11].xyzw
dp4 r8.w, r6.xyzw, cb1[12].xyzw
div r6.xyzw, r8.xyzw, r8.wwww
dp4 r8.x, r6.xyzw, cb1[17].xyzw
dp4 r8.y, r6.xyzw, cb1[18].xyzw
dp4 r8.z, r6.xyzw, cb1[19].xyzw
mov r7.yw, l(0,1.000000,0,0.500000)
dp2 r1.w, r7.xyxx, cb1[11].zwzz
dp2 r2.x, r7.xyxx, cb1[12].zwzz
div r1.w, -r1.w, r2.x
mov r5.w, l(1.000000)
dp2 r2.x, r5.zwzz, cb1[11].zwzz
dp2 r2.y, r5.zwzz, cb1[12].zwzz
div r2.x, -r2.x, r2.y
add r1.w, r1.w, -r2.x
add r5.xyz, r8.xyzx, -v2.xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
sqrt r2.x, r2.x
add r1.w, -r1.w, l(0.050000)
mul r1.w, |r1.w|, l(20.000000)
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t6.xyzw, s5
div r6.xyz, r5.xyzx, cb1[176].wwww
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r5.xyz, r5.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 r1.x, r5.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mul r1.x, r1.x, l(0.100000)
min r1.x, r1.x, l(1.000000)
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mad r1.x, -r1.y, r1.x, l(1.000000)
mul r5.xyz, r1.xxxx, r6.xyzx
mov_sat r1.x, -r4.z
mul r2.x, r2.x, l(0.010000)
min r2.x, r2.x, l(1.000000)
rsq r2.x, r2.x
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r1.y, r2.x, cb3[7].x
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyxx, t9.xyzw, s8
mul r6.xyz, r6.xyzx, cb3[4].xyzx
mul r8.xyz, r6.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r1.xyxx, t8.xyzw, s7
mul r1.x, r1.w, l(0.020000)
mad r6.xyz, -r6.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), l(0.800000, 0.800000, 0.800000, 0.000000)
mad r1.xyw, r1.xxxx, r6.xyxz, r8.xyxz
mov r2.xy, l(0,0,0,0)
mov r6.z, l(0)
mov r3.w, l(0)
mov r4.w, l(3)
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, l(4)
  breakc_nz r6.w
  ishl r6.w, r5.w, l(2)
  mul r8.xyz, v2.yyyy, cb4[r6.w + 1].xyzx
  mad r8.xyz, cb4[r6.w + 0].xyzx, v2.xxxx, r8.xyzx
  mad r8.xyz, cb4[r6.w + 2].xyzx, v2.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb4[r6.w + 3].xyzx
  max r6.w, |r8.y|, |r8.x|
  add r6.w, r6.w, cb4[16].x
  ult r7.x, r5.w, l(3)
  if_nz r7.x
    lt r7.x, r6.w, l(1.000000)
    if_nz r7.x
      mov r2.xy, r8.xyxx
      mov r6.z, r8.z
      mov r3.w, r6.w
      mov r4.w, r5.w
      break 
    endif 
  endif 
  iadd r5.w, r5.w, l(1)
  mov r2.xy, r8.xyxx
  mov r6.z, r8.z
  mov r3.w, r6.w
  mov r4.w, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r7.z, x0[r4.w + 0].z
mad r6.xy, r2.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r7.zwzz
dp4 r2.x, cb4[17].xyzw, icb[r4.w + 0].xyzw
ieq r2.y, r4.w, l(3)
mad_sat r3.w, r3.w, cb4[16].z, cb4[16].w
and r2.y, r2.y, r3.w
ld_indexable(texture2d)(float,float,float,float) r7.xy, l(0, 0, 0, 0), t0.xyzw
mad r7.xy, r7.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.zw, r7.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r8.xy, r7.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r7.zwzz
dp2 r8.z, r7.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r7.zw, r2.xxxx, cb4[38].zzzw
mul r10.xy, r7.zwzz, r8.xzxx
mov r10.z, l(0)
add r10.xyz, r6.xyzx, r10.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.x, r10.xyxx, t4.xxxx, s3, r10.z
dp2 r8.w, r7.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r8.xy, r7.zwzz, r8.ywyy
mov r8.z, l(0)
add r8.xyz, r6.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r8.xyxx, t4.xxxx, s3, r8.z
add r2.x, r2.x, r3.w
mul r8.xy, r7.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r8.xy, r7.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r8.xyxx
dp2 r8.z, r7.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r10.xy, r7.zwzz, r8.xzxx
mov r10.z, l(0)
add r10.xyz, r6.xyzx, r10.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r10.xyxx, t4.xxxx, s3, r10.z
add r2.x, r2.x, r3.w
dp2 r8.w, r7.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r7.xy, r7.zwzz, r8.ywyy
mov r7.z, l(0)
add r6.xyz, r6.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r6.xyxx, t4.xxxx, s3, r6.z
add r2.x, r2.x, r3.w
mul r3.w, r2.x, l(0.250000)
mad r4.w, v2.z, cb5[0].z, cb5[0].w
mad r6.xy, v2.xyxx, cb5[1].xyxx, cb5[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t5.xxxx, s4, r4.w
mad r2.x, -r2.x, l(0.250000), r4.w
mad r2.x, r2.y, r2.x, r3.w
dp3 r2.y, -r4.yzxy, r0.yzwy
add r2.y, r2.y, r2.y
mul r6.xyz, r0.wyzw, -r2.yyyy
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, r6.xyzx
dp3 r3.w, r6.xyzx, r4.xyzx
add r3.w, -r3.w, l(1.000000)
mul r4.w, r3.w, r3.w
mul r4.w, r4.w, r4.w
mul r3.w, r3.w, r4.w
mad r3.w, r3.w, l(0.990000), l(0.010000)
mad r6.xyz, r0.wyzw, -r2.yyyy, -r4.xyzx
if_z cb1[184].z
  mul r2.y, cb1[174].w, l(0.0412514210)
  mov r7.xyz, v2.xyzx
  mov r7.w, l(1.000000)
  mov r8.xyzw, l(0,0,0,0)
  mov r4.w, l(1.000000)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, l(15)
    breakc_nz r6.w
    imul null, r6.w, r5.w, l(7)
    dp4 r10.x, r7.xyzw, cb1[r6.w + 68].xyzw
    dp4 r10.y, r7.xyzw, cb1[r6.w + 69].xyzw
    dp4 r10.z, r7.xyzw, cb1[r6.w + 70].xyzw
    ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r11.xyz, r11.xyzx, cb1[r6.w + 72].xyzx, cb1[r6.w + 73].xyzx
    add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r10.xyz, r11.xyzx, r10.xyzx
    mul r9.w, r10.y, r10.x
    mul r9.w, r10.z, r9.w
    lt r10.x, l(0.000000), r9.w
    if_nz r10.x
      dp3 r10.x, r6.xyzx, cb1[r6.w + 68].xyzx
      dp3 r10.y, r6.xyzx, cb1[r6.w + 69].xyzx
      dp3 r10.z, r6.xyzx, cb1[r6.w + 70].xyzx
      mul r9.w, r9.w, cb1[r6.w + 73].w
      mov r10.w, cb1[r6.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t2.xyzw, s2, r2.y
      mul r10.xyzw, r10.xyzw, cb1[r6.w + 74].xxxy
      min r6.w, r4.w, r9.w
      mad r10.xyzw, r10.xyzw, r6.wwww, r8.xyzw
      add r6.w, r4.w, -r6.w
      ge r9.w, l(0.000000), r6.w
      if_nz r9.w
        mov r8.xyzw, r10.xyzw
        mov r4.w, r6.w
        break 
      endif 
      mov r8.xyzw, r10.xyzw
      mov r4.w, r6.w
    endif 
    iadd r5.w, r5.w, l(1)
  endloop 
else 
  mov r8.xyzw, l(0,0,0,0)
  mov r4.w, l(1.000000)
endif 
add r2.y, r4.w, r8.w
lt r5.w, l(0.000000), r2.y
if_nz r5.w
  mul r5.w, cb1[183].w, l(0.0412514210)
  add r6.w, -|r6.z|, r6.z
  mad r4.w, r4.w, r6.w, |r6.z|
  mad r4.w, r4.w, l(2.000000), l(2.000000)
  div r6.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.wwww
  mul r6.xy, r6.zwzz, r6.yxyy
  mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t1.xyzw, s1, r5.w
  mov_sat r7.xyz, r6.xyzx
  movc r6.xyz, cb1[184].zzzz, r7.xyzx, r6.xyzx
  div r6.xyz, r6.xyzx, cb1[176].wwww
  mad r8.xyz, r6.xyzx, r2.yyyy, r8.xyzx
endif 
mad r3.xyz, r3.xyzx, r1.zzzz, cb2[2].xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.z, r0.wyzw, cb2[2].xyzx
max r1.z, r1.z, l(0.000000)
dp3 r2.y, r0.wyzw, r4.xyzx
max r2.y, r2.y, l(0.000000)
dp3 r3.x, r0.wyzw, r3.xyzx
max r3.x, r3.x, l(0.000000)
mul r3.x, r3.x, r3.x
mad r3.x, r3.x, l(-0.999993742), l(1.000000)
mul r3.x, r3.x, r3.x
mul r3.x, r3.x, l(3.14159274)
mul r3.y, r1.z, r1.z
mad r3.z, -r1.z, r1.z, l(1.000000)
mul r3.z, r3.z, l(0.00000624999984)
max r3.y, r3.y, l(1.000000047E-034)
div r3.y, r3.z, r3.y
add r3.y, r3.y, l(1.000000)
sqrt r3.y, r3.y
add r3.y, r3.y, l(1.000000)
div r3.xy, l(0.00000624999984, 2.000000, 0.000000, 0.000000), r3.xyxx
mul r3.z, r2.y, r2.y
mad r2.y, -r2.y, r2.y, l(1.000000)
mul r2.y, r2.y, l(0.00000624999984)
max r3.z, r3.z, l(1.000000047E-034)
div r2.y, r2.y, r3.z
add r2.y, r2.y, l(1.000000)
sqrt r2.y, r2.y
add r2.y, r2.y, l(1.000000)
div r2.y, l(2.000000), r2.y
mul r2.y, r2.y, r3.y
mul r2.y, r2.y, r3.x
mul r2.y, r3.w, r2.y
mul r1.z, r1.z, r2.y
mul r3.xyz, r1.zzzz, cb2[0].xyzx
mul r3.xyz, r2.xxxx, r3.xyzx
mad r3.xyz, r3.xyzx, cb3[5].zzzz, r8.xyzx
mul r4.xyz, r2.zzzz, cb2[23].xyzx
mad r4.xyz, cb2[22].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r4.xyzx
mad r2.yzw, r2.wwww, cb2[24].xxyz, r4.xxyz
mul r1.z, r0.w, l(-0.488603)
mad r2.yzw, r1.zzzz, cb2[25].xxyz, r2.yyzw
mul r4.xyzw, r0.xyzw, r0.yzzz
mul r4.xyw, r4.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r2.yzw, r4.xxxx, cb2[26].xxyz, r2.yyzw
mad r2.yzw, r4.yyyy, cb2[27].xxyz, r2.yyzw
mad r0.x, r4.z, l(3.000000), l(-1.000000)
mul r0.x, r0.x, l(0.315392)
mad r2.yzw, r0.xxxx, cb2[28].xxyz, r2.yyzw
mad r2.yzw, r4.wwww, cb2[29].xxyz, r2.yyzw
mul r0.x, r0.y, r0.y
mad r0.x, r0.w, r0.w, -r0.x
mul r0.x, r0.x, l(0.546274)
mad r0.xyz, r0.xxxx, cb2[30].xyzx, r2.yzwy
mul r1.xyz, r1.xywx, cb3[5].zzzz
mul r2.xyz, r2.xxxx, cb2[0].xyzx
mul r2.xyz, r2.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad r0.xyz, r0.xyzx, l(6.28318548, 6.28318548, 6.28318548, 0.000000), r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r5.xyzx, r9.xyzx, r0.xyzx
add r1.xyz, -r0.xyzx, r3.xyzx
mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r0.xyz, r5.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 o0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
ret 
// Approximately 318 instruction slots used