// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 01beff06b2b2a7cf-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Tue Jan 17 03:30:08 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float DepthScale;                  // Offset:  128 Size:     4
//   float SSRTextureMaxMipIndex;       // Offset:  132 Size:     4
//   bool GameIsPaused;                 // Offset:  136 Size:     4
//
// }
//
// cbuffer SceneProceduralShadowCaster
// {
//
//   float4 ProceduralShadowFactors[2]; // Offset:    0 Size:    32
//   float4 ProceduralShadowFactors2[2];// Offset:   32 Size:    32
//   float4 ProceduralShadowOrigin[2];  // Offset:   64 Size:    32
//   float4 ProceduralShadowPlane[2];   // Offset:   96 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    4        1
// DeferredLightingBase__SunShadowMaskTexture    texture  float2          2d    5        1
// DeferredLightingBase__ProbeLightingTexture    texture  float4          2d    6        1
// SSR__MotionVectorTexture__TexObj__    texture  float4          2d    7        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    8        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    9        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d   10        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d   11        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d   12        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// SSR                               cbuffer      NA          NA    4        1
// SceneProceduralShadowCaster       cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[9], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecubearray (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 28

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r24.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 01beff06b2b2a7cf-ps.txt

// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 01beff06b2b2a7cf-ps.txt

mul r24.w, r24.x, r24.y
mul r26.x, r24.w, cb1[9].x
mul r26.y, r24.w, cb1[10].x
mul r26.z, r24.w, cb1[11].x
mul r26.w, r24.w, cb1[12].x
dp4 r27.x, r26.xyzw, cb1[17].xyzw
dp4 r27.y, r26.xyzw, cb1[18].xyzw
dp4 r27.z, r26.xyzw, cb1[19].xyzw
add r25.xyz, cb1[174].xyz, r27.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t2.yzxw
mad r2.xy, v0.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[9].xyzw
dp4 r2.y, r1.xyzw, cb1[10].xyzw
dp4 r2.z, r1.xyzw, cb1[11].xyzw
dp4 r2.w, r1.xyzw, cb1[12].xyzw
div r1.xyzw, r2.xyzw, r2.wwww

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 01beff06b2b2a7cf-ps.txt

add r24.w, -r1.z, -r24.y
mul r24.w, r24.w, r24.x
mad r1.x, -r24.w, cb1[9].x, r1.x

dp4 r2.x, r1.xyzw, cb1[17].xyzw
dp4 r2.y, r1.xyzw, cb1[18].xyzw
dp4 r2.z, r1.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t10.wxyz
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyww, t11.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyww, t12.zyxw
mad r5.x, r4.w, l(255.000000), l(0.500000)
round_ni r5.x, r5.x
ftou r5.x, r5.x
ushr r5.x, r5.x, l(5)
dp3 r5.y, r3.xyzx, r3.xyzx
rsq r5.y, r5.y
mul r5.yzw, r3.xxyz, r5.yyyy
ieq r6.xyzw, r5.xxxx, l(1, 4, 2, 0)
ge r7.x, r1.x, l(0.750000)
add r7.y, r1.x, l(-0.750000)
mad r7.y, r7.y, l(-0.599999905), l(1.000000)
movc r7.x, r7.x, r7.y, l(1.000000)
movc r7.x, r6.y, r7.x, r1.x
movc r7.x, r6.x, l(1.000000), r7.x
mad r7.y, r3.w, l(0.500000), l(0.500000)
mad r7.y, r7.y, l(65535.000000), l(0.500000)
ftou r7.y, r7.y
and r7.z, r7.y, l(255)
utof r8.x, r7.z
lt r7.z, l(0.000000), r8.x
movc r7.z, r5.x, l(0), r7.z
add r9.xyz, -r2.xyzx, r25.xyzx
dp3 r7.w, r9.xyzx, r9.xyzx
rsq r7.w, r7.w
mul r10.xyz, r7.wwww, r9.xyzx
mul r11.yzw, r1.yyzw, r7.xxxx
if_nz r6.x
  mul r12.x, r8.x, l(0.00392156886)
  and r1.w, r7.y, l(0x0000ff00)
  utof r1.w, r1.w
  mul r12.z, r1.w, l(0.0000153186284)
  mul r1.w, r1.x, l(255.000000)
  ftou r1.w, r1.w
  and r13.xy, r1.wwww, l(15, 240, 0, 0)
  utof r13.xy, r13.xyxx
  mul r12.yw, r13.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r13.w, l(0)
  mov r11.x, r11.y
  mov r14.x, l(0)
else 
  mul r1.w, r4.y, r4.y
  max r4.y, r1.w, l(0.001000)
  ieq r1.w, r5.x, l(2)
  if_nz r1.w
    and r1.w, r7.y, l(0x0000ff00)
    utof r8.y, r1.w
    mov r8.z, r4.z
    mad r8.yzw, r8.xxyz, l(0.000000, 0.00784313772, 0.0000306372567, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
    add r1.w, -r1.x, l(1.000000)
    mul r1.w, r1.w, r11.y
    mad r11.x, r1.w, l(0.500000), r11.y
    dp3 r1.w, r8.yzwy, r8.yzwy
    rsq r1.w, r1.w
    mul r12.xzw, r1.wwww, r8.yyzw
    mov r12.y, l(0)
    mov r4.z, l(0.500000)
    mov r13.w, l(0)
    mov r14.x, l(0)
  else 
    ieq r1.w, r5.x, l(3)
    if_nz r1.w
      and r15.xyzw, r7.yyyy, l(0x0000f800, 2016, 31, 31)
      utof r15.xyzw, r15.xyzw
      ge r8.yzw, l(0.000000, 1.253950, 81.547195, 2568.089600), r15.wwyx
      mul r1.w, r15.w, l(0.00249675405)
      mad r16.xyz, r15.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r16.xyz, r16.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r16.xyz, r16.xyzx
      movc r12.x, r8.y, r1.w, r16.x
      mul r15.xy, r15.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r12.zw, r8.zzzw, r15.xxxy, r16.yyyz
      mov r12.y, l(0)
      mov r13.w, l(0)
      mov r14.x, l(0)
    else 
      if_nz r6.y
        mad r1.w, r3.w, l(32767.000000), l(32767.000000)
        ftou r1.w, r1.w
        and r8.y, r1.w, l(255)
        utof r8.y, r8.y
        mul r8.y, r8.y, l(0.0123199718)
        ubfe r1.w, l(8), l(8), r1.w
        utof r1.w, r1.w
        mad r1.w, r1.w, l(0.0246399436), l(-3.14159274)
        sincos r15.x, r16.x, r8.y
        sincos r17.x, r18.x, r1.w
        mul r18.x, r15.x, r18.x
        mul r18.y, r15.x, r17.x
        mov r18.z, r16.x
        dp3 r1.w, r18.xyzx, r18.xyzx
        rsq r1.w, r1.w
        mul r12.xzw, r1.wwww, r18.xxyz
        mul_sat r13.w, r1.x, l(0.250000)
        mov r12.y, l(0)
        mov r14.x, l(0)
      else 
        ieq r1.w, r5.x, l(5)
        lt r8.y, r3.z, l(0.900000)
        movc r8.yzw, r8.yyyy, l(0,0,1.000000,0), l(0,1.000000,0,0)
        mul r15.xyz, r3.zxyz, r8.yzwy
        mad r8.yzw, r3.yyzx, r8.zzwy, -r15.xxyz
        dp3 r9.w, r8.yzwy, r8.yzwy
        rsq r9.w, r9.w
        mul r8.yzw, r8.yyzw, r9.wwww
        mul r15.xyz, r3.zxyz, r8.zwyz
        mad r3.xyz, r3.yzxy, r8.wyzw, -r15.xyzx
        dp3 r9.w, r3.xyzx, r3.xyzx
        rsq r9.w, r9.w
        mul r3.xyz, r3.xyzx, r9.wwww
        mad r3.w, r3.w, l(2.000000), l(-1.000000)
        mul r3.w, r3.w, l(3.14159274)
        sincos r15.x, r16.x, r3.w
        mul r8.yzw, r8.yyzw, r15.xxxx
        mad r3.xyz, r3.xyzx, r16.xxxx, r8.yzwy
        mul r8.x, r8.x, l(0.00392156886)
        and r7.y, r7.y, l(0x0000ff00)
        utof r7.y, r7.y
        mad r8.y, r7.y, l(0.0000306372567), l(-1.000000)
        movc r8.xy, r5.xxxx, l(0,0,0,0), r8.xyxx
        mov r3.w, r4.x
        mov r8.z, l(0)
        movc r12.xyzw, r1.wwww, r3.xwyz, r8.xzzz
        mov r1.yz, l(0,0,0,0)
        mov r8.w, r3.w
        movc r14.xyz, r1.wwww, r1.zxyz, r8.yzwy
        mov r13.w, r14.y
        mov r4.x, r14.z
      endif 
    endif 
    mov r11.x, r11.y
  endif 
endif 
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyww, t6.xyzw
div r1.xyz, r1.xyzx, cb1[176].wwww
ld_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyzw, t5.xyzw
mul r0.y, r0.y, r0.y
or r0.z, r6.z, r6.y
if_nz r0.z
  dp3 r0.z, cb5[6].xyzx, cb0[31].xyzx
  mad_sat r0.w, r0.z, cb5[2].x, cb5[2].y
  mov r2.w, l(1.000000)
  dp4 r3.x, cb5[6].xyzw, r2.xyzw
  add_sat r3.y, r0.z, l(1.000000)
  mad r3.x, -r3.y, cb5[2].z, r3.x
  div r0.z, -r3.x, r0.z
  mad r3.xyz, cb0[31].xyzx, r0.zzzz, r2.xyzx
  add r8.xyz, -r2.xyzx, cb5[4].xyzx
  add r3.xyz, -r3.xyzx, cb5[4].xyzx
  dp3 r8.x, r8.xyzx, r8.xyzx
  dp3 r8.y, r3.xyzx, r3.xyzx
  mad_sat r3.xy, r8.xyxx, cb5[0].xzxx, cb5[0].ywyy
  lt r0.z, l(0.000000), r0.z
  movc r0.z, r0.z, r3.x, r3.y
  add r0.z, r0.w, r0.z
  add_sat r0.z, r0.z, cb5[2].w
  dp3 r0.w, cb5[7].xyzx, cb0[31].xyzx
  mad_sat r3.x, r0.w, cb5[3].x, cb5[3].y
  dp4 r3.y, cb5[7].xyzw, r2.xyzw
  add_sat r3.z, r0.w, l(1.000000)
  mad r3.y, -r3.z, cb5[3].z, r3.y
  div r0.w, -r3.y, r0.w
  mad r3.yzw, cb0[31].xxyz, r0.wwww, r2.xxyz
  add r8.xyz, -r2.xyzx, cb5[5].xyzx
  add r3.yzw, -r3.yyzw, cb5[5].xxyz
  dp3 r8.x, r8.xyzx, r8.xyzx
  dp3 r8.y, r3.yzwy, r3.yzwy
  mad_sat r3.yz, r8.xxyx, cb5[1].xxzx, cb5[1].yywy
  lt r0.w, l(0.000000), r0.w
  movc r0.w, r0.w, r3.y, r3.z
  add r0.w, r3.x, r0.w
  add_sat r0.w, r0.w, cb5[3].w
  mul r0.z, r0.w, r0.z
  mul r0.x, r0.z, r0.x
endif 
dp3 r0.z, r2.xyzx, cb0[1].xyzx
add_sat r0.z, r0.z, cb0[1].w
mul r0.x, r0.z, r0.x
mad r0.x, r0.x, cb3[37].x, cb3[37].y
lt r0.z, l(0.000000), r0.x
lt r0.w, l(0.000000), r12.x
and r0.w, r0.w, r6.w
or r0.z, r0.w, r0.z
if_nz r0.z
  dp3 r3.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r0.z, r5.yzwy, cb2[2].xyzx
  mov_sat r0.w, r0.z
  dp3 r6.w, r12.xzwx, r12.xzwx
  rsq r6.w, r6.w
  mul r8.xyz, r6.wwww, r12.xzwx
  dp3 r6.w, r8.xyzx, cb2[2].xyzx
  add r6.w, r6.w, l(1.000000)
  mul_sat r6.w, r6.w, l(0.500000)
  mul r7.y, r6.w, r6.w
  mul r6.w, r6.w, r7.y
  movc r8.xyz, r6.zzzz, r12.xzwx, r5.yzwy
  movc r6.w, r6.z, r6.w, r0.w
  if_nz r6.x
    mov_sat r15.xyzw, r12.xyzw
    mov_sat r14.yz, r4.xxyx
    log r16.xyz, r11.xzwx
    mul r17.xyz, r15.yyyy, r16.xyzx
    mul r17.xyz, r17.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r16.xyz, r16.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r17.xyzx
    eq r7.y, r15.x, l(0.000000)
    add r8.w, -r14.y, l(1.000000)
    mul r17.xyz, r8.wwww, r11.xzwx
    mul r17.xyz, r17.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r18.xyz, -r15.xxxx, r16.xyzx
    exp r18.xyz, r18.xyzx
    mul r18.xyz, r17.xyzx, r18.xyzx
    mul r18.xyz, r18.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r17.xyz, r7.yyyy, r17.xyzx, r18.xyzx
    mov r17.w, l(0.180000)
    mul r8.w, r15.w, l(0.080000)
    mad r9.w, r15.x, l(48.750000), l(1.250000)
    mul r10.w, r14.z, r14.z
    max r10.w, r10.w, l(0.001000)
    mul r11.y, r15.z, r15.z
    max r11.y, r11.y, l(0.001000)
    lt r14.z, l(0.000000), r0.z
    lt r14.w, r0.z, l(0.000000)
    iadd r14.z, -r14.z, r14.w
    itof r14.z, r14.z
    mad r14.w, r0.z, r0.z, l(-1.000000)
    mad r14.w, r14.w, l(0.666860044), l(1.000000)
    sqrt r14.w, r14.w
    mul r14.z, r14.w, r14.z
    mad r0.z, r0.z, l(0.666860044), -r14.z
    mul r15.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r15.xyz, r0.zzzz, r5.yzwy, -r15.xyzx
    add r18.xyz, -r15.xyzx, -cb2[2].xyzx
    mad r15.xyz, r10.wwww, r18.xyzx, r15.xyzx
    dp3 r0.z, r15.xyzx, r15.xyzx
    rsq r0.z, r0.z
    mul r18.xyz, r0.zzzz, r15.xyzx
    dp3 r14.z, r10.xyzx, r5.yzwy
    lt r14.w, l(0.000000), r14.z
    lt r16.w, r14.z, l(0.000000)
    iadd r14.w, -r14.w, r16.w
    itof r14.w, r14.w
    mad r16.w, r14.z, r14.z, l(-1.000000)
    mad r16.w, r16.w, l(0.666860044), l(1.000000)
    sqrt r16.w, r16.w
    mul r14.w, r14.w, r16.w
    mad r14.w, r14.z, l(0.666860044), -r14.w
    mul r19.xyz, r10.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r19.xyz, r14.wwww, r5.yzwy, -r19.xyzx
    mad r20.xyz, -r9.xyzx, r7.wwww, -r19.xyzx
    mad r19.xyz, r10.wwww, r20.xyzx, r19.xyzx
    dp3 r14.w, r19.xyzx, r19.xyzx
    rsq r14.w, r14.w
    mul r19.xyz, r14.wwww, r19.xyzx
    dp3 r14.w, r5.yzwy, r18.xyzx
    mad r14.w, -|r14.w|, |r14.w|, l(1.000000)
    mad r14.w, -r14.w, l(0.444702327), l(1.000000)
    add r9.w, r9.w, r9.w
    sqrt r14.w, r14.w
    div r9.w, r9.w, r14.w
    mov_sat r14.z, r14.z
    mad r20.xyz, r9.xyzx, r7.wwww, cb2[2].xyzx
    dp3 r14.w, r20.xyzx, r20.xyzx
    rsq r14.w, r14.w
    mul r20.xyz, r14.wwww, r20.xyzx
    dp3_sat r14.w, r5.yzwy, r20.xyzx
    mul r16.w, r10.w, r10.w
    mul r14.w, r14.w, r14.w
    mad r18.w, r10.w, r10.w, l(-1.000000)
    mad r14.w, r14.w, r18.w, l(1.000000)
    mul r14.w, r14.w, r14.w
    mul r14.w, r14.w, l(3.14159274)
    div r14.w, r16.w, r14.w
    mad r10.w, r10.w, l(0.500000), l(0.500000)
    mul r16.w, r0.w, r0.w
    mul r10.w, r10.w, r10.w
    mad r18.w, -r0.w, r0.w, l(1.000000)
    mul r18.w, r10.w, r18.w
    max r16.w, r16.w, l(1.000000047E-034)
    div r16.w, r18.w, r16.w
    add r16.w, r16.w, l(1.000000)
    sqrt r16.w, r16.w
    add r16.w, r16.w, l(1.000000)
    div r16.w, l(2.000000), r16.w
    mul r18.w, r14.z, r14.z
    mad r14.z, -r14.z, r14.z, l(1.000000)
    mul r10.w, r10.w, r14.z
    max r14.z, r18.w, l(1.000000047E-034)
    div r10.w, r10.w, r14.z
    add r10.w, r10.w, l(1.000000)
    sqrt r10.w, r10.w
    add r10.w, r10.w, l(1.000000)
    div r10.w, l(2.000000), r10.w
    mul r10.w, r10.w, r16.w
    mad r20.xyz, r0.wwww, r0.wwww, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r20.xyz, r20.xyzx
    add r21.xyz, -r0.wwww, r20.zyzz
    add r20.xyz, r0.wwww, r20.xyzx
    mul r22.xyz, r21.zyzz, r21.zyzz
    mul r23.xyz, r20.zyzz, r20.zyzz
    add r23.xyz, r23.xyzx, r23.xyzx
    div r22.xyz, r22.xyzx, r23.xyzx
    mad r20.xyz, r0.wwww, r20.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r21.xyz, r0.wwww, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r20.xyz, r20.xyzx, r20.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r20.xyz, r20.xyzx, r22.xyzx
    mul r10.w, r10.w, r14.w
    mul r20.xyz, r20.xyzx, r10.wwww
    mad r21.xyz, -r15.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
    mad r14.yzw, r14.yyyy, r21.xxyz, r8.wwww
    dp3_sat r8.w, r5.yzwy, -r19.xyzx
    mad r15.xyz, -r15.xyzx, r0.zzzz, -r19.xyzx
    dp3 r0.z, r15.xyzx, r15.xyzx
    rsq r0.z, r0.z
    mul r15.xyz, r0.zzzz, r15.xyzx
    dp3 r0.z, r15.xyzx, -r18.xyzx
    dp3_sat r10.w, r5.yzwy, -r18.xyzx
    dp3_sat r15.x, r5.yzwy, r15.xyzx
    mul r15.y, r11.y, r11.y
    mul r15.x, r15.x, r15.x
    mad r15.z, r11.y, r11.y, l(-1.000000)
    mad r15.x, r15.x, r15.z, l(1.000000)
    mul r15.x, r15.x, r15.x
    mul r15.x, r15.x, l(3.14159274)
    div r15.x, r15.y, r15.x
    mad r11.y, r11.y, l(0.500000), l(0.500000)
    mul r15.y, r10.w, r10.w
    mul r11.y, r11.y, r11.y
    mad r10.w, -r10.w, r10.w, l(1.000000)
    mul r10.w, r10.w, r11.y
    max r15.y, r15.y, l(1.000000047E-034)
    div r10.w, r10.w, r15.y
    add r10.w, r10.w, l(1.000000)
    sqrt r10.w, r10.w
    add r10.w, r10.w, l(1.000000)
    div r10.w, l(2.000000), r10.w
    mul r15.y, r8.w, r8.w
    mad r8.w, -r8.w, r8.w, l(1.000000)
    mul r8.w, r8.w, r11.y
    max r11.y, r15.y, l(1.000000047E-034)
    div r8.w, r8.w, r11.y
    add r8.w, r8.w, l(1.000000)
    sqrt r8.w, r8.w
    add r8.w, r8.w, l(1.000000)
    div r8.w, l(2.000000), r8.w
    mul r8.w, r8.w, r10.w
    dp3 r10.w, r14.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r10.w, r10.w, l(50.000000)
    add r0.z, -r0.z, l(1.000000)
    mul r11.y, r0.z, r0.z
    mul r11.y, r11.y, r11.y
    add r15.yzw, -r14.yyzw, r10.wwww
    mul r15.yzw, r11.yyyy, r15.yyzw
    mad r14.yzw, r15.yyzw, r0.zzzz, r14.yyzw
    mul r0.z, r8.w, r15.x
    mul r14.yzw, r14.yyzw, r0.zzzz
    mul r15.xyz, r9.wwww, -r16.xyzx
    exp r15.xyz, r15.xyzx
    mad r15.xyz, r14.yzwy, r15.xyzx, r20.xyzx
    movc r15.xyz, r7.yyyy, r14.yzwy, r15.xyzx
    dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r16.xyzw, l(0,0,0,0)
  else 
    if_nz r6.z
      mul r18.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r18.w, l(0.0572957806)
      add r0.z, -r4.x, l(1.000000)
      mul r17.xyzw, r0.zzzz, r18.xyzw
    else 
      ieq r0.z, r5.x, l(3)
      if_nz r0.z
        mad r14.yzw, r9.xxyz, r7.wwww, cb2[2].xxyz
        dp3 r0.z, r14.yzwy, r14.yzwy
        rsq r0.z, r0.z
        mul r14.yzw, r0.zzzz, r14.yyzw
        dp3_sat r0.z, r14.yzwy, r10.xyzx
        mul r7.y, r4.z, l(0.080000)
        add r0.z, -r0.z, l(1.000000)
        mul r8.w, r0.z, r0.z
        mul r8.w, r8.w, r8.w
        mad r9.w, -r4.z, l(0.080000), l(1.000000)
        mul r8.w, r8.w, r9.w
        mad r0.z, r8.w, r0.z, r7.y
        add_sat r7.y, r4.y, r4.y
        mad r18.w, r7.y, -r0.z, l(1.000000)
        mul r18.xyz, r11.xzwx, r18.wwww
        mul r17.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r6.y
          add r14.yzw, -r12.xxzw, r8.xxyz
          mad r18.xyz, r14.yzwy, l(0.100000, 0.100000, 0.100000, 0.000000), r12.xzwx
          dp3 r0.z, r18.xyzx, r18.xyzx
          rsq r0.z, r0.z
          mul r18.xyz, r0.zzzz, r18.xyzx
          mad r14.yzw, r14.yyzw, l(0.000000, 0.300000, 0.300000, 0.300000), r12.xxzw
          dp3 r0.z, r14.yzwy, r14.yzwy
          rsq r0.z, r0.z
          mul r14.yzw, r0.zzzz, r14.yyzw
          dp3 r0.z, r12.xzwx, cb2[2].xyzx
          dp3 r7.y, r18.xyzx, cb2[2].xyzx
          dp3 r8.w, r14.yzwy, cb2[2].xyzx
          mad r13.z, r0.z, l(0.500000), l(0.500000)
          mad r14.yz, r13.zzwz, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.y, r14.yzyy, t0.wxyz, s0, l(0.000000)
          mad r13.y, r7.y, l(0.500000), l(0.500000)
          mad r13.yz, r13.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.z, r13.yzyy, t0.wxyz, s0, l(0.000000)
          mad r13.x, r8.w, l(0.500000), l(0.500000)
          mad r13.xy, r13.xwxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r14.w, r13.xyxx, t0.wxyz, s0, l(0.000000)
          mul r18.xyz, r11.xzwx, r14.yzwy
          mov r18.w, l(0.0572957806)
          mul r17.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r0.z, r5.x, l(5)
          dp3 r7.y, r12.xzwx, cb2[2].xyzx
          mad r7.y, -r7.y, r7.y, l(1.000000)
          sqrt r7.y, r7.y
          mul r18.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r18.w, l(0.0572957806)
          add r8.w, -r4.x, l(1.000000)
          mul r18.xyzw, r8.wwww, r18.xyzw
          mul r19.xyzw, r7.yyyy, r18.xyzw
          mul r19.xyzw, r19.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r7.y, -r12.y, l(1.000000)
          mul r19.xyzw, r7.yyyy, r19.xyzw
          movc r17.xyzw, r0.zzzz, r19.xyzw, r18.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mul r0.z, r4.z, l(0.080000)
      mad r13.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
      mad r13.xyz, r4.xxxx, r13.xyzx, r0.zzzz
      dp3_sat r0.z, r5.yzwy, r10.xyzx
      mad r14.yzw, r9.xxyz, r7.wwww, cb2[2].xxyz
      dp3 r7.y, r14.yzwy, r14.yzwy
      rsq r7.y, r7.y
      mul r14.yzw, r7.yyyy, r14.yyzw
      dp3 r7.y, r14.yzwy, cb2[2].xyzx
      dp3_sat r8.w, r5.yzwy, r14.yzwy
      mul r9.w, r4.y, r4.y
      mul r8.w, r8.w, r8.w
      mad r10.w, r4.y, r4.y, l(-1.000000)
      mad r8.w, r8.w, r10.w, l(1.000000)
      mul r8.w, r8.w, r8.w
      mul r8.w, r8.w, l(3.14159274)
      div r8.w, r9.w, r8.w
      mad r9.w, r4.y, l(0.500000), l(0.500000)
      mul r10.w, r0.w, r0.w
      mul r9.w, r9.w, r9.w
      mad r11.y, -r0.w, r0.w, l(1.000000)
      mul r11.y, r9.w, r11.y
      max r10.w, r10.w, l(1.000000047E-034)
      div r10.w, r11.y, r10.w
      add r10.w, r10.w, l(1.000000)
      sqrt r10.w, r10.w
      add r10.w, r10.w, l(1.000000)
      div r10.w, l(2.000000), r10.w
      mul r11.y, r0.z, r0.z
      mad r0.z, -r0.z, r0.z, l(1.000000)
      mul r0.z, r0.z, r9.w
      max r9.w, r11.y, l(1.000000047E-034)
      div r0.z, r0.z, r9.w
      add r0.z, r0.z, l(1.000000)
      sqrt r0.z, r0.z
      add r0.z, r0.z, l(1.000000)
      div r0.z, l(2.000000), r0.z
      mul r0.z, r0.z, r10.w
      dp3 r9.w, r13.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r9.w, r9.w, l(50.000000)
      add r7.y, -r7.y, l(1.000000)
      mul r10.w, r7.y, r7.y
      mul r10.w, r10.w, r10.w
      add r14.yzw, -r13.xxyz, r9.wwww
      mul r14.yzw, r10.wwww, r14.yyzw
      mad r13.xyz, r14.yzwy, r7.yyyy, r13.xyzx
      mul r0.z, r0.z, r8.w
      mul r15.xyz, r13.xyzx, r0.zzzz
      dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r0.z, r5.x, l(3)
      if_nz r0.z
        mad r13.xyz, r9.xyzx, r7.wwww, cb2[2].xyzx
        dp3 r0.z, r13.xyzx, r13.xyzx
        rsq r0.z, r0.z
        mul r13.xyz, r0.zzzz, r13.xyzx
        dp3_sat r0.z, r13.xyzx, r10.xyzx
        mul r7.y, r4.z, l(0.080000)
        add r0.z, -r0.z, l(1.000000)
        mul r8.w, r0.z, r0.z
        mul r8.w, r8.w, r8.w
        mad r9.w, -r4.z, l(0.080000), l(1.000000)
        mul r8.w, r8.w, r9.w
        mad r0.z, r8.w, r0.z, r7.y
        dp3_sat r7.y, r5.yzwy, r13.xyzx
        mul r8.w, r7.y, r7.y
        mad r13.xy, -r7.yyyy, r7.yyyy, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r8.w, r8.w, r13.x
        mul r9.w, r13.y, r13.y
        mul r10.w, r4.y, r4.y
        mad r13.xy, r4.yyyy, r4.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r11.y, r13.x, l(4.000000), l(1.000000)
        mul r11.y, r11.y, l(3.14159274)
        div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
        div r8.w, -r8.w, r13.y
        mul r8.w, r8.w, l(1.442695)
        exp r8.w, r8.w
        mul r8.w, r8.w, l(4.000000)
        div r8.w, r8.w, r9.w
        add r8.w, r8.w, l(1.000000)
        mul r8.w, r8.w, r11.y
        dp3_sat r9.w, r5.yzwy, r10.xyzx
        add r11.y, r0.w, r9.w
        mad r9.w, -r0.w, r9.w, r11.y
        mul r9.w, r9.w, l(4.000000)
        div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
        mov_sat r9.w, r9.w
        div r10.w, l(2.000000), r10.w
        add r10.w, r10.w, l(-2.000000)
        max r10.w, r10.w, l(1.000000031E-022)
        log r7.y, r7.y
        mul r7.y, r7.y, r10.w
        exp r7.y, r7.y
        add r10.w, r10.w, l(8.000000)
        mul r7.y, r7.y, r10.w
        mul r7.y, r7.y, l(0.0397887342)
        min r7.y, r7.y, l(1.000000)
        add_sat r10.w, r4.y, r4.y
        mad r8.w, r8.w, r9.w, -r7.y
        mad r7.y, r10.w, r8.w, r7.y
        mul r18.xyz, r0.zzzz, r7.yyyy
        dp3 r18.w, r18.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r19.xyz, r12.xzwx
        mov r19.w, l(1.000000)
        mul r15.xyzw, r18.xyzw, r19.xyzw
      else 
        if_nz r6.y
          mul r13.xy, r4.zyzz, l(0.080000, 0.400000, 0.000000, 0.000000)
          mad r14.yzw, -r4.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r11.xxzw
          mad r14.yzw, r4.xxxx, r14.yyzw, r13.xxxx
          dp3_sat r0.z, r5.yzwy, r10.xyzx
          mad r18.xyz, r9.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r7.y, r18.xyzx, r18.xyzx
          rsq r7.y, r7.y
          mul r18.xyz, r7.yyyy, r18.xyzx
          dp3 r7.y, r18.xyzx, cb2[2].xyzx
          dp3_sat r8.w, r5.yzwy, r18.xyzx
          mul r9.w, r4.y, r4.y
          mul r8.w, r8.w, r8.w
          mad r10.w, r4.y, r4.y, l(-1.000000)
          mad r10.w, r8.w, r10.w, l(1.000000)
          mul r10.w, r10.w, r10.w
          mul r10.w, r10.w, l(3.14159274)
          div r9.w, r9.w, r10.w
          mad r13.xz, r4.yyyy, l(0.500000, 0.000000, 0.200000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
          mul r10.w, r0.w, r0.w
          mul r13.xz, r13.xxzx, r13.xxzx
          mad r11.y, -r0.w, r0.w, l(1.000000)
          mul r18.xy, r11.yyyy, r13.xzxx
          max r10.w, r10.w, l(1.000000047E-034)
          div r18.xy, r18.xyxx, r10.wwww
          add r18.xy, r18.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r18.xy, r18.xyxx
          add r18.xy, r18.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r18.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r18.xyxx
          mul r10.w, r0.z, r0.z
          mad r0.z, -r0.z, r0.z, l(1.000000)
          mul r13.xz, r0.zzzz, r13.xxzx
          max r0.z, r10.w, l(1.000000047E-034)
          div r13.xz, r13.xxzx, r0.zzzz
          add r13.xz, r13.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          sqrt r13.xz, r13.xxzx
          add r13.xz, r13.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          div r13.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r13.xxzx
          mul r13.xz, r13.xxzx, r18.xxyx
          dp3 r0.z, r14.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r0.z, r0.z, l(50.000000)
          add r7.y, -r7.y, l(1.000000)
          mul r10.w, r7.y, r7.y
          mul r10.w, r10.w, r10.w
          add r18.xyz, -r14.yzwy, r0.zzzz
          mul r18.xyz, r10.wwww, r18.xyzx
          mad r14.yzw, r18.xxyz, r7.yyyy, r14.yyzw
          mul r0.z, r9.w, r13.x
          mul r18.xyz, r14.yzwy, r0.zzzz
          dp3 r18.w, r18.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r0.z, r13.y, r13.y
          mad r7.y, r13.y, r13.y, l(-1.000000)
          mad r7.y, r8.w, r7.y, l(1.000000)
          mul r7.y, r7.y, r7.y
          mul r7.y, r7.y, l(3.14159274)
          div r0.z, r0.z, r7.y
          mul r0.z, r13.z, r0.z
          mul r19.xyz, r14.yzwy, r0.zzzz
          dp3 r19.w, r19.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r19.xyzw, r19.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r15.xyzw, r18.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r19.xyzw
        else 
          ieq r0.z, r5.x, l(5)
          dp3_sat r7.y, r11.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r7.y, r7.y, l(1.66666663), l(1.33333337)
          mul r13.xyz, r4.yyyy, r12.xzwx
          mad r13.xyz, r13.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.yzwy
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
          dp3 r8.w, -cb2[2].xyzx, r13.xyzx
          mul r9.w, r7.y, r7.y
          mad r10.w, -r8.w, r8.w, l(1.000000)
          mad r10.w, -r9.w, r10.w, l(1.000000)
          sqrt r11.y, r10.w
          mad r8.w, r7.y, r8.w, -r11.y
          mul r14.yzw, r13.xxyz, r8.wwww
          mad r14.yzw, r7.yyyy, cb2[2].xxyz, r14.yyzw
          lt r8.w, l(0.000000), r10.w
          and r8.w, r8.w, l(0x3f800000)
          mul r18.xyz, r8.wwww, r14.yzwy
          dp3 r10.w, -r10.xyzx, r13.xyzx
          mad r11.y, -r10.w, r10.w, l(1.000000)
          mad r9.w, -r9.w, r11.y, l(1.000000)
          sqrt r11.y, r9.w
          mad r10.w, r7.y, r10.w, -r11.y
          mul r13.xyz, r13.xyzx, r10.wwww
          mad r13.xyz, r7.yyyy, r10.xyzx, r13.xyzx
          lt r7.y, l(0.000000), r9.w
          and r7.y, r7.y, l(0x3f800000)
          mul r13.xyz, r7.yyyy, r13.xyzx
          mad r9.xyz, r9.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r7.y, r9.xyzx, r9.xyzx
          rsq r7.y, r7.y
          mul r9.xyz, r7.yyyy, r9.xyzx
          dp3_sat r7.y, r5.yzwy, r10.xyzx
          dp3_sat r7.w, r5.yzwy, r9.xyzx
          dp3 r9.w, r9.xyzx, cb2[2].xyzx
          mov_sat r10.w, r9.w
          dp3 r11.y, r9.xyzx, r12.xzwx
          mul r19.xyz, r5.zwyz, r12.wxzw
          mad r19.xyz, r12.zwxz, r5.wyzw, -r19.xyzx
          dp3 r18.w, r19.xyzx, r19.xyzx
          rsq r18.w, r18.w
          mul r19.xyz, r18.wwww, r19.xyzx
          dp3 r9.x, r9.xyzx, r19.xyzx
          mul r9.yz, r4.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r20.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
          mad r20.xyz, r4.xxxx, r20.xyzx, r9.yyyy
          dp3 r9.y, r20.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r9.y, r9.y, l(50.000000)
          add r10.w, -r10.w, l(1.000000)
          mul r18.w, r10.w, r10.w
          mul r18.w, r18.w, r18.w
          add r21.xyz, -r20.xyzx, r9.yyyy
          mul r22.xyz, r18.wwww, r21.xyzx
          mad r22.xyz, r22.xyzx, r10.wwww, r20.xyzx
          mul r9.y, r4.y, r4.y
          mul r10.w, r7.w, r7.w
          mul r11.y, r11.y, r11.y
          div r11.y, r11.y, r9.y
          mad r9.x, r9.x, r9.x, r11.y
          mad r7.w, r7.w, r7.w, r9.x
          mul r7.w, r7.w, r7.w
          mul r7.w, r9.z, r7.w
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          mul r9.x, r0.w, r0.w
          mad r11.y, -r0.w, r0.w, l(1.000000)
          mul r18.w, r9.y, r11.y
          max r9.x, r9.x, l(1.000000047E-034)
          div r18.w, r18.w, r9.x
          add r18.w, r18.w, l(1.000000)
          sqrt r18.w, r18.w
          add r18.w, r18.w, l(1.000000)
          div r18.w, l(2.000000), r18.w
          mul r19.w, r7.y, r7.y
          mad r7.y, -r7.y, r7.y, l(1.000000)
          mul r20.w, r7.y, r9.y
          max r19.w, r19.w, l(1.000000047E-034)
          div r20.w, r20.w, r19.w
          add r20.w, r20.w, l(1.000000)
          sqrt r20.w, r20.w
          add r20.w, r20.w, l(1.000000)
          div r20.w, l(2.000000), r20.w
          mul r18.w, r18.w, r20.w
          mul r7.w, r7.w, r18.w
          mul_sat r22.xyz, r22.xyzx, r7.wwww
          mul r22.xyz, r13.wwww, r22.xyzx
          mul r23.xyz, r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r14.yzw, -r14.yyzw, r8.wwww, -r13.xxyz
          dp3 r7.w, r14.yzwy, r14.yzwy
          rsq r7.w, r7.w
          mul r14.yzw, r7.wwww, r14.yyzw
          dp3_sat r7.w, r5.yzwy, -r18.xyzx
          dp3_sat r8.w, r5.yzwy, -r13.xyzx
          dp3_sat r13.x, r5.yzwy, r14.yzwy
          dp3_sat r13.y, r14.yzwy, -r18.xyzx
          dp3 r13.z, r14.yzwy, r12.xzwx
          dp3 r13.w, r14.yzwy, r19.xyzx
          add r13.y, -r13.y, l(1.000000)
          mul r14.y, r13.y, r13.y
          mul r14.y, r14.y, r14.y
          mul r14.yzw, r14.yyyy, r21.xxyz
          mad r14.yzw, r14.yyzw, r13.yyyy, r20.xxyz
          mul r13.y, r13.z, r13.z
          div r13.y, r13.y, r9.y
          mad r13.y, r13.w, r13.w, r13.y
          mad r13.x, r13.x, r13.x, r13.y
          mul r13.x, r13.x, r13.x
          mul r9.z, r9.z, r13.x
          div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r9.z
          mul r13.x, r7.w, r7.w
          mad r7.w, -r7.w, r7.w, l(1.000000)
          mul r7.w, r7.w, r9.y
          max r13.x, r13.x, l(1.000000047E-034)
          div r7.w, r7.w, r13.x
          add r7.w, r7.w, l(1.000000)
          sqrt r7.w, r7.w
          add r7.w, r7.w, l(1.000000)
          div r7.w, l(2.000000), r7.w
          mul r13.x, r8.w, r8.w
          mad r8.w, -r8.w, r8.w, l(1.000000)
          mul r8.w, r8.w, r9.y
          max r13.x, r13.x, l(1.000000047E-034)
          div r8.w, r8.w, r13.x
          add r8.w, r8.w, l(1.000000)
          sqrt r8.w, r8.w
          add r8.w, r8.w, l(1.000000)
          div r8.w, l(2.000000), r8.w
          mul r7.w, r7.w, r8.w
          mul r7.w, r7.w, r9.z
          mul_sat r13.xyz, r14.yzwy, r7.wwww
          sqrt r14.yzw, r11.xxzw
          mad r13.xyz, -r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r13.xyzx
          mad r13.xyz, r14.yzwy, r13.xyzx, r23.xyzx
          dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r7.w, r4.y, r4.y, l(-1.000000)
          mad r7.w, r10.w, r7.w, l(1.000000)
          mul r7.w, r7.w, r7.w
          mul r7.w, r7.w, l(3.14159274)
          div r7.w, r9.y, r7.w
          mad r8.w, r4.y, l(0.500000), l(0.500000)
          mul r8.w, r8.w, r8.w
          mul r9.y, r11.y, r8.w
          div r9.x, r9.y, r9.x
          add r9.x, r9.x, l(1.000000)
          sqrt r9.x, r9.x
          add r9.x, r9.x, l(1.000000)
          div r9.x, l(2.000000), r9.x
          mul r7.y, r7.y, r8.w
          div r7.y, r7.y, r19.w
          add r7.y, r7.y, l(1.000000)
          sqrt r7.y, r7.y
          add r7.y, r7.y, l(1.000000)
          div r7.y, l(2.000000), r7.y
          mul r7.y, r7.y, r9.x
          add r8.w, -r9.w, l(1.000000)
          mul r9.x, r8.w, r8.w
          mul r9.x, r9.x, r9.x
          mul r9.xyz, r9.xxxx, r21.xyzx
          mad r9.xyz, r9.xyzx, r8.wwww, r20.xyzx
          mul r7.y, r7.y, r7.w
          mul r9.xyz, r9.xyzx, r7.yyyy
          dp3 r9.w, r9.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r15.xyzw, r0.zzzz, r13.xyzw, r9.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mov r16.xyzw, l(0,0,0,0)
    else 
      ieq r0.z, r5.x, l(3)
      if_nz r0.z
        mov r16.xyzw, l(0,0,0,0)
      else 
        if_nz r6.y
          mov r16.xyzw, l(0,0,0,0)
        else 
          dp3 r0.z, r12.xzwx, cb2[2].xyzx
          mad r0.z, -r0.z, r0.z, l(1.000000)
          sqrt r0.z, r0.z
          mul r7.y, r12.y, l(-1.500000)
          dp3 r7.w, r8.xyzx, cb2[2].xyzx
          mad r8.w, -r12.y, l(-1.500000), r7.w
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), -r7.y
          mul_sat r7.y, r7.y, r8.w
          mad r8.w, r7.y, l(-2.000000), l(3.000000)
          mul r7.y, r7.y, r7.y
          mul r7.y, r7.y, r8.w
          mul r9.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r9.w, l(0.0572957806)
          add r8.w, -r4.x, l(1.000000)
          mul r9.xyzw, r8.wwww, r9.xyzw
          mul r9.xyzw, r7.yyyy, r9.xyzw
          mul r9.xyzw, r0.zzzz, r9.xyzw
          mul r9.xyzw, r12.yyyy, r9.xyzw
          mul r9.xyzw, r9.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r13.xy, r5.xxxx, l(5, 8, 0, 0)
          max r0.z, |r7.w|, l(0.000001)
          rcp r0.z, r0.z
          mul r0.z, r0.z, r7.w
          dp3 r7.y, r8.xyzx, r10.xyzx
          max r7.w, |r7.y|, l(0.000001)
          rcp r7.w, r7.w
          mul r7.y, r7.w, r7.y
          eq r0.z, r0.z, r7.y
          movc r18.w, r0.z, l(0), l(1.000000)
          mul r8.xyz, r8.wwww, r12.xzwx
          mul r18.xyz, r18.wwww, r8.xyzx
          mul r8.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r18.xyz, r11.xzwx, r12.xxxx
          mov r18.w, r12.x
          mul r18.xyzw, r18.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r8.xyzw, r13.yyyy, r8.xyzw, r18.xyzw
          movc r16.xyzw, r13.xxxx, r9.xyzw, r8.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r0.z, r6.y, l(1.000000), r6.w
  dp3 r6.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r7.y, r0.x, r12.x
  add r6.w, -r0.z, r6.w
  mad r6.w, r7.y, r6.w, r0.z
  movc r0.z, r5.x, r0.z, r6.w
  mul r8.xyzw, r0.wwww, r15.xyzw
  mad r8.xyzw, r17.xyzw, r0.zzzz, r8.xyzw
  add r8.xyzw, r16.xyzw, r8.xyzw
  mul r8.xyzw, r0.xxxx, r8.xyzw
  mov r3.xyz, cb2[0].xyzx
  mul r3.xyzw, r3.xyzw, r8.xyzw
else 
  mov r3.xyzw, l(0,0,0,0)
endif 
dp3 r1.w, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r6.y
  mul r1.xyz, r1.xyzx, r11.xzwx
  mul r8.xyzw, r1.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r6.x
    mov_sat r0.xz, r12.xxyx
    mov_sat r0.w, r4.x
    log r9.xyz, r11.xzwx
    mul r13.xyz, r0.zzzz, r9.xyzx
    mul r13.xyz, r13.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r9.xyz, r9.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r13.xyzx
    eq r0.z, r0.x, l(0.000000)
    add r0.w, -r0.w, l(1.000000)
    mul r13.xyz, r0.wwww, r11.xzwx
    mul r13.xyz, r13.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r9.xyz, -r0.xxxx, r9.xyzx
    exp r9.xyz, r9.xyzx
    mul r9.xyz, r13.xyzx, r9.xyzx
    mul r9.xyz, r9.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r9.xyz, r0.zzzz, r13.xyzx, r9.xyzx
    mov r9.w, l(0.180000)
  else 
    if_nz r6.z
      mul r13.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r13.w, l(0.0572957806)
      add r0.x, -r4.x, l(1.000000)
      mul r9.xyzw, r0.xxxx, r13.xyzw
    else 
      ieq r0.x, r5.x, l(3)
      if_nz r0.x
        dp3 r0.x, r10.xyzx, r10.xyzx
        min r0.x, r0.x, l(1.000000)
        mul r0.z, r4.z, l(0.080000)
        add r0.x, -r0.x, l(1.000000)
        mul r0.w, r0.x, r0.x
        mul r0.w, r0.w, r0.w
        mad r6.y, -r4.z, l(0.080000), l(1.000000)
        mul r0.w, r0.w, r6.y
        mad r0.x, r0.w, r0.x, r0.z
        add_sat r0.z, r4.y, r4.y
        mad r13.w, r0.z, -r0.x, l(1.000000)
        mul r13.xyz, r11.xzwx, r13.wwww
        mul r9.xyzw, r13.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r13.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r13.w, l(0.0572957806)
        add r15.w, -r4.x, l(1.000000)
        mul r13.xyzw, r13.xyzw, r15.wwww
        mov r15.xyz, r13.xyzx
        mul r16.xyzw, r15.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r0.x, -r12.y, l(1.000000)
        mul r17.xyzw, r12.yyyy, r13.xyzw
        mul r17.xyzw, r17.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r16.xyzw, r16.xyzw, r0.xxxx, r17.xyzw
        ieq r0.xz, r5.xxxx, l(5, 0, 8, 0)
        dp3 r0.w, r5.yzwy, r10.xyzx
        max r6.y, |r0.w|, l(0.000001)
        rcp r6.y, r6.y
        mul r0.w, r0.w, r6.y
        eq r0.w, r0.w, l(0.000000)
        movc r17.w, r0.w, l(0), l(1.000000)
        mul r6.yzw, r12.xxzw, r15.wwww
        mul r17.xyz, r17.wwww, r6.yzwy
        mad r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r13.xyzw
        mul r17.xyz, r11.xzwx, r12.xxxx
        mov r17.w, r12.x
        mad r13.xyzw, r17.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r13.xyzw
        movc r13.xyzw, r0.zzzz, r15.xyzw, r13.xyzw
        movc r9.xyzw, r0.xxxx, r16.xyzw, r13.xyzw
      endif 
    endif 
  endif 
  mul r8.xyzw, r1.xyzw, r9.xyzw
endif 
add r0.x, r3.w, r8.w
add r1.xyz, r3.xyzx, r8.xyzx
if_nz r6.x
  mov_sat r12.xyzw, r12.xyzw
  mov_sat r4.xyz, r4.xyzx
  mul r0.z, r4.y, r4.y
  max r3.y, r0.z, l(0.001000)
  mul r0.z, r12.z, r12.z
  max r0.z, r0.z, l(0.001000)
  dp3 r0.w, -r10.xyzx, r5.yzwy
  add r0.w, r0.w, r0.w
  mad r6.xyz, r5.yzwy, -r0.wwww, -r10.xyzx
  dp3 r0.w, r5.yzwy, r6.xyzx
  mad r0.w, -|r0.w|, |r0.w|, l(1.000000)
  mad r0.w, -r0.w, l(0.444702327), l(1.000000)
  add r1.w, r12.x, r12.x
  sqrt r0.w, r0.w
  div r0.w, r1.w, r0.w
  log r8.xyz, r11.xzwx
  mul r9.xyz, r12.yyyy, r8.xyzx
  mul r9.xyz, r9.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r8.xyz, r8.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r9.xyzx
  eq r1.w, r12.x, l(0.000000)
  mul r3.w, r3.y, r3.y
  div r3.w, l(2.000000), r3.w
  add r3.w, r3.w, l(-2.000000)
  max r3.w, r3.w, l(1.000000031E-022)
  sqrt r3.w, r3.w
  div r3.w, l(-10.000000), r3.w
  exp r3.w, r3.w
  add r3.w, r3.w, l(-0.000980)
  mul_sat r3.w, r3.w, l(1.00795019)
  add r3.w, -r3.w, l(1.000000)
  mul r6.w, r3.w, cb1[183].w
  mul r7.y, r3.w, cb1[174].w
  if_z r7.z
    ge r7.w, l(0.250000), r3.y
    if_nz r7.w
      ge r7.w, r5.w, l(0.250000)
      if_nz r7.w
        mov r2.w, l(1.000000)
        dp4 r9.x, r2.xyzw, cb1[51].xyzw
        dp4 r9.y, r2.xyzw, cb1[52].xyzw
        dp4 r9.z, r2.xyzw, cb1[53].xyzw
        dp3 r13.x, r5.yzwy, cb1[51].xyzx
        dp3 r13.y, r5.yzwy, cb1[52].xyzx
        dp3 r13.z, r5.yzwy, cb1[53].xyzx
        dp3 r14.y, r6.xyzx, cb1[51].xyzx
        dp3 r14.z, r6.xyzx, cb1[52].xyzx
        dp3 r14.w, r6.xyzx, cb1[53].xyzx
        dp3 r7.w, r14.yzwy, r14.yzwy
        rsq r7.w, r7.w
        mul r15.yzw, r7.wwww, r14.yyzw
        dp2 r7.w, v0.xxxx, cb1[66].zzzz
        add r7.w, r7.w, l(-1.000000)
        log r7.w, |r7.w|
        mul r7.w, r7.w, l(10.000000)
        exp r7.w, r7.w
        mad r7.w, r7.w, l(0.100000), l(1.000000)
        div r15.x, r15.y, r7.w
        mul r7.w, r9.z, l(-0.010000)
        max r7.w, r7.w, l(0.001000)
        mad r13.xyz, r13.xyzx, r7.wwww, r9.xyzx
        mad r15.xyz, r15.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r13.xyzx
        mov r13.w, l(1.000000)
        dp4 r9.y, r13.xyzw, cb4[4].xyzw
        dp4 r9.x, r13.xyzw, cb4[5].xyzw
        dp4 r7.w, r13.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r9.y, r24.w, l(0.5), r9.y

        mov r15.w, l(1.000000)
        dp4 r13.x, r15.xyzw, cb4[4].xyzw
        dp4 r13.y, r15.xyzw, cb4[5].xyzw
        dp4 r8.w, r15.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r8.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r13.x, r24.w, l(0.5), r13.x

        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        mul r14.yz, r7.wwww, r9.xxyx
        mul r15.xy, r8.wwww, r13.xyxx
        mul r9.w, r7.w, r13.z
        mul r10.w, r8.w, r15.z
        add r15.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r16.xy, r15.zwzz, r15.yxyy
        lt r16.zw, r15.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r16.zw, r16.zzzw, r16.xxxy
        movc r15.zw, r16.xxxy, -r15.zzzw, l(0,0,-0.500000,-0.500000)
        mad r15.zw, r13.yyyx, r8.wwww, r15.zzzw
        mad r13.xy, r13.yxyy, r8.wwww, -r14.yzyy
        div r13.xy, r15.zwzz, r13.xyxx
        and r11.y, r13.x, r16.z
        max r12.y, r13.y, r11.y
        movc r11.y, r16.w, r12.y, r11.y
        mad r13.xy, r9.yxyy, r7.wwww, -r15.xyxx
        mad r13.xy, r11.yyyy, r13.xyxx, r15.xyxx
        add r12.y, r7.w, -r8.w
        mad r8.w, r11.y, r12.y, r8.w
        mad r12.y, r13.z, r7.w, -r10.w
        mad r10.w, r11.y, r12.y, r10.w
        mad r15.xy, r9.yxyy, r7.wwww, -r13.xyxx
        dp2 r11.y, r15.xyxx, r15.xyxx
        lt r11.y, r11.y, l(0.000100)
        mad r15.xy, r9.yxyy, r7.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r15.xy, r11.yyyy, r15.xyxx, r13.xyxx
        mad r15.zw, -r9.yyyx, r7.wwww, r15.xxxy
        lt r9.x, |r15.z|, |r15.w|
        movc r13.xy, r9.xxxx, r14.yzyy, r14.zyzz
        movc r14.yzw, r9.xxxx, r15.yywz, r15.xxzw
        lt r9.y, l(0.000000), r14.z
        lt r11.y, r14.z, l(0.000000)
        iadd r9.y, -r9.y, r11.y
        itof r15.x, r9.y
        div r9.y, r15.x, r14.z
        mul r15.y, r14.w, r9.y
        mad r10.w, -r13.z, r7.w, r10.w
        mul r10.w, r9.y, r10.w
        add r8.w, -r7.w, r8.w
        mul r8.w, r9.y, r8.w
        mul r9.y, r14.y, r15.x
        ge r11.y, r13.z, l(99999.796875)
        ge r12.y, l(100000.000000), r13.z
        and r11.y, r11.y, r12.y
        mov r16.y, l(1.000000)
        mov r17.x, r9.w
        mov r17.y, r7.w
        mov r14.yz, l(0,-1.000000,-1.000000,0)
        mov r18.xy, r13.xyxx
        mov r12.y, l(0)
        mov r13.w, r11.y
        mov r19.y, r13.z
        mov r14.w, r11.y
        loop 
          mul r15.z, r15.x, r18.x
          ge r15.z, r9.y, r15.z
          ilt r15.w, r12.y, l(200)
          and r15.z, r15.w, r15.z
          not r15.w, r14.w
          and r15.z, r15.w, r15.z
          breakc_z r15.z
          mad r17.xz, r10.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r17.xxxx
          mad r17.yw, r8.wwww, l(0.000000, 5.000000, 0.000000, 2.500000), r17.yyyy
          div r19.x, r17.z, r17.w
          lt r15.z, r19.x, r19.y
          movc r15.zw, r15.zzzz, r19.xxxy, r19.yyyx
          movc r14.yz, r9.xxxx, r18.yyxy, r18.xxyx
          mul r16.zw, r14.yyyz, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t8.xyzw, s1, l(0.000000)
          dp2 r16.z, r16.xyxx, cb1[11].zwzz
          dp2 r16.x, r16.xyxx, cb1[12].zwzz
          div r16.x, -r16.z, r16.x
          ge r15.z, -r16.x, r15.z
          add r16.x, -r16.x, l(-0.200000)
          ge r15.w, r15.w, r16.x
          and r14.w, r15.w, r15.z
          mad r18.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r18.xyxx
          iadd r12.y, r12.y, l(1)
          mov r13.w, r14.w
          mov r19.y, r19.x
        endloop 
        if_nz r13.w
          if_z cb4[8].z
            ftoi r9.xy, r14.yzyy
            imax r9.xy, r9.xyxx, l(0, 0, 0, 0)
            ftoi r13.xy, cb1[66].xyxx
            iadd r13.xy, r13.xyxx, l(-1, -1, 0, 0)
            imin r13.xy, r9.xyxx, r13.xyxx
            mov r13.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r9.xy, r13.xyzw, t7.xywz
            ne r13.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r7.w, r13.w, r13.z
            if_z r7.w
              itof r13.xy, r13.xyxx
              mul r13.zw, r13.xxxy, cb4[8].xxxx
              ftoi r15.xy, r13.zwzz
              mov r15.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r13.z, r15.xyzw, t8.zwxy
              mov r13.w, l(1.000000)
              dp2 r7.w, r13.zwzz, cb1[11].zwzz
              dp2 r8.w, r13.zwzz, cb1[12].zwzz
              div r7.w, -r7.w, r8.w
              mad r13.xy, r13.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r13.xy, r13.xyxx, cb1[0].xyxx
              mul r13.xy, r13.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r7.w, r7.w, cb1[67].x
              mov r13.z, -cb1[67].x
              mul r13.xyz, r7.wwww, r13.xyzx
              mov r13.w, l(1.000000)
              dp4 r15.x, r13.xyzw, cb1[24].xyzw
              dp4 r15.y, r13.xyzw, cb1[25].xyzw
              dp4 r7.w, r13.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r7.w, -r24.y
mad r15.x, r24.w, r24.x, r15.x

              dp4 r16.x, r13.xyzw, cb4[0].xyzw
              dp4 r16.y, r13.xyzw, cb4[1].xyzw
              dp4 r8.w, r13.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r8.w, -r24.y
mad r16.x, r24.w, r24.x, r16.x

              max r8.w, r8.w, l(0.000100)
              div r13.xy, r16.xyxx, r8.wwww
              div r13.zw, r15.xxxy, r7.wwww
              add r13.xy, -r13.xyxx, r13.zwzz
              mul r9.xw, r13.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
              mov r9.y, -r9.w
            endif 
          else 
            mov r9.xy, l(0,0,0,0)
          endif 
          mad r9.xy, r14.yzyy, cb1[66].zwzz, -r9.xyxx
          mul r13.xy, r9.xyxx, cb1[66].xyxx
          mul r13.xy, r13.xyxx, cb4[8].xxxx
          ftoi r13.xy, r13.xyxx
          mov r13.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r13.x, r13.xyzw, t8.xyzw
          mov r13.y, l(1.000000)
          dp2 r7.w, r13.xyxx, cb1[11].zwzz
          dp2 r8.w, r13.xyxx, cb1[12].zwzz
          div r7.w, -r7.w, r8.w
          ge r7.w, r9.z, -r7.w
          not r8.w, r7.w
          add r13.xy, -r14.yzyy, v0.xyxx
          dp2 r9.z, r13.xyxx, r13.xyxx
          sqrt r9.z, r9.z
          ge r10.w, r9.z, l(700.000000)
          add r9.z, r9.z, l(-700.000000)
          mad r9.z, -r9.z, l(0.00333333341), l(1.000000)
          movc r9.z, r10.w, r9.z, l(1.000000)
          add r9.w, -r9.y, l(1.000000)
          mul_sat r13.xy, r9.ywyy, l(10.000000, 10.000000, 0.000000, 0.000000)
          mul r9.w, r13.y, r13.x
          mul r9.z, r9.w, r9.z
          lt r9.w, l(0.137000), r3.y
          mad r10.w, -r3.y, l(4.000000), l(1.000000)
          max r10.w, r10.w, l(0.000000)
          mul r10.w, r9.z, r10.w
          movc r9.z, r9.w, r10.w, r9.z
          movc r7.w, r7.w, r9.z, l(1.000000)
        else 
          mov r9.xy, l(0,0,0,0)
          mov r7.w, l(0)
          mov r8.w, l(0)
        endif 
        if_z r8.w
          lt r8.w, l(0.000000), r7.w
          if_nz r8.w
            mul r3.w, r3.w, cb4[8].y
            sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t9.xyzw, s2, r3.w
          else 
            mov r9.xyz, l(0,0,0,0)
          endif 
        else 
          mov r9.xyz, l(0,0,0,0)
          mov r7.w, l(0)
        endif 
      else 
        mov r9.xyz, l(0,0,0,0)
        mov r7.w, l(0)
      endif 
    else 
      mov r9.xyz, l(0,0,0,0)
      mov r7.w, l(0)
    endif 
  else 
    mov r9.xyz, l(0,0,0,0)
    mov r7.w, l(0)
  endif 
  lt r3.w, l(0.000000), r7.w
  if_nz r3.w
    div r9.xyz, r9.xyzx, cb1[176].wwww
    lt r3.w, r7.w, l(1.000000)
    if_nz r3.w
      if_z cb1[184].z
        mov r2.w, l(1.000000)
        mov r13.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
        mov r8.w, l(0)
        loop 
          uge r10.w, r8.w, l(15)
          breakc_nz r10.w
          imul null, r10.w, r8.w, l(7)
          dp4 r15.x, r2.xyzw, cb1[r10.w + 68].xyzw
          dp4 r15.y, r2.xyzw, cb1[r10.w + 69].xyzw
          dp4 r15.z, r2.xyzw, cb1[r10.w + 70].xyzw
          ge r14.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r14.yzw, r14.yyzw, cb1[r10.w + 72].xxyz, cb1[r10.w + 73].xxyz
          add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r14.yzw, r14.yyzw, r15.xxyz
          mul r11.y, r14.z, r14.y
          mul r11.y, r14.w, r11.y
          lt r12.y, l(0.000000), r11.y
          if_nz r12.y
            dp3 r15.x, r6.xyzx, cb1[r10.w + 68].xyzx
            dp3 r15.y, r6.xyzx, cb1[r10.w + 69].xyzx
            dp3 r15.z, r6.xyzx, cb1[r10.w + 70].xyzx
            mul r11.y, r11.y, cb1[r10.w + 73].w
            mov r15.w, cb1[r10.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r7.y
            mul r15.xyzw, r15.xyzw, cb1[r10.w + 74].xxxy
            min r10.w, r3.w, r11.y
            mad r15.xyzw, r15.xyzw, r10.wwww, r13.xyzw
            add r10.w, r3.w, -r10.w
            ge r11.y, l(0.000000), r10.w
            if_nz r11.y
              mov r13.xyzw, r15.xyzw
              mov r3.w, r10.w
              break 
            endif 
            mov r13.xyzw, r15.xyzw
            mov r3.w, r10.w
          endif 
          iadd r8.w, r8.w, l(1)
        endloop 
      else 
        mov r13.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
      endif 
      add r8.w, r3.w, r13.w
      mul r8.w, r0.y, r8.w
      lt r10.w, l(0.000000), r8.w
      if_nz r10.w
        add r10.w, -|r6.z|, r6.z
        mad r3.w, r3.w, r10.w, |r6.z|
        mad r3.w, r3.w, l(2.000000), l(2.000000)
        div r14.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r3.wwww
        mul r14.yz, r6.yyxy, r14.yyzy
        mad r14.yz, r14.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t3.wxyz, s2, r6.w
        mov_sat r15.xyz, r14.yzwy
        movc r14.yzw, cb1[184].zzzz, r15.xxyz, r14.yyzw
        div r14.yzw, r14.yyzw, cb1[176].wwww
        mad r13.xyz, r14.yzwy, r8.wwww, r13.xyzx
      endif 
      mov_sat r7.w, r7.w
      add r14.yzw, r9.xxyz, -r13.xxyz
      mad r9.xyz, r7.wwww, r14.yzwy, r13.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r2.w, l(1.000000)
      mov r9.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
      mov r7.w, l(0)
      loop 
        uge r8.w, r7.w, l(15)
        breakc_nz r8.w
        imul null, r8.w, r7.w, l(7)
        dp4 r13.x, r2.xyzw, cb1[r8.w + 68].xyzw
        dp4 r13.y, r2.xyzw, cb1[r8.w + 69].xyzw
        dp4 r13.z, r2.xyzw, cb1[r8.w + 70].xyzw
        ge r14.yzw, r13.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r14.yzw, r14.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
        add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.xyz, r14.yzwy, r13.xyzx
        mul r10.w, r13.y, r13.x
        mul r10.w, r13.z, r10.w
        lt r11.y, l(0.000000), r10.w
        if_nz r11.y
          dp3 r13.x, r6.xyzx, cb1[r8.w + 68].xyzx
          dp3 r13.y, r6.xyzx, cb1[r8.w + 69].xyzx
          dp3 r13.z, r6.xyzx, cb1[r8.w + 70].xyzx
          mul r10.w, r10.w, cb1[r8.w + 73].w
          mov r13.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t4.xyzw, s3, r7.y
          mul r13.xyzw, r13.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r3.w, r10.w
          mad r13.xyzw, r13.xyzw, r8.wwww, r9.xyzw
          add r8.w, r3.w, -r8.w
          ge r10.w, l(0.000000), r8.w
          if_nz r10.w
            mov r9.xyzw, r13.xyzw
            mov r3.w, r8.w
            break 
          endif 
          mov r9.xyzw, r13.xyzw
          mov r3.w, r8.w
        endif 
        iadd r7.w, r7.w, l(1)
      endloop 
    else 
      mov r9.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
    endif 
    add r7.y, r3.w, r9.w
    mul r7.y, r0.y, r7.y
    lt r7.w, l(0.000000), r7.y
    if_nz r7.w
      add r7.w, -|r6.z|, r6.z
      mad r3.w, r3.w, r7.w, |r6.z|
      mad r3.w, r3.w, l(2.000000), l(2.000000)
      div r13.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r3.wwww
      mul r13.xy, r6.yxyy, r13.xyxx
      mad r13.xy, r13.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t3.xyzw, s2, r6.w
      mov_sat r14.yzw, r13.xxyz
      movc r13.xyz, cb1[184].zzzz, r14.yzwy, r13.xyzx
      div r13.xyz, r13.xyzx, cb1[176].wwww
      mad r9.xyz, r13.xyzx, r7.yyyy, r9.xyzx
    endif 
  endif 
  mul r3.w, r4.z, l(0.080000)
  dp3 r6.w, r3.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r6.w, r6.w, l(50.000000)
  min r6.w, r6.w, l(1.000000)
  dp3_sat r3.x, r5.yzwy, r10.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r7.yw, r3.xyxx, t1.zxwy, s2, l(0.000000)
  mad r3.w, r3.w, r7.y, r7.w
  mul r3.w, r6.w, r3.w
  mul r9.xyz, r3.wwww, r9.xyzx
  mul r9.xyz, r7.xxxx, r9.xyzx
  add r0.z, r0.z, r3.y
  min r3.z, r0.z, l(1.000000)
  mul r0.z, r3.z, r3.z
  div r0.z, l(2.000000), r0.z
  add r0.z, r0.z, l(-2.000000)
  max r0.z, r0.z, l(1.000000031E-022)
  sqrt r0.z, r0.z
  div r0.z, l(-10.000000), r0.z
  exp r0.z, r0.z
  add r0.z, r0.z, l(-0.000980)
  mul r0.z, r0.z, l(1.00795019)
  max r0.z, r0.z, l(0.000000)
  add r0.z, -r0.z, l(1.000000)
  mul r3.y, r0.z, cb1[183].w
  mul r3.w, r0.z, cb1[174].w
  if_z r7.z
    ge r6.w, l(0.250000), r3.z
    if_nz r6.w
      ge r6.w, r5.w, l(0.250000)
      if_nz r6.w
        mov r2.w, l(1.000000)
        dp4 r13.x, r2.xyzw, cb1[51].xyzw
        dp4 r13.y, r2.xyzw, cb1[52].xyzw
        dp4 r13.z, r2.xyzw, cb1[53].xyzw
        dp3 r15.x, r5.yzwy, cb1[51].xyzx
        dp3 r15.y, r5.yzwy, cb1[52].xyzx
        dp3 r15.z, r5.yzwy, cb1[53].xyzx
        dp3 r14.y, r6.xyzx, cb1[51].xyzx
        dp3 r14.z, r6.xyzx, cb1[52].xyzx
        dp3 r14.w, r6.xyzx, cb1[53].xyzx
        dp3 r6.w, r14.yzwy, r14.yzwy
        rsq r6.w, r6.w
        mul r16.yzw, r6.wwww, r14.yyzw
        dp2 r6.w, v0.xxxx, cb1[66].zzzz
        add r6.w, r6.w, l(-1.000000)
        log r6.w, |r6.w|
        mul r6.w, r6.w, l(10.000000)
        exp r6.w, r6.w
        mad r6.w, r6.w, l(0.100000), l(1.000000)
        div r16.x, r16.y, r6.w
        mul r6.w, r13.z, l(-0.010000)
        max r6.w, r6.w, l(0.001000)
        mad r15.xyz, r15.xyzx, r6.wwww, r13.xyzx
        mad r16.xyz, r16.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r15.xyzx
        mov r15.w, l(1.000000)
        dp4 r13.y, r15.xyzw, cb4[4].xyzw
        dp4 r13.x, r15.xyzw, cb4[5].xyzw
        dp4 r6.w, r15.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r6.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r13.y, r24.w, l(0.5), r13.y

        mov r16.w, l(1.000000)
        dp4 r15.x, r16.xyzw, cb4[4].xyzw
        dp4 r15.y, r16.xyzw, cb4[5].xyzw
        dp4 r7.y, r16.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r15.x, r24.w, l(0.5), r15.x

        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
        mul r14.yz, r6.wwww, r13.xxyx
        mul r16.xy, r7.yyyy, r15.xyxx
        mul r7.w, r6.w, r15.z
        mul r8.w, r7.y, r16.z
        add r16.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r17.xy, r16.zwzz, r16.yxyy
        lt r17.zw, r16.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r17.zw, r17.zzzw, r17.xxxy
        movc r16.zw, r17.xxxy, -r16.zzzw, l(0,0,-0.500000,-0.500000)
        mad r16.zw, r15.yyyx, r7.yyyy, r16.zzzw
        mad r15.xy, r15.yxyy, r7.yyyy, -r14.yzyy
        div r15.xy, r16.zwzz, r15.xyxx
        and r9.w, r15.x, r17.z
        max r10.w, r15.y, r9.w
        movc r9.w, r17.w, r10.w, r9.w
        mad r15.xy, r13.yxyy, r6.wwww, -r16.xyxx
        mad r15.xy, r9.wwww, r15.xyxx, r16.xyxx
        add r10.w, r6.w, -r7.y
        mad r7.y, r9.w, r10.w, r7.y
        mad r10.w, r15.z, r6.w, -r8.w
        mad r8.w, r9.w, r10.w, r8.w
        mad r16.xy, r13.yxyy, r6.wwww, -r15.xyxx
        dp2 r9.w, r16.xyxx, r16.xyxx
        lt r9.w, r9.w, l(0.000100)
        mad r16.xy, r13.yxyy, r6.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r16.xy, r9.wwww, r16.xyxx, r15.xyxx
        mad r16.zw, -r13.yyyx, r6.wwww, r16.xxxy
        lt r9.w, |r16.z|, |r16.w|
        movc r13.xy, r9.wwww, r14.yzyy, r14.zyzz
        movc r14.yzw, r9.wwww, r16.yywz, r16.xxzw
        lt r10.w, l(0.000000), r14.z
        lt r11.y, r14.z, l(0.000000)
        iadd r10.w, -r10.w, r11.y
        itof r15.x, r10.w
        div r10.w, r15.x, r14.z
        mul r15.y, r14.w, r10.w
        mad r8.w, -r15.z, r6.w, r8.w
        mul r8.w, r10.w, r8.w
        add r7.y, -r6.w, r7.y
        mul r7.y, r10.w, r7.y
        mul r10.w, r14.y, r15.x
        ge r11.y, r15.z, l(99999.796875)
        ge r12.y, l(100000.000000), r15.z
        and r11.y, r11.y, r12.y
        mov r16.y, l(1.000000)
        mov r17.x, r7.w
        mov r17.y, r6.w
        mov r14.yz, l(0,-1.000000,-1.000000,0)
        mov r18.xy, r13.xyxx
        mov r12.y, l(0)
        mov r13.w, r11.y
        mov r19.y, r15.z
        mov r14.w, r11.y
        loop 
          mul r15.w, r15.x, r18.x
          ge r15.w, r10.w, r15.w
          ilt r16.z, r12.y, l(200)
          and r15.w, r15.w, r16.z
          not r16.z, r14.w
          and r15.w, r15.w, r16.z
          breakc_z r15.w
          mad r17.xz, r8.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r17.xxxx
          mad r17.yw, r7.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r17.yyyy
          div r19.x, r17.z, r17.w
          lt r15.w, r19.x, r19.y
          movc r16.zw, r15.wwww, r19.xxxy, r19.yyyx
          movc r14.yz, r9.wwww, r18.yyxy, r18.xxyx
          mul r17.zw, r14.yyyz, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r16.x, r17.zwzz, t8.xyzw, s1, l(0.000000)
          dp2 r15.w, r16.xyxx, cb1[11].zwzz
          dp2 r16.x, r16.xyxx, cb1[12].zwzz
          div r15.w, -r15.w, r16.x
          ge r16.x, -r15.w, r16.z
          add r15.w, -r15.w, l(-0.200000)
          ge r15.w, r16.w, r15.w
          and r14.w, r15.w, r16.x
          mad r18.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r18.xyxx
          iadd r12.y, r12.y, l(1)
          mov r13.w, r14.w
          mov r19.y, r19.x
        endloop 
        if_nz r13.w
          if_z cb4[8].z
            ftoi r7.yw, r14.yyyz
            imax r7.yw, r7.yyyw, l(0, 0, 0, 0)
            ftoi r13.xy, cb1[66].xyxx
            iadd r13.xy, r13.xyxx, l(-1, -1, 0, 0)
            imin r15.xy, r7.ywyy, r13.xyxx
            mov r15.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r13.xy, r15.xyzw, t7.xywz
            ne r7.yw, r13.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r6.w, r7.w, r7.y
            if_z r6.w
              itof r7.yw, r15.xxxy
              mul r15.xy, r7.ywyy, cb4[8].xxxx
              ftoi r15.xy, r15.xyxx
              mov r15.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r15.x, r15.xyzw, t8.xyzw
              mov r15.yw, l(0,1.000000,0,1.000000)
              dp2 r6.w, r15.xyxx, cb1[11].zwzz
              dp2 r8.w, r15.xyxx, cb1[12].zwzz
              div r6.w, -r6.w, r8.w
              mad r7.yw, r7.yyyw, cb1[66].zzzw, l(0.000000, -0.500000, 0.000000, -0.500000)
              mul r7.yw, r7.yyyw, cb1[0].xxxy
              mul r15.xy, r7.ywyy, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r6.w, r6.w, cb1[67].x
              mov r15.z, -cb1[67].x
              mul r15.xyz, r6.wwww, r15.xyzx
              dp4 r16.x, r15.xyzw, cb1[24].xyzw
              dp4 r16.y, r15.xyzw, cb1[25].xyzw
              dp4 r6.w, r15.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r6.w, -r24.y
mad r16.x, r24.w, r24.x, r16.x

              dp4 r17.x, r15.xyzw, cb4[0].xyzw
              dp4 r17.y, r15.xyzw, cb4[1].xyzw
              dp4 r7.y, r15.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r7.y, -r24.y
mad r17.x, r24.w, r24.x, r17.x

              max r7.y, r7.y, l(0.000100)
              div r7.yw, r17.xxxy, r7.yyyy
              div r15.xy, r16.xyxx, r6.wwww
              add r7.yw, -r7.yyyw, r15.xxxy
              mul r13.xw, r7.yyyw, l(0.500000, 0.000000, 0.000000, 0.500000)
              mov r13.y, -r13.w
            endif 
          else 
            mov r13.xy, l(0,0,0,0)
          endif 
          mad r13.xy, r14.yzyy, cb1[66].zwzz, -r13.xyxx
          mul r7.yw, r13.xxxy, cb1[66].xxxy
          mul r7.yw, r7.yyyw, cb4[8].xxxx
          ftoi r15.xy, r7.ywyy
          mov r15.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r7.y, r15.xyzw, t8.zxwy
          mov r7.w, l(1.000000)
          dp2 r6.w, r7.ywyy, cb1[11].zwzz
          dp2 r7.y, r7.ywyy, cb1[12].zwzz
          div r6.w, -r6.w, r7.y
          ge r6.w, r13.z, -r6.w
          not r7.y, r6.w
          add r14.yz, -r14.yyzy, v0.xxyx
          dp2 r7.w, r14.yzyy, r14.yzyy
          sqrt r7.w, r7.w
          ge r8.w, r7.w, l(700.000000)
          add r7.w, r7.w, l(-700.000000)
          mad r7.w, -r7.w, l(0.00333333341), l(1.000000)
          movc r7.w, r8.w, r7.w, l(1.000000)
          add r13.w, -r13.y, l(1.000000)
          mul_sat r13.zw, r13.yyyw, l(0.000000, 0.000000, 10.000000, 10.000000)
          mul r8.w, r13.w, r13.z
          mul r7.w, r7.w, r8.w
          lt r8.w, l(0.137000), r3.z
          mad r9.w, -r3.z, l(4.000000), l(1.000000)
          max r9.w, r9.w, l(0.000000)
          mul r9.w, r7.w, r9.w
          movc r7.w, r8.w, r9.w, r7.w
          movc r6.w, r6.w, r7.w, l(1.000000)
        else 
          mov r13.xy, l(0,0,0,0)
          mov r6.w, l(0)
          mov r7.y, l(0)
        endif 
        if_z r7.y
          lt r7.y, l(0.000000), r6.w
          if_nz r7.y
            mul r0.z, r0.z, cb4[8].y
            sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t9.xyzw, s2, r0.z
          else 
            mov r13.xyz, l(0,0,0,0)
          endif 
        else 
          mov r13.xyz, l(0,0,0,0)
          mov r6.w, l(0)
        endif 
      else 
        mov r13.xyz, l(0,0,0,0)
        mov r6.w, l(0)
      endif 
    else 
      mov r13.xyz, l(0,0,0,0)
      mov r6.w, l(0)
    endif 
  else 
    mov r13.xyz, l(0,0,0,0)
    mov r6.w, l(0)
  endif 
  lt r0.z, l(0.000000), r6.w
  if_nz r0.z
    div r13.xyz, r13.xyzx, cb1[176].wwww
    lt r0.z, r6.w, l(1.000000)
    if_nz r0.z
      if_z cb1[184].z
        mov r2.w, l(1.000000)
        mov r15.xyzw, l(0,0,0,0)
        mov r0.z, l(1.000000)
        mov r7.y, l(0)
        loop 
          uge r7.w, r7.y, l(15)
          breakc_nz r7.w
          imul null, r7.w, r7.y, l(7)
          dp4 r16.x, r2.xyzw, cb1[r7.w + 68].xyzw
          dp4 r16.y, r2.xyzw, cb1[r7.w + 69].xyzw
          dp4 r16.z, r2.xyzw, cb1[r7.w + 70].xyzw
          ge r14.yzw, r16.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r14.yzw, r14.yyzw, cb1[r7.w + 72].xxyz, cb1[r7.w + 73].xxyz
          add r16.xyz, -|r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r14.yzw, r14.yyzw, r16.xxyz
          mul r8.w, r14.z, r14.y
          mul r8.w, r14.w, r8.w
          lt r9.w, l(0.000000), r8.w
          if_nz r9.w
            dp3 r16.x, r6.xyzx, cb1[r7.w + 68].xyzx
            dp3 r16.y, r6.xyzx, cb1[r7.w + 69].xyzx
            dp3 r16.z, r6.xyzx, cb1[r7.w + 70].xyzx
            mul r8.w, r8.w, cb1[r7.w + 73].w
            mov r16.w, cb1[r7.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r16.xyzw, t4.xyzw, s3, r3.w
            mul r16.xyzw, r16.xyzw, cb1[r7.w + 74].xxxy
            min r7.w, r0.z, r8.w
            mad r16.xyzw, r16.xyzw, r7.wwww, r15.xyzw
            add r7.w, r0.z, -r7.w
            ge r8.w, l(0.000000), r7.w
            if_nz r8.w
              mov r15.xyzw, r16.xyzw
              mov r0.z, r7.w
              break 
            endif 
            mov r15.xyzw, r16.xyzw
            mov r0.z, r7.w
          endif 
          iadd r7.y, r7.y, l(1)
        endloop 
      else 
        mov r15.xyzw, l(0,0,0,0)
        mov r0.z, l(1.000000)
      endif 
      add r7.y, r0.z, r15.w
      mul r7.y, r0.y, r7.y
      lt r7.w, l(0.000000), r7.y
      if_nz r7.w
        add r7.w, -|r6.z|, r6.z
        mad r0.z, r0.z, r7.w, |r6.z|
        mad r0.z, r0.z, l(2.000000), l(2.000000)
        div r14.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r0.zzzz
        mul r14.yz, r6.yyxy, r14.yyzy
        mad r14.yz, r14.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t3.wxyz, s2, r3.y
        mov_sat r16.xyz, r14.yzwy
        movc r14.yzw, cb1[184].zzzz, r16.xxyz, r14.yyzw
        div r14.yzw, r14.yyzw, cb1[176].wwww
        mad r15.xyz, r14.yzwy, r7.yyyy, r15.xyzx
      endif 
      mov_sat r6.w, r6.w
      add r14.yzw, r13.xxyz, -r15.xxyz
      mad r13.xyz, r6.wwww, r14.yzwy, r15.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r2.w, l(1.000000)
      mov r13.xyzw, l(0,0,0,0)
      mov r0.z, l(1.000000)
      mov r6.w, l(0)
      loop 
        uge r7.y, r6.w, l(15)
        breakc_nz r7.y
        imul null, r7.y, r6.w, l(7)
        dp4 r15.x, r2.xyzw, cb1[r7.y + 68].xyzw
        dp4 r15.y, r2.xyzw, cb1[r7.y + 69].xyzw
        dp4 r15.z, r2.xyzw, cb1[r7.y + 70].xyzw
        ge r14.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r14.yzw, r14.yyzw, cb1[r7.y + 72].xxyz, cb1[r7.y + 73].xxyz
        add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r14.yzw, r14.yyzw, r15.xxyz
        mul r7.w, r14.z, r14.y
        mul r7.w, r14.w, r7.w
        lt r8.w, l(0.000000), r7.w
        if_nz r8.w
          dp3 r15.x, r6.xyzx, cb1[r7.y + 68].xyzx
          dp3 r15.y, r6.xyzx, cb1[r7.y + 69].xyzx
          dp3 r15.z, r6.xyzx, cb1[r7.y + 70].xyzx
          mul r7.w, r7.w, cb1[r7.y + 73].w
          mov r15.w, cb1[r7.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r3.w
          mul r15.xyzw, r15.xyzw, cb1[r7.y + 74].xxxy
          min r7.y, r0.z, r7.w
          mad r15.xyzw, r15.xyzw, r7.yyyy, r13.xyzw
          add r7.y, r0.z, -r7.y
          ge r7.w, l(0.000000), r7.y
          if_nz r7.w
            mov r13.xyzw, r15.xyzw
            mov r0.z, r7.y
            break 
          endif 
          mov r13.xyzw, r15.xyzw
          mov r0.z, r7.y
        endif 
        iadd r6.w, r6.w, l(1)
      endloop 
    else 
      mov r13.xyzw, l(0,0,0,0)
      mov r0.z, l(1.000000)
    endif 
    add r3.w, r0.z, r13.w
    mul r3.w, r0.y, r3.w
    lt r6.w, l(0.000000), r3.w
    if_nz r6.w
      add r6.w, -|r6.z|, r6.z
      mad r0.z, r0.z, r6.w, |r6.z|
      mad r0.z, r0.z, l(2.000000), l(2.000000)
      div r6.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.zzzz
      mul r6.xy, r6.zwzz, r6.yxyy
      mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xyzw, s2, r3.y
      mov_sat r14.yzw, r6.xxyz
      movc r6.xyz, cb1[184].zzzz, r14.yzwy, r6.xyzx
      div r6.xyz, r6.xyzx, cb1[176].wwww
      mad r13.xyz, r6.xyzx, r3.wwww, r13.xyzx
    endif 
  endif 
  mul r0.z, r12.w, l(0.080000)
  mad r6.xyz, -r12.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
  mad r6.xyz, r4.xxxx, r6.xyzx, r0.zzzz
  dp3 r0.z, r6.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r0.z, r0.z, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xzxx, t1.xyzw, s2, l(0.000000)
  mad r3.xyz, r6.xyzx, r3.xxxx, r3.yyyy
  mul r3.xyz, r0.zzzz, r3.xyzx
  mul r3.xyz, r3.xyzx, r13.xyzx
  mul r3.xyz, r7.xxxx, r3.xyzx
  mul r6.xyz, r0.wwww, -r8.xyzx
  exp r6.xyz, r6.xyzx
  mad r6.xyz, r3.xyzx, r6.xyzx, r9.xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, r6.xyzx
  dp3 r0.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r0.w, r5.x, l(5)
  if_nz r0.w
    dp3 r0.w, -r10.xyzx, r5.yzwy
    add r0.w, r0.w, r0.w
    mad r6.xyz, r5.yzwy, -r0.wwww, -r10.xyzx
    dp3 r0.w, r6.xyzx, r12.xzwx
    dp3 r1.w, r6.xyzx, r5.yzwy
    mul r6.xyz, r1.wwww, r5.yzwy
    mad r6.xyz, r12.xzwx, r0.wwww, r6.xyzx
    dp3 r0.w, r12.xzwx, r10.xyzx
    mad r0.w, -r0.w, r0.w, l(1.000000)
    sqrt r0.w, r0.w
    mul r1.w, r4.y, r4.y
    div r1.w, l(2.000000), r1.w
    add r1.w, r1.w, l(-2.000000)
    max r1.w, r1.w, l(1.000000031E-022)
    sqrt r1.w, r1.w
    div r1.w, l(-10.000000), r1.w
    exp r1.w, r1.w
    add r1.w, r1.w, l(-0.000980)
    mul_sat r1.w, r1.w, l(1.00795019)
    add r1.w, -r1.w, l(1.000000)
    if_z cb1[184].z
      mul r3.w, r1.w, cb1[174].w
      mov r2.w, l(1.000000)
      mov r8.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
      mov r6.w, l(0)
      loop 
        uge r7.y, r6.w, l(15)
        breakc_nz r7.y
        imul null, r7.y, r6.w, l(7)
        dp4 r9.x, r2.xyzw, cb1[r7.y + 68].xyzw
        dp4 r9.y, r2.xyzw, cb1[r7.y + 69].xyzw
        dp4 r9.z, r2.xyzw, cb1[r7.y + 70].xyzw
        ge r12.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.xyz, r12.xyzx, cb1[r7.y + 72].xyzx, cb1[r7.y + 73].xyzx
        add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r9.xyz, r12.xyzx, r9.xyzx
        mul r7.w, r9.y, r9.x
        mul r7.w, r9.z, r7.w
        lt r9.x, l(0.000000), r7.w
        if_nz r9.x
          dp3 r9.x, r6.xyzx, cb1[r7.y + 68].xyzx
          dp3 r9.y, r6.xyzx, cb1[r7.y + 69].xyzx
          dp3 r9.z, r6.xyzx, cb1[r7.y + 70].xyzx
          mul r7.w, r7.w, cb1[r7.y + 73].w
          mov r9.w, cb1[r7.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r9.xyzw, r9.xyzw, t4.xyzw, s3, r3.w
          mul r9.xyzw, r9.xyzw, cb1[r7.y + 74].xxxy
          min r7.y, r5.x, r7.w
          mad r9.xyzw, r9.xyzw, r7.yyyy, r8.xyzw
          add r7.y, r5.x, -r7.y
          ge r7.w, l(0.000000), r7.y
          if_nz r7.w
            mov r8.xyzw, r9.xyzw
            mov r5.x, r7.y
            break 
          endif 
          mov r8.xyzw, r9.xyzw
          mov r5.x, r7.y
        endif 
        iadd r6.w, r6.w, l(1)
      endloop 
    else 
      mov r8.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
    endif 
    add r3.w, r5.x, r8.w
    mul r3.w, r0.y, r3.w
    lt r6.w, l(0.000000), r3.w
    if_nz r6.w
      mul r1.w, r1.w, cb1[183].w
      add r6.w, -|r6.z|, r6.z
      mad r5.x, r5.x, r6.w, |r6.z|
      mad r5.x, r5.x, l(2.000000), l(2.000000)
      div r6.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r5.xxxx
      mul r6.xy, r6.zwzz, r6.yxyy
      mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xyzw, s2, r1.w
      mov_sat r9.xyz, r6.xyzx
      movc r6.xyz, cb1[184].zzzz, r9.xyzx, r6.xyzx
      div r6.xyz, r6.xyzx, cb1[176].wwww
      mad r8.xyz, r6.xyzx, r3.wwww, r8.xyzx
    endif 
    sqrt r6.xyz, r11.xzwx
    dp3 r1.w, r11.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r6.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r7.xxxx
    mad r6.xyz, r1.wwww, r6.xyzx, r7.xxxx
    mul r6.xyz, r6.xyzx, r8.xyzx
    mul r1.w, r4.z, l(0.080000)
    mad r8.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
    mad r8.xyz, r4.xxxx, r8.xyzx, r1.wwww
    dp3 r1.w, r8.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r1.w, r1.w, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r10.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.yw, r4.wyww, t1.zxwy, s2, l(0.000000)
    mad r8.xyz, r8.xyzx, r7.yyyy, r7.wwww
    mul r8.xyz, r1.wwww, r8.xyzx
    mul r8.xyz, r0.wwww, r8.xyzx
    mul r3.xyz, r6.xyzx, r8.xyzx
    dp3 r0.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r0.w, r4.y, r14.x
    dp3 r1.w, -r10.xyzx, r5.yzwy
    add r1.w, r1.w, r1.w
    mad r6.xyz, r5.yzwy, -r1.wwww, -r10.xyzx
    mul r1.w, r0.w, r0.w
    div r1.w, l(2.000000), r1.w
    add r1.w, r1.w, l(-2.000000)
    max r1.w, r1.w, l(1.000000031E-022)
    sqrt r1.w, r1.w
    div r1.w, l(-10.000000), r1.w
    exp r1.w, r1.w
    add r1.w, r1.w, l(-0.000980)
    mul_sat r1.w, r1.w, l(1.00795019)
    add r1.w, -r1.w, l(1.000000)
    mul r3.w, r1.w, cb1[183].w
    mul r5.x, r1.w, cb1[174].w
    if_z r7.z
      ge r6.w, l(0.250000), r0.w
      if_nz r6.w
        ge r6.w, r5.w, l(0.250000)
        if_nz r6.w
          mov r2.w, l(1.000000)
          dp4 r8.x, r2.xyzw, cb1[51].xyzw
          dp4 r8.y, r2.xyzw, cb1[52].xyzw
          dp4 r8.z, r2.xyzw, cb1[53].xyzw
          dp3 r9.x, r5.yzwy, cb1[51].xyzx
          dp3 r9.y, r5.yzwy, cb1[52].xyzx
          dp3 r9.z, r5.yzwy, cb1[53].xyzx
          dp3 r7.y, r6.xyzx, cb1[51].xyzx
          dp3 r7.z, r6.xyzx, cb1[52].xyzx
          dp3 r7.w, r6.xyzx, cb1[53].xyzx
          dp3 r6.w, r7.yzwy, r7.yzwy
          rsq r6.w, r6.w
          mul r12.yzw, r6.wwww, r7.yyzw
          dp2 r6.w, v0.xxxx, cb1[66].zzzz
          add r6.w, r6.w, l(-1.000000)
          log r6.w, |r6.w|
          mul r6.w, r6.w, l(10.000000)
          exp r6.w, r6.w
          mad r6.w, r6.w, l(0.100000), l(1.000000)
          div r12.x, r12.y, r6.w
          mul r6.w, r8.z, l(-0.010000)
          max r6.w, r6.w, l(0.001000)
          mad r9.xyz, r9.xyzx, r6.wwww, r8.xyzx
          mad r12.xyz, r12.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r9.xyzx
          mov r9.w, l(1.000000)
          dp4 r8.y, r9.xyzw, cb4[4].xyzw
          dp4 r8.x, r9.xyzw, cb4[5].xyzw
          dp4 r6.w, r9.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r6.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r8.y, r24.w, l(0.5), r8.y

          mov r12.w, l(1.000000)
          dp4 r9.x, r12.xyzw, cb4[4].xyzw
          dp4 r9.y, r12.xyzw, cb4[5].xyzw
          dp4 r7.y, r12.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r9.x, r24.w, l(0.5), r9.x

          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
          mul r7.zw, r6.wwww, r8.xxxy
          mul r12.xy, r7.yyyy, r9.xyxx
          mul r8.w, r6.w, r9.z
          mul r9.w, r7.y, r12.z
          add r12.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
          lt r13.xy, r12.zwzz, r12.yxyy
          lt r13.zw, r12.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
          or r13.zw, r13.zzzw, r13.xxxy
          movc r12.zw, r13.xxxy, -r12.zzzw, l(0,0,-0.500000,-0.500000)
          mad r12.zw, r9.yyyx, r7.yyyy, r12.zzzw
          mad r9.xy, r9.yxyy, r7.yyyy, -r7.zwzz
          div r9.xy, r12.zwzz, r9.xyxx
          and r9.x, r9.x, r13.z
          max r9.y, r9.y, r9.x
          movc r9.x, r13.w, r9.y, r9.x
          mad r12.zw, r8.yyyx, r6.wwww, -r12.xxxy
          mad r12.xy, r9.xxxx, r12.zwzz, r12.xyxx
          add r9.y, r6.w, -r7.y
          mad r7.y, r9.x, r9.y, r7.y
          mad r9.y, r9.z, r6.w, -r9.w
          mad r9.x, r9.x, r9.y, r9.w
          mad r9.yw, r8.yyyx, r6.wwww, -r12.xxxy
          dp2 r9.y, r9.ywyy, r9.ywyy
          lt r9.y, r9.y, l(0.000100)
          mad r12.zw, r8.yyyx, r6.wwww, l(0.000000, 0.000000, 0.010000, 0.010000)
          movc r12.xy, r9.yyyy, r12.zwzz, r12.xyxx
          mad r12.zw, -r8.yyyx, r6.wwww, r12.xxxy
          lt r8.x, |r12.z|, |r12.w|
          movc r7.zw, r8.xxxx, r7.zzzw, r7.wwwz
          movc r12.xyz, r8.xxxx, r12.ywzy, r12.xzwx
          lt r8.y, l(0.000000), r12.y
          lt r9.y, r12.y, l(0.000000)
          iadd r8.y, -r8.y, r9.y
          itof r13.x, r8.y
          div r8.y, r13.x, r12.y
          mul r13.y, r12.z, r8.y
          mad r9.x, -r9.z, r6.w, r9.x
          mul r9.x, r8.y, r9.x
          add r7.y, -r6.w, r7.y
          mul r7.y, r8.y, r7.y
          mul r8.y, r12.x, r13.x
          ge r9.y, r9.z, l(99999.796875)
          ge r9.w, l(100000.000000), r9.z
          and r9.y, r9.w, r9.y
          mov r12.y, l(1.000000)
          mov r14.x, r8.w
          mov r14.y, r6.w
          mov r12.zw, l(0,0,-1.000000,-1.000000)
          mov r15.xy, r7.zwzz
          mov r9.w, l(0)
          mov r10.w, r9.y
          mov r16.y, r9.z
          mov r11.y, r9.y
          loop 
            mul r13.z, r13.x, r15.x
            ge r13.z, r8.y, r13.z
            ilt r13.w, r9.w, l(200)
            and r13.z, r13.w, r13.z
            not r13.w, r11.y
            and r13.z, r13.w, r13.z
            breakc_z r13.z
            mad r14.xz, r9.xxxx, l(5.000000, 0.000000, 2.500000, 0.000000), r14.xxxx
            mad r14.yw, r7.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r14.yyyy
            div r16.x, r14.z, r14.w
            lt r13.z, r16.x, r16.y
            movc r13.zw, r13.zzzz, r16.xxxy, r16.yyyx
            movc r12.zw, r8.xxxx, r15.yyyx, r15.xxxy
            mul r14.zw, r12.zzzw, cb1[66].zzzw
            sample_l_indexable(texture2d)(float,float,float,float) r12.x, r14.zwzz, t8.xyzw, s1, l(0.000000)
            dp2 r14.z, r12.xyxx, cb1[11].zwzz
            dp2 r12.x, r12.xyxx, cb1[12].zwzz
            div r12.x, -r14.z, r12.x
            ge r13.z, -r12.x, r13.z
            add r12.x, -r12.x, l(-0.200000)
            ge r12.x, r13.w, r12.x
            and r11.y, r12.x, r13.z
            mad r15.xy, r13.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r15.xyxx
            iadd r9.w, r9.w, l(1)
            mov r10.w, r11.y
            mov r16.y, r16.x
          endloop 
          if_nz r10.w
            if_z cb4[8].z
              ftoi r7.yz, r12.zzwz
              imax r7.yz, r7.yyzy, l(0, 0, 0, 0)
              ftoi r8.xy, cb1[66].xyxx
              iadd r8.xy, r8.xyxx, l(-1, -1, 0, 0)
              imin r9.xy, r7.yzyy, r8.xyxx
              mov r9.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r7.yz, r9.xyzw, t7.wxyz
              ne r8.xy, r7.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
              and r6.w, r8.y, r8.x
              if_z r6.w
                itof r8.xy, r9.xyxx
                mul r9.xy, r8.xyxx, cb4[8].xxxx
                ftoi r9.xy, r9.xyxx
                mov r9.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r9.x, r9.xyzw, t8.xyzw
                mov r9.yw, l(0,1.000000,0,1.000000)
                dp2 r6.w, r9.xyxx, cb1[11].zwzz
                dp2 r8.w, r9.xyxx, cb1[12].zwzz
                div r6.w, -r6.w, r8.w
                mad r8.xy, r8.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                mul r8.xy, r8.xyxx, cb1[0].xyxx
                mul r9.xy, r8.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                div r6.w, r6.w, cb1[67].x
                mov r9.z, -cb1[67].x
                mul r9.xyz, r6.wwww, r9.xyzx
                dp4 r8.x, r9.xyzw, cb1[24].xyzw
                dp4 r8.y, r9.xyzw, cb1[25].xyzw
                dp4 r6.w, r9.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r6.w, -r24.y
mad r8.x, r24.w, r24.x, r8.x

                dp4 r12.x, r9.xyzw, cb4[0].xyzw
                dp4 r12.y, r9.xyzw, cb4[1].xyzw
                dp4 r8.w, r9.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r8.w, -r24.y
mad r12.x, r24.w, r24.x, r12.x

                max r8.w, r8.w, l(0.000100)
                div r9.xy, r12.xyxx, r8.wwww
                div r8.xy, r8.xyxx, r6.wwww
                add r8.xy, -r9.xyxx, r8.xyxx
                mul r7.yw, r8.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
                mov r7.z, -r7.w
              endif 
            else 
              mov r7.yz, l(0,0,0,0)
            endif 
            mad r7.yz, r12.zzwz, cb1[66].zzwz, -r7.yyzy
            mul r8.xy, r7.yzyy, cb1[66].xyxx
            mul r8.xy, r8.xyxx, cb4[8].xxxx
            ftoi r9.xy, r8.xyxx
            mov r9.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r8.x, r9.xyzw, t8.xyzw
            mov r8.y, l(1.000000)
            dp2 r6.w, r8.xyxx, cb1[11].zwzz
            dp2 r8.x, r8.xyxx, cb1[12].zwzz
            div r6.w, -r6.w, r8.x
            ge r6.w, r8.z, -r6.w
            not r8.x, r6.w
            add r8.yz, -r12.zzwz, v0.xxyx
            dp2 r8.y, r8.yzyy, r8.yzyy
            sqrt r8.y, r8.y
            ge r8.z, r8.y, l(700.000000)
            add r8.y, r8.y, l(-700.000000)
            mad r8.y, -r8.y, l(0.00333333341), l(1.000000)
            movc r8.y, r8.z, r8.y, l(1.000000)
            add r7.w, -r7.z, l(1.000000)
            mul_sat r8.zw, r7.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
            mul r7.w, r8.w, r8.z
            mul r7.w, r7.w, r8.y
            lt r8.y, l(0.137000), r0.w
            mad r0.w, -r0.w, l(4.000000), l(1.000000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r7.w
            movc r0.w, r8.y, r0.w, r7.w
            movc r0.w, r6.w, r0.w, l(1.000000)
          else 
            mov r7.yz, l(0,0,0,0)
            mov r0.w, l(0)
            mov r8.x, l(0)
          endif 
          if_z r8.x
            lt r6.w, l(0.000000), r0.w
            if_nz r6.w
              mul r1.w, r1.w, cb4[8].y
              sample_l_indexable(texture2d)(float,float,float,float) r7.yzw, r7.yzyy, t9.wxyz, s2, r1.w
            else 
              mov r7.yzw, l(0,0,0,0)
            endif 
          else 
            mov r7.yzw, l(0,0,0,0)
            mov r0.w, l(0)
          endif 
        else 
          mov r7.yzw, l(0,0,0,0)
          mov r0.w, l(0)
        endif 
      else 
        mov r7.yzw, l(0,0,0,0)
        mov r0.w, l(0)
      endif 
    else 
      mov r7.yzw, l(0,0,0,0)
      mov r0.w, l(0)
    endif 
    lt r1.w, l(0.000000), r0.w
    if_nz r1.w
      div r8.xyz, r7.yzwy, cb1[176].wwww
      lt r1.w, r0.w, l(1.000000)
      if_nz r1.w
        if_z cb1[184].z
          mov r2.w, l(1.000000)
          mov r9.xyzw, l(0,0,0,0)
          mov r1.w, l(1.000000)
          mov r6.w, l(0)
          loop 
            uge r7.y, r6.w, l(15)
            breakc_nz r7.y
            imul null, r7.y, r6.w, l(7)
            dp4 r12.x, r2.xyzw, cb1[r7.y + 68].xyzw
            dp4 r12.y, r2.xyzw, cb1[r7.y + 69].xyzw
            dp4 r12.z, r2.xyzw, cb1[r7.y + 70].xyzw
            ge r13.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r13.xyz, r13.xyzx, cb1[r7.y + 72].xyzx, cb1[r7.y + 73].xyzx
            add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r12.xyz, r13.xyzx, r12.xyzx
            mul r7.z, r12.y, r12.x
            mul r7.z, r12.z, r7.z
            lt r7.w, l(0.000000), r7.z
            if_nz r7.w
              dp3 r12.x, r6.xyzx, cb1[r7.y + 68].xyzx
              dp3 r12.y, r6.xyzx, cb1[r7.y + 69].xyzx
              dp3 r12.z, r6.xyzx, cb1[r7.y + 70].xyzx
              mul r7.z, r7.z, cb1[r7.y + 73].w
              mov r12.w, cb1[r7.y + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t4.xyzw, s3, r5.x
              mul r12.xyzw, r12.xyzw, cb1[r7.y + 74].xxxy
              min r7.y, r1.w, r7.z
              mad r12.xyzw, r12.xyzw, r7.yyyy, r9.xyzw
              add r7.y, r1.w, -r7.y
              ge r7.z, l(0.000000), r7.y
              if_nz r7.z
                mov r9.xyzw, r12.xyzw
                mov r1.w, r7.y
                break 
              endif 
              mov r9.xyzw, r12.xyzw
              mov r1.w, r7.y
            endif 
            iadd r6.w, r6.w, l(1)
          endloop 
        else 
          mov r9.xyzw, l(0,0,0,0)
          mov r1.w, l(1.000000)
        endif 
        add r6.w, r1.w, r9.w
        mul r6.w, r0.y, r6.w
        lt r7.y, l(0.000000), r6.w
        if_nz r7.y
          add r7.y, -|r6.z|, r6.z
          mad r1.w, r1.w, r7.y, |r6.z|
          mad r1.w, r1.w, l(2.000000), l(2.000000)
          div r7.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r1.wwww
          mul r7.yz, r6.yyxy, r7.yyzy
          mad r7.yz, r7.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r7.yzw, r7.yzyy, t3.wxyz, s2, r3.w
          mov_sat r12.xyz, r7.yzwy
          movc r7.yzw, cb1[184].zzzz, r12.xxyz, r7.yyzw
          div r7.yzw, r7.yyzw, cb1[176].wwww
          mad r9.xyz, r7.yzwy, r6.wwww, r9.xyzx
        endif 
        mov_sat r0.w, r0.w
        add r7.yzw, r8.xxyz, -r9.xxyz
        mad r8.xyz, r0.wwww, r7.yzwy, r9.xyzx
      endif 
    else 
      if_z cb1[184].z
        mov r2.w, l(1.000000)
        mov r8.xyzw, l(0,0,0,0)
        mov r0.w, l(1.000000)
        mov r1.w, l(0)
        loop 
          uge r6.w, r1.w, l(15)
          breakc_nz r6.w
          imul null, r6.w, r1.w, l(7)
          dp4 r9.x, r2.xyzw, cb1[r6.w + 68].xyzw
          dp4 r9.y, r2.xyzw, cb1[r6.w + 69].xyzw
          dp4 r9.z, r2.xyzw, cb1[r6.w + 70].xyzw
          ge r7.yzw, r9.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r7.yzw, r7.yyzw, cb1[r6.w + 72].xxyz, cb1[r6.w + 73].xxyz
          add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r7.yzw, r7.yyzw, r9.xxyz
          mul r7.y, r7.z, r7.y
          mul r7.y, r7.w, r7.y
          lt r7.z, l(0.000000), r7.y
          if_nz r7.z
            dp3 r9.x, r6.xyzx, cb1[r6.w + 68].xyzx
            dp3 r9.y, r6.xyzx, cb1[r6.w + 69].xyzx
            dp3 r9.z, r6.xyzx, cb1[r6.w + 70].xyzx
            mul r7.y, r7.y, cb1[r6.w + 73].w
            mov r9.w, cb1[r6.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r9.xyzw, r9.xyzw, t4.xyzw, s3, r5.x
            mul r9.xyzw, r9.xyzw, cb1[r6.w + 74].xxxy
            min r6.w, r0.w, r7.y
            mad r9.xyzw, r9.xyzw, r6.wwww, r8.xyzw
            add r6.w, r0.w, -r6.w
            ge r7.y, l(0.000000), r6.w
            if_nz r7.y
              mov r8.xyzw, r9.xyzw
              mov r0.w, r6.w
              break 
            endif 
            mov r8.xyzw, r9.xyzw
            mov r0.w, r6.w
          endif 
          iadd r1.w, r1.w, l(1)
        endloop 
      else 
        mov r8.xyzw, l(0,0,0,0)
        mov r0.w, l(1.000000)
      endif 
      add r1.w, r0.w, r8.w
      mul r0.y, r0.y, r1.w
      lt r1.w, l(0.000000), r0.y
      if_nz r1.w
        add r1.w, -|r6.z|, r6.z
        mad r0.w, r0.w, r1.w, |r6.z|
        mad r0.w, r0.w, l(2.000000), l(2.000000)
        div r2.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r0.wwww
        mul r2.xy, r2.xyxx, r6.yxyy
        mad r2.xy, r2.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t3.xyzw, s2, r3.w
        mov_sat r6.xyz, r2.xyzx
        movc r2.xyz, cb1[184].zzzz, r6.xyzx, r2.xyzx
        div r2.xyz, r2.xyzx, cb1[176].wwww
        mad r8.xyz, r2.xyzx, r0.yyyy, r8.xyzx
      endif 
    endif 
    mul r0.y, r4.z, l(0.080000)
    mad r2.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
    mad r2.xyz, r4.xxxx, r2.xyzx, r0.yyyy
    dp3 r0.y, r2.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.y, r0.y, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r10.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.wyww, t1.xyzw, s2, l(0.000000)
    mad r2.xyz, r2.xyzx, r4.xxxx, r4.yyyy
    mul r2.xyz, r0.yyyy, r2.xyzx
    mul r2.xyz, r2.xyzx, r8.xyzx
    mul r3.xyz, r7.xxxx, r2.xyzx
    dp3 r0.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r0.z, r0.x
add r0.yzw, r1.xxyz, r3.xxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 2200 instruction slots used