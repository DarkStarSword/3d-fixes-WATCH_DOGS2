// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 88fe9477d55260b5-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:04 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4 MinAmbient;                 // Offset:    0 Size:    16
//   float4x4 ViewProjectionMatrixWithZBias;// Offset:   16 Size:    64 [unused]
//   float4 WorldEdgeFadeParams;        // Offset:   80 Size:    16 [unused]
//   float2 LightProbesGlobal_GIGenerationSunInterlacePixelsXY;// Offset:   96 Size:     8 [unused]
//   float DrawDistance;                // Offset:  104 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LongRangeShadowSampler          sampler_c      NA          NA    1        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d    4        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d    5        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    6        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    7        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    8        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// LightProbesGlobal                 cbuffer      NA          NA    3        1
// LightData                         cbuffer      NA          NA    4        1
// LongRangeShadow                   cbuffer      NA          NA    5        1
// GBufferMini                       cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[55], dynamicIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 15

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 88fe9477d55260b5-ps.txt

mul r11.w, r11.x, r11.y
mul r13.x, r11.w, cb0[9].x
mul r13.y, r11.w, cb0[10].x
mul r13.z, r11.w, cb0[11].x
mul r13.w, r11.w, cb0[12].x
dp4 r14.x, r13.xyzw, cb0[17].xyzw
dp4 r14.y, r13.xyzw, cb0[18].xyzw
dp4 r14.z, r13.xyzw, cb0[19].xyzw
add r12.xyz, cb0[174].xyz, r14.xyz

mad r0.x, cb6[0].y, cb0[66].x, v0.x
ftoi r0.x, r0.x
ftoi r0.y, v0.y
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t7.yzxw
mad r2.x, r1.z, cb0[67].z, cb0[67].x
mad r2.yz, v0.xxyx, cb0[66].zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.xy, r2.yzyy, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[9].xyzw
dp4 r3.y, r1.xyzw, cb0[10].xyzw
dp4 r3.z, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r1.xyzw, cb0[12].xyzw
div r1.xyz, r3.xyzx, r1.xxxx
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[17].xyzw
dp4 r3.y, r1.xyzw, cb0[18].xyzw
dp4 r3.z, r1.xyzw, cb0[19].xyzw
mov r3.w, l(1.000000)
dp4 r1.x, r3.xyzw, cb2[12].xyzw
dp4 r1.y, r3.xyzw, cb2[13].xyzw
dp4_sat r1.z, r3.xyzw, cb2[14].xyzw
add r4.xyzw, r1.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r5.xyzw, r1.xyxy, l(1.000000, 1.000000, -1.000000, -1.000000), l(0.500050, 0.500050, 0.500049949, 0.500049949)
lt r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
or r2.yz, r5.zzwz, r5.xxyx
or r1.w, r2.z, r2.y
discard_nz r1.w
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
movc r0.w, cb2[18].w, l(0), l(1.000000)
add r5.xyzw, -|r1.xyxy|, l(0.500000, 0.500000, 0.500000, 0.500000)
mul_sat r5.xyzw, r5.xyzw, l(500.000000, 500.000000, 500.000000, 500.000000)
add r6.xyzw, cb2[16].xyxy, l(-1.000000, -1.000000, -1.000000, -1.000000)
div r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyxy
mul r7.xyzw, r0.xyxy, r7.xyzw
mul r5.xyzw, r5.xyzw, r7.xyzw
mad_sat r4.xyzw, r5.xyzw, l(0.300000, 0.300000, 0.900000, 0.900000), r4.xyzw
div r5.xyzw, r6.zwzw, cb2[16].xyxy
div r6.xyzw, l(0.500000, 0.500000, 0.200000, 0.600000), cb2[16].xyzz
add r1.x, cb2[16].z, l(-1.000000)
lt r1.y, l(0.000000), cb2[17].y
div_sat r1.w, r1.z, cb2[17].y
mul r1.w, r1.w, cb2[17].x
and r1.y, r1.w, r1.y
lt r1.w, cb2[17].y, l(1.000000)
add_sat r1.z, r1.z, -cb2[17].y
add r2.y, -cb2[17].y, l(1.000000)
div r1.z, r1.z, r2.y
log r1.z, |r1.z|
mul r1.z, r1.z, cb2[16].w
exp r1.z, r1.z
add r1.x, r1.x, -cb2[17].x
mul r1.x, r1.x, r1.z
and r1.x, r1.x, r1.w
add r1.x, r1.x, r1.y
div r1.x, r1.x, cb2[16].z
mad r4.xyzw, r4.xyzw, r5.xyzw, r6.xyxy
mad r1.xy, r0.zzzz, r6.zwzz, r1.xxxx
div r1.z, l(0.500000), cb2[16].z
add r1.xz, r1.zzzz, r1.xxyx
mov r1.yw, r4.xxxy
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r1.ywxy, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r1.ywxy, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r1.ywxy, t1.xyzw, s0, l(0.000000)
mov r1.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r1.xyzx, t4.xyzw, s0, l(0.000000)
log r5.xyzw, |r5.xyzw|
mul r5.xyzw, r5.xyzw, cb2[22].xxxx
exp r5.xyzw, r5.xyzw
log r6.xyzw, |r6.xyzw|
mul r6.xyzw, r6.xyzw, cb2[22].xxxx
exp r6.xyzw, r6.xyzw
log r7.xyzw, |r7.xyzw|
mul r7.xyzw, r7.xyzw, cb2[22].xxxx
exp r7.xyzw, r7.xyzw
add r1.w, cb2[19].z, cb2[20].z
add r1.w, -r3.z, r1.w
mul_sat r1.w, r1.w, l(0.0333333351)
add r1.w, -r1.w, l(1.000000)
add r8.xyzw, -r5.xyzw, cb1[9].xyzw
mad r5.xyzw, r1.wwww, r8.xyzw, r5.xyzw
add r8.xyzw, -r6.xyzw, cb1[10].xyzw
mad r6.xyzw, r1.wwww, r8.xyzw, r6.xyzw
add r8.xyzw, -r7.xyzw, cb1[11].xyzw
mad r7.xyzw, r1.wwww, r8.xyzw, r7.xyzw
add r8.xyzw, r0.wwww, -r4.xyzw
mad r4.xyzw, r1.wwww, r8.xyzw, r4.xyzw
mul r8.xyzw, cb1[12].xyzw, cb3[0].xxxw
mul r9.xyzw, cb1[13].xyzw, cb3[0].yyyw
mul r10.xyzw, cb1[14].xyzw, cb3[0].zzzw
max r5.xyzw, r5.xyzw, r8.xyzw
max r6.xyzw, r6.xyzw, r9.xyzw
max r7.xyzw, r7.xywz, r10.xywz
dp3 r8.x, r0.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r8.y, r0.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r8.z, r0.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r2.y, -r0.z, l(0.500000)
mul r8.w, r2.y, l(0.666666687)
max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r6.xxyz, r8.yyyy
mad r2.yzw, r8.xxxx, r5.xxyz, r2.yyzw
mad r2.yzw, r8.zzzz, r7.xxyw, r2.yyzw
mov r7.x, r5.w
mov r7.y, r6.w
mad r2.yzw, r8.wwww, r7.xxyz, r2.yyzw
add r3.w, r8.y, r8.x
add r3.w, r8.z, r3.w
add r3.w, r8.w, r3.w
div r2.yzw, r2.yyzw, r3.wwww
add r5.xyz, -r3.xyzx, r12.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r3.w, -r5.xyzx, r0.xyzx
add r3.w, r3.w, r3.w
mad r5.xyz, r0.xyzx, -r3.wwww, -r5.xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyw, r0.zzzz, r5.xyxz
if_nz cb2[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r1.xyzx, t5.xyzw, s0, l(0.000000)
  add r7.xyzw, r0.wwww, -r6.xyzw
  mad r1.xyzw, r1.wwww, r7.xyzw, r6.xyzw
  dp2 r0.w, r5.xyxx, r5.xyxx
  rsq r0.w, r0.w
  mul r6.xy, r0.wwww, r5.xyxx
  dp2 r0.w, r6.xyxx, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r0.w, r0.w, l(-0.707106769)
  mul_sat r0.w, r0.w, l(3.41421342)
  dp2 r3.w, r6.xyxx, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r3.w, r3.w, l(-0.707106769)
  mul_sat r3.w, r3.w, l(3.41421342)
  add r6.z, r0.w, r3.w
  dp2 r6.w, r6.xyxx, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r6.w, r6.w, l(-0.707106769)
  mul_sat r6.w, r6.w, l(3.41421342)
  add r6.z, r6.w, r6.z
  dp2 r7.x, r6.xyxx, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r7.x, r7.x, l(-0.707106769)
  mul_sat r7.x, r7.x, l(3.41421342)
  add r6.z, r6.z, r7.x
  dp2 r7.y, r6.xyxx, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r7.y, r7.y, l(-0.707106769)
  mul_sat r7.y, r7.y, l(3.41421342)
  add r6.z, r6.z, r7.y
  dp2 r7.z, r6.xyxx, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r7.z, r7.z, l(-0.707106769)
  mul_sat r7.z, r7.z, l(3.41421342)
  add r6.z, r6.z, r7.z
  dp2 r7.w, r6.xyxx, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r7.w, r7.w, l(-0.707106769)
  mul_sat r7.w, r7.w, l(3.41421342)
  add r6.z, r6.z, r7.w
  dp2 r6.x, r6.xyxx, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r6.x, r6.x, l(-0.707106769)
  mul_sat r6.x, r6.x, l(3.41421342)
  add r6.y, r6.x, r6.z
  div r0.w, r0.w, r6.y
  div r3.w, r3.w, r6.y
  div r6.xz, r6.xxwx, r6.yyyy
  div r6.w, r7.x, r6.y
  div r7.x, r7.y, r6.y
  div r7.y, r7.z, r6.y
  div r7.z, r7.w, r6.y
  mul r3.w, r3.w, r4.y
  mad r0.w, r4.x, r0.w, r3.w
  mad r0.w, r4.z, r6.z, r0.w
  mad r0.w, r4.w, r6.w, r0.w
  mad r0.w, r1.x, r7.x, r0.w
  mad r0.w, r1.y, r7.y, r0.w
  mad r0.w, r1.z, r7.z, r0.w
  mad r1.y, r1.w, r6.x, r0.w
  mad r0.w, -r5.w, r5.w, l(1.000000)
  sqrt r0.w, r0.w
  mul r1.z, r5.w, l(0.545521200)
  mul r6.xy, r0.wwww, l(0.545521200, 0.838097036, 0.000000, 0.000000)
  mad r7.w, r5.w, l(0.838097036), -r6.x
  mad r7.yz, r5.wwww, l(0.000000, 0.838097036, 0.545521200, 0.000000), r6.xxyx
  mad r7.x, r0.w, l(0.838097036), -r1.z
  lt r1.zw, r7.zzzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r6.xyzw, r1.zzww, l(0,-1.000000,0,1.000000), r7.zwxy
  ge r0.w, r6.y, r1.y
  ge r1.z, r1.y, r6.w
  mul r1.w, r1.y, r1.y
  mad r3.w, -r1.y, r1.y, l(1.000000)
  sqrt r1.x, r3.w
  lt r3.w, r6.y, l(0.000000)
  add r7.xy, r6.zwzz, l(-1.000000, -0.000000, 0.000000, 0.000000)
  dp2 r7.x, r7.xyxx, r7.xyxx
  sqrt r7.x, r7.x
  mul r7.x, r7.x, l(0.500000)
  mul r7.x, r7.x, r7.x
  add r6.xy, -r6.zwzz, r6.xyxx
  dp2 r6.x, r6.xyxx, r6.xyxx
  sqrt r6.x, r6.x
  mul r6.x, r6.x, l(0.500000)
  mul r6.x, r6.x, r6.x
  movc r3.w, r3.w, r7.x, r6.x
  add r1.xy, r1.xyxx, -r6.zwzz
  dp2 r1.x, r1.xyxx, r1.xyxx
  sqrt r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  mul r1.x, r1.x, r1.x
  div r1.x, r1.x, r3.w
  movc r1.x, r1.z, l(0), r1.x
  movc r0.w, r0.w, l(1.000000), r1.x
  mad r1.x, r1.w, l(-0.080000), l(0.080000)
  max r1.w, r0.w, r1.x
else 
  dp3 r6.x, r5.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r6.y, r5.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r6.z, r5.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r0.z, -r5.z, r0.z, l(0.500000)
  mul r6.w, r0.z, l(0.666666687)
  max r5.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r0.z, r5.xyzw, r4.xyzw
  add r0.w, r5.y, r5.x
  add r0.w, r5.z, r0.w
  add r0.w, r5.w, r0.w
  div r1.w, r0.z, r0.w
endif 
ftou r0.zw, v0.xxxy
and r4.xy, r0.zwzz, l(127, 127, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r4.xyzw, t0.yzxw
mov r4.y, l(3)
mov r4.zw, l(0,0,3,0)
mov r0.w, l(0)
loop 
  uge r3.w, r4.w, l(4)
  breakc_nz r3.w
  ishl r3.w, r4.w, l(2)
  mul r5.xy, r3.yyyy, cb4[r3.w + 1].xyxx
  mad r5.xy, cb4[r3.w + 0].xyxx, r3.xxxx, r5.xyxx
  mad r5.xy, cb4[r3.w + 2].xyxx, r3.zzzz, r5.xyxx
  add r5.xy, r5.xyxx, cb4[r3.w + 3].xyxx
  max r3.w, |r5.y|, |r5.x|
  add r0.w, r3.w, cb4[16].x
  ult r3.w, r4.w, l(3)
  if_nz r3.w
    mad r3.w, cb4[16].y, r0.z, r0.w
    lt r5.x, r3.w, l(1.000000)
    if_nz r5.x
      mov r0.w, r3.w
      mov r4.z, r4.w
      break 
    endif 
    mov r0.w, r3.w
  endif 
  iadd r4.x, r4.w, l(1)
  mov r4.zw, r4.yyyx
endloop 
ieq r0.z, r4.z, l(3)
mad_sat r0.w, r0.w, cb4[16].z, cb4[16].w
and r0.z, r0.w, r0.z
mad r0.xy, r0.xyxx, cb5[0].xyxx, r3.xyxx
mad r0.w, r3.z, cb5[0].z, cb5[0].w
mad r0.xy, r0.xyxx, cb5[1].xyxx, cb5[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t6.xxxx, s1, r0.w
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.z, r0.x, l(1.000000)
mad r0.x, r0.x, l(255.000000), l(0.500000)
round_ni r0.x, r0.x
sqrt r0.y, r1.w
min r0.y, r0.y, l(1.000000)
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.xy, r0.xyxx
imad o1.x, r0.y, l(256), r0.x
mul_sat r0.x, r2.x, l(0.001000)
mad r0.x, r0.x, l(65535.000000), l(0.500000)
round_ni r0.x, r0.x
ftou o1.y, r0.x
mul r0.xyz, r2.yzwy, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r1.xyz, r0.xyzx, cb6[0].xxxx
mov o0.xyzw, r1.xyzw
ret 
// Approximately 280 instruction slots used