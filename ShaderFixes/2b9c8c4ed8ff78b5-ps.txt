// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 2b9c8c4ed8ff78b5-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:49:41 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[133], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t4
dcl_uav_typed_texture2darray (sint,sint,sint,sint) u1
dcl_uav_typed_buffer (sint,sint,sint,sint) u3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 13

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xy, -cb13[109].yxyy, cb13[109].wzww
add r0.zw, v0.xxxy, -cb13[109].yyyx
div r0.xy, r0.zwzz, r0.xyxx
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t1.zwxy
eq r1.z, cb13[132].y, l(1.000000)
mov r0.w, l(1.000000)
dp2 r1.w, r0.zwzz, cb13[42].zwzz
dp2 r0.w, r0.zwzz, cb13[43].zwzz
div r0.w, r1.w, r0.w
movc r2.z, r1.z, r0.w, r0.z
mad r2.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb13[36].xyzw
dp4 r0.y, r2.xyzw, cb13[37].xyzw
dp4 r0.z, r2.xyzw, cb13[38].xyzw
dp4 r0.w, r2.xyzw, cb13[39].xyzw
div r0.xyzw, r0.xyzw, r0.wwww

// WATCH_DOGS2 soft shadows fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 2b9c8c4ed8ff78b5-ps.txt

add r12.w, r0.z, -r12.y
mul r12.w, r12.w, r12.x
mad r0.x, -r12.w, cb13[36].x, r0.x

ld_indexable(buffer)(float,float,float,float) r1.z, l(0, 0, 0, 0), t4.yzxw
eq r1.w, cb13[129].w, l(1.000000)
and r2.x, r1.w, l(0x3f800000)
lt r2.y, r0.z, cb13[129].z
ftoi r2.z, cb13[108].x
imad r1.x, r1.y, r2.z, r1.x
mov r3.xyw, l(0,0,0,0)
mov r4.w, l(1.000000)
mov r5.z, l(0)
loop 
  itof r1.y, r5.z
  ge r1.y, r1.y, r1.z
  breakc_nz r1.y
  imad r1.y, l(6), r5.z, l(1)
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t4.yxzw
  imad r6.xyzw, l(6, 6, 6, 6), r5.zzzz, l(2, 3, 4, 5)
  ld_indexable(buffer)(float,float,float,float) r2.z, r6.xxxx, t4.yzxw
  ld_indexable(buffer)(float,float,float,float) r2.w, r6.yyyy, t4.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.w, r6.zzzz, t4.yzwx
  ld_indexable(buffer)(float,float,float,float) r6.x, r6.wwww, t4.xyzw
  imad r6.y, l(6), r5.z, l(6)
  ld_indexable(buffer)(float,float,float,float) r6.y, r6.yyyy, t4.yxzw
  add r6.z, r6.x, r6.x
  add r6.w, -r1.y, r2.z
  div r7.x, r6.z, r6.w
  add r7.y, r2.w, -r5.w
  div r6.z, r6.z, r7.y
  add r7.z, r1.y, r2.z
  add r1.y, r1.y, -r2.z
  div r4.x, r7.z, r1.y
  add r1.y, r2.w, r5.w
  add r2.z, -r2.w, r5.w
  div r4.y, r1.y, r2.z
  add r1.y, -r6.x, r6.y
  div r2.z, r6.y, r1.y
  mul r2.w, r6.y, r6.x
  add r5.w, -r6.y, r6.x
  div r3.z, r2.w, r5.w
  div r2.w, l(2.000000), r6.w
  div r6.y, l(2.000000), r7.y
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  div r4.z, r6.x, r5.w
  movc r2.w, r1.w, r7.x, r2.w
  movc r5.w, r1.w, r6.z, r6.y
  and r6.xy, r1.wwww, r4.xyxx
  movc r1.y, r1.w, r2.z, r1.y
  movc r7.xyzw, r1.wwww, r3.xyzw, r4.xyzw
  mul r8.xyzw, r6.xxxx, cb13[54].xyzw
  mad r8.xyzw, cb13[52].xyzw, r2.wwww, r8.xyzw
  mad r8.xyzw, cb13[55].xyzw, r7.xxxx, r8.xyzw
  mul r6.xyzw, r6.yyyy, cb13[54].xyzw
  mad r6.xyzw, cb13[53].xyzw, r5.wwww, r6.xyzw
  mad r6.xyzw, cb13[55].xyzw, r7.yyyy, r6.xyzw
  mul r9.xyzw, r7.zzzz, cb13[55].xyzw
  mad r9.xyzw, cb13[54].xyzw, r1.yyyy, r9.xyzw
  mul r7.xyzw, r7.wwww, cb13[55].xyzw
  mad r7.xyzw, cb13[54].xyzw, r2.xxxx, r7.xyzw
  mul r10.xyzw, r6.xyzw, cb13[100].yyyy
  mad r10.xyzw, r8.xyzw, cb13[100].xxxx, r10.xyzw
  mad r10.xyzw, r9.xyzw, cb13[100].zzzz, r10.xyzw
  mad r10.xyzw, r7.xyzw, cb13[100].wwww, r10.xyzw
  mul r11.xyzw, r6.xyzw, cb13[101].yyyy
  mad r11.xyzw, r8.xyzw, cb13[101].xxxx, r11.xyzw
  mad r11.xyzw, r9.xyzw, cb13[101].zzzz, r11.xyzw
  mad r11.xyzw, r7.xyzw, cb13[101].wwww, r11.xyzw
  mul r6.xyzw, r6.xyzw, cb13[103].yyyy
  mad r6.xyzw, r8.xyzw, cb13[103].xxxx, r6.xyzw
  mad r6.xyzw, r9.xyzw, cb13[103].zzzz, r6.xyzw
  mad r6.xyzw, r7.xyzw, cb13[103].wwww, r6.xyzw
  dp4 r4.x, r0.xyzw, r10.xyzw
  dp4 r4.y, r0.xyzw, r11.xyzw
  dp4 r1.y, r0.xyzw, r6.xyzw
  div r2.zw, r4.xxxy, r1.yyyy
  lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r2.zwzz
  lt r6.xy, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  and r1.y, r4.x, r6.x
  and r1.y, r4.y, r1.y
  and r1.y, r6.y, r1.y
  and r3.z, r2.y, r1.y
  if_nz r3.z
    mul r2.zw, r2.zzzw, cb13[111].xxxy
    ftoi r5.xy, r2.zwzz
    imm_atomic_exch r6.x, u1, r5.xyzx, r1.x
    store_uav_typed u3.xyzw, r1.xxxx, r6.xxxx
  endif 
  if_nz r1.y
    break 
  endif 
  iadd r5.z, r5.z, l(1)
endloop 
mov o0.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used