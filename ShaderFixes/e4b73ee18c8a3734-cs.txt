// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e4b73ee18c8a3734-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:13:44 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer HMSSAO
// {
//
//   float4 g_HBAO0;                    // Offset:    0 Size:    16 [unused]
//   float4 g_HBAO1;                    // Offset:   16 Size:    16 [unused]
//   float4 g_Params0;                  // Offset:   32 Size:    16 [unused]
//   float4 g_Params1;                  // Offset:   48 Size:    16
//   float4 g_Params2;                  // Offset:   64 Size:    16 [unused]
//   float4 g_Params3;                  // Offset:   80 Size:    16
//   float4 g_ResolutionFull;           // Offset:   96 Size:    16
//   float4 g_ResolutionHalf;           // Offset:  112 Size:    16
//   float4 g_xyToEyePosFull;           // Offset:  128 Size:    16
//   float4 g_xyToEyePosHalf;           // Offset:  144 Size:    16 [unused]
//   float g_WaterLevel;                // Offset:  160 Size:     4
//   int SampleCount;                   // Offset:  164 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorPointClamp2D                 sampler      NA          NA    0        1
// Viewport__GBufferParamsTexture__TexObj__    texture  float4          2d    0        1
// HMSSAOTextures__DepthTexture__TexObj__    texture  float4          2d    1        1
// HMSSAOTextures__NormalTexture__TexObj__    texture  float4          2d    2        1
// HMSSAOTextures__PrevAOTexture__TexObj__    texture  float4          2d    3        1
// HMSSAOTextures__PrevNormalTexture__TexObj__    texture  float4          2d    4        1
// HMSSAOTextures__PrevPositionTexture_float4__TexObj__    texture  float4          2d    5        1
// HMSSAOTextures__FinalSSAO             UAV   float          2d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// HMSSAO                            cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 15
dcl_thread_group 8, 8, 1

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e4b73ee18c8a3734-cs.txt

mul r11.w, r11.x, r11.y
mul r13.x, r11.w, cb0[9].x
mul r13.y, r11.w, cb0[10].x
mul r13.z, r11.w, cb0[11].x
mul r13.w, r11.w, cb0[12].x
dp4 r14.x, r13.xyzw, cb0[17].xyzw
dp4 r14.y, r13.xyzw, cb0[18].xyzw
dp4 r14.z, r13.xyzw, cb0[19].xyzw
add r12.xyz, cb0[174].xyz, r14.xyz

add r0.xy, cb1[6].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
ult r0.xy, vThreadID.xyxx, r0.xyxx
and r0.x, r0.y, r0.x
if_nz r0.x
  div r0.x, cb1[7].x, cb1[6].x
  add r0.x, -r0.x, l(1.000000)
  utof r1.xyzw, vThreadID.xyxy
  add r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  mul r1.xyzw, r1.xyzw, cb1[6].zwzw
  imad r2.x, vThreadID.x, cb1[10].y, vThreadID.z
  mov r2.yz, vThreadID.xxyx
  mov r2.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r2.yzww, t1.yxzw
  add r0.y, r0.y, -cb1[5].x
  div r3.z, cb1[5].y, r0.y
  itof r0.yz, vThreadID.xxyx
  mad r0.yz, cb1[8].xxyx, r0.yyzy, cb1[8].zzwz
  mul r3.xy, r3.zzzz, r0.yzyy
  ld_indexable(texture2d)(float,float,float,float) r0.yzw, r2.xzww, t2.wxyz
  mad r0.yzw, r0.wwyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mul r3.w, r3.z, l(0.100000)
  max r3.w, r3.w, l(0.150000)
  min r3.w, r3.w, l(10.000000)
  mul r3.w, r3.w, r3.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  add r4.x, cb1[6].x, l(0.500000)
  div r4.x, r4.x, cb1[7].x
  ftoi r5.y, -r4.x
  mov r5.xz, l(0,0,0,0)
  iadd r6.xy, r5.yxyy, vThreadID.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r6.xyzw, t1.yxzw
  add r4.y, r4.y, -cb1[5].x
  div r7.z, cb1[5].y, r4.y
  itof r4.yz, r6.xxyx
  mad r4.yz, cb1[8].xxyx, r4.yyzy, cb1[8].zzwz
  mul r7.xy, r7.zzzz, r4.yzyy
  add r4.yzw, -r3.xxyz, r7.xxyz
  dp3 r6.x, r4.yzwy, r4.yzwy
  rsq r6.y, r6.x
  mul r4.yzw, r4.yyzw, r6.yyyy
  mul r6.x, r3.w, r6.x
  min r6.x, r6.x, l(1.000000)
  dp3 r4.y, r0.zwyz, r4.yzwy
  add r4.y, r4.y, l(-0.200000)
  mul r4.y, r4.y, l(1.250000)
  max r4.y, r4.y, l(0.000000)
  ftoi r5.w, r4.x
  iadd r7.xy, r5.wzww, vThreadID.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r7.xyzw, t1.xyzw
  add r4.x, r4.x, -cb1[5].x
  div r8.z, cb1[5].y, r4.x
  itof r4.xz, r7.xxyx
  mad r4.xz, cb1[8].xxyx, r4.xxzx, cb1[8].zzwz
  mul r8.xy, r8.zzzz, r4.xzxx
  add r4.xzw, -r3.xxyz, r8.xxyz
  dp3 r6.y, r4.xzwx, r4.xzwx
  rsq r6.z, r6.y
  mul r4.xzw, r4.xxzw, r6.zzzz
  mul r6.y, r3.w, r6.y
  min r6.y, r6.y, l(1.000000)
  add r6.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  dp3 r4.x, r0.zwyz, r4.xzwx
  add r4.x, r4.x, l(-0.200000)
  mul r4.x, r4.x, l(1.250000)
  max r4.x, r4.x, l(0.000000)
  mul r4.x, r4.x, r6.y
  mad r4.x, r6.x, r4.y, r4.x
  iadd r6.xy, r5.xyxx, vThreadID.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r6.xyzw, t1.yxzw
  add r4.y, r4.y, -cb1[5].x
  div r7.z, cb1[5].y, r4.y
  itof r4.yz, r6.xxyx
  mad r4.yz, cb1[8].xxyx, r4.yyzy, cb1[8].zzwz
  mul r7.xy, r7.zzzz, r4.yzyy
  add r4.yzw, -r3.xxyz, r7.xxyz
  dp3 r5.x, r4.yzwy, r4.yzwy
  rsq r5.y, r5.x
  mul r4.yzw, r4.yyzw, r5.yyyy
  mul r5.x, r3.w, r5.x
  min r5.x, r5.x, l(1.000000)
  add r5.x, -r5.x, l(1.000000)
  dp3 r4.y, r0.zwyz, r4.yzwy
  add r4.y, r4.y, l(-0.200000)
  mul r4.y, r4.y, l(1.250000)
  max r4.y, r4.y, l(0.000000)
  mad r4.x, r5.x, r4.y, r4.x
  iadd r5.xy, r5.zwzz, vThreadID.xyxx
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r5.xyzw, t1.yxzw
  add r4.y, r4.y, -cb1[5].x
  div r6.z, cb1[5].y, r4.y
  itof r4.yz, r5.xxyx
  mad r4.yz, cb1[8].xxyx, r4.yyzy, cb1[8].zzwz
  mul r6.xy, r6.zzzz, r4.yzyy
  add r4.yzw, -r3.xxyz, r6.xxyz
  dp3 r5.x, r4.yzwy, r4.yzwy
  rsq r5.y, r5.x
  mul r4.yzw, r4.yyzw, r5.yyyy
  mul r3.w, r3.w, r5.x
  min r3.w, r3.w, l(1.000000)
  add r3.w, -r3.w, l(1.000000)
  dp3 r4.y, r0.zwyz, r4.yzwy
  add r4.y, r4.y, l(-0.200000)
  mul r4.y, r4.y, l(1.250000)
  max r4.y, r4.y, l(0.000000)
  mad r3.w, r3.w, r4.y, r4.x
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.z
  ge r0.x, l(0.001000), |r0.x|
  if_nz r0.x
    mul r4.yz, r1.zzwz, cb1[7].xxyx
    ftoi r5.xy, r4.yzyy
    mov r5.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r5.xyzw, t5.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r4.yzw, r1.zwzz, t4.wxyz, s0, l(0.000000)
    mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r1.zwzz, t3.xyzw, s0, l(0.000000)
    mad r0.x, r0.x, r4.x, l(-1.000000)
    add r0.x, |r0.x|, l(1.000000)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    log r0.x, r0.x
    mul r0.x, r0.x, l(200.000000)
    exp r0.x, r0.x
    dp3 r4.y, r0.zwyz, r4.yzwy
    add r4.y, r4.y, l(1.000000)
    mul r4.y, r4.y, l(0.500000)
    mul r4.y, r4.y, r4.y
    mul r4.y, r4.y, r4.y
    mul r4.y, r4.y, r4.y
    mul r0.x, r0.x, r4.y
    mul r4.yzw, r0.xxxx, r5.yyzx
  else 
    mad r1.xyzw, r1.xyzw, cb1[7].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
    mul r5.xy, r1.zwzz, cb1[7].zwzz
    frc r6.xyzw, r1.xyzw
    add r7.xyzw, -r6.zwzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r0.x, r7.w, r7.z
    mul r1.xy, r5.xyxx, cb1[7].xyxx
    ftoi r8.xy, r1.xyxx
    mov r8.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.x, r8.xyzw, t5.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r5.xyxx, t4.xyzw, s0, l(0.000000)
    mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r5.xyxx, t3.xyzw, s0, l(0.000000)
    mad r1.x, r1.x, r4.x, l(-1.000000)
    add r1.x, |r1.x|, l(1.000000)
    div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
    log r1.x, r1.x
    mul r1.x, r1.x, l(200.000000)
    exp r1.x, r1.x
    dp3 r1.y, r0.zwyz, r8.xyzx
    add r1.y, r1.y, l(1.000000)
    mul r1.y, r1.y, l(0.500000)
    mul r1.y, r1.y, r1.y
    mul r1.y, r1.y, r1.y
    mul r1.y, r1.y, r1.y
    mul r0.x, r0.x, r1.x
    mul r8.w, r1.y, r0.x
    mul r8.xyz, r8.wwww, r9.xyzx
    mad r5.xyzw, cb1[7].zwzw, l(0.000000, 1.000000, 1.000000, 0.000000), r5.xyxy
    add r9.xyzw, r6.xyzw, -r7.zwzw
    mad r7.xyzw, r9.xyzw, l(0.000000, 1.000000, 1.000000, 0.000000), r7.xyzw
    mul r1.xy, r7.ywyy, r7.xzxx
    mul r7.xyzw, r5.xyzw, cb1[7].xyxy
    ftoi r7.xyzw, r7.zwxy
    mov r9.xy, r7.zwzz
    mov r9.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r9.xyzw, t5.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r5.xyxx, t4.xyzw, s0, l(0.000000)
    mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r10.xyz, r5.xyxx, t3.xyzw, s0, l(0.000000)
    mad r0.x, r0.x, r4.x, l(-1.000000)
    add r0.x, |r0.x|, l(1.000000)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    log r0.x, r0.x
    mul r0.x, r0.x, l(200.000000)
    exp r0.x, r0.x
    dp3 r5.x, r0.zwyz, r9.xyzx
    add r5.x, r5.x, l(1.000000)
    mul r5.x, r5.x, l(0.500000)
    mul r5.x, r5.x, r5.x
    mul r5.x, r5.x, r5.x
    mul r5.x, r5.x, r5.x
    mul r0.x, r0.x, r1.x
    mul r9.w, r5.x, r0.x
    mul r9.xyz, r9.wwww, r10.xyzx
    add r8.xyzw, r8.xyzw, r9.xyzw
    mov r7.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r7.xyzw, t5.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t4.xyzw, s0, l(0.000000)
    mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t3.xyzw, s0, l(0.000000)
    mad r0.x, r0.x, r4.x, l(-1.000000)
    add r0.x, |r0.x|, l(1.000000)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    log r0.x, r0.x
    mul r0.x, r0.x, l(200.000000)
    exp r0.x, r0.x
    dp3 r1.x, r0.zwyz, r7.xyzx
    add r1.x, r1.x, l(1.000000)
    mul r1.x, r1.x, l(0.500000)
    mul r1.x, r1.x, r1.x
    mul r1.x, r1.x, r1.x
    mul r1.x, r1.x, r1.x
    mul r0.x, r0.x, r1.y
    mul r7.w, r1.x, r0.x
    mul r7.xyz, r5.xyzx, r7.wwww
    add r5.xyzw, r7.xyzw, r8.xyzw
    mad r1.xy, r1.zwzz, cb1[7].zwzz, cb1[7].zwzz
    mul r0.x, r6.w, r6.z
    mul r1.zw, r1.xxxy, cb1[7].xxxy
    ftoi r6.xy, r1.zwzz
    mov r6.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.z, r6.xyzw, t5.yzxw
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyxx, t4.xyzw, s0, l(0.000000)
    mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.xyw, r1.xyxx, t3.xywz, s0, l(0.000000)
    mad r1.z, r1.z, r4.x, l(-1.000000)
    add r1.z, |r1.z|, l(1.000000)
    div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
    log r1.z, r1.z
    mul r1.z, r1.z, l(200.000000)
    exp r1.z, r1.z
    dp3 r0.z, r0.zwyz, r6.xyzx
    add r0.z, r0.z, l(1.000000)
    mul r0.z, r0.z, l(0.500000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, r0.z
    mul r0.x, r0.x, r1.z
    mul r6.w, r0.z, r0.x
    mul r6.xyz, r1.xywx, r6.wwww
    add r1.xyzw, r5.xyzw, r6.xyzw
    max r0.x, r1.w, l(0.050000)
    div r4.yzw, r1.yyzx, r0.xxxx
  endif 
  mul r0.x, r3.w, l(0.249993742)
  max r0.x, r4.w, r0.x
  add r0.z, r3.w, r4.y
  add r0.w, r4.z, l(4.000100)
  max r0.w, r0.w, l(1.000000)
  div r0.z, r0.z, r0.w
  add r0.xz, -r0.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
  mul_sat r0.x, r0.z, r0.x
  add r0.x, -r0.x, l(1.000000)
  add r0.x, -r0.x, l(1.000000)
  mov_sat r0.y, r0.y
  add r0.z, -r0.y, l(1.000000)
  sqrt r0.z, r0.z
  mad r0.w, r0.y, l(-0.0187292993), l(0.074261)
  mad r0.w, r0.w, r0.y, l(-0.212114394)
  mad r0.y, r0.w, r0.y, l(1.57072878)
  mul r0.y, r0.z, r0.y
  add r0.x, -r0.x, l(1.000000)
  mad r0.y, r0.y, l(-0.286077559), l(1.250000)
  log r0.x, r0.x
  mul r0.x, r0.x, r0.y
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mul r1.xyz, r3.xyzx, l(1.000000, 1.000000, -1.000000, 0.000000)
  mov r1.w, l(1.000000)
  dp4 r0.y, r1.xyzw, cb0[19].xyzw
  add r0.x, -r0.x, l(1.000000)
  mul r0.x, r0.x, cb1[5].w
  ld_indexable(texture2d)(float,float,float,float) r0.z, r2.yzww, t0.xywz
  mad r0.z, r0.z, l(255.000000), l(0.500000)
  round_ni r0.z, r0.z
  ftou r0.z, r0.z
  ushr r0.z, r0.z, l(5)
  ieq r1.xyz, r0.zzzz, l(4, 5, 2, 0)
  or r0.z, r1.z, r1.y
  movc r0.x, r0.z, l(0), r0.x
  movc r0.z, r1.x, cb1[3].z, l(1.000000)
  mul_sat r0.x, r0.z, r0.x
  add r0.y, r0.y, -cb1[10].x
  mul_sat r0.y, r0.y, l(10.000000)
  mad r0.x, r0.y, -r0.x, l(1.000000)
  add r0.x, -r0.x, l(1.000000)
  store_uav_typed u0.xyzw, r2.xzzz, r0.xxxx
endif 
ret 
// Approximately 284 instruction slots used