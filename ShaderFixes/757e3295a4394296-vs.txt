// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 757e3295a4394296-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:06:38 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4 [unused]
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer EmitterOld
// {
//
//   float4 ParticleLightColors[4];     // Offset:    0 Size:    64 [unused]
//   float4 ParticleLightDirections[4]; // Offset:   64 Size:    64 [unused]
//   float4 ParticleLightPositions[4];  // Offset:  128 Size:    64 [unused]
//   float4 ParticleSpotParams[4];      // Offset:  192 Size:    64 [unused]
//   float4x4 ParticleSpotProjMatrix;   // Offset:  256 Size:    64 [unused]
//   float4 ParticleSpotShadowTextureSize;// Offset:  320 Size:    16 [unused]
//   float4 ParticleSpotVideoUnpack[8]; // Offset:  336 Size:   128 [unused]
//   float4 RainColor;                  // Offset:  464 Size:    16 [unused]
//   float4x4 ShadowOcclusionProjMatrix;// Offset:  480 Size:    64 [unused]
//   float4 SoftClipPlane;              // Offset:  544 Size:    16 [unused]
//   float4 UniformFog;                 // Offset:  560 Size:    16 [unused]
//   float3 TweakedLightDirection;      // Offset:  576 Size:    12 [unused]
//   float OneOverSoftRange;            // Offset:  588 Size:     4 [unused]
//   float2 AlphaScaleOffset;           // Offset:  592 Size:     8
//   float ParticleZOffset;             // Offset:  600 Size:     4
//   float QuadTessellationFactor;      // Offset:  604 Size:     4 [unused]
//   float2 FarSoftDistanceRange;       // Offset:  608 Size:     8 [unused]
//   int ParticleLightCount;            // Offset:  616 Size:     4 [unused]
//   uint FogParticleCount;             // Offset:  620 Size:     4 [unused]
//   float ParticleLightAttenuations[4];// Offset:  624 Size:    52 [unused]
//
// }
//
// cbuffer SceneParticleAttributes
// {
//
//   float4 DistortionSpeedTiling;      // Offset:    0 Size:    16 [unused]
//   float4 OpacityCompensationKeyFrames[5];// Offset:   16 Size:    80
//   float AlphaTestValue;              // Offset:   96 Size:     4 [unused]
//   float DiffuseLightingPowerExponent;// Offset:  100 Size:     4 [unused]
//   float DistortionStrength;          // Offset:  104 Size:     4 [unused]
//   float HDRMul;                      // Offset:  108 Size:     4
//   float Translucency;                // Offset:  112 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    3        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// EmitterOld                        cbuffer      NA          NA    3        1
// SceneParticleAttributes           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyzw
// color                    1   xyzw        1     NONE   float   xyzw
// texcoord                 4   xyzw        2     NONE   float   xyz 
// texcoord                 5   xyzw        3     NONE   float   xyz 
// texcoord                 6   xyzw        4     NONE   float   xyzw
// texcoord                 7   xyzw        5     NONE   float   xyzw
// texcoord                 3   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[176], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

lt r0.x, cb2[17].y, l(1.000000)
add r0.yzw, cb2[16].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
add r0.w, r0.w, -cb2[17].x
add r1.x, -cb2[17].y, l(1.000000)
mul r1.yzw, v0.yyyy, v3.xxyz
mad r1.yzw, v0.xxxx, v2.xxyz, r1.yyzw
add r1.yzw, r1.yyzw, v4.xxyz
add r2.x, -r1.y, cb0[17].w
add r2.y, -r1.z, cb0[18].w
add r2.z, -r1.w, cb0[19].w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, cb3[37].zzzz, r1.yzwy
mov r2.w, l(1.000000)
dp4_sat r1.y, r2.xyzw, cb2[14].xyzw
add_sat r1.z, r1.y, -cb2[17].y
div_sat r1.y, r1.y, cb2[17].y
mul r1.y, r1.y, cb2[17].x
div r1.x, r1.z, r1.x
log r1.x, |r1.x|
mul r1.x, r1.x, cb2[16].w
exp r1.x, r1.x
mul r0.w, r0.w, r1.x
and r0.x, r0.w, r0.x
lt r0.w, l(0.000000), cb2[17].y
and r0.w, r1.y, r0.w
add r0.x, r0.x, r0.w
round_ni r0.w, r0.x
div r0.yzw, r0.yyzw, cb2[16].xxyz
dp4 r1.x, r2.xyzw, cb2[12].xyzw
dp4 r1.y, r2.xyzw, cb2[13].xyzw
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
div r3.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb2[16].xyzx
mad r1.xy, r1.xyxx, r0.yzyy, r3.xyxx
mov_sat r0.y, r1.y
div r0.y, r0.y, cb2[16].z
add r1.z, r0.w, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.yz, r1.xzxx, t0.zxyw, s0, l(0.000000)
div r1.z, r0.y, cb2[16].z
add r1.z, r0.w, r1.z
div r3.x, r0.x, cb2[16].z
round_pi r0.x, r0.x
div r0.x, r0.x, cb2[16].z
add r0.x, -r0.w, r0.x
add r1.z, -r1.z, r3.x
mul r1.z, r1.z, cb2[16].z
add r3.xy, -r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.y, r3.y, l(0.250000), r0.z
min r0.y, r0.y, r3.x
div_sat r0.y, r1.z, r0.y
mad r0.x, r0.y, r0.x, r0.w
add r1.w, r3.z, r0.x
sample_l_indexable(texture3d)(float,float,float,float) r0.xyzw, r1.xywx, t3.xyzw, s0, l(0.000000)
log r0.xyzw, |r0.xyzw|
mul r0.xyzw, r0.xyzw, cb2[22].xxxx
exp r0.xyzw, r0.xyzw
add r3.xyzw, -r0.xyzw, cb1[9].xyzw
add r1.z, cb2[19].z, cb2[20].z
add r1.z, -r2.z, r1.z
mul_sat r1.z, r1.z, l(0.0333333351)
add r1.z, -r1.z, l(1.000000)
mad r0.xyzw, r1.zzzz, r3.xyzw, r0.xyzw
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r1.xywx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r1.xywx, t1.xyzw, s0, l(0.000000)
log r4.xyzw, |r4.xyzw|
mul r4.xyzw, r4.xyzw, cb2[22].xxxx
exp r4.xyzw, r4.xyzw
log r3.xyzw, |r3.xyzw|
mul r3.xyzw, r3.xyzw, cb2[22].xxxx
exp r3.xyzw, r3.xyzw
add r5.xyzw, -r3.xyzw, cb1[10].xyzw
mad r3.xyzw, r1.zzzz, r5.xwyz, r3.xwyz
add r0.xyz, r0.xyzx, r3.xzwx
mov r3.x, r0.w
add r5.xyzw, -r4.xyzw, cb1[11].xyzw
mad r1.xyzw, r1.zzzz, r5.xyzw, r4.xyzw
add r0.xyz, r0.xyzx, r1.xyzx
mov r3.z, r1.w
add r0.xyz, r0.xyzx, r3.xyzx
mul r0.xyz, r0.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
div r1.xyz, r0.xyzx, cb0[175].wwww
dp3_sat r0.w, r1.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
ge r1.x, cb4[1].z, r0.w
ge r1.yz, r0.wwww, cb4[1].xxzx
and r1.xyz, r1.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.x, r1.x, r1.y
add r1.yw, r0.wwww, -cb4[1].xxxz
add r3.xy, -cb4[1].xyxx, cb4[1].zwzz
div r1.y, r1.y, r3.x
mad r1.y, r1.y, r3.y, cb4[1].y
mul r1.x, r1.y, r1.x
ge r3.xy, cb4[2].xzxx, r0.wwww
and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r1.y, r1.z, r3.x
add r3.xz, -cb4[1].zzwz, cb4[2].xxyx
div r1.z, r1.w, r3.x
mad r1.z, r1.z, r3.z, cb4[1].w
mul r1.y, r1.z, r1.y
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r1.x, r1.y, r1.x
ge r1.yz, r0.wwww, cb4[2].xxzx
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r1.y, r3.y, r1.y
add r3.xy, r0.wwww, -cb4[2].xzxx
add r3.zw, -cb4[2].xxxy, cb4[2].zzzw
div r1.w, r3.x, r3.z
mad r1.w, r1.w, r3.w, cb4[2].y
mul r1.y, r1.w, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.yw, cb4[3].xxxz, r0.wwww
and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r1.y, r1.y, r1.z
add r3.xz, -cb4[2].zzwz, cb4[3].xxyx
div r1.z, r3.y, r3.x
mad r1.z, r1.z, r3.z, cb4[2].w
mul r1.y, r1.z, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.yz, r0.wwww, cb4[3].xxzx
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r1.y, r1.w, r1.y
add r3.xy, r0.wwww, -cb4[3].xzxx
add r3.zw, -cb4[3].xxxy, cb4[3].zzzw
div r1.w, r3.x, r3.z
mad r1.w, r1.w, r3.w, cb4[3].y
mul r1.y, r1.w, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.yw, cb4[4].xxxz, r0.wwww
and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r1.y, r1.y, r1.z
add r3.xz, -cb4[3].zzwz, cb4[4].xxyx
div r1.z, r3.y, r3.x
mad r1.z, r1.z, r3.z, cb4[3].w
mul r1.y, r1.z, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.yz, r0.wwww, cb4[4].xxzx
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r1.y, r1.w, r1.y
add r3.xy, r0.wwww, -cb4[4].xzxx
add r3.zw, -cb4[4].xxxy, cb4[4].zzzw
div r1.w, r3.x, r3.z
mad r1.w, r1.w, r3.w, cb4[4].y
mul r1.y, r1.w, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.yw, cb4[5].xxxz, r0.wwww
and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
mul r1.y, r1.y, r1.z
add r3.xz, -cb4[4].zzwz, cb4[5].xxyx
div r1.z, r3.y, r3.x
mad r1.z, r1.z, r3.z, cb4[4].w
mul r1.y, r1.z, r1.y
max r1.y, r1.y, l(0.000000)
add r1.x, r1.y, r1.x
ge r1.y, r0.w, cb4[5].x
add r0.w, r0.w, -cb4[5].x
and r1.y, r1.y, l(0x3f800000)
mul r1.y, r1.w, r1.y
add r1.zw, -cb4[5].xxxy, cb4[5].zzzw
div r0.w, r0.w, r1.z
mad r0.w, r0.w, r1.w, cb4[5].y
mul r0.w, r0.w, r1.y
max r0.w, r0.w, l(0.000000)
add r0.w, r0.w, r1.x
mad r1.x, v1.w, cb3[37].x, cb3[37].y
mul_sat o0.w, r0.w, r1.x
mul r1.xyz, v1.zyxz, v1.zyxz
mul_sat r1.xyz, r1.xyzx, cb4[6].wwww
mul o0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, -r2.xyzx, cb0[174].xyzx
dp3 r0.x, r0.xyzx, -cb0[173].xyzx
add r0.x, r0.x, -cb0[67].x
add o1.w, r0.x, r0.x
dp4 r0.x, r2.xyzw, cb0[54].xyzw
dp4 r0.y, r2.xyzw, cb0[55].xyzw
dp4 r0.z, r2.xyzw, cb0[56].xyzw
dp4 r0.w, r2.xyzw, cb0[57].xyzw
add r1.xyz, r2.xyzx, -cb0[174].xyzx
dp3 r1.x, cb0[173].xyzx, r1.xyzx
mul o2.z, r1.x, cb0[67].w

// Relocated to here with asmtool.py
mov o3.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 757e3295a4394296-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

dp4 o1.x, r0.xyzw, cb0[1].xyzw
dp4 o1.y, r0.xyzw, cb0[2].xyzw
dp4 o1.z, r0.xyzw, cb0[4].xyzw

// mov o3.xyzw, r0.xyzw // Relocated from here with asmtool.py

sincos r0.x, r1.x, v4.w
mov r2.x, -r0.x
add r0.yz, v0.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r2.y, r1.x
mov r2.z, r0.x
dp2 r1.y, r0.zyzz, r2.yzyy
dp2 r1.x, r0.zyzz, r2.xyxx
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad o2.xy, r0.xyxx, v5.zwzz, v5.xyxx
ret 
// Approximately 198 instruction slots used