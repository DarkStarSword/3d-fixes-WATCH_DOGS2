// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 58d4a4695c541473-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:07:28 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16 [unused]
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528 [unused]
//
// }
//
// cbuffer CollisionRegionsModifier
// {
//
//   float4 RegionOffsets[3];           // Offset:    0 Size:    48
//   float4 RegionsDeform[4];           // Offset:   48 Size:    64
//   float4 RegionsScratches[4];        // Offset:  112 Size:    64 [unused]
//   float3 BoundingMax;                // Offset:  176 Size:    12
//   float3 BoundingMin;                // Offset:  192 Size:    12
//   uint3 RegionsCount;                // Offset:  208 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport                          cbuffer      NA          NA    0        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// CollisionRegionsModifier          cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// blendweight              0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int       
// normal                   0   xyzw        2     NONE   float       
// color                    1   xyzw        3     NONE   float   xyz 
// texcoord                 1   xyzw        4     NONE   float       
// texcoord                 0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_Position              0   xyzw        1      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[1533], dynamicIndexed
dcl_constantbuffer cb4[14], dynamicIndexed
dcl_input v0.xyzw
dcl_input v3.xyz
dcl_output o0.xyz
dcl_output_siv o1.xyzw, position
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
mad r0.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
add r1.xyz, v3.zyxz, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r2.xyz, r0.xyzx, -cb4[12].xyzx
add r3.xyz, cb4[11].xyzx, -cb4[12].xyzx
div r2.xyz, r2.xyzx, r3.xyzx
ine r3.xyz, cb4[13].xyzx, l(1, 1, 1, 0)
if_nz r3.x
  ge r4.xyzw, r2.xxxx, cb4[0].xyzw
  and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r0.w, r0.w
  if_nz r0.w
    iadd r1.w, r0.w, l(-1)
    dp4 r1.w, cb4[0].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r1.w, l(0)
  endif 
  iadd r3.xw, cb4[13].xxxx, l(-1, 0, 0, -2)
  ult r2.w, r0.w, r3.x
  if_nz r2.w
    dp4 r2.w, cb4[0].xyzw, icb[r0.w + 0].xyzw
  else 
    mov r2.w, l(1.000000)
  endif 
  add r3.x, -r1.w, r2.x
  add r1.w, -r1.w, r2.w
  div r1.w, r3.x, r1.w
  mad r1.w, r1.w, l(2.000000), l(-1.000000)
  dp4 r2.w, cb4[0].xyzw, icb[r3.w + 0].xyzw
  add r2.w, r2.w, l(1.000000)
  mul r2.w, r2.w, l(0.500000)
  ge r2.w, r2.w, r2.x
  and r2.w, r2.w, l(0x3f800000)
  mul r1.w, r1.w, r2.w
  mul r2.w, cb4[0].x, l(0.500000)
  ge r2.x, r2.x, r2.w
  and r2.x, r2.x, l(0x3f800000)
  mul r4.x, r1.w, r2.x
else 
  mov r4.x, l(0)
  mov r0.w, l(0)
endif 
if_nz r3.y
  ge r5.xyzw, r2.yyyy, cb4[1].xyzw
  and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r1.w, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r1.w, r1.w
  if_nz r1.w
    iadd r2.x, r1.w, l(-1)
    dp4 r2.x, cb4[1].xyzw, icb[r2.x + 0].xyzw
  else 
    mov r2.x, l(0)
  endif 
  iadd r3.xy, cb4[13].yyyy, l(-1, -2, 0, 0)
  ult r2.w, r1.w, r3.x
  if_nz r2.w
    dp4 r2.w, cb4[1].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r2.w, l(1.000000)
  endif 
  add r3.x, -r2.x, r2.y
  add r2.x, -r2.x, r2.w
  div r2.x, r3.x, r2.x
  mad r2.x, r2.x, l(2.000000), l(-1.000000)
  dp4 r2.w, cb4[1].xyzw, icb[r3.y + 0].xyzw
  add r2.w, r2.w, l(1.000000)
  mul r2.w, r2.w, l(0.500000)
  ge r2.w, r2.w, r2.y
  and r2.w, r2.w, l(0x3f800000)
  mul r2.x, r2.w, r2.x
  mul r2.w, cb4[1].x, l(0.500000)
  ge r2.y, r2.y, r2.w
  and r2.y, r2.y, l(0x3f800000)
  mul r4.y, r2.y, r2.x
else 
  mov r4.y, l(0)
  mov r1.w, l(0)
endif 
imad r0.w, r1.w, cb4[13].x, r0.w
if_nz r3.z
  ge r3.xyzw, r2.zzzz, cb4[2].xyzw
  and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r1.w, r1.w
  if_nz r1.w
    iadd r2.x, r1.w, l(-1)
    dp4 r2.x, cb4[2].xyzw, icb[r2.x + 0].xyzw
  else 
    mov r2.x, l(0)
  endif 
  iadd r2.yw, cb4[13].zzzz, l(0, -1, 0, -2)
  ult r2.y, r1.w, r2.y
  if_nz r2.y
    dp4 r2.y, cb4[2].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r2.y, l(1.000000)
  endif 
  add r3.x, -r2.x, r2.z
  add r2.x, -r2.x, r2.y
  div r2.x, r3.x, r2.x
  mad r2.x, r2.x, l(2.000000), l(-1.000000)
  dp4 r2.y, cb4[2].xyzw, icb[r2.w + 0].xyzw
  add r2.y, r2.y, l(1.000000)
  mul r2.y, r2.y, l(0.500000)
  ge r2.y, r2.y, r2.z
  and r2.y, r2.y, l(0x3f800000)
  mul r2.x, r2.y, r2.x
  mul r2.y, cb4[2].x, l(0.500000)
  ge r2.y, r2.z, r2.y
  and r2.y, r2.y, l(0x3f800000)
  mul r4.z, r2.y, r2.x
else 
  mov r4.z, l(0)
  mov r1.w, l(0)
endif 
imul null, r1.w, r1.w, cb4[13].x
imad r0.w, r1.w, cb4[13].y, r0.w
lt r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
lt r3.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r2.xyz, -r2.yxzy, r3.yxzy
imul null, r3.xy, r2.xzxx, cb4[13].xxxx
imad r2.w, r2.x, cb4[13].x, r2.y
mov r2.x, l(0)
mov r2.z, r3.x
iadd r2.xyzw, r0.wwww, r2.xyzw
imad r3.xyzw, r3.yyyy, cb4[13].yyyy, r2.xyzw
min r4.xyz, |r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
ushr r5.xyzw, r2.xyzw, l(2, 2, 2, 2)
and r2.xyzw, r2.xyzw, l(3, 3, 3, 3)
dp4 r6.x, cb4[r5.x + 3].xyzw, icb[r2.x + 0].xyzw
dp4 r6.y, cb4[r5.y + 3].xyzw, icb[r2.y + 0].xyzw
dp4 r6.z, cb4[r5.z + 3].xyzw, icb[r2.z + 0].xyzw
dp4 r6.w, cb4[r5.w + 3].xyzw, icb[r2.w + 0].xyzw
ushr r2.xyzw, r3.xyzw, l(2, 2, 2, 2)
and r3.xyzw, r3.xyzw, l(3, 3, 3, 3)
dp4 r5.x, cb4[r2.x + 3].xyzw, icb[r3.x + 0].xyzw
dp4 r5.y, cb4[r2.y + 3].xyzw, icb[r3.y + 0].xyzw
dp4 r5.z, cb4[r2.z + 3].xyzw, icb[r3.z + 0].xyzw
dp4 r5.w, cb4[r2.w + 3].xyzw, icb[r3.w + 0].xyzw
add r2.xyzw, -r6.xyzw, r5.xyzw
mad r2.xyzw, r4.zzzz, r2.xyzw, r6.xyzw
add r2.zw, -r2.xxxy, r2.zzzw
mad r2.xy, r4.yyyy, r2.zwzz, r2.xyxx
add r0.w, -r2.x, r2.y
mad_sat r0.w, r4.x, r0.w, r2.x
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, l(0.650000, 0.650000, 0.650000, 0.000000), r0.xyzx
imul null, r1.x, v0.w, l(3)
mov r0.w, l(1.000000)
dp4 r2.x, r0.xyzw, cb3[r1.x + 0].xyzw
dp4 r2.y, r0.xyzw, cb3[r1.x + 1].xyzw
dp4 r2.z, r0.xyzw, cb3[r1.x + 2].xyzw
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb1[0].xyzw
dp4 r0.y, r2.xyzw, cb1[1].xyzw
dp4 r0.z, r2.xyzw, cb1[2].xyzw
add r0.xyz, r0.xyzx, -cb0[174].xyzx
mul r1.x, r0.x, cb0[58].x
mul r1.y, r0.x, cb0[59].x
mul r1.z, r0.x, cb0[60].x
mul r1.w, r0.x, cb0[61].x
mul r2.x, r0.y, cb0[58].y
mul r2.y, r0.y, cb0[59].y
mul r2.z, r0.y, cb0[60].y
mul r2.w, r0.y, cb0[61].y
mad r3.x, r0.z, cb0[58].z, cb0[58].w
mad r3.y, r0.z, cb0[59].z, cb0[59].w
mad r3.z, r0.z, cb0[60].z, cb0[60].w
mad r3.w, r0.z, cb0[61].z, cb0[61].w
add r0.xyzw, r2.xyzw, r3.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o1.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 58d4a4695c541473-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

mul r1.xy, r0.xyxx, cb0[66].xyxx
mul o0.xy, r1.xyxx, l(0.00390625000, -0.00390625000, 0.000000, 0.000000)

// mov o1.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o0.z, r0.w
ret 
// Approximately 178 instruction slots used