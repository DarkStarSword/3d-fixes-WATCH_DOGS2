// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed 537c3d35fc497704-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:05:22 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4 [unused]
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LightData__LightIESTexture__SampObj__    sampler      NA          NA    0        1
// LightData__LightIESTexture__TexObj__    texture  float4          2d    0        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    1        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    2        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    3        1
// Viewport                          cbuffer      NA          NA    0        1
// LightData                         cbuffer      NA          NA    1        1
// VolumetricFog                     cbuffer      NA          NA    2        1
// GBufferMini                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[54], immediateIndexed
dcl_constantbuffer cb2[38], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
mad r0.z, cb3[0].y, cb0[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.yzxw
mad r0.z, r0.z, cb0[67].z, cb0[67].x
mov r2.z, -r0.z
mul r0.zw, r0.xxxy, r2.zzzz
movc r2.xy, cb3[0].zzzz, r0.xyxx, r0.zwzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t2.xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t3.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r3.xyz, -r0.xyzx, cb0[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed 537c3d35fc497704-ps.txt

mov r9.xyz, r3.xyzx
mov r9.w, l(1.0)
dp4 r10.w, r9.xyzw, cb0[57].xyzw
add r10.x, r10.w, -r8.y
mul r10.x, r10.x, -r8.x
mul r10.x, r10.x, cb0[9].x
mov r10.yzw, l(0.0)
dp4 r9.x, r10.xyzw, cb0[17].xyzw
dp4 r9.y, r10.xyzw, cb0[18].xyzw
dp4 r9.z, r10.xyzw, cb0[19].xyzw
add r3.xyz, r3.xyzw, r9.xyzx

dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add r4.xyz, -r0.xyzx, cb1[51].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r4.xyzx
add r6.xyz, -r0.xyzx, cb1[50].xyzx
dp3 r3.w, r5.xyzx, cb1[48].xyzx
mad r7.x, cb1[28].y, r3.w, cb1[28].x
mov r7.y, cb1[28].z
sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t0.xyzw, s0, l(0.000000)
div r4.w, r7.x, r7.y
mul r7.xyz, r4.wwww, cb1[49].xyzx
mad_sat r3.w, -r3.w, cb1[52].z, cb1[52].w
mul r7.xyz, r3.wwww, r7.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
mul r3.w, r3.w, cb1[53].y
mad r3.w, -r3.w, r3.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, r4.w
min r3.w, r3.w, cb1[53].w
mov r0.w, l(1.000000)
dp4 r4.w, cb1[20].xyzw, r0.xyzw
min r4.w, r4.w, l(1.000000)
dp4 r5.w, cb1[21].xyzw, r0.xyzw
min r4.w, r4.w, r5.w
dp4 r0.w, cb1[22].xyzw, r0.xyzw
min r0.w, r0.w, r4.w
lt r4.w, r0.w, l(0.000000)
discard_nz r4.w
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, |r3.w|
mul r6.xyz, r0.wwww, r7.xyzx
dp3_sat r0.w, r1.xyzx, r5.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r3.w, r1.xyzx, r3.xyzx
mad r3.xyz, r4.xyzx, r1.wwww, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r3.xyzx, r5.xyzx
dp3_sat r1.x, r1.xyzx, r3.xyzx
mul r1.x, r1.x, r1.x
mad r1.x, r1.x, l(-0.937500), l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, l(3.14159274)
mul r1.y, r0.w, r0.w
mad r1.z, -r0.w, r0.w, l(1.000000)
mul r1.z, r1.z, l(0.390625)
max r1.y, r1.y, l(1.000000047E-034)
div r1.y, r1.z, r1.y
add r1.y, r1.y, l(1.000000)
sqrt r1.y, r1.y
add r1.y, r1.y, l(1.000000)
mul r1.z, r3.w, r3.w
mad r3.x, -r3.w, r3.w, l(1.000000)
mul r3.x, r3.x, l(0.390625)
max r1.z, r1.z, l(1.000000047E-034)
div r1.z, r3.x, r1.z
add r1.z, r1.z, l(1.000000)
sqrt r1.z, r1.z
add r1.z, r1.z, l(1.000000)
div r1.xyz, l(0.062500, 2.000000, 2.000000, 0.000000), r1.xyzx
mul r1.y, r1.z, r1.y
add r1.z, -r1.w, l(1.000000)
mul r1.xw, r1.yyyz, r1.xxxz
mul r1.w, r1.w, r1.w
mul r1.z, r1.w, r1.z
mad r1.z, r1.z, l(0.156800), l(0.003200)
mul r1.x, r1.z, r1.x
mul r0.w, r0.w, r1.x
mad r1.xyz, r2.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r0.wwww
mul r1.xyz, r1.xyzx, r6.xyzx
add r0.xyz, r0.xyzx, -cb0[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed 537c3d35fc497704-ps.txt

mov r9.xyz, r0.xyzx
mov r9.w, l(1.0)
dp4 r10.w, r9.xyzw, cb0[57].xyzw
add r10.x, r10.w, -r8.y
mul r10.x, r10.x, -r8.x
mul r10.x, r10.x, cb0[9].x
mov r10.yzw, l(0.0)
dp4 r9.x, r10.xyzw, cb0[17].xyzw
dp4 r9.y, r10.xyzw, cb0[18].xyzw
dp4 r9.z, r10.xyzw, cb0[19].xyzw
add r0.xyz, r0.xyzw, r9.xyzx

dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.y, r0.z, r0.x
mul r0.w, cb0[174].z, -cb2[37].x
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
mul r0.w, r0.w, r0.x
lt r1.w, l(0.010000), |r0.z|
mul r0.z, r0.z, cb2[37].x
mul r2.x, r0.z, l(-1.442695)
exp r2.x, r2.x
add r2.x, -r2.x, l(1.000000)
div r0.z, r2.x, r0.z
mul r0.z, r0.z, r0.w
movc r0.z, r1.w, r0.z, r0.w
mul r0.z, r0.z, cb2[36].w
mul r0.z, r0.z, l(0.300000)
min r0.z, r0.z, l(200.000000)
mul r0.w, r0.z, cb2[6].x
mad r0.z, cb2[7].x, r0.z, r0.w
mul r0.z, r0.z, l(-4.328085)
exp r0.z, r0.z
iadd r0.w, cb2[28].z, l(-1)
utof r0.w, r0.w
mul r0.w, r0.w, l(0.031250)
exp r0.w, r0.w
mad r0.w, r0.w, cb2[1].z, cb2[1].w
add r1.w, cb2[4].y, cb2[4].x
add r1.w, r1.w, -cb0[174].z
div r1.w, r1.w, r0.y
max r1.w, r0.w, r1.w
min r1.w, r0.x, r1.w
mad r2.x, r0.y, r1.w, cb0[174].z
add r2.x, r2.x, -cb2[34].y
add r2.y, -cb2[34].y, cb2[34].x
div_sat r2.x, r2.x, r2.y
add r2.x, -r2.x, l(1.000000)
mul r2.x, r2.x, cb2[34].z
log r2.x, |r2.x|
mul r2.x, r2.x, l(1.300000)
exp r2.x, r2.x
mul r2.z, r2.x, cb2[8].z
add r3.x, -cb0[174].z, cb2[4].x
div r3.x, r3.x, r0.y
max r3.x, r0.w, r3.x
min r3.x, r0.x, r3.x
mad r3.y, r0.y, r3.x, cb0[174].z
add r3.y, r3.y, -cb2[34].y
div_sat r3.y, r3.y, r2.y
add r3.y, -r3.y, l(1.000000)
mul r3.y, r3.y, cb2[34].z
log r3.y, |r3.y|
mul r3.y, r3.y, l(1.300000)
exp r3.y, r3.y
mul r3.z, r3.y, cb2[8].z
add r3.w, -cb0[174].z, l(-100000.000000)
div r3.w, r3.w, r0.y
max r0.w, r0.w, r3.w
min r0.w, r0.x, r0.w
mad r3.w, r0.y, r0.w, cb0[174].z
add r3.w, r3.w, -cb2[34].y
div_sat r2.y, r3.w, r2.y
add r2.y, -r2.y, l(1.000000)
mul r2.y, r2.y, cb2[34].z
log r2.y, |r2.y|
mul r2.y, r2.y, l(1.300000)
exp r2.y, r2.y
mul r3.w, r2.y, cb2[8].z
add r4.x, cb2[6].x, cb2[7].x
lt r4.y, r0.y, l(0.000000)
if_nz r4.y
  add r4.y, -r1.w, r3.x
  lt r4.z, l(0.000000), r4.y
  mad r4.w, r3.y, cb2[8].z, -r2.z
  add r5.x, r4.y, l(0.000001)
  div r4.w, r4.w, r5.x
  mul r5.x, r4.y, r4.x
  mul r4.y, r4.y, r4.w
  mad r2.z, r4.y, l(0.500000), r2.z
  mul r2.z, r2.z, r5.x
  and r2.z, r2.z, r4.z
  add r4.y, -r3.x, r0.w
  lt r4.z, l(0.000000), r4.y
  mad r2.y, r2.y, cb2[8].z, -r3.z
  add r4.w, r4.y, l(0.000001)
  div r2.y, r2.y, r4.w
  mul r4.w, r4.y, r4.x
  mul r2.y, r4.y, r2.y
  mad r2.y, r2.y, l(0.500000), r3.z
  mad r2.y, r4.w, r2.y, r2.z
  movc r2.y, r4.z, r2.y, r2.z
else 
  add r0.w, -r0.w, r3.x
  lt r2.z, l(0.000000), r0.w
  mad r3.y, r3.y, cb2[8].z, -r3.w
  add r4.y, r0.w, l(0.000001)
  div r3.y, r3.y, r4.y
  mul r4.y, r0.w, r4.x
  mul r0.w, r0.w, r3.y
  mad r0.w, r0.w, l(0.500000), r3.w
  mul r0.w, r0.w, r4.y
  and r0.w, r0.w, r2.z
  add r1.w, r1.w, -r3.x
  lt r2.z, l(0.000000), r1.w
  mad r2.x, r2.x, cb2[8].z, -r3.z
  add r3.x, r1.w, l(0.000001)
  div r2.x, r2.x, r3.x
  mul r3.x, r1.w, r4.x
  mul r1.w, r1.w, r2.x
  mad r1.w, r1.w, l(0.500000), r3.z
  mad r1.w, r3.x, r1.w, r0.w
  movc r2.y, r2.z, r1.w, r0.w
endif 
mul r0.w, r2.y, l(-1.442695)
exp r0.w, r0.w
mul r0.z, r0.w, r0.z
div r0.y, cb2[31].w, |r0.y|
min r0.x, r0.y, r0.x
mul r0.y, r0.x, cb2[29].w
min r0.y, r0.y, l(1.000000)
add r0.x, r0.x, -cb2[33].w
mul_sat r0.x, r0.x, cb2[32].w
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, cb2[30].w
mul r0.x, r0.x, l(-1.442695)
exp r0.x, r0.x
mul r0.x, r0.x, r0.z
mul r0.xyz, r0.xxxx, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r2.wwww, r0.xyzx
mov o0.w, l(0)
ret 
// Approximately 233 instruction slots used