// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed b3d8559f2c6f29e6-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:03 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FillShadowVolume__VFPrevShadowVolumeTexture__SampObj__    sampler      NA          NA    0        1
// ShadowRealSampler               sampler_c      NA          NA    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// FillShadowVolume__VFPrevShadowVolumeTexture__TexObj__    texture  float4          3d    1        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    2        1
// FillShadowVolume__VFOutputBuffer1        UAV   float          3d    0        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// VolumetricFog                     cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[34], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 10
dcl_indexableTemp x0[4], 4
dcl_thread_group 8, 8, 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

ult r0.xy, vThreadID.xyxx, cb2[28].xyxx
and r0.x, r0.y, r0.x
if_nz r0.x
  utof r0.xyz, vThreadID.xyzx
  add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  utof r1.xy, cb2[28].xyxx
  div r0.xy, r0.xyxx, r1.xyxx
  mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r0.xy, r0.xyxx, cb2[27].xyxx
  mul r0.yz, r0.yyzy, l(0.000000, -1.000000, 0.031250, 0.000000)
  mul r1.xyz, r0.yyyy, cb2[32].xyzx
  mad r0.xyw, r0.xxxx, cb2[31].xyxz, r1.xyxz
  add r0.xyw, r0.xyxw, cb2[33].xyxz
  iadd r1.x, vThreadID.z, l(1)
  utof r1.x, r1.x
  mul r1.x, r1.x, l(0.031250)
  exp r1.x, r1.x
  mad r1.x, r1.x, cb2[1].z, cb2[1].w
  exp r0.z, r0.z
  mad r0.z, r0.z, cb2[1].z, cb2[1].w
  add r0.z, r0.z, r1.x
  mul r0.z, r0.z, l(0.500000)
  mad r0.xyz, r0.xywx, r0.zzzz, cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed b3d8559f2c6f29e6-cs.txt
mov r9.xyzw, r0.xyzw

mov r7.xyz, r0.xyzx
mov r7.w, l(1.0)
dp4 r8.w, r7.xyzw, cb1[57].xyzw
add r8.x, r8.w, -r6.y
mul r8.x, r8.x, -r6.x
mul r8.x, r8.x, cb1[9].x
mov r8.yzw, l(0.0)
dp4 r7.x, r8.xyzw, cb1[17].xyzw
dp4 r7.y, r8.xyzw, cb1[18].xyzw
dp4 r7.z, r8.xyzw, cb1[19].xyzw
add r0.xyz, r0.xyzw, r7.xyzx

  dp3 r1.x, r0.xyzx, cb0[1].xyzx
  add_sat r1.x, r1.x, cb0[1].w
  mov r1.yzw, l(0,0,0,0)
  mov r2.zw, l(0,0,0,3)
  mov r3.x, l(0)
  loop 
    uge r3.y, r3.x, l(4)
    breakc_nz r3.y
    ishl r3.y, r3.x, l(2)
    mul r4.xyz, r0.yyyy, cb3[r3.y + 1].xyzx
    mad r4.xyz, cb3[r3.y + 0].xyzx, r0.xxxx, r4.xyzx
    mad r4.xyz, cb3[r3.y + 2].xyzx, r0.zzzz, r4.xyzx
    add r3.yzw, r4.xxyz, cb3[r3.y + 3].xxyz
    max r4.x, |r3.z|, |r3.y|
    add r4.x, r4.x, cb3[16].x
    ult r4.y, r3.x, l(3)
    if_nz r4.y
      lt r4.y, r4.x, l(1.000000)
      if_nz r4.y
        mov r1.yz, r3.yyzy
        mov r2.z, r3.w
        mov r1.w, r4.x
        mov r2.w, r3.x
        break 
      endif 
    endif 
    iadd r3.x, r3.x, l(1)
    mov r1.yz, r3.yyzy
    mov r2.z, r3.w
    mov r1.w, r4.x
    mov r2.w, l(3)
  endloop 
  mov x0[0].z, l(0.125000)
  mov x0[1].z, l(0.375000)
  mov x0[2].z, l(0.625000)
  mov x0[3].z, l(0.875000)
  mov r3.x, x0[r2.w + 0].z
  mov r3.y, l(0.500000)
  mad r2.xy, r1.yzyy, l(0.125000, -0.500000, 0.000000, 0.000000), r3.xyxx
  dp4 r1.y, cb3[17].xyzw, icb[r2.w + 0].xyzw
  ieq r1.z, r2.w, l(3)
  mad_sat r1.w, r1.w, cb3[16].z, cb3[16].w
  and r1.z, r1.w, r1.z
  ld_indexable(texture2d)(float,float,float,float) r3.xy, l(0, 0, 0, 0), t0.xyzw
  mad r3.xy, r3.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r3.zw, r3.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
  mad r4.xy, r3.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r3.zwzz
  dp2 r4.z, r3.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
  mul r1.yw, r1.yyyy, cb3[38].zzzw
  mul r5.xy, r1.ywyy, r4.xzxx
  mov r5.z, l(0)
  add r5.xyz, r2.xyzx, r5.xyzx
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r5.xyxx, t2.xxxx, s1, r5.z
  dp2 r4.w, r3.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
  mul r4.xy, r1.ywyy, r4.ywyy
  mov r4.z, l(0)
  add r4.xyz, r2.xyzx, r4.xyzx
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.z, r4.xyxx, t2.xxxx, s1, r4.z
  add r2.w, r2.w, r3.z
  mul r3.zw, r3.xxxx, l(0.000000, 0.000000, -0.602610528, 0.987966299)
  mad r4.xy, r3.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r3.zwzz
  dp2 r4.z, r3.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
  mul r5.xy, r1.ywyy, r4.xzxx
  mov r5.z, l(0)
  add r5.xyz, r2.xyzx, r5.xyzx
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.z, r5.xyxx, t2.xxxx, s1, r5.z
  add r2.w, r2.w, r3.z
  dp2 r4.w, r3.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
  mul r3.xy, r1.ywyy, r4.ywyy
  mov r3.z, l(0)
  add r2.xyz, r2.xyzx, r3.xyzx
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r2.xyxx, t2.xxxx, s1, r2.z
  add r1.y, r1.y, r2.w
  mul r1.w, r1.y, l(0.250000)
  mad r1.y, -r1.y, l(0.250000), l(1.000000)
  mad r1.y, r1.z, r1.y, r1.w
  mov r0.w, l(1.000000)
  dp4 r1.z, r9.xyzw, cb2[21].xyzw
  lt r1.w, l(0.000000), r1.z
  if_nz r1.w
    dp4 r2.x, r9.xyzw, cb2[18].xyzw
    dp4 r2.y, r9.xyzw, cb2[19].xyzw
    dp4 r0.x, r9.xyzw, cb2[20].xyzw
    div r0.yz, r2.xxyx, r1.zzzz
    mad r2.xy, r0.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r0.x, r0.x, -cb2[1].w
    div r0.x, r0.x, cb2[1].z
    log r0.x, r0.x
    mul r0.x, r0.x, l(32.000000)
    iadd r0.y, cb2[28].z, l(-1)
    utof r0.y, r0.y
    div r2.z, r0.x, r0.y
    sample_l_indexable(texture3d)(float,float,float,float) r0.x, r2.xyzx, t1.xyzw, s0, l(0.000000)
  else 
    mov r0.x, l(0)
  endif 
  add r0.y, -r0.x, r1.y
  mad r0.x, r0.y, l(0.250000), r0.x
  mul r0.x, r1.x, r0.x
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 
ret 
// Approximately 125 instruction slots used