// Reflections - environment & screen space
// Fixed one set of screen space reflections accurately - hooray! the first ever! :)
// Shader has another two screen space reflections that I've adjusted, but have
// not tested

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:35 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float SSRTextureMaxMipIndex;       // Offset:  128 Size:     4
//   bool GameIsPaused;                 // Offset:  132 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    1        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    2        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    3        1
// DeferredLightingBase__ProbeLightingTexture    texture  float4          2d    4        1
// SSR__MotionVectorTexture__TexObj__    texture  float4          2d    5        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    6        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    7        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d    8        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d    9        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d   10        1
// Viewport                          cbuffer      NA          NA    0        1
// SSR                               cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[185], dynamicIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecubearray (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 22
dcl_resource_texture2d (float,float,float,float) t125
ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.zwxy
mov r0.w, l(1.000000)

// InvProjectionMatrix:
dp2 r2.x, r0.zwzz, cb0[11].zwzz
dp2 r0.z, r0.zwzz, cb0[12].zwzz
div r0.z, -r2.x, r0.z

mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// Unprojection fix (affects all reflections, including SSR. Enough to move
// environment reflections to surface depth):
add r19.w, -r2.z, -r19.y
mul r19.w, r19.w, r19.x
mad r2.x, -r19.w, cb0[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t8.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t9.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t10.zyxw
mad r5.x, r4.w, l(255.000000), l(0.500000)
round_ni r5.x, r5.x
ftou r5.x, r5.x
ushr r5.x, r5.x, l(5)
dp3 r5.y, r3.xyzx, r3.xyzx
rsq r5.y, r5.y
mul r5.yzw, r3.xxyz, r5.yyyy
ieq r6.xy, r5.xxxx, l(1, 4, 0, 0)
ge r6.z, r2.w, l(0.750000)
add r6.w, r2.w, l(-0.750000)
mad r6.w, r6.w, l(-0.599999905), l(1.000000)
movc r6.z, r6.z, r6.w, l(1.000000)
movc r6.z, r6.y, r6.z, r2.w
movc r6.z, r6.x, l(1.000000), r6.z

// Camera position:
add r7.xyz, -r0.xyzx, cb0[174].xyzx

// Camera position fix - Moves reflections (including screen space once all the
// other adjustments are in place) from surface depth to correct depth
mul r20.x, r19.x, r19.y
mov r20.yzw, l(0.0, 0.0, 0.0, 0.0)
dp4 r21.x, r20.xyzw, cb0[9]
dp4 r21.y, r20.xyzw, cb0[10]
dp4 r21.z, r20.xyzw, cb0[11]
dp4 r21.w, r20.xyzw, cb0[12]
dp4 r20.x, r21.xyzw, cb0[17]
dp4 r20.y, r21.xyzw, cb0[18]
dp4 r20.z, r21.xyzw, cb0[19]
dp4 r20.w, r21.xyzw, cb0[20]
add r7.xyz, r7.xyz, r20.xyz

dp3 r6.w, r7.xyzx, r7.xyzx
rsq r6.w, r6.w
mul r7.xyz, r6.wwww, r7.xyzx
mul r8.yzw, r2.xxyz, r6.zzzz
if_nz r6.x
  mad r2.x, r3.w, l(0.500000), l(0.500000)
  mad r2.x, r2.x, l(65535.000000), l(0.500000)
  ftou r2.x, r2.x
  and r2.xy, r2.xxxx, l(255, 0x0000ff00, 0, 0)
  utof r2.xy, r2.xyxx
  mul r9.xz, r2.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.x, r2.w, l(255.000000)
  ftou r2.x, r2.x
  and r2.xy, r2.xxxx, l(15, 240, 0, 0)
  utof r2.xy, r2.xyxx
  mul r9.yw, r2.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r8.x, r8.y
  mov r2.x, l(0)
else 
  mul r2.z, r4.y, r4.y
  max r4.y, r2.z, l(0.001000)
  ieq r2.z, r5.x, l(2)
  if_nz r2.z
    mad r2.z, r3.w, l(0.500000), l(0.500000)
    mad r2.z, r2.z, l(65535.000000), l(0.500000)
    ftou r2.z, r2.z
    and r10.xy, r2.zzzz, l(255, 0x0000ff00, 0, 0)
    utof r10.xy, r10.xyxx
    mov r10.z, r4.z
    mad r10.xyz, r10.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.z, -r2.w, l(1.000000)
    mul r2.z, r2.z, r8.y
    mad r8.x, r2.z, l(0.500000), r8.y
    dp3 r2.z, r10.xyzx, r10.xyzx
    rsq r2.z, r2.z
    mul r9.xzw, r2.zzzz, r10.xxyz
    mov r9.y, l(0)
    mov r4.z, l(0.500000)
    mov r2.x, l(0)
  else 
    ieq r2.z, r5.x, l(3)
    if_nz r2.z
      mad r2.z, r3.w, l(0.500000), l(0.500000)
      mad r2.z, r2.z, l(65535.000000), l(0.500000)
      ftou r2.z, r2.z
      and r10.xyzw, r2.zzzz, l(0x0000f800, 2016, 31, 31)
      utof r10.xyzw, r10.xyzw
      ge r11.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r10.wyxw
      mul r2.z, r10.w, l(0.00249675405)
      mad r12.xyz, r10.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r12.xyz, r12.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r12.xyz, r12.xyzx
      mul r12.xyz, r12.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r12.xyz, r12.xyzx
      movc r9.x, r11.x, r2.z, r12.x
      mul r2.zw, r10.yyyx, l(0.000000, 0.000000, 0.0000383925508, 0.00000121911819)
      movc r9.zw, r11.yyyz, r2.zzzw, r12.yyyz
      mov r9.y, l(0)
      mov r2.x, l(0)
    else 
      if_nz r6.y
        mad r2.z, r3.w, l(32767.000000), l(32767.000000)
        ftou r2.z, r2.z
        and r2.w, r2.z, l(255)
        utof r2.w, r2.w
        mul r2.w, r2.w, l(0.0123199718)
        ubfe r2.z, l(8), l(8), r2.z
        utof r2.z, r2.z
        mad r2.z, r2.z, l(0.0246399436), l(-3.14159274)
        sincos r10.x, r11.x, r2.w
        sincos r12.x, r13.x, r2.z
        mul r13.x, r10.x, r13.x
        mul r13.y, r10.x, r12.x
        mov r13.z, r11.x
        dp3 r2.z, r13.xyzx, r13.xyzx
        rsq r2.z, r2.z
        mul r9.xzw, r2.zzzz, r13.xxyz
        mov r9.y, l(0)
        mov r2.x, l(0)
      else 
        ieq r2.z, r5.x, l(5)
        lt r2.w, r3.z, l(0.900000)
        movc r10.xyz, r2.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r11.xyz, r3.zxyz, r10.xyzx
        mad r10.xyz, r3.yzxy, r10.yzxy, -r11.xyzx
        dp3 r2.w, r10.xyzx, r10.xyzx
        rsq r2.w, r2.w
        mul r10.xyz, r2.wwww, r10.xyzx
        mul r11.xyz, r3.zxyz, r10.yzxy
        mad r3.xyz, r3.yzxy, r10.zxyz, -r11.xyzx
        dp3 r2.w, r3.xyzx, r3.xyzx
        rsq r2.w, r2.w
        mul r3.xyz, r2.wwww, r3.xyzx
        mad r2.w, r3.w, l(2.000000), l(-1.000000)
        mul r2.w, r2.w, l(3.14159274)
        sincos r11.x, r12.x, r2.w
        mul r10.xyz, r10.xyzx, r11.xxxx
        mad r10.xyz, r3.xyzx, r12.xxxx, r10.xyzx
        mad r2.w, r3.w, l(0.500000), l(0.500000)
        mad r2.w, r2.w, l(65535.000000), l(0.500000)
        ftou r2.w, r2.w
        and r3.xy, r2.wwww, l(255, 0x0000ff00, 0, 0)
        utof r3.xy, r3.xyxx
        mul r3.x, r3.x, l(0.00392156886)
        mad r3.z, r3.y, l(0.0000306372567), l(-1.000000)
        movc r3.xy, r5.xxxx, l(0,0,0,0), r3.xzxx
        mov r10.w, r4.x
        mov r3.z, l(0)
        movc r9.xyzw, r2.zzzz, r10.xwyz, r3.xzzz
        mov r3.w, r10.w
        movc r2.xy, r2.zzzz, l(0,0,0,0), r3.ywyy
        mov r4.x, r2.y
      endif 
    endif 
    mov r8.x, r8.y
  endif 
endif 
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t4.xyzw
div r3.xyz, r1.xyzx, cb0[176].wwww
dp3 r3.w, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r6.y
  mul r3.xyz, r3.xyzx, r8.xzwx
  mul r10.xyzw, r3.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r6.x
    mov_sat r1.xy, r9.xyxx
    mov_sat r1.z, r4.x
    log r2.yzw, r8.xxzw
    mul r11.xyz, r1.yyyy, r2.yzwy
    mul r11.xyz, r11.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r2.yzw, r2.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r11.xxyz
    eq r1.y, r1.x, l(0.000000)
    add r1.z, -r1.z, l(1.000000)
    mul r11.xyz, r1.zzzz, r8.xzwx
    mul r11.xyz, r11.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r2.yzw, -r1.xxxx, r2.yyzw
    exp r2.yzw, r2.yyzw
    mul r2.yzw, r11.xxyz, r2.yyzw
    mul r2.yzw, r2.yyzw, l(0.000000, 0.444444448, 0.444444448, 0.444444448)
    movc r11.xyz, r1.yyyy, r11.xyzx, r2.yzwy
    mov r11.w, l(0.180000)
  else 
    ieq r1.x, r5.x, l(2)
    if_nz r1.x
      mul r12.xyz, r8.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r12.w, l(0.0572957806)
      add r1.x, -r4.x, l(1.000000)
      mul r11.xyzw, r1.xxxx, r12.xyzw
    else 
      ieq r1.x, r5.x, l(3)
      if_nz r1.x
        dp3 r1.x, r7.xyzx, r7.xyzx
        min r1.x, r1.x, l(1.000000)
        mul r1.y, r4.z, l(0.080000)
        add r1.x, -r1.x, l(1.000000)
        mul r1.z, r1.x, r1.x
        mul r1.z, r1.z, r1.z
        mad r2.y, -r4.z, l(0.080000), l(1.000000)
        mul r1.z, r1.z, r2.y
        mad r1.x, r1.z, r1.x, r1.y
        add_sat r1.y, r4.y, r4.y
        mad r12.w, r1.y, -r1.x, l(1.000000)
        mul r12.xyz, r8.xzwx, r12.wwww
        mul r11.xyzw, r12.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        ieq r1.x, r5.x, l(5)
        if_nz r1.x
          mul r12.xyz, r8.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r12.w, l(0.0572957806)
          add r13.w, -r4.x, l(1.000000)
          mul r12.xyzw, r12.xyzw, r13.wwww
          mov r13.xyz, r12.xyzx
          mul r13.xyzw, r13.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
          add r1.x, -r9.y, l(1.000000)
          mul r12.xyzw, r9.yyyy, r12.xyzw
          mul r12.xyzw, r12.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          mad r11.xyzw, r13.xyzw, r1.xxxx, r12.xyzw
        else 
          ieq r1.x, r5.x, l(8)
          dp3 r1.y, r5.yzwy, r7.xyzx
          max r1.z, |r1.y|, l(0.000001)
          rcp r1.z, r1.z
          mul r1.y, r1.z, r1.y
          eq r1.y, r1.y, l(0.000000)
          movc r1.y, r1.y, l(0), l(1.000000)
          mul r2.yzw, r9.xxzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
          add r12.w, -r4.x, l(1.000000)
          mul r13.xyz, r2.yzwy, r12.wwww
          mov r13.w, l(0.180000)
          mul r12.xyz, r8.xzwx, r12.wwww
          mul r12.xyzw, r12.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
          mad r13.xyzw, r1.yyyy, r13.xyzw, r12.xyzw
          mul r14.xyz, r8.xzwx, r9.xxxx
          mov r14.w, r9.x
          mad r12.xyzw, r14.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r12.xyzw
          movc r11.xyzw, r1.xxxx, r13.xyzw, r12.xyzw
        endif 
      endif 
    endif 
  endif 
  mul r10.xyzw, r3.xyzw, r11.xyzw
endif 
if_nz r6.x
  mov_sat r9.xyzw, r9.xyzw
  mov_sat r4.xyz, r4.xyzx
  mul r1.x, r4.y, r4.y
  max r1.y, r1.x, l(0.001000)
  mul r2.y, r9.z, r9.z
  max r2.y, r2.y, l(0.001000)
  dp3 r2.z, -r7.xyzx, r5.yzwy
  add r2.z, r2.z, r2.z
  mad r3.xyz, r5.yzwy, -r2.zzzz, -r7.xyzx
  dp3 r2.z, r5.yzwy, r3.xyzx
  mad r2.z, -|r2.z|, |r2.z|, l(1.000000)
  mad r2.z, -r2.z, l(0.444702327), l(1.000000)
  add r2.w, r9.x, r9.x
  sqrt r2.z, r2.z
  div r2.z, r2.w, r2.z
  log r6.xyw, r8.xzxw
  mul r11.xyz, r9.yyyy, r6.xywx
  mul r11.xyz, r11.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r6.xyw, r6.xyxw, l(-0.020000, -0.020000, 0.000000, -0.020000), r11.xyxz
  eq r2.w, r9.x, l(0.000000)
  mul r3.w, r1.y, r1.y
  div r3.w, l(2.000000), r3.w
  add r3.w, r3.w, l(-2.000000)
  max r3.w, r3.w, l(1.000000031E-022)
  sqrt r3.w, r3.w
  div r3.w, l(-10.000000), r3.w
  exp r3.w, r3.w
  add r3.w, r3.w, l(-0.000980)
  mul_sat r3.w, r3.w, l(1.00795019)
  add r3.w, -r3.w, l(1.000000)
  mul r7.w, r3.w, cb0[183].w
  mul r8.y, r3.w, cb0[174].w
  ge r9.y, l(0.250000), r1.y
  if_nz r9.y
    ge r9.y, r5.w, l(0.250000)
    if_nz r9.y
      dp3 r11.x, r3.xyzx, cb0[51].xyzx
      dp3 r11.y, r3.xyzx, cb0[52].xyzx
      dp3 r11.z, r3.xyzx, cb0[53].xyzx
      dp3 r9.y, r11.xyzx, r11.xyzx
      rsq r9.y, r9.y
      mul r11.xyz, r9.yyyy, r11.xyzx
      mov r0.w, l(1.000000)
      dp4 r12.x, r0.xyzw, cb0[51].xyzw
      dp4 r12.y, r0.xyzw, cb0[52].xyzw
      dp4 r12.z, r0.xyzw, cb0[53].xyzw
      dp3 r13.x, r5.yzwy, cb0[51].xyzx
      dp3 r13.y, r5.yzwy, cb0[52].xyzx
      dp3 r13.z, r5.yzwy, cb0[53].xyzx
      mul r9.y, r12.z, l(-0.010000)
      max r9.y, r9.y, l(0.001000)
      mad r13.xyz, r13.xyzx, r9.yyyy, r12.xyzx
      mad r9.y, r11.z, l(1000.000000), r13.z
      lt r9.y, l(-0.010000), r9.y
      add r11.w, -r13.z, l(-0.010000)
      div r11.w, r11.w, r11.z
      movc r9.y, r9.y, r11.w, l(1000.000000)
      mad r11.xyz, r11.xyzx, r9.yyyy, r13.xyzx
      mov r13.w, l(1.000000)

// ProjectToPixelMatrix:
      dp4 r12.y, r13.xyzw, cb1[4].xyzw
      dp4 r12.x, r13.xyzw, cb1[5].xyzw
      dp4 r9.y, r13.xyzw, cb1[7].xyzw
      mov r11.w, l(1.000000)

// No apparent effect
add r19.w, r9.y, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r12.y, r19.w, cb0[66].x, r12.y

// ProjectToPixelMatrix:
      dp4 r13.x, r11.xyzw, cb1[4].xyzw
      dp4 r13.y, r11.xyzw, cb1[5].xyzw
      dp4 r11.x, r11.xyzw, cb1[7].xyzw

// No apparent effect
add r19.w, r11.x, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r13.x, r19.w, cb0[66].x, r13.x

      div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r9.y
      div r11.x, l(1.000000, 1.000000, 1.000000, 1.000000), r11.x
      mul r11.yw, r9.yyyy, r12.xxxy
      mul r14.xy, r11.xxxx, r13.xyxx
      mul r12.w, r9.y, r13.z
      mul r11.z, r11.x, r11.z
      add r14.zw, cb0[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
      lt r15.xy, r14.zwzz, r14.yxyy
      lt r15.zw, r14.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
      or r15.zw, r15.zzzw, r15.xxxy
      movc r14.zw, r15.xxxy, -r14.zzzw, l(0,0,-0.500000,-0.500000)
      mad r14.zw, r13.yyyx, r11.xxxx, r14.zzzw
      mad r13.xy, r13.yxyy, r11.xxxx, -r11.ywyy
      div r13.xy, r14.zwzz, r13.xyxx
      and r13.x, r13.x, r15.z
      max r13.y, r13.y, r13.x
      movc r13.x, r15.w, r13.y, r13.x
      mad r13.yw, r12.yyyx, r9.yyyy, -r14.xxxy
      mad r13.yw, r13.xxxx, r13.yyyw, r14.xxxy
      add r14.x, r9.y, -r11.x
      mad r11.x, r13.x, r14.x, r11.x
      mad r14.x, r13.z, r9.y, -r11.z
      mad r11.z, r13.x, r14.x, r11.z
      mad r14.xy, r12.yxyy, r9.yyyy, -r13.ywyy
      dp2 r13.x, r14.xyxx, r14.xyxx
      lt r13.x, r13.x, l(0.000100)
      mad r14.xy, r12.yxyy, r9.yyyy, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r14.xy, r13.xxxx, r14.xyxx, r13.ywyy
      mad r14.zw, -r12.yyyx, r9.yyyy, r14.xxxy
      lt r12.x, |r14.z|, |r14.w|
      movc r11.yw, r12.xxxx, r11.yyyw, r11.wwwy
      movc r13.xyw, r12.xxxx, r14.ywyz, r14.xzxw
      lt r12.y, l(0.000000), r13.y
      lt r14.x, r13.y, l(0.000000)
      iadd r12.y, -r12.y, r14.x
      itof r14.x, r12.y
      div r12.y, r14.x, r13.y
      mul r14.y, r13.w, r12.y
      mad r11.z, -r13.z, r9.y, r11.z
      add r11.x, -r9.y, r11.x
      mul r11.xz, r12.yyyy, r11.xxzx
      mul r12.y, r13.x, r14.x
      ge r13.x, r13.z, l(99999.796875)
      ge r13.y, l(100000.000000), r13.z
      and r13.x, r13.y, r13.x
      mov r15.y, l(1.000000)
      mov r16.x, r12.w
      mov r16.y, r9.y
      mov r13.yw, l(0,-1.000000,0,-1.000000)
      mov r17.xy, r11.ywyy
      mov r14.z, l(0)
      mov r14.w, r13.x
      mov r18.y, r13.z
      mov r15.z, r13.x
      loop 
        mul r15.w, r14.x, r17.x
        ge r15.w, r12.y, r15.w
        ilt r17.z, r14.z, l(200)
        and r15.w, r15.w, r17.z
        not r17.z, r15.z
        and r15.w, r15.w, r17.z
        breakc_z r15.w
        mad r16.xz, r11.zzzz, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
        mad r16.yw, r11.xxxx, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
        div r18.x, r16.z, r16.w
        lt r15.w, r18.x, r18.y
        movc r16.zw, r15.wwww, r18.xxxy, r18.yyyx
        movc r13.yw, r12.xxxx, r17.yyyx, r17.xxxy
        mul r17.zw, r13.yyyw, cb0[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.x, r17.zwzz, t6.xyzw, s0, l(0.000000)

// InvProjectionMatrix:
        dp2 r15.w, r15.xyxx, cb0[11].zwzz
        dp2 r15.x, r15.xyxx, cb0[12].zwzz
        div r15.x, -r15.w, r15.x

        ge r15.w, -r15.x, r16.z
        add r15.x, -r15.x, l(-0.200000)
        ge r15.x, r16.w, r15.x
        and r15.z, r15.x, r15.w
        mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
        iadd r14.z, r14.z, l(1)
        mov r14.w, r15.z
        mov r18.y, r18.x
      endloop 
      if_nz r14.w
        if_z cb1[8].y
          ftoi r11.xy, r13.ywyy
          imax r11.xy, r11.xyxx, l(0, 0, 0, 0)
          ftoi r11.zw, cb0[66].xxxy
          iadd r11.zw, r11.zzzw, l(0, 0, -1, -1)
          imin r11.xy, r11.zwzz, r11.xyxx
          mov r11.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r12.xy, r11.xyww, t5.xywz
          ne r13.xz, r12.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r9.y, r13.z, r13.x
          if_nz r9.y
            lt r9.y, l(1.000000), r12.x
            add r13.x, r12.x, l(-2.000000)
            movc r12.x, r9.y, r13.x, r12.x
          else 
            ld_indexable(texture2d)(float,float,float,float) r11.z, r11.xyzw, t6.zwxy
            mov r11.w, l(1.000000)

// InvProjectionMatrix:
            dp2 r9.y, r11.zwzz, cb0[11].zwzz
            dp2 r11.z, r11.zwzz, cb0[12].zwzz
            div r9.y, -r9.y, r11.z
mov r19.w, r9.y

            itof r11.xy, r11.xyxx
            mad r11.xy, r11.xyxx, cb0[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r11.xy, r11.xyxx, cb0[0].xyxx
            mul r11.xy, r11.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r9.y, r9.y, cb0[67].x
            mov r11.z, -cb0[67].x
            mul r11.xyz, r9.yyyy, r11.xyzx

// Unprojection fix:
// No apparent effect
add r19.w, r19.w, -r19.y
mul r19.w, r19.w, r19.x
mad r11.x, -r19.w, cb0[9].x, r11.x

            mov r11.w, l(1.000000)

// ProjectionMatrix:
            dp4 r14.x, r11.xyzw, cb0[24].xyzw
            dp4 r14.y, r11.xyzw, cb0[25].xyzw
            dp4 r9.y, r11.xyzw, cb0[27].xyzw

// No apparent effect
add r19.w, r9.y, -r19.y
mad r14.x, r19.w, r19.x, r14.x

// CameraSpaceToPreviousProjectedSpace:
            dp4 r15.x, r11.xyzw, cb1[0].xyzw
            dp4 r15.y, r11.xyzw, cb1[1].xyzw
            dp4 r11.x, r11.xyzw, cb1[3].xyzw

// No apparent effect
add r19.w, r11.x, -r19.y
mad r15.x, r19.w, r19.x, r15.x

            max r11.x, r11.x, l(0.000100)
            div r11.xy, r15.xyxx, r11.xxxx
            div r11.zw, r14.xxxy, r9.yyyy
            add r11.xy, -r11.xyxx, r11.zwzz
            mul r12.xw, r11.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
            mov r12.y, -r12.w
          endif 
        else 
          mov r12.xy, l(0,0,0,0)
        endif 
        mad r11.xy, r13.ywyy, cb0[66].zwzz, -r12.xyxx
        mul r12.xy, r11.xyxx, cb0[66].xyxx
        ftoi r14.xy, r12.xyxx
        mov r14.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r12.x, r14.xyzw, t6.xyzw
        mov r12.y, l(1.000000)

// InvProjectionMatrix:
        dp2 r9.y, r12.xyxx, cb0[11].zwzz
        dp2 r12.x, r12.xyxx, cb0[12].zwzz
        div r9.y, -r9.y, r12.x

        ge r9.y, r12.z, -r9.y
        not r12.x, r9.y
        add r12.yz, -r13.yywy, v0.xxyx
        dp2 r12.y, r12.yzyy, r12.yzyy
        sqrt r12.y, r12.y
        ge r12.z, r12.y, l(700.000000)
        add r12.y, r12.y, l(-700.000000)
        mad r12.y, -r12.y, l(0.00333333341), l(1.000000)
        movc r12.y, r12.z, r12.y, l(1.000000)
        add r11.zw, -r11.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r13.xyzw, r11.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r11.z, r13.y, r13.x
        mul r11.z, r13.z, r11.z
        mul r11.z, r13.w, r11.z
        mul r11.z, r11.z, r12.y
        lt r11.w, l(0.137000), r1.y
        mad r12.y, -r1.y, l(4.000000), l(1.000000)
        max r12.y, r12.y, l(0.000000)
        mul r12.y, r11.z, r12.y
        movc r11.z, r11.w, r12.y, r11.z
        movc r9.y, r9.y, r11.z, l(1.000000)
      else 
        mov r11.xy, l(0,0,0,0)
        mov r9.y, l(0)
        mov r12.x, l(0)
      endif 
      if_z r12.x
        lt r11.z, l(0.000000), r9.y
        if_nz r11.z
          mul r3.w, r3.w, cb1[8].x
          sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r11.xyxx, t7.xyzw, s1, r3.w
        else 
          mov r11.xyz, l(0,0,0,0)
        endif 
      else 
        mov r11.xyz, l(0,0,0,0)
        mov r9.y, l(0)
      endif 
    else 
      mov r11.xyz, l(0,0,0,0)
      mov r9.y, l(0)
    endif 
  else 
    mov r11.xyz, l(0,0,0,0)
    mov r9.y, l(0)
  endif 
  lt r3.w, l(0.000000), r9.y
  if_nz r3.w
    div r11.xyz, r11.xyzx, cb0[176].wwww
    lt r3.w, r9.y, l(1.000000)
    if_nz r3.w
      if_z cb0[184].z
        mov r0.w, l(1.000000)
        mov r12.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
        mov r13.x, l(0)
        loop 
          uge r13.y, r13.x, l(15)
          breakc_nz r13.y
          imul null, r13.y, r13.x, l(7)
          dp4 r14.x, r0.xyzw, cb0[r13.y + 68].xyzw
          dp4 r14.y, r0.xyzw, cb0[r13.y + 69].xyzw
          dp4 r14.z, r0.xyzw, cb0[r13.y + 70].xyzw
          ge r15.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r15.xyz, r15.xyzx, cb0[r13.y + 72].xyzx, cb0[r13.y + 73].xyzx
          add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r14.xyz, r15.xyzx, r14.xyzx
          mul r13.z, r14.y, r14.x
          mul r13.z, r14.z, r13.z
          lt r13.w, l(0.000000), r13.z
          if_nz r13.w
            dp3 r14.x, r3.xyzx, cb0[r13.y + 68].xyzx
            dp3 r14.y, r3.xyzx, cb0[r13.y + 69].xyzx
            dp3 r14.z, r3.xyzx, cb0[r13.y + 70].xyzx
            mul r13.z, r13.z, cb0[r13.y + 73].w
            mov r14.w, cb0[r13.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s2, r8.y
            mul r14.xyzw, r14.xyzw, cb0[r13.y + 74].xxxy
            min r13.y, r3.w, r13.z
            mad r14.xyzw, r14.xyzw, r13.yyyy, r12.xyzw
            add r13.y, r3.w, -r13.y
            ge r13.z, l(0.000000), r13.y
            if_nz r13.z
              mov r12.xyzw, r14.xyzw
              mov r3.w, r13.y
              break 
            endif 
            mov r12.xyzw, r14.xyzw
            mov r3.w, r13.y
          endif 
          iadd r13.x, r13.x, l(1)
        endloop 
      else 
        mov r12.xyzw, l(0,0,0,0)
        mov r3.w, l(1.000000)
      endif 
      add r12.w, r3.w, r12.w
      mul r12.w, r1.w, r12.w
      lt r13.x, l(0.000000), r12.w
      if_nz r13.x
        add r13.x, -|r3.z|, r3.z
        mad r3.w, r3.w, r13.x, |r3.z|
        mad r3.w, r3.w, l(2.000000), l(2.000000)
        div r13.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r3.wwww
        mul r13.xy, r3.yxyy, r13.xyxx
        mad r13.xy, r13.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t2.xyzw, s1, r7.w
        mov_sat r14.xyz, r13.xyzx
        movc r13.xyz, cb0[184].zzzz, r14.xyzx, r13.xyzx
        div r13.xyz, r13.xyzx, cb0[176].wwww
        mad r12.xyz, r13.xyzx, r12.wwww, r12.xyzx
      endif 
      mov_sat r9.y, r9.y
      add r13.xyz, r11.xyzx, -r12.xyzx
      mad r11.xyz, r9.yyyy, r13.xyzx, r12.xyzx
    endif 
  else 
    if_z cb0[184].z
      mov r0.w, l(1.000000)
      mov r11.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
      mov r9.y, l(0)
      loop 
        uge r12.x, r9.y, l(15)
        breakc_nz r12.x
        imul null, r12.x, r9.y, l(7)
        dp4 r13.x, r0.xyzw, cb0[r12.x + 68].xyzw
        dp4 r13.y, r0.xyzw, cb0[r12.x + 69].xyzw
        dp4 r13.z, r0.xyzw, cb0[r12.x + 70].xyzw
        ge r12.yzw, r13.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.yzw, r12.yyzw, cb0[r12.x + 72].xxyz, cb0[r12.x + 73].xxyz
        add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r12.yzw, r12.yyzw, r13.xxyz
        mul r12.y, r12.z, r12.y
        mul r12.y, r12.w, r12.y
        lt r12.z, l(0.000000), r12.y
        if_nz r12.z
          dp3 r13.x, r3.xyzx, cb0[r12.x + 68].xyzx
          dp3 r13.y, r3.xyzx, cb0[r12.x + 69].xyzx
          dp3 r13.z, r3.xyzx, cb0[r12.x + 70].xyzx
          mul r12.y, r12.y, cb0[r12.x + 73].w
          mov r13.w, cb0[r12.x + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t3.xyzw, s2, r8.y
          mul r13.xyzw, r13.xyzw, cb0[r12.x + 74].xxxy
          min r12.x, r3.w, r12.y
          mad r13.xyzw, r13.xyzw, r12.xxxx, r11.xyzw
          add r12.x, r3.w, -r12.x
          ge r12.y, l(0.000000), r12.x
          if_nz r12.y
            mov r11.xyzw, r13.xyzw
            mov r3.w, r12.x
            break 
          endif 
          mov r11.xyzw, r13.xyzw
          mov r3.w, r12.x
        endif 
        iadd r9.y, r9.y, l(1)
      endloop 
    else 
      mov r11.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
    endif 
    add r8.y, r3.w, r11.w
    mul r8.y, r1.w, r8.y
    lt r9.y, l(0.000000), r8.y
    if_nz r9.y
      add r9.y, -|r3.z|, r3.z
      mad r3.w, r3.w, r9.y, |r3.z|
      mad r3.w, r3.w, l(2.000000), l(2.000000)
      div r12.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r3.wwww
      mul r12.xy, r3.yxyy, r12.xyxx
      mad r12.xy, r12.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t2.xyzw, s1, r7.w
      mov_sat r13.xyz, r12.xyzx
      movc r12.xyz, cb0[184].zzzz, r13.xyzx, r12.xyzx
      div r12.xyz, r12.xyzx, cb0[176].wwww
      mad r11.xyz, r12.xyzx, r8.yyyy, r11.xyzx
    endif 
  endif 
  mul r3.w, r4.z, l(0.080000)
  dp3 r7.w, r3.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r1.x, r5.yzwy, r7.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r12.xy, r1.xyxx, t0.xyzw, s1, l(0.000000)
  mad r3.w, r3.w, r12.x, r12.y
  mul r3.w, r7.w, r3.w
  mul r11.xyz, r3.wwww, r11.xyzx
  mul r11.xyz, r6.zzzz, r11.xyzx
  add r1.y, r1.y, r2.y
  min r1.z, r1.y, l(1.000000)
  mul r1.y, r1.z, r1.z
  div r1.y, l(2.000000), r1.y
  add r1.y, r1.y, l(-2.000000)
  max r1.y, r1.y, l(1.000000031E-022)
  sqrt r1.y, r1.y
  div r1.y, l(-10.000000), r1.y
  exp r1.y, r1.y
  add r1.y, r1.y, l(-0.000980)
  mul r1.y, r1.y, l(1.00795019)
  max r1.y, r1.y, l(0.000000)
  add r1.y, -r1.y, l(1.000000)
  mul r2.y, r1.y, cb0[183].w
  mul r3.w, r1.y, cb0[174].w
  ge r7.w, l(0.250000), r1.z
  if_nz r7.w
    ge r7.w, r5.w, l(0.250000)
    if_nz r7.w
      dp3 r12.x, r3.xyzx, cb0[51].xyzx
      dp3 r12.y, r3.xyzx, cb0[52].xyzx
      dp3 r12.z, r3.xyzx, cb0[53].xyzx
      dp3 r7.w, r12.xyzx, r12.xyzx
      rsq r7.w, r7.w
      mul r12.xyz, r7.wwww, r12.xyzx
      mov r0.w, l(1.000000)
      dp4 r13.x, r0.xyzw, cb0[51].xyzw
      dp4 r13.y, r0.xyzw, cb0[52].xyzw
      dp4 r13.z, r0.xyzw, cb0[53].xyzw
      dp3 r14.x, r5.yzwy, cb0[51].xyzx
      dp3 r14.y, r5.yzwy, cb0[52].xyzx
      dp3 r14.z, r5.yzwy, cb0[53].xyzx
      mul r7.w, r13.z, l(-0.010000)
      max r7.w, r7.w, l(0.001000)
      mad r14.xyz, r14.xyzx, r7.wwww, r13.xyzx
      mad r7.w, r12.z, l(1000.000000), r14.z
      lt r7.w, l(-0.010000), r7.w
      add r8.y, -r14.z, l(-0.010000)
      div r8.y, r8.y, r12.z
      movc r7.w, r7.w, r8.y, l(1000.000000)
      mad r12.xyz, r12.xyzx, r7.wwww, r14.xyzx
      mov r14.w, l(1.000000)

// ProjectToPixelMatrix:
      dp4 r13.y, r14.xyzw, cb1[4].xyzw
      dp4 r13.x, r14.xyzw, cb1[5].xyzw
      dp4 r7.w, r14.xyzw, cb1[7].xyzw
      mov r12.w, l(1.000000)

// No apparent effect:
add r19.w, r7.w, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r13.y, r19.w, cb0[66].x, r13.y

// ProjectToPixelMatrix:
      dp4 r14.x, r12.xyzw, cb1[4].xyzw
      dp4 r14.y, r12.xyzw, cb1[5].xyzw
      dp4 r8.y, r12.xyzw, cb1[7].xyzw

// No apparent effect:
add r19.w, r8.y, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r14.x, r19.w, cb0[66].x, r14.x

      div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
      div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.y
      mul r12.xy, r7.wwww, r13.xyxx
      mul r15.xy, r8.yyyy, r14.xyxx
      mul r9.y, r7.w, r14.z
      mul r11.w, r8.y, r12.z
      add r12.zw, cb0[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
      lt r15.zw, r12.zzzw, r15.yyyx
      lt r16.xy, r15.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
      or r16.xy, r15.zwzz, r16.xyxx
      movc r12.zw, r15.zzzw, -r12.zzzw, l(0,0,-0.500000,-0.500000)
      mad r12.zw, r14.yyyx, r8.yyyy, r12.zzzw
      mad r14.xy, r14.yxyy, r8.yyyy, -r12.xyxx
      div r12.zw, r12.zzzw, r14.xxxy
      and r12.z, r12.z, r16.x
      max r12.w, r12.w, r12.z
      movc r12.z, r16.y, r12.w, r12.z
      mad r14.xy, r13.yxyy, r7.wwww, -r15.xyxx
      mad r14.xy, r12.zzzz, r14.xyxx, r15.xyxx
      add r12.w, r7.w, -r8.y
      mad r8.y, r12.z, r12.w, r8.y
      mad r12.w, r14.z, r7.w, -r11.w
      mad r11.w, r12.z, r12.w, r11.w
      mad r12.zw, r13.yyyx, r7.wwww, -r14.xxxy
      dp2 r12.z, r12.zwzz, r12.zwzz
      lt r12.z, r12.z, l(0.000100)
      mad r15.xy, r13.yxyy, r7.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r15.xy, r12.zzzz, r15.xyxx, r14.xyxx
      mad r15.zw, -r13.yyyx, r7.wwww, r15.xxxy
      lt r12.z, |r15.z|, |r15.w|
      movc r12.xy, r12.zzzz, r12.xyxx, r12.yxyy
      movc r13.xyw, r12.zzzz, r15.ywyz, r15.xzxw
      lt r12.w, l(0.000000), r13.y
      lt r14.x, r13.y, l(0.000000)
      iadd r12.w, -r12.w, r14.x
      itof r14.x, r12.w
      div r12.w, r14.x, r13.y
      mul r14.y, r13.w, r12.w
      mad r11.w, -r14.z, r7.w, r11.w
      mul r11.w, r12.w, r11.w
      add r8.y, -r7.w, r8.y
      mul r8.y, r12.w, r8.y
      mul r12.w, r13.x, r14.x
      ge r13.x, r14.z, l(99999.796875)
      ge r13.y, l(100000.000000), r14.z
      and r13.x, r13.y, r13.x
      mov r15.y, l(1.000000)
      mov r16.x, r9.y
      mov r16.y, r7.w
      mov r13.yw, l(0,-1.000000,0,-1.000000)
      mov r17.xy, r12.xyxx
      mov r14.w, l(0)
      mov r18.y, r14.z
      mov r15.zw, r13.xxxx
      loop 
        mul r17.z, r14.x, r17.x
        ge r17.z, r12.w, r17.z
        ilt r17.w, r14.w, l(200)
        and r17.z, r17.w, r17.z
        not r17.w, r15.w
        and r17.z, r17.w, r17.z
        breakc_z r17.z
        mad r16.xz, r11.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
        mad r16.yw, r8.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
        div r18.x, r16.z, r16.w
        lt r16.z, r18.x, r18.y
        movc r16.zw, r16.zzzz, r18.xxxy, r18.yyyx
        movc r13.yw, r12.zzzz, r17.yyyx, r17.xxxy
        mul r17.zw, r13.yyyw, cb0[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.x, r17.zwzz, t6.xyzw, s0, l(0.000000)

// InvProjectionMatrix:
        dp2 r17.z, r15.xyxx, cb0[11].zwzz
        dp2 r15.x, r15.xyxx, cb0[12].zwzz
        div r15.x, -r17.z, r15.x

        ge r16.z, -r15.x, r16.z
        add r15.x, -r15.x, l(-0.200000)
        ge r15.x, r16.w, r15.x
        and r15.w, r15.x, r16.z
        mad r17.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
        iadd r14.w, r14.w, l(1)
        mov r15.z, r15.w
        mov r18.y, r18.x
      endloop 
      if_nz r15.z
        if_z cb1[8].y
          ftoi r12.xy, r13.ywyy
          imax r12.xy, r12.xyxx, l(0, 0, 0, 0)
          ftoi r12.zw, cb0[66].xxxy
          iadd r12.zw, r12.zzzw, l(0, 0, -1, -1)
          imin r12.xy, r12.zwzz, r12.xyxx
          mov r12.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r14.xy, r12.xyww, t5.xyzw
          ne r15.xy, r14.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r7.w, r15.y, r15.x
          if_nz r7.w
            lt r7.w, l(1.000000), r14.x
            add r8.y, r14.x, l(-2.000000)
            movc r14.x, r7.w, r8.y, r14.x
          else 
            ld_indexable(texture2d)(float,float,float,float) r12.z, r12.xyzw, t6.zwxy
            mov r12.w, l(1.000000)

// InvProjectionMatrix:
            dp2 r7.w, r12.zwzz, cb0[11].zwzz
            dp2 r8.y, r12.zwzz, cb0[12].zwzz
            div r7.w, -r7.w, r8.y
mov r19.w, r7.y

            itof r12.xy, r12.xyxx
            mad r12.xy, r12.xyxx, cb0[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r12.xy, r12.xyxx, cb0[0].xyxx
            mul r12.xy, r12.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r7.w, r7.w, cb0[67].x
            mov r12.z, -cb0[67].x
            mul r12.xyz, r7.wwww, r12.xyzx

// Unprojection fix:
// No apparent effect
add r19.w, r19.w, -r19.y
mul r19.w, r19.w, r19.x
mad r12.x, -r19.w, cb0[9].x, r12.x

            mov r12.w, l(1.000000)

// ProjectionMatrix:
            dp4 r15.x, r12.xyzw, cb0[24].xyzw
            dp4 r15.y, r12.xyzw, cb0[25].xyzw
            dp4 r7.w, r12.xyzw, cb0[27].xyzw

// No apparent effect
add r19.w, r7.w, -r19.y
mad r15.x, r19.w, r19.x, r15.x

// CameraSpaceToPreviousProjectedSpace:
            dp4 r16.x, r12.xyzw, cb1[0].xyzw
            dp4 r16.y, r12.xyzw, cb1[1].xyzw
            dp4 r8.y, r12.xyzw, cb1[3].xyzw

// No apparent effect
add r19.w, r8.y, -r19.y
mad r16.x, r19.w, r19.x, r16.x

            max r8.y, r8.y, l(0.000100)
            div r12.xy, r16.xyxx, r8.yyyy
            div r12.zw, r15.xxxy, r7.wwww
            add r12.xy, -r12.xyxx, r12.zwzz
            mul r14.xz, r12.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
            mov r14.y, -r14.z
          endif 
        else 
          mov r14.xy, l(0,0,0,0)
        endif 
        mad r12.xy, r13.ywyy, cb0[66].zwzz, -r14.xyxx
        mul r14.xy, r12.xyxx, cb0[66].xyxx
        ftoi r14.xy, r14.xyxx
        mov r14.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r14.x, r14.xyzw, t6.xyzw
        mov r14.y, l(1.000000)

// InvProjectionMatrix:
        dp2 r7.w, r14.xyxx, cb0[11].zwzz
        dp2 r8.y, r14.xyxx, cb0[12].zwzz
        div r7.w, -r7.w, r8.y

        ge r7.w, r13.z, -r7.w
        not r8.y, r7.w
        add r13.xy, -r13.ywyy, v0.xyxx
        dp2 r9.y, r13.xyxx, r13.xyxx
        sqrt r9.y, r9.y
        ge r11.w, r9.y, l(700.000000)
        add r9.y, r9.y, l(-700.000000)
        mad r9.y, -r9.y, l(0.00333333341), l(1.000000)
        movc r9.y, r11.w, r9.y, l(1.000000)
        add r12.zw, -r12.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r13.xyzw, r12.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r11.w, r13.y, r13.x
        mul r11.w, r13.z, r11.w
        mul r11.w, r13.w, r11.w
        mul r9.y, r9.y, r11.w
        lt r11.w, l(0.137000), r1.z
        mad r12.z, -r1.z, l(4.000000), l(1.000000)
        max r12.z, r12.z, l(0.000000)
        mul r12.z, r9.y, r12.z
        movc r9.y, r11.w, r12.z, r9.y
        movc r7.w, r7.w, r9.y, l(1.000000)
      else 
        mov r12.xy, l(0,0,0,0)
        mov r7.w, l(0)
        mov r8.y, l(0)
      endif 
      if_z r8.y
        lt r8.y, l(0.000000), r7.w
        if_nz r8.y
          mul r1.y, r1.y, cb1[8].x
          sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t7.xyzw, s1, r1.y
        else 
          mov r12.xyz, l(0,0,0,0)
        endif 
      else 
        mov r12.xyz, l(0,0,0,0)
        mov r7.w, l(0)
      endif 
    else 
      mov r12.xyz, l(0,0,0,0)
      mov r7.w, l(0)
    endif 
  else 
    mov r12.xyz, l(0,0,0,0)
    mov r7.w, l(0)
  endif 
  lt r1.y, l(0.000000), r7.w
  if_nz r1.y
    div r12.xyz, r12.xyzx, cb0[176].wwww
    lt r1.y, r7.w, l(1.000000)
    if_nz r1.y
      if_z cb0[184].z
        mov r0.w, l(1.000000)
        mov r13.xyzw, l(0,0,0,0)
        mov r1.y, l(1.000000)
        mov r8.y, l(0)
        loop 
          uge r9.y, r8.y, l(15)
          breakc_nz r9.y
          imul null, r9.y, r8.y, l(7)
          dp4 r14.x, r0.xyzw, cb0[r9.y + 68].xyzw
          dp4 r14.y, r0.xyzw, cb0[r9.y + 69].xyzw
          dp4 r14.z, r0.xyzw, cb0[r9.y + 70].xyzw
          ge r15.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r15.xyz, r15.xyzx, cb0[r9.y + 72].xyzx, cb0[r9.y + 73].xyzx
          add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r14.xyz, r15.xyzx, r14.xyzx
          mul r11.w, r14.y, r14.x
          mul r11.w, r14.z, r11.w
          lt r14.x, l(0.000000), r11.w
          if_nz r14.x
            dp3 r14.x, r3.xyzx, cb0[r9.y + 68].xyzx
            dp3 r14.y, r3.xyzx, cb0[r9.y + 69].xyzx
            dp3 r14.z, r3.xyzx, cb0[r9.y + 70].xyzx
            mul r11.w, r11.w, cb0[r9.y + 73].w
            mov r14.w, cb0[r9.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t3.xyzw, s2, r3.w
            mul r14.xyzw, r14.xyzw, cb0[r9.y + 74].xxxy
            min r9.y, r1.y, r11.w
            mad r14.xyzw, r14.xyzw, r9.yyyy, r13.xyzw
            add r9.y, r1.y, -r9.y
            ge r11.w, l(0.000000), r9.y
            if_nz r11.w
              mov r13.xyzw, r14.xyzw
              mov r1.y, r9.y
              break 
            endif 
            mov r13.xyzw, r14.xyzw
            mov r1.y, r9.y
          endif 
          iadd r8.y, r8.y, l(1)
        endloop 
      else 
        mov r13.xyzw, l(0,0,0,0)
        mov r1.y, l(1.000000)
      endif 
      add r8.y, r1.y, r13.w
      mul r8.y, r1.w, r8.y
      lt r9.y, l(0.000000), r8.y
      if_nz r9.y
        add r9.y, -|r3.z|, r3.z
        mad r1.y, r1.y, r9.y, |r3.z|
        mad r1.y, r1.y, l(2.000000), l(2.000000)
        div r14.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r1.yyyy
        mul r14.xy, r3.yxyy, r14.xyxx
        mad r14.xy, r14.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t2.xyzw, s1, r2.y
        mov_sat r15.xyz, r14.xyzx
        movc r14.xyz, cb0[184].zzzz, r15.xyzx, r14.xyzx
        div r14.xyz, r14.xyzx, cb0[176].wwww
        mad r13.xyz, r14.xyzx, r8.yyyy, r13.xyzx
      endif 
      mov_sat r7.w, r7.w
      add r14.xyz, r12.xyzx, -r13.xyzx
      mad r12.xyz, r7.wwww, r14.xyzx, r13.xyzx
    endif 
  else 
    if_z cb0[184].z
      mov r0.w, l(1.000000)
      mov r12.xyzw, l(0,0,0,0)
      mov r1.y, l(1.000000)
      mov r7.w, l(0)
      loop 
        uge r8.y, r7.w, l(15)
        breakc_nz r8.y
        imul null, r8.y, r7.w, l(7)
        dp4 r13.x, r0.xyzw, cb0[r8.y + 68].xyzw
        dp4 r13.y, r0.xyzw, cb0[r8.y + 69].xyzw
        dp4 r13.z, r0.xyzw, cb0[r8.y + 70].xyzw
        ge r14.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r14.xyz, r14.xyzx, cb0[r8.y + 72].xyzx, cb0[r8.y + 73].xyzx
        add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.xyz, r14.xyzx, r13.xyzx
        mul r9.y, r13.y, r13.x
        mul r9.y, r13.z, r9.y
        lt r11.w, l(0.000000), r9.y
        if_nz r11.w
          dp3 r13.x, r3.xyzx, cb0[r8.y + 68].xyzx
          dp3 r13.y, r3.xyzx, cb0[r8.y + 69].xyzx
          dp3 r13.z, r3.xyzx, cb0[r8.y + 70].xyzx
          mul r9.y, r9.y, cb0[r8.y + 73].w
          mov r13.w, cb0[r8.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t3.xyzw, s2, r3.w
          mul r13.xyzw, r13.xyzw, cb0[r8.y + 74].xxxy
          min r8.y, r1.y, r9.y
          mad r13.xyzw, r13.xyzw, r8.yyyy, r12.xyzw
          add r8.y, r1.y, -r8.y
          ge r9.y, l(0.000000), r8.y
          if_nz r9.y
            mov r12.xyzw, r13.xyzw
            mov r1.y, r8.y
            break 
          endif 
          mov r12.xyzw, r13.xyzw
          mov r1.y, r8.y
        endif 
        iadd r7.w, r7.w, l(1)
      endloop 
    else 
      mov r12.xyzw, l(0,0,0,0)
      mov r1.y, l(1.000000)
    endif 
    add r3.w, r1.y, r12.w
    mul r3.w, r1.w, r3.w
    lt r7.w, l(0.000000), r3.w
    if_nz r7.w
      add r7.w, -|r3.z|, r3.z
      mad r1.y, r1.y, r7.w, |r3.z|
      mad r1.y, r1.y, l(2.000000), l(2.000000)
      div r13.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r1.yyyy
      mul r3.xy, r3.yxyy, r13.xyxx
      mad r3.xy, r3.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t2.xyzw, s1, r2.y
      mov_sat r13.xyz, r3.xyzx
      movc r3.xyz, cb0[184].zzzz, r13.xyzx, r3.xyzx
      div r3.xyz, r3.xyzx, cb0[176].wwww
      mad r12.xyz, r3.xyzx, r3.wwww, r12.xyzx
    endif 
  endif 
  mul r1.y, r9.w, l(0.080000)
  mad r3.xyz, -r9.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r8.xzwx
  mad r3.xyz, r4.xxxx, r3.xyzx, r1.yyyy
  dp3 r1.y, r3.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r1.y, r1.y, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.xz, r1.xzxx, t0.xzyw, s1, l(0.000000)
  mad r3.xyz, r3.xyzx, r1.xxxx, r1.zzzz
  mul r1.xyz, r1.yyyy, r3.xyzx
  mul r1.xyz, r1.xyzx, r12.xyzx
  mul r1.xyz, r6.zzzz, r1.xyzx
  mul r3.xyz, r2.zzzz, -r6.xywx
  exp r3.xyz, r3.xyzx
  mad r3.xyz, r1.xyzx, r3.xyzx, r11.xyzx
  movc r1.xyz, r2.wwww, r1.xyzx, r3.xyzx
  dp3 r2.y, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r2.z, r5.x, l(5)
  if_nz r2.z
    dp3 r2.z, -r7.xyzx, r5.yzwy
    add r2.z, r2.z, r2.z
    mad r3.xyz, r5.yzwy, -r2.zzzz, -r7.xyzx
    dp3 r2.z, r3.xyzx, r9.xzwx
    dp3 r2.w, r3.xyzx, r5.yzwy
    mul r3.xyz, r2.wwww, r5.yzwy
    mad r3.xyz, r9.xzwx, r2.zzzz, r3.xyzx
    dp3 r2.z, r9.xzwx, r7.xyzx
    mad r2.z, -r2.z, r2.z, l(1.000000)
    mul r2.w, r4.y, r4.y
    div r2.w, l(2.000000), r2.w
    add r2.w, r2.w, l(-2.000000)
    max r2.w, r2.w, l(1.000000031E-022)
    sqrt r2.zw, r2.zzzw
    div r2.w, l(-10.000000), r2.w
    exp r2.w, r2.w
    add r2.w, r2.w, l(-0.000980)
    mul_sat r2.w, r2.w, l(1.00795019)
    add r2.w, -r2.w, l(1.000000)
    if_z cb0[184].z
      mul r3.w, r2.w, cb0[174].w
      mov r0.w, l(1.000000)
      mov r9.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
      mov r6.x, l(0)
      loop 
        uge r6.y, r6.x, l(15)
        breakc_nz r6.y
        imul null, r6.y, r6.x, l(7)
        dp4 r11.x, r0.xyzw, cb0[r6.y + 68].xyzw
        dp4 r11.y, r0.xyzw, cb0[r6.y + 69].xyzw
        dp4 r11.z, r0.xyzw, cb0[r6.y + 70].xyzw
        ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.xyz, r12.xyzx, cb0[r6.y + 72].xyzx, cb0[r6.y + 73].xyzx
        add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r11.xyz, r12.xyzx, r11.xyzx
        mul r6.w, r11.y, r11.x
        mul r6.w, r11.z, r6.w
        lt r7.w, l(0.000000), r6.w
        if_nz r7.w
          dp3 r11.x, r3.xyzx, cb0[r6.y + 68].xyzx
          dp3 r11.y, r3.xyzx, cb0[r6.y + 69].xyzx
          dp3 r11.z, r3.xyzx, cb0[r6.y + 70].xyzx
          mul r6.w, r6.w, cb0[r6.y + 73].w
          mov r11.w, cb0[r6.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s2, r3.w
          mul r11.xyzw, r11.xyzw, cb0[r6.y + 74].xxxy
          min r6.y, r5.x, r6.w
          mad r11.xyzw, r11.xyzw, r6.yyyy, r9.xyzw
          add r6.y, r5.x, -r6.y
          ge r6.w, l(0.000000), r6.y
          if_nz r6.w
            mov r9.xyzw, r11.xyzw
            mov r5.x, r6.y
            break 
          endif 
          mov r9.xyzw, r11.xyzw
          mov r5.x, r6.y
        endif 
        iadd r6.x, r6.x, l(1)
      endloop 
    else 
      mov r9.xyzw, l(0,0,0,0)
      mov r5.x, l(1.000000)
    endif 
    add r3.w, r5.x, r9.w
    mul r3.w, r1.w, r3.w
    lt r6.x, l(0.000000), r3.w
    if_nz r6.x
      mul r2.w, r2.w, cb0[183].w
      add r6.x, -|r3.z|, r3.z
      mad r3.z, r5.x, r6.x, |r3.z|
      mad r3.z, r3.z, l(2.000000), l(2.000000)
      div r6.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r3.zzzz
      mul r3.xy, r3.yxyy, r6.xyxx
      mad r3.xy, r3.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t2.xyzw, s1, r2.w
      mov_sat r6.xyw, r3.xyxz
      movc r3.xyz, cb0[184].zzzz, r6.xywx, r3.xyzx
      div r3.xyz, r3.xyzx, cb0[176].wwww
      mad r9.xyz, r3.xyzx, r3.wwww, r9.xyzx
    endif 
    sqrt r3.xyz, r8.xzwx
    dp3 r2.w, r8.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r3.xyz, r3.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r6.zzzz
    mad r3.xyz, r2.wwww, r3.xyzx, r6.zzzz
    mul r3.xyz, r3.xyzx, r9.xyzx
    mul r2.w, r4.z, l(0.080000)
    mad r6.xyw, -r4.zzzz, l(0.080000, 0.080000, 0.000000, 0.080000), r8.xzxw
    mad r6.xyw, r4.xxxx, r6.xyxw, r2.wwww
    dp3 r2.w, r6.xywx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r2.w, r2.w, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r7.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xy, r4.wyww, t0.xyzw, s1, l(0.000000)
    mad r6.xyw, r6.xyxw, r9.xxxx, r9.yyyy
    mul r6.xyw, r2.wwww, r6.xyxw
    mul r6.xyw, r2.zzzz, r6.xyxw
    mul r1.xyz, r3.xyzx, r6.xywx
    dp3 r2.y, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r2.x, r2.x, r4.y
    dp3 r2.z, -r7.xyzx, r5.yzwy
    add r2.z, r2.z, r2.z
    mad r3.xyz, r5.yzwy, -r2.zzzz, -r7.xyzx
    mul r2.z, r2.x, r2.x
    div r2.z, l(2.000000), r2.z
    add r2.z, r2.z, l(-2.000000)
    max r2.z, r2.z, l(1.000000031E-022)
    sqrt r2.z, r2.z
    div r2.z, l(-10.000000), r2.z
    exp r2.z, r2.z
    add r2.z, r2.z, l(-0.000980)
    mul_sat r2.z, r2.z, l(1.00795019)
    add r2.z, -r2.z, l(1.000000)
    mul r2.w, r2.z, cb0[183].w
    mul r3.w, r2.z, cb0[174].w
    ge r5.x, l(0.250000), r2.x
    if_nz r5.x
      ge r5.x, r5.w, l(0.250000)
      if_nz r5.x
        dp3 r9.x, r3.xyzx, cb0[51].xyzx
        dp3 r9.y, r3.xyzx, cb0[52].xyzx
        dp3 r9.z, r3.xyzx, cb0[53].xyzx
        dp3 r5.x, r9.xyzx, r9.xyzx
        rsq r5.x, r5.x
        mul r6.xyw, r5.xxxx, r9.xyxz
        mov r0.w, l(1.000000)
        dp4 r9.x, r0.xyzw, cb0[51].xyzw
        dp4 r9.y, r0.xyzw, cb0[52].xyzw
        dp4 r9.z, r0.xyzw, cb0[53].xyzw
        dp3 r11.x, r5.yzwy, cb0[51].xyzx
        dp3 r11.y, r5.yzwy, cb0[52].xyzx
        dp3 r11.z, r5.yzwy, cb0[53].xyzx
        mul r5.x, r9.z, l(-0.010000)
        max r5.x, r5.x, l(0.001000)
        mad r11.xyz, r11.xyzx, r5.xxxx, r9.xyzx
        mad r5.x, r6.w, l(1000.000000), r11.z
        lt r5.x, l(-0.010000), r5.x
        add r7.w, -r11.z, l(-0.010000)
        div r7.w, r7.w, r6.w
        movc r5.x, r5.x, r7.w, l(1000.000000)
        mad r12.xyz, r6.xywx, r5.xxxx, r11.xyzx
        mov r11.w, l(1.000000)

// ProjectToPixelMatrix:
        dp4 r6.y, r11.xyzw, cb1[4].xyzw
        dp4 r6.x, r11.xyzw, cb1[5].xyzw
        dp4 r5.x, r11.xyzw, cb1[7].xyzw
        mov r12.w, l(1.000000)

// Changed screen space reflections (0.5 multiplier is important - without it
// the reflections end up back at screen depth):
add r19.w, r5.x, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r6.y, r19.w, cb0[66].x, r6.y

// ProjectToPixelMatrix:
        dp4 r9.x, r12.xyzw, cb1[4].xyzw
        dp4 r9.y, r12.xyzw, cb1[5].xyzw
        dp4 r6.w, r12.xyzw, cb1[7].xyzw

// Changed screen space reflections (0.5 multiplier is important - without it
// the reflections end up back at screen depth):
add r19.w, r6.w, -r19.y
mul r19.w, r19.w, r19.x
mul r19.w, r19.w, l(0.5)
mad r9.x, r19.w, cb0[66].x, r9.x

        div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        mul r11.xy, r5.xxxx, r6.xyxx
        mul r12.xy, r6.wwww, r9.xyxx
        mul r7.w, r5.x, r11.z
        mul r8.y, r6.w, r12.z
        add r12.zw, cb0[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r13.xy, r12.zwzz, r12.yxyy
        lt r13.zw, r12.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r13.zw, r13.zzzw, r13.xxxy
        movc r12.zw, r13.xxxy, -r12.zzzw, l(0,0,-0.500000,-0.500000)
        mad r12.zw, r9.yyyx, r6.wwww, r12.zzzw
        mad r9.xy, r9.yxyy, r6.wwww, -r11.xyxx
        div r9.xy, r12.zwzz, r9.xyxx
        and r9.x, r9.x, r13.z
        max r9.y, r9.y, r9.x
        movc r9.x, r13.w, r9.y, r9.x
        mad r9.yw, r6.yyyx, r5.xxxx, -r12.xxxy
        mad r9.yw, r9.xxxx, r9.yyyw, r12.xxxy
        add r11.w, r5.x, -r6.w
        mad r6.w, r9.x, r11.w, r6.w
        mad r11.w, r11.z, r5.x, -r8.y
        mad r8.y, r9.x, r11.w, r8.y
        mad r12.xy, r6.yxyy, r5.xxxx, -r9.ywyy
        dp2 r9.x, r12.xyxx, r12.xyxx
        lt r9.x, r9.x, l(0.000100)
        mad r12.xy, r6.yxyy, r5.xxxx, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r12.xy, r9.xxxx, r12.xyxx, r9.ywyy
        mad r12.zw, -r6.yyyx, r5.xxxx, r12.xxxy
        lt r6.x, |r12.z|, |r12.w|
        movc r9.xy, r6.xxxx, r11.xyxx, r11.yxyy
        movc r11.xyw, r6.xxxx, r12.ywyz, r12.xzxw
        lt r6.y, l(0.000000), r11.y
        lt r9.w, r11.y, l(0.000000)
        iadd r6.y, -r6.y, r9.w
        itof r12.x, r6.y
        div r6.y, r12.x, r11.y
        mul r12.y, r11.w, r6.y
        mad r8.y, -r11.z, r5.x, r8.y
        mul r8.y, r6.y, r8.y
        add r6.w, -r5.x, r6.w
        mul r6.y, r6.y, r6.w
        mul r6.w, r11.x, r12.x
        ge r9.w, r11.z, l(99999.796875)
        ge r11.x, l(100000.000000), r11.z
        and r9.w, r9.w, r11.x
        mov r11.y, l(1.000000)
        mov r13.x, r7.w
        mov r13.y, r5.x
        mov r12.zw, l(0,0,-1.000000,-1.000000)
        mov r11.w, l(0)
        mov r15.y, r11.z
        mov r14.xyzw, r9.xyww
        loop 
          mul r15.z, r12.x, r14.x
          ge r15.z, r6.w, r15.z
          ilt r15.w, r11.w, l(200)
          and r15.z, r15.w, r15.z
          not r15.w, r14.w
          and r15.z, r15.w, r15.z
          breakc_z r15.z
          mad r13.xz, r8.yyyy, l(5.000000, 0.000000, 2.500000, 0.000000), r13.xxxx
          mad r13.yw, r6.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r13.yyyy
          div r15.x, r13.z, r13.w
          lt r13.z, r15.x, r15.y
          movc r13.zw, r13.zzzz, r15.xxxy, r15.yyyx
          movc r12.zw, r6.xxxx, r14.yyyx, r14.xxxy
          mul r15.zw, r12.zzzw, cb0[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r11.x, r15.zwzz, t6.xyzw, s0, l(0.000000)

// InvProjectionMatrix:
          dp2 r15.z, r11.xyxx, cb0[11].zwzz
          dp2 r11.x, r11.xyxx, cb0[12].zwzz
          div r11.x, -r15.z, r11.x

          ge r13.z, -r11.x, r13.z
          add r11.x, -r11.x, l(-0.200000)
          ge r11.x, r13.w, r11.x
          and r14.w, r11.x, r13.z
          mad r14.xy, r12.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r14.xyxx
          iadd r11.w, r11.w, l(1)
          mov r14.xyz, r14.xywx
          mov r15.y, r15.x
        endloop 
        if_nz r14.z
          if_z cb1[8].y
            ftoi r6.xy, r12.zwzz
            imax r6.xy, r6.xyxx, l(0, 0, 0, 0)
            ftoi r9.xy, cb0[66].xyxx
            iadd r9.xy, r9.xyxx, l(-1, -1, 0, 0)
            imin r11.xy, r6.xyxx, r9.xyxx
            mov r11.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r6.xy, r11.xyww, t5.xywz
            ne r9.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r5.x, r9.y, r9.x
            if_nz r5.x
              lt r5.x, l(1.000000), r6.x
              add r7.w, r6.x, l(-2.000000)
              movc r6.x, r5.x, r7.w, r6.x
            else 
              ld_indexable(texture2d)(float,float,float,float) r9.x, r11.xyzw, t6.xyzw
              mov r9.y, l(1.000000)

// InvProjectionMatrix:
              dp2 r5.x, r9.xyxx, cb0[11].zwzz
              dp2 r7.w, r9.xyxx, cb0[12].zwzz
              div r5.x, -r5.x, r7.w
mov r19.w, r5.x

              itof r9.xy, r11.xyxx
              mad r9.xy, r9.xyxx, cb0[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r9.xy, r9.xyxx, cb0[0].xyxx
              mul r11.xy, r9.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r5.x, r5.x, cb0[67].x
              mov r11.z, -cb0[67].x
              mul r11.xyz, r5.xxxx, r11.xyzx

// Unprojection fix - No apparent effect (or very very very small)
add r19.w, r19.w, -r19.y
mul r19.w, r19.w, r19.x
mad r11.x, -r19.w, cb0[9].x, r11.x

              mov r11.w, l(1.000000)

// ProjectionMatrix:
              dp4 r9.x, r11.xyzw, cb0[24].xyzw
              dp4 r9.y, r11.xyzw, cb0[25].xyzw
              dp4 r5.x, r11.xyzw, cb0[27].xyzw

// Changed screen space reflections:
add r19.w, r5.x, -r19.y
mad r9.x, r19.w, r19.x, r9.x

// CameraSpaceToPreviousProjectedSpace:
              dp4 r12.x, r11.xyzw, cb1[0].xyzw
              dp4 r12.y, r11.xyzw, cb1[1].xyzw
              dp4 r7.w, r11.xyzw, cb1[3].xyzw

// Changed screen space reflections:
add r19.w, r7.w, -r19.y
mad r12.x, r19.w, r19.x, r12.x

              max r7.w, r7.w, l(0.000100)
              div r11.xy, r12.xyxx, r7.wwww
              div r9.xy, r9.xyxx, r5.xxxx
              add r9.xy, -r11.xyxx, r9.xyxx
              mul r6.xw, r9.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
              mov r6.y, -r6.w
            endif 
          else 
            mov r6.xy, l(0,0,0,0)
          endif 
          mad r11.xy, r12.zwzz, cb0[66].zwzz, -r6.xyxx
          mul r6.xy, r11.xyxx, cb0[66].xyxx
          ftoi r13.xy, r6.xyxx
          mov r13.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r6.x, r13.xyzw, t6.xyzw
          mov r6.y, l(1.000000)

// InvProjectionMatrix:
          dp2 r5.x, r6.xyxx, cb0[11].zwzz
          dp2 r6.x, r6.xyxx, cb0[12].zwzz
          div r5.x, -r5.x, r6.x

          ge r5.x, r9.z, -r5.x
          not r6.x, r5.x
          add r6.yw, -r12.zzzw, v0.xxxy
          dp2 r6.y, r6.ywyy, r6.ywyy
          sqrt r6.y, r6.y
          ge r6.w, r6.y, l(700.000000)
          add r6.y, r6.y, l(-700.000000)
          mad r6.y, -r6.y, l(0.00333333341), l(1.000000)
          movc r6.y, r6.w, r6.y, l(1.000000)
          add r11.zw, -r11.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul_sat r9.xyzw, r11.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
          mul r6.w, r9.y, r9.x
          mul r6.w, r9.z, r6.w
          mul r6.w, r9.w, r6.w
          mul r6.y, r6.w, r6.y
          lt r6.w, l(0.137000), r2.x
          mad r2.x, -r2.x, l(4.000000), l(1.000000)
          max r2.x, r2.x, l(0.000000)
          mul r2.x, r2.x, r6.y
          movc r2.x, r6.w, r2.x, r6.y
          movc r2.x, r5.x, r2.x, l(1.000000)
        else 
          mov r11.xy, l(0,0,0,0)
          mov r2.x, l(0)
          mov r6.x, l(0)
        endif 
        if_z r6.x
          lt r5.x, l(0.000000), r2.x
          if_nz r5.x
            mul r2.z, r2.z, cb1[8].x
            sample_l_indexable(texture2d)(float,float,float,float) r6.xyw, r11.xyxx, t7.xywz, s1, r2.z
          else 
            mov r6.xyw, l(0,0,0,0)
          endif 
        else 
          mov r6.xyw, l(0,0,0,0)
          mov r2.x, l(0)
        endif 
      else 
        mov r6.xyw, l(0,0,0,0)
        mov r2.x, l(0)
      endif 
    else 
      mov r6.xyw, l(0,0,0,0)
      mov r2.x, l(0)
    endif 
    lt r2.z, l(0.000000), r2.x
    if_nz r2.z
      div r9.xyz, r6.xywx, cb0[176].wwww
      lt r2.z, r2.x, l(1.000000)
      if_nz r2.z
        if_z cb0[184].z
          mov r0.w, l(1.000000)
          mov r11.xyzw, l(0,0,0,0)
          mov r2.z, l(1.000000)
          mov r5.x, l(0)
          loop 
            uge r6.x, r5.x, l(15)
            breakc_nz r6.x
            imul null, r6.x, r5.x, l(7)
            dp4 r12.x, r0.xyzw, cb0[r6.x + 68].xyzw
            dp4 r12.y, r0.xyzw, cb0[r6.x + 69].xyzw
            dp4 r12.z, r0.xyzw, cb0[r6.x + 70].xyzw
            ge r13.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r13.xyz, r13.xyzx, cb0[r6.x + 72].xyzx, cb0[r6.x + 73].xyzx
            add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r12.xyz, r13.xyzx, r12.xyzx
            mul r6.y, r12.y, r12.x
            mul r6.y, r12.z, r6.y
            lt r6.w, l(0.000000), r6.y
            if_nz r6.w
              dp3 r12.x, r3.xyzx, cb0[r6.x + 68].xyzx
              dp3 r12.y, r3.xyzx, cb0[r6.x + 69].xyzx
              dp3 r12.z, r3.xyzx, cb0[r6.x + 70].xyzx
              mul r6.y, r6.y, cb0[r6.x + 73].w
              mov r12.w, cb0[r6.x + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t3.xyzw, s2, r3.w
              mul r12.xyzw, r12.xyzw, cb0[r6.x + 74].xxxy
              min r6.x, r2.z, r6.y
              mad r12.xyzw, r12.xyzw, r6.xxxx, r11.xyzw
              add r6.x, r2.z, -r6.x
              ge r6.y, l(0.000000), r6.x
              if_nz r6.y
                mov r11.xyzw, r12.xyzw
                mov r2.z, r6.x
                break 
              endif 
              mov r11.xyzw, r12.xyzw
              mov r2.z, r6.x
            endif 
            iadd r5.x, r5.x, l(1)
          endloop 
        else 
          mov r11.xyzw, l(0,0,0,0)
          mov r2.z, l(1.000000)
        endif 
        add r5.x, r2.z, r11.w
        mul r5.x, r1.w, r5.x
        lt r6.x, l(0.000000), r5.x
        if_nz r6.x
          add r6.x, -|r3.z|, r3.z
          mad r2.z, r2.z, r6.x, |r3.z|
          mad r2.z, r2.z, l(2.000000), l(2.000000)
          div r6.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.zzzz
          mul r6.xy, r3.yxyy, r6.xyxx
          mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r6.xyw, r6.xyxx, t2.xywz, s1, r2.w
          mov_sat r12.xyz, r6.xywx
          movc r6.xyw, cb0[184].zzzz, r12.xyxz, r6.xyxw
          div r6.xyw, r6.xyxw, cb0[176].wwww
          mad r11.xyz, r6.xywx, r5.xxxx, r11.xyzx
        endif 
        mov_sat r2.x, r2.x
        add r6.xyw, r9.xyxz, -r11.xyxz
        mad r9.xyz, r2.xxxx, r6.xywx, r11.xyzx
      endif 
    else 
      if_z cb0[184].z
        mov r0.w, l(1.000000)
        mov r9.xyzw, l(0,0,0,0)
        mov r2.xz, l(1.000000,0,0,0)
        loop 
          uge r5.x, r2.z, l(15)
          breakc_nz r5.x
          imul null, r5.x, r2.z, l(7)
          dp4 r11.x, r0.xyzw, cb0[r5.x + 68].xyzw
          dp4 r11.y, r0.xyzw, cb0[r5.x + 69].xyzw
          dp4 r11.z, r0.xyzw, cb0[r5.x + 70].xyzw
          ge r6.xyw, r11.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r6.xyw, r6.xyxw, cb0[r5.x + 72].xyxz, cb0[r5.x + 73].xyxz
          add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r6.xyw, r6.xyxw, r11.xyxz
          mul r6.x, r6.y, r6.x
          mul r6.x, r6.w, r6.x
          lt r6.y, l(0.000000), r6.x
          if_nz r6.y
            dp3 r11.x, r3.xyzx, cb0[r5.x + 68].xyzx
            dp3 r11.y, r3.xyzx, cb0[r5.x + 69].xyzx
            dp3 r11.z, r3.xyzx, cb0[r5.x + 70].xyzx
            mul r6.x, r6.x, cb0[r5.x + 73].w
            mov r11.w, cb0[r5.x + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s2, r3.w
            mul r11.xyzw, r11.xyzw, cb0[r5.x + 74].xxxy
            min r5.x, r2.x, r6.x
            mad r11.xyzw, r11.xyzw, r5.xxxx, r9.xyzw
            add r5.x, r2.x, -r5.x
            ge r6.x, l(0.000000), r5.x
            if_nz r6.x
              mov r9.xyzw, r11.xyzw
              mov r2.x, r5.x
              break 
            endif 
            mov r9.xyzw, r11.xyzw
            mov r2.x, r5.x
          endif 
          iadd r2.z, r2.z, l(1)
        endloop 
      else 
        mov r9.xyzw, l(0,0,0,0)
        mov r2.x, l(1.000000)
      endif 
      add r0.x, r2.x, r9.w
      mul r0.x, r1.w, r0.x
      lt r0.y, l(0.000000), r0.x
      if_nz r0.y
        add r0.y, -|r3.z|, r3.z
        mad r0.y, r2.x, r0.y, |r3.z|
        mad r0.y, r0.y, l(2.000000), l(2.000000)
        div r0.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r0.yyyy
        mul r0.yz, r0.yyzy, r3.yyxy
        mad r0.yz, r0.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t2.wxyz, s1, r2.w
        mov_sat r2.xzw, r0.yyzw
        movc r0.yzw, cb0[184].zzzz, r2.xxzw, r0.yyzw
        div r0.yzw, r0.yyzw, cb0[176].wwww
        mad r9.xyz, r0.yzwy, r0.xxxx, r9.xyzx
      endif 
    endif 
    mul r0.x, r4.z, l(0.080000)
    mad r0.yzw, -r4.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r8.xxzw
    mad r0.xyz, r4.xxxx, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r4.w, r5.yzwy, r7.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.xz, r4.wyww, t0.xzyw, s1, l(0.000000)
    mad r0.xyz, r0.xyzx, r2.xxxx, r2.zzzz
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r9.xyzx
    mul r1.xyz, r6.zzzz, r0.xyzx
    dp3 r2.y, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r2.y, r10.w
add r0.yzw, r1.xxyz, r10.xxyz
mul r0.xyzw, r0.xyzw, cb0[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 1491 instruction slots used