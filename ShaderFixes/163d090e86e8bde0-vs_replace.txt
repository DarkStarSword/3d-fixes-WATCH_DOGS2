// Sky - Dark clouds behind bridge
// ---- Created with 3Dmigoto v1.2.52 on Sun Jan 01 13:01:03 2017

cbuffer Global : register(b0)
{
  float4 EnvironmentLuminances : packoffset(c0);
  float4 FakeEarthShadowPlane : packoffset(c1);
  float4 GlobalLightsIntensity : packoffset(c2);
  float4 GlobalWeatherControl : packoffset(c3);
  float4 MaterialWetnessParams[22] : packoffset(c4);
  float4 WindGlobalTurbulence : packoffset(c26);
  float4 WindVelocityTextureCoverage : packoffset(c27);
  float4 WorldLoadingRingSizes[2] : packoffset(c28);

  struct
  {
    float debugValue0;
    float debugValue1;
    float debugValue2;
    float debugValue3;
  } DebugValues : packoffset(c30);

  float3 SunShadowDirection : packoffset(c31);
  float CrowdAnimationStartTime : packoffset(c31.w);
  float3 WindGlobalNoiseTextureChannelSel : packoffset(c32);
  float GlobalReflectionTextureBlendRatio : packoffset(c32.w);
  float3 WindGlobalNoiseTextureCoverage : packoffset(c33);
  float GlobalWaterLevel : packoffset(c33.w);

  struct
  {
    float time;
    float staticReflectionIntensity;
    float gameDeltaTime;
  } GlobalScalars : packoffset(c34);

  float RcpStaticReflectionExposureScale : packoffset(c34.w);
  float2 GlobalNoiseSampler2DSquareSize : packoffset(c35);
  float SandstormIntensity : packoffset(c35.z);
  float StaticReflectionIntensityDest : packoffset(c35.w);
  float2 WindNoiseDeltaVector : packoffset(c36);
  float TimeOfDay : packoffset(c36.z);
  float VertexAOIntensity : packoffset(c36.w);
  float2 WindVector : packoffset(c37);
}

cbuffer Viewport : register(b1)
{
  float4 CameraNearPlaneSize : packoffset(c0);
  float4x4 DepthTextureTransform : packoffset(c1);
  float4 FSMClipPlanes : packoffset(c5);
  float4 FacettedShadowCastParams : packoffset(c6);
  float4 FogValues0 : packoffset(c7);
  float4 FogValues1 : packoffset(c8);
  float4x4 InvProjectionMatrix : packoffset(c9);
  float4x4 InvProjectionMatrixDepth : packoffset(c13);
  float4x3 InvViewMatrix : packoffset(c17);
  float4x4 PreviousViewProjectionMatrix : packoffset(c20);
  float4x4 ProjectionMatrix : packoffset(c24);
  float4 RainOcclusionFadeParams : packoffset(c28);
  float4x4 RainOcclusionProjectionMatrix : packoffset(c29);
  float4 RainOcclusionShadowMapSize : packoffset(c33);
  float4 ReflectionVolumeDebugColors[15] : packoffset(c34);
  float4 VPosOffset : packoffset(c49);
  float4 VPosScale : packoffset(c50);
  float4x3 ViewMatrix : packoffset(c51);
  float4x4 ViewProjectionMatrix : packoffset(c54);
  float4x4 ViewRotProjectionMatrix : packoffset(c58);
  float4x4 ViewRotProjectionMatrixPure : packoffset(c62);
  float4 ViewportSize : packoffset(c66);

  struct
  {
    float near;
    float far;
    float view;
    float oneOverView;
  } CameraDistances : packoffset(c67);


  struct
  {
    float4x4 inverseTransform;
    float3 rcpFadeRangePositive;
    float textureArrayIndexAsFloat;
    float3 rcpFadeRangeNegative;
    float fadeFactor;
    float2 multipliers;
    uint parallaxCorrection;
    float padding0;
  } ReflectionVolumes[15] : packoffset(c68);

  float3 CameraDirection : packoffset(c173);
  float DefaultReflectionTextureArrayIndexAsFloat : packoffset(c173.w);
  float3 CameraPosition : packoffset(c174);
  float DynamicCubeMapReflectionTextureMaxMipIndex : packoffset(c174.w);
  float3 CullingCameraPosition : packoffset(c175);
  float ExposedWhitePointOverExposureScale : packoffset(c175.w);
  float3 FogColorVector : packoffset(c176);
  float ExposureScale : packoffset(c176.w);
  float3 OppositeFogColorDelta : packoffset(c177);
  float MaxParaboloidReflectionMipIndex : packoffset(c177.w);
  float3 SideFogColor : packoffset(c178);
  float MaxStaticReflectionMipIndex : packoffset(c178.w);
  float3 SunFogColorDelta : packoffset(c179);
  float MeasuredExposureScale : packoffset(c179.w);
  float3 TemporalFilteringParams : packoffset(c180);
  float RaindropRippleScale : packoffset(c180.w);
  float3 UncompressDepthWeights : packoffset(c181);
  float ReflectionScaleDistanceMul : packoffset(c181.w);
  float3 UncompressDepthWeightsWS : packoffset(c182);
  float ReflectionScaleStrength : packoffset(c182.w);
  float3 ViewPoint : packoffset(c183);
  float SkyParaboloidTextureMaxMipIndex : packoffset(c183.w);
  float2 DefaultReflectionMultipliers : packoffset(c184);
  bool UseOnlySkyReflection : packoffset(c184.z);
  float2 ReflectionGIControl : packoffset(c185);
  uint2 SelectedPixel : packoffset(c185.z);
}

cbuffer SkyRenderer : register(b2)
{
  float4 AerialPerscpectiveFogParams : packoffset(c0);
  float4 ArtisticPatchForBrunetonSky : packoffset(c1);
  float4x4 SkyDomeInvViewMatrix : packoffset(c2);
  float4 SkyMoonPositionAndIntensity : packoffset(c6);
  float4 SkyParaboloidTextureSize : packoffset(c7);
  float4 SkyStarsIntensity : packoffset(c8);
  float4 SkySunPositionAndIrradiance : packoffset(c9);
  float4 StarDecalParams : packoffset(c10);
  float4 SunColorHack : packoffset(c11);
  float4 TopocentricXAxis : packoffset(c12);
  float4 TopocentricYAxis : packoffset(c13);
  float4 TopocentricZAxis : packoffset(c14);
  float3 MoonSkyColor : packoffset(c15);
  float MoonCloudIntensity : packoffset(c15.w);
  float3 MoonXAxis : packoffset(c16);
  float SkyIntensityForMainView : packoffset(c16.w);
  float3 MoonYAxis : packoffset(c17);
  float SkyMoonInScattering : packoffset(c17.w);
  float3 MoonZAxis : packoffset(c18);
  float SkyMoonMIETurbidity : packoffset(c18.w);
  float3 SkyMoonColor : packoffset(c19);
  float SkyMoonSpriteIntensity : packoffset(c19.w);
  float3 SkyMoonUnlitColor : packoffset(c20);
  float SkyMoonTurbidity : packoffset(c20.w);
  float3 SkyNightSkyHorizonColor : packoffset(c21);
  float SkyNightSkyCrossFadeThreshold : packoffset(c21.w);
  float3 SkyNightSkyTopColor : packoffset(c22);
  float SkyNightSkyGIFactor : packoffset(c22.w);
  float3 SkySunAndMoonTanCosAngle : packoffset(c23);
  float SkyNightSkyGradientGamma : packoffset(c23.w);
  float3 SunDiscDirection : packoffset(c24);
  float SkyNightSkyIntensity : packoffset(c24.w);
  float2 SkCameraSettings : packoffset(c25);
  float SkySunBelowHorizonFactor : packoffset(c25.z);
  float SkySunMoonCrossFade : packoffset(c25.w);
  float2 SkyFakeSunDirectionForMoonPhase : packoffset(c26);
  float SkySunTurbidity : packoffset(c26.z);
  float2 SkyOffScreenCloudLayersInvScale : packoffset(c27);
}

cbuffer CloudLayers : register(b3)
{
  float4 CL_LayerParams : packoffset(c0);
  float4 CL_LayerXAxis : packoffset(c1);
  float4 CL_LayerYAxis : packoffset(c2);
  float CL_AmbientIntensity : packoffset(c3);
  float CL_Contribution : packoffset(c3.y);
  float CL_CylindricProjectionOffset : packoffset(c3.z);
  float CL_CylindricSkewYAxis : packoffset(c3.w);
  float CL_Depth : packoffset(c4);
  float CL_EarthRadius : packoffset(c4.y);
  float CL_ExtinctionForHighAlpha : packoffset(c4.z);
  float CL_ExtinctionForLowAlpha : packoffset(c4.w);
  float CL_LayerHeight : packoffset(c5);
  float CL_Phase : packoffset(c5.y);
  float CL_PhaseAmbient : packoffset(c5.z);
  float CL_PhaseAmbientIntensity : packoffset(c5.w);
  float CL_PhaseIntensity : packoffset(c6);
  float CL_ScatteringForHighAlpha : packoffset(c6.y);
  float CL_ScatteringForLowAlpha : packoffset(c6.z);
  float CL_ShadowCoef : packoffset(c6.w);
}

cbuffer MaterialWD2CloudLayer : register(b4)
{
  float4 DetailUnderlayerBlend : packoffset(c0);
  float4 TypeUnderlayerBlend : packoffset(c1);
  float2 DetailTextureTiling : packoffset(c2);
  float DetailTextureRotation : packoffset(c2.z);
  float DetailUVRotationAnimation : packoffset(c2.w);
  float2 DetailUVAnimation : packoffset(c3);
  float MaskIntensity : packoffset(c3.z);
  float MaskTileCountX : packoffset(c3.w);
  float2 TypeTextureTiling : packoffset(c4);
  float MaskTileCountY : packoffset(c4.z);
  float TypeTextureRotation : packoffset(c4.w);
  float2 TypeUVAnimation : packoffset(c5);
  float TypeUVRotationAnimation : packoffset(c5.z);
  int DetailBlendingMode : packoffset(c5.w);
  int TypeBlendingMode : packoffset(c6);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float2 v1 : TexCoord0,
  uint4 v2 : TexCoord1,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float2 o4 : TEXCOORD4,
  out float4 o5 : SV_Position0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.z = -1;
  r1.y = v0.y;
  r0.w = GlobalScalars.time * CL_LayerParams.w + v0.x;
  r1.x = frac(r0.w);
  r1.yz = r1.xy * float2(2,2) + float2(-1,-1);
  r0.w = -0.5 + r1.x;
  r0.w = -abs(r0.w) * 2 + 1;
  r2.w = saturate(dot(r0.ww, CL_LayerParams.zz));
  r0.w = cmp(r1.z >= 0);
  r0.w = r0.w ? 1 : -1;
  r1.x = -r1.y * r1.y + 1;
  r1.x = sqrt(r1.x);
  r0.w = r1.x * r0.w;
  r1.xzw = CL_LayerYAxis.xyz * r0.www;
  r1.xyz = CL_LayerXAxis.xyz * r1.yyy + r1.xzw;
  r0.xy = -r1.xy;
  r0.yzw = CL_CylindricSkewYAxis * r0.xyz + float3(0,0,1);
  r3.x = dot(r0.yzw, r0.yzw);
  r3.x = rsqrt(r3.x);
  r0.yzw = r3.xxx * r0.yzw;
  r3.xyz = v0.www * r0.yzw;
  o2.xyz = r0.yzw;
  r1.w = -r1.x;
  r0.y = dot(r1.yw, r1.yw);
  r0.y = rsqrt(r0.y);
  r4.x = r1.y * r0.y;
  r4.y = r0.x * r0.y;
  r4.z = 0;
  r0.xyz = r4.xyz * v0.zzz + r3.xyz;
  o1.xyz = r4.xyz;
  r0.xyz = r0.xyz * CL_LayerParams.yyy + r1.xyz;
  r0.w = dot(r0.xy, r0.xy);
  r0.w = rsqrt(r0.w);
  r0.xy = r0.xy * r0.ww;
  r0.z = CL_CylindricProjectionOffset + r0.z;
  r1.z = r0.z * SkCameraSettings.x + -SkCameraSettings.y;
  r1.xy = SkCameraSettings.xx * r0.xy;
  r1.w = 1;
  r0.x = dot(r1.xyzw, ViewRotProjectionMatrix._m03_m13_m23_m33);
  r0.y = cmp(r2.w < 0.00392156886);
  r2.z = r0.y ? -10000 : r0.x;
  r2.x = dot(r1.xyzw, ViewRotProjectionMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, ViewRotProjectionMatrix._m01_m11_m21_m31);
  o0.xyzw = r2.xyzw;
  o5.xyw = r2.xyz;
  r0.xy = DetailUVAnimation.xy * GlobalScalars.time;
  r0.z = DetailUVRotationAnimation * GlobalScalars.time + DetailTextureRotation;
  r0.z = 3.14159274 * r0.z;
  sincos(r0.z, r1.x, r2.x);
  r3.xyzw = v1.xyxy * float4(-1,1,-1,1) + float4(0.5,-0.5,1,0);
  r0.zw = r3.xy * r2.xx;
  r2.x = r3.y * r1.x + r0.z;
  r2.y = -r3.x * r1.x + r0.w;
  r0.zw = float2(0.5,0.5) + r2.xy;
  o3.xy = r0.zw * DetailTextureTiling.xy + r0.xy;
  r0.x = TypeUVRotationAnimation * GlobalScalars.time + TypeTextureRotation;
  r0.x = 3.14159274 * r0.x;
  sincos(r0.x, r0.x, r1.x);
  r0.yz = r3.xy * r1.xx;
  r1.z = r3.y * r0.x + r0.y;
  r1.w = -r3.x * r0.x + r0.z;
  r0.xy = float2(0.5,0.5) + r1.zw;
  r0.zw = TypeUVAnimation.xy * GlobalScalars.time;
  r0.xy = r0.xy * TypeTextureTiling.xy + r0.zw;
  r1.xyzw = (uint4)v2.zwxy;
  o3.zw = r1.xy * float2(0.125,0.125) + r0.xy;
  r0.xy = r3.zw + r1.zw;
  o4.x = MaskTileCountX * r0.x;
  o4.y = MaskTileCountY * r0.y;
  o5.z = 9.99999972e-010;

float4 s = StereoParams.Load(0);
o5.x += s.x * o5.w;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Sun Jan 01 13:01:03 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyRenderer
// {
//
//   float4 AerialPerscpectiveFogParams;// Offset:    0 Size:    16 [unused]
//   float4 ArtisticPatchForBrunetonSky;// Offset:   16 Size:    16 [unused]
//   float4x4 SkyDomeInvViewMatrix;     // Offset:   32 Size:    64 [unused]
//   float4 SkyMoonPositionAndIntensity;// Offset:   96 Size:    16 [unused]
//   float4 SkyParaboloidTextureSize;   // Offset:  112 Size:    16 [unused]
//   float4 SkyStarsIntensity;          // Offset:  128 Size:    16 [unused]
//   float4 SkySunPositionAndIrradiance;// Offset:  144 Size:    16 [unused]
//   float4 StarDecalParams;            // Offset:  160 Size:    16 [unused]
//   float4 SunColorHack;               // Offset:  176 Size:    16 [unused]
//   float4 TopocentricXAxis;           // Offset:  192 Size:    16 [unused]
//   float4 TopocentricYAxis;           // Offset:  208 Size:    16 [unused]
//   float4 TopocentricZAxis;           // Offset:  224 Size:    16 [unused]
//   float3 MoonSkyColor;               // Offset:  240 Size:    12 [unused]
//   float MoonCloudIntensity;          // Offset:  252 Size:     4 [unused]
//   float3 MoonXAxis;                  // Offset:  256 Size:    12 [unused]
//   float SkyIntensityForMainView;     // Offset:  268 Size:     4 [unused]
//   float3 MoonYAxis;                  // Offset:  272 Size:    12 [unused]
//   float SkyMoonInScattering;         // Offset:  284 Size:     4 [unused]
//   float3 MoonZAxis;                  // Offset:  288 Size:    12 [unused]
//   float SkyMoonMIETurbidity;         // Offset:  300 Size:     4 [unused]
//   float3 SkyMoonColor;               // Offset:  304 Size:    12 [unused]
//   float SkyMoonSpriteIntensity;      // Offset:  316 Size:     4 [unused]
//   float3 SkyMoonUnlitColor;          // Offset:  320 Size:    12 [unused]
//   float SkyMoonTurbidity;            // Offset:  332 Size:     4 [unused]
//   float3 SkyNightSkyHorizonColor;    // Offset:  336 Size:    12 [unused]
//   float SkyNightSkyCrossFadeThreshold;// Offset:  348 Size:     4 [unused]
//   float3 SkyNightSkyTopColor;        // Offset:  352 Size:    12 [unused]
//   float SkyNightSkyGIFactor;         // Offset:  364 Size:     4 [unused]
//   float3 SkySunAndMoonTanCosAngle;   // Offset:  368 Size:    12 [unused]
//   float SkyNightSkyGradientGamma;    // Offset:  380 Size:     4 [unused]
//   float3 SunDiscDirection;           // Offset:  384 Size:    12 [unused]
//   float SkyNightSkyIntensity;        // Offset:  396 Size:     4 [unused]
//   float2 SkCameraSettings;           // Offset:  400 Size:     8
//   float SkySunBelowHorizonFactor;    // Offset:  408 Size:     4 [unused]
//   float SkySunMoonCrossFade;         // Offset:  412 Size:     4 [unused]
//   float2 SkyFakeSunDirectionForMoonPhase;// Offset:  416 Size:     8 [unused]
//   float SkySunTurbidity;             // Offset:  424 Size:     4 [unused]
//   float2 SkyOffScreenCloudLayersInvScale;// Offset:  432 Size:     8 [unused]
//
// }
//
// cbuffer CloudLayers
// {
//
//   float4 CL_LayerParams;             // Offset:    0 Size:    16
//   float4 CL_LayerXAxis;              // Offset:   16 Size:    16
//   float4 CL_LayerYAxis;              // Offset:   32 Size:    16
//   float CL_AmbientIntensity;         // Offset:   48 Size:     4 [unused]
//   float CL_Contribution;             // Offset:   52 Size:     4 [unused]
//   float CL_CylindricProjectionOffset;// Offset:   56 Size:     4
//   float CL_CylindricSkewYAxis;       // Offset:   60 Size:     4
//   float CL_Depth;                    // Offset:   64 Size:     4 [unused]
//   float CL_EarthRadius;              // Offset:   68 Size:     4 [unused]
//   float CL_ExtinctionForHighAlpha;   // Offset:   72 Size:     4 [unused]
//   float CL_ExtinctionForLowAlpha;    // Offset:   76 Size:     4 [unused]
//   float CL_LayerHeight;              // Offset:   80 Size:     4 [unused]
//   float CL_Phase;                    // Offset:   84 Size:     4 [unused]
//   float CL_PhaseAmbient;             // Offset:   88 Size:     4 [unused]
//   float CL_PhaseAmbientIntensity;    // Offset:   92 Size:     4 [unused]
//   float CL_PhaseIntensity;           // Offset:   96 Size:     4 [unused]
//   float CL_ScatteringForHighAlpha;   // Offset:  100 Size:     4 [unused]
//   float CL_ScatteringForLowAlpha;    // Offset:  104 Size:     4 [unused]
//   float CL_ShadowCoef;               // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer MaterialWD2CloudLayer
// {
//
//   float4 DetailUnderlayerBlend;      // Offset:    0 Size:    16 [unused]
//   float4 TypeUnderlayerBlend;        // Offset:   16 Size:    16 [unused]
//   float2 DetailTextureTiling;        // Offset:   32 Size:     8
//   float DetailTextureRotation;       // Offset:   40 Size:     4
//   float DetailUVRotationAnimation;   // Offset:   44 Size:     4
//   float2 DetailUVAnimation;          // Offset:   48 Size:     8
//   float MaskIntensity;               // Offset:   56 Size:     4 [unused]
//   float MaskTileCountX;              // Offset:   60 Size:     4
//   float2 TypeTextureTiling;          // Offset:   64 Size:     8
//   float MaskTileCountY;              // Offset:   72 Size:     4
//   float TypeTextureRotation;         // Offset:   76 Size:     4
//   float2 TypeUVAnimation;            // Offset:   80 Size:     8
//   float TypeUVRotationAnimation;     // Offset:   88 Size:     4
//   int DetailBlendingMode;            // Offset:   92 Size:     4 [unused]
//   int TypeBlendingMode;              // Offset:   96 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyRenderer                       cbuffer      NA          NA    2        1
// CloudLayers                       cbuffer      NA          NA    3        1
// MaterialWD2CloudLayer             cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TexCoord                 0   xy          1     NONE   float   xy  
// TexCoord                 1   xyzw        2     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[62], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 5
mov r0.z, l(-1.000000)
mov r1.y, v0.y
mad r0.w, cb0[34].x, cb3[0].w, v0.x
frc r1.x, r0.w
mad r1.yz, r1.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
add r0.w, r1.x, l(-0.500000)
mad r0.w, -|r0.w|, l(2.000000), l(1.000000)
dp2_sat r2.w, r0.wwww, cb3[0].zzzz
ge r0.w, r1.z, l(0.000000)
movc r0.w, r0.w, l(1.000000), l(-1.000000)
mad r1.x, -r1.y, r1.y, l(1.000000)
sqrt r1.x, r1.x
mul r0.w, r0.w, r1.x
mul r1.xzw, r0.wwww, cb3[2].xxyz
mad r1.xyz, cb3[1].xyzx, r1.yyyy, r1.xzwx
mov r0.xy, -r1.xyxx
mad r0.yzw, cb3[3].wwww, r0.xxyz, l(0.000000, 0.000000, 0.000000, 1.000000)
dp3 r3.x, r0.yzwy, r0.yzwy
rsq r3.x, r3.x
mul r0.yzw, r0.yyzw, r3.xxxx
mul r3.xyz, r0.yzwy, v0.wwww
mov o2.xyz, r0.yzwy
mov r1.w, -r1.x
dp2 r0.y, r1.ywyy, r1.ywyy
rsq r0.y, r0.y
mul r4.x, r0.y, r1.y
mul r4.y, r0.y, r0.x
mov r4.z, l(0)
mad r0.xyz, r4.xyzx, v0.zzzz, r3.xyzx
mov o1.xyz, r4.xyzx
mad r0.xyz, r0.xyzx, cb3[0].yyyy, r1.xyzx
dp2 r0.w, r0.xyxx, r0.xyxx
rsq r0.w, r0.w
mul r0.xy, r0.wwww, r0.xyxx
add r0.z, r0.z, cb3[3].z
mad r1.z, r0.z, cb2[25].x, -cb2[25].y
mul r1.xy, r0.xyxx, cb2[25].xxxx
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb1[61].xyzw
lt r0.y, r2.w, l(0.00392156886)
movc r2.z, r0.y, l(-10000.000000), r0.x
dp4 r2.x, r1.xyzw, cb1[58].xyzw
dp4 r2.y, r1.xyzw, cb1[59].xyzw
mov o0.xyzw, r2.xyzw
mov o5.xyw, r2.xyxz
mul r0.xy, cb0[34].xxxx, cb4[3].xyxx
mad r0.z, cb4[2].w, cb0[34].x, cb4[2].z
mul r0.z, r0.z, l(3.14159274)
sincos r1.x, r2.x, r0.z
mad r3.xyzw, v1.xyxy, l(-1.000000, 1.000000, -1.000000, 1.000000), l(0.500000, -0.500000, 1.000000, 0.000000)
mul r0.zw, r2.xxxx, r3.xxxy
mad r2.x, r3.y, r1.x, r0.z
mad r2.y, -r3.x, r1.x, r0.w
add r0.zw, r2.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mad o3.xy, r0.zwzz, cb4[2].xyxx, r0.xyxx
mad r0.x, cb4[5].z, cb0[34].x, cb4[4].w
mul r0.x, r0.x, l(3.14159274)
sincos r0.x, r1.x, r0.x
mul r0.yz, r1.xxxx, r3.xxyx
mad r1.z, r3.y, r0.x, r0.y
mad r1.w, -r3.x, r0.x, r0.z
add r0.xy, r1.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.zw, cb0[34].xxxx, cb4[5].xxxy
mad r0.xy, r0.xyxx, cb4[4].xyxx, r0.zwzz
utof r1.xyzw, v2.zwxy
mad o3.zw, r1.xxxy, l(0.000000, 0.000000, 0.125000, 0.125000), r0.xxxy
add r0.xy, r1.zwzz, r3.zwzz
mul o4.x, r0.x, cb4[3].w
mul o4.y, r0.y, cb4[4].z
mov o5.z, l(9.999999717E-010)
ret 
// Approximately 71 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
