// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 3c36024e524cdca2-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:12:44 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ShadowRealSampler               sampler_c      NA          NA    0        1
// LongRangeShadowSampler          sampler_c      NA          NA    1        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    2        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    3        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    4        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    5        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// LongRangeShadow                   cbuffer      NA          NA    3        1
// GBufferMini                       cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[55], dynamicIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 12
dcl_indexableTemp x0[3], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 3c36024e524cdca2-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

mad r0.x, cb4[0].y, cb0[66].x, v0.x
ftoi r0.x, r0.x
ftoi r0.y, v0.y
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t4.yzxw
mad r2.x, r1.z, cb0[67].z, cb0[67].x
mad r2.yz, v0.xxyx, cb0[66].zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.xy, r2.yzyy, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[9].xyzw
dp4 r3.y, r1.xyzw, cb0[10].xyzw
dp4 r3.z, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r1.xyzw, cb0[12].xyzw
div r1.xyz, r3.xyzx, r1.xxxx
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[17].xyzw
dp4 r3.y, r1.xyzw, cb0[18].xyzw
dp4 r3.z, r1.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t5.xyzw
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
max r1.xyzw, cb1[9].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r4.xyzw, cb1[10].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r5.xyzw, cb1[11].xywz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r6.x, r0.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r6.y, r0.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r6.z, r0.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r0.w, -r0.z, l(0.500000)
mul r6.w, r0.w, l(0.666666687)
max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r4.xxyz, r6.yyyy
mad r1.xyz, r6.xxxx, r1.xyzx, r2.yzwy
mad r1.xyz, r6.zzzz, r5.xywx, r1.xyzx
mov r5.x, r1.w
mov r5.y, r4.w
mad r1.xyz, r6.wwww, r5.xyzx, r1.xyzx
add r0.w, r6.y, r6.x
add r0.w, r6.z, r0.w
add r0.w, r6.w, r0.w
div r1.xyz, r1.xyzx, r0.wwww
add r2.yzw, -r3.xxyz, r9.xxyz
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.yyzw
dp3 r0.w, -r2.yzwy, r0.xyzx
add r0.w, r0.w, r0.w
mad r4.xyz, r0.xyzx, -r0.wwww, -r2.yzwy
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r0.w, r0.w, r4.z
mad r1.w, -r0.w, r0.w, l(1.000000)
sqrt r1.w, r1.w
mul r3.w, r0.w, l(0.545521200)
mul r4.xy, r1.wwww, l(0.545521200, 0.838097036, 0.000000, 0.000000)
mad r5.w, r0.w, l(0.838097036), -r4.x
mad r5.yz, r0.wwww, l(0.000000, 0.838097036, 0.545521200, 0.000000), r4.xxyx
mad r5.x, r1.w, l(0.838097036), -r3.w
lt r4.xy, r5.zxzz, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r4.xyzw, r4.xxyy, l(0,-1.000000,0,1.000000), r5.zwxy
ge r0.w, r4.y, l(0.000000)
ge r1.w, l(0.000000), r4.w
lt r3.w, r4.y, l(0.000000)
add r5.xy, r4.zwzz, l(-1.000000, -0.000000, 0.000000, 0.000000)
dp2 r5.x, r5.xyxx, r5.xyxx
sqrt r5.x, r5.x
mul r5.x, r5.x, l(0.500000)
mul r5.x, r5.x, r5.x
add r4.xy, -r4.zwzz, r4.xyxx
dp2 r4.x, r4.xyxx, r4.xyxx
sqrt r4.x, r4.x
mul r4.x, r4.x, l(0.500000)
mul r4.x, r4.x, r4.x
movc r3.w, r3.w, r5.x, r4.x
add r4.xy, -r4.zwzz, l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r4.x, r4.xyxx, r4.xyxx
sqrt r4.x, r4.x
mul r4.x, r4.x, l(0.500000)
mul r4.x, r4.x, r4.x
div r3.w, r4.x, r3.w
max r3.w, r3.w, l(0.080000)
movc r1.w, r1.w, l(0.080000), r3.w
movc r0.w, r0.w, l(1.000000), r1.w
ftou r4.xy, v0.xyxx
and r4.xy, r4.xyxx, l(127, 127, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.w, r4.xyzw, t0.yzwx
mov r5.z, l(0)
mov r3.w, l(0)
mov r4.xyzw, l(0,0,2,0)
loop 
  uge r5.w, r4.w, l(3)
  breakc_nz r5.w
  ishl r5.w, r4.w, l(2)
  mul r6.xyz, r3.yyyy, cb2[r5.w + 1].xyzx
  mad r6.xyz, cb2[r5.w + 0].xyzx, r3.xxxx, r6.xyzx
  mad r6.xyz, cb2[r5.w + 2].xyzx, r3.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb2[r5.w + 3].xyzx
  max r5.w, |r6.y|, |r6.x|
  add r3.w, r5.w, cb2[16].x
  ult r5.w, r4.w, l(2)
  if_nz r5.w
    mad r5.w, cb2[16].y, r1.w, r3.w
    lt r6.w, r5.w, l(1.000000)
    if_nz r6.w
      mov r4.xy, r6.xyxx
      mov r5.z, r6.z
      mov r3.w, r5.w
      mov r4.z, r4.w
      break 
    endif 
    mov r3.w, r5.w
  endif 
  iadd r4.w, r4.w, l(1)
  mov r4.xy, r6.xyxx
  mov r5.z, r6.z
  mov r4.z, l(2)
endloop 
mov x0[0].z, l(0.166666672)
mov x0[1].z, l(0.500000)
mov x0[2].z, l(0.833333313)
mov r6.x, x0[r4.z + 0].z
mov r6.y, l(0.500000)
mad r5.xy, r4.xyxx, l(0.166666672, -0.500000, 0.000000, 0.000000), r6.xyxx
dp3 r1.w, cb2[17].xyzx, icb[r4.z + 0].xyzx
dp3 r0.z, r2.yzwy, r0.xyzx
mul_sat r0.z, r0.z, cb2[54].w
dp3 r2.y, cb2[18].xyzx, icb[r4.z + 0].xyzx
add r1.w, r1.w, -r2.y
mad r0.z, r0.z, r1.w, r2.y
ieq r1.w, r4.z, l(2)
mad_sat r2.y, r3.w, cb2[16].z, cb2[16].w
and r1.w, r1.w, r2.y
ftoi r2.yz, v0.xxyx
and r4.xy, r2.yzyy, l(63, 63, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.yz, r4.xyzw, t1.zxyw
mad r2.yz, r2.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r4.xy, r2.yyyy, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r4.xy, r2.zzzz, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r4.xyxx
dp2 r4.z, r2.yzyy, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r6.xy, r0.zzzz, cb2[38].zwzz
mul r7.xy, r4.xzxx, r6.xyxx
mov r7.z, l(0)
add r7.xyz, r5.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.z, r7.xyxx, t2.xxxx, s0, r7.z
dp2 r4.w, r2.yzyy, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r4.xy, r4.ywyy, r6.xyxx
mov r4.z, l(0)
add r4.xyz, r4.xyzx, r5.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r4.xyxx, t2.xxxx, s0, r4.z
add r0.z, r0.z, r2.w
mul r4.xy, r2.yyyy, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r4.xy, r2.zzzz, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r4.xyxx
dp2 r4.z, r2.yzyy, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r7.xy, r6.xyxx, r4.xzxx
mov r7.z, l(0)
add r7.xyz, r5.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r7.xyxx, t2.xxxx, s0, r7.z
add r0.z, r0.z, r2.w
dp2 r4.w, r2.yzyy, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r4.xy, r6.xyxx, r4.ywyy
mov r4.z, l(0)
add r2.yzw, r4.xxyz, r5.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.y, r2.yzyy, t2.xxxx, s0, r2.w
add r0.z, r0.z, r2.y
mul r2.y, r0.z, l(0.250000)
mad r0.xy, r0.xyxx, cb3[0].xyxx, r3.xyxx
mad r2.z, r3.z, cb3[0].z, cb3[0].w
mad r0.xy, r0.xyxx, cb3[1].xyxx, cb3[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s1, r2.z
mad r0.x, -r0.z, l(0.250000), r0.x
mad r0.x, r1.w, r0.x, r2.y
mad r0.x, r0.x, l(255.000000), l(0.500000)
round_ni r0.x, r0.x
sqrt r0.y, r0.w
min r0.y, r0.y, l(1.000000)
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.xy, r0.xyxx
ishl r0.y, r0.y, l(8)
or o1.x, r0.y, r0.x
mul_sat r0.x, r2.x, l(0.001000)
mad r0.x, r0.x, l(65535.000000), l(0.500000)
round_ni r0.x, r0.x
ftou o1.y, r0.x
mul r0.xyz, r1.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r0.xyzx, cb4[0].xxxx
mov o0.w, r0.w
ret 
// Approximately 190 instruction slots used