// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e5969a9aa00c497d-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:02 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer DeferredFxHair
// {
//
//   float4 FilterKernel[21];           // Offset:    0 Size:   336
//   float4 UvParams;                   // Offset:  336 Size:    16 [unused]
//   float2 FilterKernelStepUvScale;    // Offset:  352 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DeferredFxHair__MaskTexture__SampObj__    sampler      NA          NA    0        1
// DeferredFxHair__SourceTexture__SampObj__    sampler      NA          NA    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// DeferredFxHair__MaskTexture__TexObj__    texture  float4          2d    1        1
// DeferredFxHair__SourceTexture__TexObj__    texture  float4          2d    2        1
// Viewport                          cbuffer      NA          NA    0        1
// DeferredFxHair                    cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[67], immediateIndexed
dcl_constantbuffer cb1[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear centroid v0.xy
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e5969a9aa00c497d-ps.txt

mul r6.w, r6.x, r6.y
mul r8.x, r6.w, cb0[9].x
mul r8.y, r6.w, cb0[10].x
mul r8.z, r6.w, cb0[11].x
mul r8.w, r6.w, cb0[12].x
dp4 r9.x, r8.xyzw, cb0[17].xyzw
dp4 r9.y, r8.xyzw, cb0[18].xyzw
dp4 r9.z, r8.xyzw, cb0[19].xyzw
add r7.xyz, cb0[174].xyz, r9.xyz

mov r0.zw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v0.xyxx, t1.xyzw, s0
mul r1.z, r1.z, l(4.000000)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, r1.zzzz, r1.xxxy
mul r1.zw, r1.zzzw, cb1[22].xxxy
ftoi r2.xy, v1.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t0.xyzw
mov r2.yw, l(0,1.000000,0,1.000000)
dp2 r3.x, r2.xyxx, cb0[11].zwzz
dp2 r2.x, r2.xyxx, cb0[12].zwzz
div r2.x, -r3.x, r2.x
div r1.zw, r1.zzzw, r2.xxxx
mul r3.xy, r1.zwzz, cb1[1].xxxx
mad r3.xy, r3.xyxx, cb0[66].xyxx, v1.xyxx
ftoi r0.xy, r3.xyxx
ld_indexable(texture2d)(float,float,float,float) r2.z, r0.xyzw, t0.yzxw
dp2 r0.x, r2.zwzz, cb0[11].zwzz
dp2 r0.y, r2.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.y
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
dp2 r0.y, r1.xyxx, r1.xyxx
rsq r0.y, r0.y
mul r0.yz, r0.yyyy, r1.xxyx
mad r1.xy, r1.zwzz, cb1[1].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.yz, r1.xyxx, t1.zxyw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t2.xyzw, s1
mad r1.xy, r2.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r2.z, r2.y
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r2.y, r1.xyxx, r1.xyxx
rsq r2.y, r2.y
mul r1.xy, r1.xyxx, r2.yyyy
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t2.xyzw, s1
add r2.yzw, r3.xxyz, -r4.xxyz
mad r2.yzw, r0.xxxx, r2.yyzw, r4.xxyz
mul r2.yzw, r2.yyzw, cb1[1].zzzz
mad r2.yzw, r4.xxyz, cb1[0].zzzz, r2.yyzw
mov r3.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[2].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
mov r3.yw, l(0,1.000000,0,1.000000)
dp2 r0.x, r3.xyxx, cb0[11].zwzz
dp2 r0.w, r3.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[2].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r5.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r5.xxyz, cb1[2].zzzz, r2.yyzw
mov r5.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[3].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r5.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.z, r5.xyzw, t0.yzxw
dp2 r0.x, r3.zwzz, cb0[11].zwzz
dp2 r0.w, r3.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[3].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r3.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r3.xxyz, cb1[3].zzzz, r2.yyzw
mov r3.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[4].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
mov r3.yw, l(0,1.000000,0,1.000000)
dp2 r0.x, r3.xyxx, cb0[11].zwzz
dp2 r0.w, r3.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[4].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r5.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r5.xxyz, cb1[4].zzzz, r2.yyzw
mov r5.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[5].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r5.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.z, r5.xyzw, t0.yzxw
dp2 r0.x, r3.zwzz, cb0[11].zwzz
dp2 r0.w, r3.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[5].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r3.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r3.xxyz, cb1[5].zzzz, r2.yyzw
mov r3.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[6].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
mov r3.yw, l(0,1.000000,0,1.000000)
dp2 r0.x, r3.xyxx, cb0[11].zwzz
dp2 r0.w, r3.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[6].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r5.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r5.xxyz, cb1[6].zzzz, r2.yyzw
mov r5.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[7].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r5.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.z, r5.xyzw, t0.yzxw
dp2 r0.x, r3.zwzz, cb0[11].zwzz
dp2 r0.w, r3.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[7].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r3.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r3.xxyz, cb1[7].zzzz, r2.yyzw
mov r3.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[8].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
mov r3.yw, l(0,1.000000,0,1.000000)
dp2 r0.x, r3.xyxx, cb0[11].zwzz
dp2 r0.w, r3.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[8].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r5.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r5.xxyz, cb1[8].zzzz, r2.yyzw
mov r5.zw, l(0,0,0,0)
mul r0.xw, r1.zzzw, cb1[9].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r5.xy, r0.xwxx
ld_indexable(texture2d)(float,float,float,float) r3.z, r5.xyzw, t0.yzxw
dp2 r0.x, r3.zwzz, cb0[11].zwzz
dp2 r0.w, r3.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[9].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r3.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r3.xxyz, cb1[9].zzzz, r2.yyzw
mul r0.xw, r1.zzzw, cb1[10].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
mov r3.yw, l(0,1.000000,0,1.000000)
dp2 r0.x, r3.xyxx, cb0[11].zwzz
dp2 r0.w, r3.xyxx, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[10].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r5.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r5.xxyz, cb1[10].zzzz, r2.yyzw
mul r0.xw, r1.zzzw, cb1[11].xxxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r5.xy, r0.xwxx
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.z, r5.xyzw, t0.yzxw
dp2 r0.x, r3.zwzz, cb0[11].zwzz
dp2 r0.w, r3.zwzz, cb0[12].zwzz
div r0.x, -r0.x, r0.w
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
mad r1.xy, r1.zwzz, cb1[11].xxxx, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r1.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, -r4.xyzx, r5.xyzx
mad r1.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r3.y, r3.x
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r3.x, r1.xyxx, r1.xyxx
rsq r3.x, r3.x
mul r1.xy, r1.xyxx, r3.xxxx
dp2 r1.x, r1.xyxx, r0.yzyy
mul r1.x, |r1.x|, |r1.x|
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r3.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mad r2.yzw, r3.xxyz, cb1[11].zzzz, r2.yyzw
mul r0.xw, r1.zzzw, cb1[12].xxxx
mad r1.xy, r1.zwzz, cb1[12].xxxx, v0.xyxx
mad r0.xw, r0.xxxw, cb0[66].xxxy, v1.xxxy
ftoi r3.xy, r0.xwxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r3.xyzw, t0.xzwy
mov r0.w, l(1.000000)
dp2 r1.z, r0.xwxx, cb0[11].zwzz
dp2 r0.x, r0.xwxx, cb0[12].zwzz
div r0.x, -r1.z, r0.x
add r0.x, -r0.x, r2.x
mul_sat r0.x, r0.x, l(100.000000)
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.xyxx, t1.zwxy, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t2.xyzw, s1
add r3.xyz, -r4.xyzx, r3.xyzx
mad r1.xy, r1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, r1.w, r1.z
ge r0.w, r0.w, l(0.000100)
and r0.w, r0.w, l(0x3f800000)
dp2 r1.z, r1.xyxx, r1.xyxx
rsq r1.z, r1.z
mul r1.xy, r1.zzzz, r1.xyxx
dp2 r0.y, r1.xyxx, r0.yzyy
mul r0.y, |r0.y|, |r0.y|
mul r0.y, r0.w, r0.y
mul r0.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r3.xyzx, r4.xyzx
mov o0.w, r4.w
mad o0.xyz, r0.xyzx, cb1[12].zzzz, r2.yzwy
ret 
// Approximately 362 instruction slots used