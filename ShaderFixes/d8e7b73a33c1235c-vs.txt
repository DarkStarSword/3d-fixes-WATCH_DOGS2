// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d8e7b73a33c1235c-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:22 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Skin
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 CurvatureUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 DiffuseUVTiling2;           // Offset:   48 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   64 Size:    16 [unused]
//   float4 MaskUVTiling2;              // Offset:   80 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float4 NormalUVTiling2;            // Offset:  112 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  128 Size:    12 [unused]
//   float DiffuseNormalIntensity1;     // Offset:  140 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:  144 Size:    12 [unused]
//   float FaceBlendDisplaceStrength;   // Offset:  156 Size:     4
//   float3 FaceBlendZoneSelection;     // Offset:  160 Size:    12
//   float FaceBlendFadeDistance;       // Offset:  172 Size:     4
//   float3 TightsColor;                // Offset:  176 Size:    12 [unused]
//   float MaskReflectanceOffset;       // Offset:  188 Size:     4 [unused]
//   float2 CurvatureTextureOffset;     // Offset:  192 Size:     8 [unused]
//   float MaskRoughnessOffset;         // Offset:  200 Size:     4 [unused]
//   float Metalness;                   // Offset:  204 Size:     4 [unused]
//   float2 DiffuseTextureOffset2;      // Offset:  208 Size:     8 [unused]
//   float NormalDynamicWrinklesIntensity;// Offset:  216 Size:     4 [unused]
//   float NormalIntensity1;            // Offset:  220 Size:     4 [unused]
//   float2 FaceBlendDisplaceRange;     // Offset:  224 Size:     8
//   float NormalIntensity2;            // Offset:  232 Size:     4 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float2 MaskTextureOffset2;         // Offset:  240 Size:     8 [unused]
//   float Roughness;                   // Offset:  248 Size:     4 [unused]
//   float SSSStrength;                 // Offset:  252 Size:     4 [unused]
//   float TightsStrenght;              // Offset:  256 Size:     4 [unused]
//   float TightsThickness;             // Offset:  260 Size:     4 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DiffuseBlendMode;              // Offset:  268 Size:     4 [unused]
//   int FaceBlendDisplaceTextureArrayUV;// Offset:  272 Size:     4
//   int Mask2ColorChannel;             // Offset:  276 Size:     4 [unused]
//   int MaskChannelUsageAlpha;         // Offset:  280 Size:     4 [unused]
//   int MaskChannelUsageBlue;          // Offset:  284 Size:     4 [unused]
//   int MaskChannelUsageGreen;         // Offset:  288 Size:     4 [unused]
//   int MaskChannelUsageRed;           // Offset:  292 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  296 Size:     4 [unused]
//   bool DynamicWrinkles;              // Offset:  300 Size:     4 [unused]
//   bool RoughnessInDiffuse1Alpha;     // Offset:  304 Size:     4 [unused]
//   bool UseFaceBlend;                 // Offset:  308 Size:     4 [unused]
//   bool UseTights;                    // Offset:  312 Size:     4 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer MaterialNetHackingGeneric
// {
//
//   float3 Color;                      // Offset:    0 Size:    12 [unused]
//   float AttenuationDistanceFar;      // Offset:   12 Size:     4
//   float3 OutlineColor;               // Offset:   16 Size:    12 [unused]
//   float AttenuationDistanceRange;    // Offset:   28 Size:     4
//   float3 OutlineTargetColor;         // Offset:   32 Size:    12 [unused]
//   float ConstantIntensity;           // Offset:   44 Size:     4 [unused]
//   float InnerFresnelIntensity;       // Offset:   48 Size:     4 [unused]
//   float InnerFresnelPower;           // Offset:   52 Size:     4 [unused]
//   float OccludedIntensity;           // Offset:   56 Size:     4 [unused]
//   float OuterFresnelIntensity;       // Offset:   60 Size:     4 [unused]
//   float OuterFresnelPower;           // Offset:   64 Size:     4 [unused]
//   float OutlineCutout;               // Offset:   68 Size:     4 [unused]
//   float OutlineFarMultiplier;        // Offset:   72 Size:     4 [unused]
//   float OutlineIntensity;            // Offset:   76 Size:     4 [unused]
//   float OutlineNearMultiplier;       // Offset:   80 Size:     4 [unused]
//   float OverExposeIntensity;         // Offset:   84 Size:     4 [unused]
//   float TransparentIntensity;        // Offset:   88 Size:     4 [unused]
//   float TransparentSoft;             // Offset:   92 Size:     4 [unused]
//   float VertexNoiseBaseMultiplier;   // Offset:   96 Size:     4 [unused]
//   float VertexNoiseFarDist;          // Offset:  100 Size:     4
//   float VertexNoiseFarMultiplier;    // Offset:  104 Size:     4 [unused]
//   float VertexNoiseIntensity;        // Offset:  108 Size:     4 [unused]
//   float VertexNoiseNearDist;         // Offset:  112 Size:     4
//   float VertexNoiseNearMultiplier;   // Offset:  116 Size:     4 [unused]
//   float VertexNoiseRatio;            // Offset:  120 Size:     4 [unused]
//   float VertexNoiseScale;            // Offset:  124 Size:     4 [unused]
//   float VertexNoiseTop;              // Offset:  128 Size:     4 [unused]
//   float VertexNoiseTopMultiplier;    // Offset:  132 Size:     4 [unused]
//   bool DisableAlphaTest;             // Offset:  136 Size:     4 [unused]
//   bool RandomColor;                  // Offset:  140 Size:     4 [unused]
//   bool WhiteNoise;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__TexObj__    texture  float4     2darray    0        1
// SkinningConfig                    texture   uint4         buf    1        1
// Viewport                          cbuffer      NA          NA    0        1
// MaterialWD2Skin                   cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    4        1
// MaterialNetHackingGeneric         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// normal                   0   xyzw        3     NONE   float   xyz 
// texcoord                 1   xyzw        4     NONE   float      w
// texcoord                 0   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[18], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[1533], dynamicIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2darray (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyz
dcl_input v4.w
dcl_input v5.w
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r1.x, r0.w, l(1)
if_nz r1.x
  and r1.x, v0.w, l(8191)
  mov r2.xyzw, l(1.000000,0,0,0)
  mov r1.yzw, l(0,0,0,0)
else 
  and r3.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r3.xyzw, r3.xxxx, t1.xyzw
  and r1.xyzw, r3.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  mov r2.xyzw, v2.zyxw
endif 
mad r3.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mad r0.xyz, v3.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r4.x, v4.w, v5.w
lt r4.x, r4.x, l(1.500000)
if_nz r4.x
  itof r4.xyzw, v1.xyzw
  mad r4.xyzw, r4.xyzw, cb2[2].zwzw, cb2[2].xyxy
  add r5.x, -v4.w, l(1.000000)
  add_sat r5.z, r5.x, -v5.w
  movc r4.xy, cb1[17].xxxx, r4.zwzz, r4.xyxx
  mov r6.x, cb4[0].w
  mov r6.y, cb4[1].w
  mov r6.z, cb4[2].w
  add r6.xyz, r6.xyzx, -cb0[174].xyzx
  dp3 r5.w, r6.xyzx, r6.xyzx
  mul r6.x, cb1[10].w, cb1[10].w
  mul r5.w, r5.w, r6.x
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  mov r5.x, v4.w
  mov r5.y, v5.w
  mul r5.xyz, r5.wwww, r5.xyzx
  mul r5.xyz, r5.xyzx, cb1[9].wwww
  add r5.w, -cb1[14].x, cb1[14].y
  lt r6.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  if_nz r6.x
    mov r4.z, cb1[10].x
    sample_l_indexable(texture2darray)(float,float,float,float) r7.xyz, r4.xyzx, t0.xyzw, s0, l(0.000000)
    mad r7.xyz, r7.xyzx, r5.wwww, cb1[14].xxxx
    mad r3.xyz, -r7.xyzx, r5.xxxx, r3.xyzx
  endif 
  if_nz r6.y
    mov r4.w, cb1[10].y
    sample_l_indexable(texture2darray)(float,float,float,float) r6.xyw, r4.xywx, t0.xywz, s0, l(0.000000)
    mad r6.xyw, r6.xyxw, r5.wwww, cb1[14].xxxx
    mad r3.xyz, -r6.xywx, r5.yyyy, r3.xyzx
  endif 
  if_nz r6.z
    mov r4.z, cb1[10].z
    sample_l_indexable(texture2darray)(float,float,float,float) r4.xyz, r4.xyzx, t0.xyzw, s0, l(0.000000)
    mad r4.xyz, r4.xyzx, r5.wwww, cb1[14].xxxx
    mad r3.xyz, -r4.xyzx, r5.zzzz, r3.xyzx
  endif 
endif 
mov r4.xyzw, l(0,0,0,0)
mov r5.xyzw, l(0,0,0,0)
mov r6.xyzw, l(0,0,0,0)
mov r7.x, l(0)
loop 
  ult r7.z, r7.x, r0.w
  ult r7.w, r7.x, l(4)
  and r7.z, r7.w, r7.z
  breakc_z r7.z
  dp4 r7.z, r2.xyzw, icb[r7.x + 0].xyzw
  ineg r7.w, r7.x
  ult r8.xyz, r7.xxxx, l(1, 2, 3, 0)
  and r9.y, r7.w, r8.y
  iadd r7.xy, r7.xxxx, l(1, -3, 0, 0)
  movc r9.z, r8.y, l(0), r7.y
  ieq r9.w, r8.z, l(0)
  mov r9.x, r8.x
  and r8.xyzw, r1.xyzw, r9.xyzw
  or r7.yw, r8.yyyw, r8.xxxz
  or r7.y, r7.w, r7.y
  imul null, r7.y, r7.y, l(3)
  mul r8.x, r7.z, cb3[r7.y + 0].w
  mul r8.y, r7.z, cb3[r7.y + 1].w
  mul r8.z, r7.z, cb3[r7.y + 2].w
  mad r4.xyz, r7.zzzz, cb3[r7.y + 0].xyzx, r4.xyzx
  mad r5.xyz, r7.zzzz, cb3[r7.y + 1].xyzx, r5.xyzx
  mad r6.xyz, r7.zzzz, cb3[r7.y + 2].xyzx, r6.xyzx
  mov r9.x, r4.w
  mov r9.y, r5.w
  mov r9.z, r6.w
  add r7.yzw, r8.xxyz, r9.xxyz
  mov r4.w, r7.y
  mov r5.w, r7.z
  mov r6.w, r7.w
endloop 
mov r3.w, l(1.000000)
dp4 r1.x, r3.xyzw, r4.xyzw
dp4 r1.y, r3.xyzw, r5.xyzw
dp4 r1.z, r3.xyzw, r6.xyzw
dp3 r2.x, r0.xyzx, r4.xyzx
dp3 r2.y, r0.xyzx, r5.xyzx
dp3 r2.z, r0.xyzx, r6.xyzx
mov r0.x, cb4[0].w
mov r0.y, cb4[1].w
mov r0.z, cb4[2].w
add r0.xyz, r0.xyzx, -cb0[174].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.x, r0.x, -cb5[7].x
add r0.y, cb5[6].y, -cb5[7].x
div_sat o0.w, r0.x, r0.y
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb4[0].xyzw
dp4 r0.y, r1.xyzw, cb4[1].xyzw
dp4 r0.z, r1.xyzw, cb4[2].xyzw
add r1.xyz, r0.xyzx, -cb0[174].xyzx
mad r0.xyz, -r1.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r0.xyzx
mul r1.xyz, r1.xyzx, l(0.999000, 0.999000, 0.999000, 0.000000)
mul r3.x, r1.x, cb0[58].x
mul r3.y, r1.x, cb0[59].x
mul r3.z, r1.x, cb0[60].x
mul r3.w, r1.x, cb0[61].x
mul r4.x, r1.y, cb0[58].y
mul r4.y, r1.y, cb0[59].y
mul r4.z, r1.y, cb0[60].y
mul r4.w, r1.y, cb0[61].y
mad r5.x, r1.z, cb0[58].z, cb0[58].w
mad r5.y, r1.z, cb0[59].z, cb0[59].w
mad r5.z, r1.z, cb0[60].z, cb0[60].w
mad r5.w, r1.z, cb0[61].z, cb0[61].w
add r1.xyzw, r4.xyzw, r5.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
dp3 o1.x, r2.xyzx, cb4[0].xyzx
dp3 o1.y, r2.xyzx, cb4[1].xyzx
dp3 o1.z, r2.xyzx, cb4[2].xyzx
add r2.xyz, r0.xyzx, -cb0[174].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
add r0.w, r0.w, -cb5[0].w
div_sat r0.w, r0.w, cb5[1].w
add o1.w, -r0.w, l(1.000000)
mov o0.xyz, r0.xyzx
mov o3.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d8e7b73a33c1235c-vs.txt
ne r10.w, r1.w, l(1.0)
if_nz r10.w
  add r10.w, r1.w, -r10.y
  mad r1.x, r10.w, r10.x, r1.x
endif

mov o2.xy, r1.zwzz
ret 
// Approximately 143 instruction slots used