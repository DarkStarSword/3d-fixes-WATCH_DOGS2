// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed d85c9345720b6ad8-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:54 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer DeferredFXHBAO
// {
//
//   float4 AOResolution;               // Offset:    0 Size:    16
//   float4 Params;                     // Offset:   16 Size:    16
//   float4 QuadParams;                 // Offset:   32 Size:    16 [unused]
//   float4 Radiuses;                   // Offset:   48 Size:    16
//   float4 UV0Params;                  // Offset:   64 Size:    16 [unused]
//   float2 FocalLength;                // Offset:   80 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorPointClamp                   sampler      NA          NA    0        1
// DeferredFXHBAO__RandTexture__SampObj__    sampler      NA          NA    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// DeferredFXHBAO__RandTexture__TexObj__    texture  float4          2d    1        1
// Viewport                          cbuffer      NA          NA    0        1
// DeferredFXHBAO                    cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear centroid v0.xy
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 17

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed d85c9345720b6ad8-ps.txt

mul r13.w, r13.x, r13.y
mul r15.x, r13.w, cb0[9].x
mul r15.y, r13.w, cb0[10].x
mul r15.z, r13.w, cb0[11].x
mul r15.w, r13.w, cb0[12].x
dp4 r16.x, r15.xyzw, cb0[17].xyzw
dp4 r16.y, r15.xyzw, cb0[18].xyzw
dp4 r16.z, r15.xyzw, cb0[19].xyzw
add r14.xyz, cb0[174].xyz, r16.xyz

sample_l_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t0.xyzw, s0, l(0.000000)
mov r0.y, l(1.000000)
dp2 r0.z, r0.xyxx, cb0[11].zwzz
dp2 r0.w, r0.xyxx, cb0[12].zwzz
div r0.z, -r0.z, r0.w
mad r1.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r1.z, l(1.000000)
mul r1.xyw, r0.zzzz, r1.xyxz
mul r2.xy, v1.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s1
mul r0.w, cb1[3].x, cb1[5].x
mul r0.w, r0.w, l(0.500000)
div r0.w, r0.w, r1.w
mul r0.w, r0.w, cb1[0].x
ge r2.w, r0.w, l(1.000000)
if_nz r2.w
  min r3.x, r0.w, l(4.000000)
  add r2.w, r3.x, l(1.000000)
  div r3.y, r0.w, r2.w
  div r0.w, cb1[3].w, r3.y
  lt r2.w, r0.w, r3.x
  add r0.w, r2.z, r0.w
  round_ni r0.w, r0.w
  max r4.x, r0.w, l(1.000000)
  div r4.y, cb1[3].w, r4.x
  movc r3.xy, r2.wwww, r4.xyxx, r3.xyxx
  mul r3.yz, r3.yyyy, cb1[0].zzwz
  mov r4.x, cb1[0].z
  mov r4.yw, l(0,0,0,1.000000)
  add r4.xy, r4.xyxx, v0.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.xyxx, t0.yzxw, s0, l(0.000000)
  dp2 r0.w, r4.zwzz, cb0[11].zwzz
  dp2 r2.w, r4.zwzz, cb0[12].zwzz
  div r0.w, -r0.w, r2.w
  mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r4.z, l(1.000000)
  mov r5.x, -cb1[0].z
  mov r5.yw, l(0,0,0,1.000000)
  add r5.xy, r5.xyxx, v0.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.xyxx, t0.yzxw, s0, l(0.000000)
  dp2 r2.w, r5.zwzz, cb0[11].zwzz
  dp2 r3.w, r5.zwzz, cb0[12].zwzz
  div r2.w, -r2.w, r3.w
  mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r5.z, l(1.000000)
  mov r6.xw, l(0,0,0,1.000000)
  mov r6.y, cb1[0].w
  add r6.xy, r6.xyxx, v0.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r6.z, r6.xyxx, t0.yzxw, s0, l(0.000000)
  dp2 r3.w, r6.zwzz, cb0[11].zwzz
  dp2 r4.w, r6.zwzz, cb0[12].zwzz
  div r3.w, -r3.w, r4.w
  mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r6.z, l(1.000000)
  mov r7.xw, l(0,0,0,1.000000)
  mov r7.y, -cb1[0].w
  add r7.xy, r7.xyxx, v0.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r7.z, r7.xyxx, t0.yzxw, s0, l(0.000000)
  dp2 r4.w, r7.zwzz, cb0[11].zwzz
  dp2 r5.w, r7.zwzz, cb0[12].zwzz
  div r4.w, -r4.w, r5.w
  mad r7.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r7.z, l(1.000000)
  mad r4.xyz, r4.xyzx, r0.wwww, -r1.xywx
  mad r5.xyz, -r5.xyzx, r2.wwww, r1.xywx
  dp3 r0.w, r4.xyzx, r4.xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  lt r0.w, r0.w, r2.w
  movc r4.xyz, r0.wwww, r4.xyzx, r5.xyzx
  mul r5.xy, cb1[0].wzww, cb1[0].xyxx
  mul r4.xyz, r4.xyzx, r5.xxxx
  mad r5.xzw, r6.xxyz, r3.wwww, -r1.xxyw
  mad r6.xyz, -r7.xyzx, r4.wwww, r1.xywx
  dp3 r0.w, r5.xzwx, r5.xzwx
  dp3 r2.w, r6.xyzx, r6.xyzx
  lt r0.w, r0.w, r2.w
  movc r5.xzw, r0.wwww, r5.xxzw, r6.xxyz
  mul r5.xyz, r5.yyyy, r5.xzwx
  add r0.w, r3.x, l(-1.000000)
  mov r6.z, l(1.000000)
  mov r7.yw, l(0,1.000000,0,0)
  mov r8.y, l(1.000000)
  mov r9.z, l(1.000000)
  mov r3.xw, l(0,0,0,0)
  loop 
    ge r2.w, r3.w, l(6.000000)
    breakc_nz r2.w
    mul r2.w, r3.w, l(1.04719770)
    sincos r10.x, r11.x, r2.w
    mul r8.zw, r2.yyyx, r10.xxxx
    mad r10.x, r11.x, r2.x, -r8.z
    mad r10.y, r11.x, r2.y, r8.w
    mul r8.zw, r3.yyyz, r10.xxxy
    mul r10.zw, r2.zzzz, r8.zzzw
    mul r10.xyzw, r10.xyzw, cb1[0].zwxy
    round_ne r10.zw, r10.zzzw
    mad r10.zw, r10.zzzw, cb1[0].zzzw, v0.xxxy
    mul r8.zw, r8.zzzw, cb1[0].xxxy
    round_ne r8.zw, r8.zzzw
    mul r11.xy, r8.zwzz, cb1[0].zwzz
    mul r12.xyz, r5.xyzx, r11.yyyy
    mad r12.xyz, r11.xxxx, r4.xyzx, r12.xyzx
    dp2 r2.w, r12.xyxx, r12.xyxx
    rsq r2.w, r2.w
    mad r7.z, -r12.z, r2.w, cb1[1].y
    mad r10.xy, r2.zzzz, r11.xyxx, r10.xyxx
    mul r10.xy, r10.xyxx, cb1[0].xyxx
    round_ne r10.xy, r10.xyxx
    mul r11.xy, r10.xyxx, cb1[0].zwzz
    mul r11.yzw, r5.xxyz, r11.yyyy
    mad r11.xyz, r11.xxxx, r4.xyzx, r11.yzwy
    dp2 r2.w, r11.xyxx, r11.xyxx
    rsq r2.w, r2.w
    mad r2.w, -r11.z, r2.w, cb1[1].y
    mad r4.w, r2.w, r2.w, l(1.000000)
    rsq r4.w, r4.w
    mul r4.w, r2.w, r4.w
    mad r10.xy, r10.xyxx, cb1[0].zwzz, v0.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r7.x, r10.xyxx, t0.xyzw, s0, l(0.000000)
    dp2 r5.w, r7.xyxx, cb0[11].zwzz
    dp2 r6.w, r7.xyxx, cb0[12].zwzz
    div r5.w, -r5.w, r6.w
    mad r6.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r6.w, r5.w, r6.z
    mad r6.w, r1.z, r0.z, -r6.w
    mad r10.xy, r6.xyxx, r5.wwww, -r1.xyxx
    dp2 r7.x, r10.xyxx, r10.xyxx
    rsq r7.x, r7.x
    mul r6.w, r6.w, r7.x
    mad r7.x, r6.w, r6.w, l(1.000000)
    rsq r7.x, r7.x
    mad r11.xyz, r6.xyzx, r5.wwww, -r1.xywx
    dp3 r5.w, r11.xyzx, r11.xyzx
    lt r6.x, r5.w, cb1[3].y
    lt r2.w, r2.w, r6.w
    and r2.w, r2.w, r6.x
    mad r5.w, r5.w, cb1[3].z, l(1.000000)
    mad r4.w, r6.w, r7.x, -r4.w
    mul r6.y, r4.w, r5.w
    max r6.x, r6.w, r7.z
    movc r6.xy, r2.wwww, r6.xyxx, r7.zwzz
    mad r2.w, r6.x, r6.x, l(1.000000)
    sqrt r2.w, r2.w
    div r2.w, r6.x, r2.w
    mov r7.xz, r10.zzwz
    mov r11.xy, r6.yxyy
    mov r11.z, r2.w
    mov r4.w, l(1.000000)
    loop 
      lt r5.w, r0.w, r4.w
      breakc_nz r5.w
      mad r7.xz, r8.zzwz, cb1[0].zzwz, r7.xxzx
      sample_l_indexable(texture2d)(float,float,float,float) r8.x, r7.xzxx, t0.xyzw, s0, l(0.000000)
      dp2 r5.w, r8.xyxx, cb0[11].zwzz
      dp2 r6.w, r8.xyxx, cb0[12].zwzz
      div r5.w, -r5.w, r6.w
      mad r9.xy, r7.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
      mul r6.w, r5.w, r9.z
      mad r6.w, r1.z, r0.z, -r6.w
      mad r10.xy, r9.xyxx, r5.wwww, -r1.xyxx
      dp2 r8.x, r10.xyxx, r10.xyxx
      rsq r8.x, r8.x
      mul r12.y, r6.w, r8.x
      mad r9.xyw, r9.xyxz, r5.wwww, -r1.xyxw
      dp3 r5.w, r9.xywx, r9.xywx
      lt r6.w, r5.w, cb1[3].y
      lt r8.x, r11.y, r12.y
      and r6.w, r6.w, r8.x
      mad r8.x, r12.y, r12.y, l(1.000000)
      sqrt r8.x, r8.x
      div r12.z, r12.y, r8.x
      mad r5.w, r5.w, cb1[3].z, l(1.000000)
      add r8.x, -r11.z, r12.z
      mad r12.x, r5.w, r8.x, r11.x
      movc r11.xyz, r6.wwww, r12.xyzx, r11.xyzx
      add r4.w, r4.w, l(1.000000)
    endloop 
    add r3.x, r3.x, r11.x
    add r3.w, r3.w, l(1.000000)
  endloop 
  mul r0.z, r3.x, cb1[1].w
  mad_sat r0.z, -r0.z, l(0.166666672), l(1.000000)
  dp2 r0.w, r0.xyxx, cb0[15].zwzz
  dp2 r0.x, r0.xyxx, cb0[16].zwzz
  div r0.x, -r0.w, r0.x
  mul r0.y, r0.x, l(65025.000000)
  frc r1.z, r0.y
  mad r0.x, -r1.z, l(0.0000152590219), r0.x
  mul r0.y, r0.x, l(255.000000)
  frc r1.y, r0.y
  mad o0.x, -r1.y, l(0.00392156886), r0.x
  log r0.x, r0.z
  mul r0.x, r0.x, cb1[1].z
  exp o0.w, r0.x
  mov o0.yz, r1.yyzy
else 
  mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
ret 
// Approximately 199 instruction slots used