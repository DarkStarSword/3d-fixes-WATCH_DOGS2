// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7b8c35c1fd308763-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:56 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer TXAAMotionField
// {
//
//   float4x4 CurrentInvViewMatrix;     // Offset:    0 Size:    64
//   float4 Params0;                    // Offset:   64 Size:    16 [unused]
//   float4 Params1;                    // Offset:   80 Size:    16 [unused]
//   float4x4 PreviousProjectionMatrix; // Offset:   96 Size:    64
//   float4x4 PreviousViewMatrix;       // Offset:  160 Size:    64
//   float4 Resolution;                 // Offset:  224 Size:    16
//   int SamplesCount;                  // Offset:  240 Size:     4
//   bool TimeDeltaIsZero;              // Offset:  244 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__DepthVPSamplerMS        texture   float        2dMS    0        1
// TXAAMotionField__GBufferVelocityTextureMS    texture  float4        2dMS    1        1
// Viewport                          cbuffer      NA          NA    0        1
// TXAAMotionField                   cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[68], immediateIndexed
dcl_constantbuffer cb1[16], immediateIndexed
dcl_resource_texture2dms(0) (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7b8c35c1fd308763-ps.txt

mul r4.w, r4.x, r4.y
mul r6.x, r4.w, cb0[9].x
mul r6.y, r4.w, cb0[10].x
mul r6.z, r4.w, cb0[11].x
mul r6.w, r4.w, cb0[12].x
dp4 r7.x, r6.xyzw, cb0[17].xyzw
dp4 r7.y, r6.xyzw, cb0[18].xyzw
dp4 r7.z, r6.xyzw, cb0[19].xyzw
add r5.xyz, cb0[174].xyz, r7.xyz

if_z cb1[15].y
  ftoi r0.xy, v1.xyxx
  mov r0.zw, l(0,0,0,0)
  ldms_indexable(texture2dms)(float,float,float,float) r1.xy, r0.xyww, t1.xyzw, l(0)
  dp2 r1.z, r1.xyxx, r1.xyxx
  ilt r1.w, l(1), cb1[15].x
  if_nz r1.w
    ldms_indexable(texture2dms)(float,float,float,float) r2.xy, r0.xyww, t1.xyzw, l(1)
    dp2 r2.z, r2.xyxx, r2.xyxx
    lt r1.w, r1.z, r2.z
    movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
    mov r1.w, l(2)
  else 
    mov r1.w, l(1)
  endif 
  ilt r2.x, r1.w, cb1[15].x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(2)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(3)
  endif 
  ilt r2.y, r1.w, cb1[15].x
  and r2.x, r2.y, r2.x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(3)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(4)
  endif 
  ilt r2.y, r1.w, cb1[15].x
  and r2.x, r2.y, r2.x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(4)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(5)
  endif 
  ilt r2.y, r1.w, cb1[15].x
  and r2.x, r2.y, r2.x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(5)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(6)
  endif 
  ilt r2.y, r1.w, cb1[15].x
  and r2.x, r2.y, r2.x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(6)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(7)
  endif 
  ilt r2.y, r1.w, cb1[15].x
  and r2.x, r2.y, r2.x
  if_nz r2.x
    ldms_indexable(texture2dms)(float,float,float,float) r2.yz, r0.xyww, t1.wxyz, l(7)
    dp2 r2.w, r2.yzyy, r2.yzyy
    lt r3.x, r1.z, r2.w
    movc r1.xyz, r3.xxxx, r2.yzwy, r1.xyzx
    mov r1.w, l(8)
  endif 
  ilt r1.w, r1.w, cb1[15].x
  and r1.w, r1.w, r2.x
  if_nz r1.w
    ldms_indexable(texture2dms)(float,float,float,float) r2.xy, r0.xyww, t1.xyzw, l(8)
    dp2 r1.w, r2.xyxx, r2.xyxx
    lt r1.z, r1.z, r1.w
    movc r1.xy, r1.zzzz, r2.xyxx, r1.xyxx
  endif 
  ne r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r1.z, r1.w, r1.z
  if_nz r1.z
    lt r1.z, l(1.000000), r1.x
    add r1.w, r1.x, l(-2.000000)
    movc r1.x, r1.z, r1.w, r1.x
    mov r1.y, -r1.y
  else 
    ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw, l(0)
    mov r0.yw, l(0,1.000000,0,1.000000)
    dp2 r0.z, r0.xyxx, cb0[11].zwzz
    dp2 r0.x, r0.xyxx, cb0[12].zwzz
    div r0.x, -r0.z, r0.x
    mad r0.yz, v1.xxyx, cb1[14].zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
    mul r0.yz, r0.yyzy, cb0[0].xxyx
    mul r2.xy, r0.yzyy, l(1.000000, -1.000000, 0.000000, 0.000000)
    div r0.x, r0.x, cb0[67].x
    mov r2.z, -cb0[67].x
    mul r0.xyz, r0.xxxx, r2.xyzx
    dp4 r2.x, r0.xyzw, cb0[24].xyzw
    dp4 r2.y, r0.xyzw, cb0[25].xyzw
    dp4 r1.z, r0.xyzw, cb0[27].xyzw
    dp4 r3.x, r0.xyzw, cb1[0].xyzw
    dp4 r3.y, r0.xyzw, cb1[1].xyzw
    dp4 r3.z, r0.xyzw, cb1[2].xyzw
    mov r3.w, l(1.000000)
    dp4 r0.x, r3.xyzw, cb1[10].xyzw
    dp4 r0.y, r3.xyzw, cb1[11].xyzw
    dp4 r0.z, r3.xyzw, cb1[12].xyzw
    mov r0.w, l(1.000000)
    dp4 r3.x, r0.xyzw, cb1[6].xyzw
    dp4 r3.y, r0.xyzw, cb1[7].xyzw
    dp4 r0.x, r0.xyzw, cb1[9].xyzw
    max r0.x, r0.x, l(0.000100)
    div r0.xy, r3.xyxx, r0.xxxx
    div r0.zw, r2.xxxy, r1.zzzz
    add r0.xy, -r0.xyxx, r0.zwzz
    mul r1.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  endif 
  mov r1.x, -r1.x
else 
  mov r1.xy, l(0,0,0,0)
endif 
mov o0.xy, r1.xyxx
mov o0.zw, l(0,0,0,1.000000)
ret 
// Approximately 122 instruction slots used