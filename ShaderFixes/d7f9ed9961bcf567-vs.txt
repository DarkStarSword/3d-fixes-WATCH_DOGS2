// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d7f9ed9961bcf567-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:53 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528 [unused]
//
// }
//
// cbuffer MaterialWD2Skin
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 CurvatureUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 DiffuseUVTiling2;           // Offset:   48 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   64 Size:    16 [unused]
//   float4 MaskUVTiling2;              // Offset:   80 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float4 NormalUVTiling2;            // Offset:  112 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  128 Size:    12 [unused]
//   float DiffuseNormalIntensity1;     // Offset:  140 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:  144 Size:    12 [unused]
//   float FaceBlendDisplaceStrength;   // Offset:  156 Size:     4
//   float3 FaceBlendZoneSelection;     // Offset:  160 Size:    12
//   float FaceBlendFadeDistance;       // Offset:  172 Size:     4
//   float3 TightsColor;                // Offset:  176 Size:    12 [unused]
//   float MaskReflectanceOffset;       // Offset:  188 Size:     4 [unused]
//   float2 CurvatureTextureOffset;     // Offset:  192 Size:     8 [unused]
//   float MaskRoughnessOffset;         // Offset:  200 Size:     4 [unused]
//   float Metalness;                   // Offset:  204 Size:     4 [unused]
//   float2 DiffuseTextureOffset2;      // Offset:  208 Size:     8 [unused]
//   float NormalDynamicWrinklesIntensity;// Offset:  216 Size:     4 [unused]
//   float NormalIntensity1;            // Offset:  220 Size:     4 [unused]
//   float2 FaceBlendDisplaceRange;     // Offset:  224 Size:     8
//   float NormalIntensity2;            // Offset:  232 Size:     4 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float2 MaskTextureOffset2;         // Offset:  240 Size:     8 [unused]
//   float Roughness;                   // Offset:  248 Size:     4 [unused]
//   float SSSStrength;                 // Offset:  252 Size:     4 [unused]
//   float TightsStrenght;              // Offset:  256 Size:     4 [unused]
//   float TightsThickness;             // Offset:  260 Size:     4 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DiffuseBlendMode;              // Offset:  268 Size:     4 [unused]
//   int FaceBlendDisplaceTextureArrayUV;// Offset:  272 Size:     4
//   int Mask2ColorChannel;             // Offset:  276 Size:     4 [unused]
//   int MaskChannelUsageAlpha;         // Offset:  280 Size:     4 [unused]
//   int MaskChannelUsageBlue;          // Offset:  284 Size:     4 [unused]
//   int MaskChannelUsageGreen;         // Offset:  288 Size:     4 [unused]
//   int MaskChannelUsageRed;           // Offset:  292 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  296 Size:     4 [unused]
//   bool DynamicWrinkles;              // Offset:  300 Size:     4 [unused]
//   bool RoughnessInDiffuse1Alpha;     // Offset:  304 Size:     4 [unused]
//   bool UseFaceBlend;                 // Offset:  308 Size:     4 [unused]
//   bool UseTights;                    // Offset:  312 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__SampObj__    sampler      NA          NA    0        1
// SkinningConfig                    texture   uint4         buf    0        1
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__TexObj__    texture  float4     2darray    1        1
// Viewport                          cbuffer      NA          NA    0        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// MaterialWD2Skin                   cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// texcoord                 9   xyzw        3     NONE   float   xyzw
// normal                   0   xyzw        4     NONE   float       
// color                    1   xyzw        5     NONE   float      w
// texcoord                 1   xyzw        6     NONE   float      w
// texcoord                 0   xyzw        7     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[1533], dynamicIndexed
dcl_constantbuffer cb4[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (uint,uint,uint,uint) t0
dcl_resource_texture2darray (float,float,float,float) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v5.w
dcl_input v6.w
dcl_input v7.w
dcl_output o0.xyzw
dcl_output_siv o1.xyzw, position
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r1.x, r0.w, l(1)
if_nz r1.x
  and r1.x, v0.w, l(8191)
  mov r2.xyzw, l(1.000000,0,0,0)
  mov r3.xyzw, l(0,0,0,0)
  mov r1.yzw, l(0,0,0,0)
  mov r4.xyzw, l(0,0,0,0)
else 
  and r5.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r5.xyzw, r5.xxxx, t0.xyzw
  and r1.xyzw, r5.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  ushr r4.xyzw, r5.xyzw, l(16, 16, 16, 16)
  mov r2.xyzw, v2.zyxw
  mov r3.xyzw, v3.zyxw
endif 
mad r5.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
add r0.x, v6.w, v7.w
lt r0.x, r0.x, l(1.500000)
if_nz r0.x
  itof r6.xyzw, v1.xyzw
  mad r6.xyzw, r6.xyzw, cb2[2].zwzw, cb2[2].xyxy
  add r0.x, -v6.w, l(1.000000)
  add_sat r0.z, r0.x, -v7.w
  movc r6.xy, cb4[17].xxxx, r6.zwzz, r6.xyxx
  mov r7.x, cb1[0].w
  mov r7.y, cb1[1].w
  mov r7.z, cb1[2].w
  add r7.xyz, r7.xyzx, -cb0[174].xyzx
  dp3 r7.x, r7.xyzx, r7.xyzx
  mul r7.y, cb4[10].w, cb4[10].w
  mul r7.x, r7.y, r7.x
  min r7.x, r7.x, l(1.000000)
  add r7.x, -r7.x, l(1.000000)
  mov r0.x, v6.w
  mov r0.y, v7.w
  mul r0.xyz, r0.xyzx, r7.xxxx
  mul r0.xyz, r0.xyzx, cb4[9].wwww
  add r7.x, -cb4[14].x, cb4[14].y
  lt r7.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xxyz
  if_nz r7.y
    mov r6.z, cb4[10].x
    sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r6.xyzx, t1.xyzw, s0, l(0.000000)
    mad r8.xyz, r8.xyzx, r7.xxxx, cb4[14].xxxx
    mad r5.xyz, -r8.xyzx, r0.xxxx, r5.xyzx
  endif 
  if_nz r7.z
    mov r6.w, cb4[10].y
    sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r6.xywx, t1.xyzw, s0, l(0.000000)
    mad r8.xyz, r8.xyzx, r7.xxxx, cb4[14].xxxx
    mad r5.xyz, -r8.xyzx, r0.yyyy, r5.xyzx
  endif 
  if_nz r7.w
    mov r6.z, cb4[10].z
    sample_l_indexable(texture2darray)(float,float,float,float) r6.xyz, r6.xyzx, t1.xyzw, s0, l(0.000000)
    mad r6.xyz, r6.xyzx, r7.xxxx, cb4[14].xxxx
    mad r5.xyz, -r6.xyzx, r0.zzzz, r5.xyzx
  endif 
endif 
mov r6.xyzw, l(0,0,0,0)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyzw, l(0,0,0,0)
mov r0.x, l(0)
loop 
  uge r0.y, r0.x, r0.w
  breakc_nz r0.y
  ieq r9.xyzw, r0.xxxx, l(0, 1, 2, 3)
  ieq r10.xyzw, r0.xxxx, l(4, 5, 6, 7)
  and r11.xyzw, r9.wzyx, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  and r12.xyzw, r10.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r0.y, r11.wzyx, r2.xyzw
  mad r0.y, r12.x, r3.x, r0.y
  mad r0.y, r12.y, r3.y, r0.y
  mad r0.y, r12.z, r3.z, r0.y
  mad r0.y, r12.w, r3.w, r0.y
  and r9.xyzw, r1.xyzw, r9.xyzw
  or r0.z, r9.x, r9.y
  or r0.z, r0.z, r9.z
  or r0.z, r0.z, r9.w
  and r9.xyzw, r4.xyzw, r10.xyzw
  or r0.z, r0.z, r9.x
  or r0.z, r0.z, r9.y
  or r0.z, r0.z, r9.z
  or r0.z, r0.z, r9.w
  imul null, r0.z, r0.z, l(3)
  mad r6.xyzw, r0.yyyy, cb3[r0.z + 0].xyzw, r6.xyzw
  mad r7.xyzw, r0.yyyy, cb3[r0.z + 1].xyzw, r7.xyzw
  mad r8.xyzw, r0.yyyy, cb3[r0.z + 2].xyzw, r8.xyzw
  iadd r0.x, r0.x, l(1)
endloop 
mov r5.w, l(1.000000)
dp4 r0.x, r5.xyzw, r6.xyzw
dp4 r0.y, r5.xyzw, r7.xyzw
dp4 r0.z, r5.xyzw, r8.xyzw
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[0].xyzw
dp4 r1.y, r0.xyzw, cb1[1].xyzw
dp4 r1.z, r0.xyzw, cb1[2].xyzw
add r0.xyz, r1.xyzx, -cb0[174].xyzx
mul r1.x, r0.x, cb0[58].x
mul r1.y, r0.x, cb0[59].x
mul r1.z, r0.x, cb0[60].x
mul r1.w, r0.x, cb0[61].x
mul r2.x, r0.y, cb0[58].y
mul r2.y, r0.y, cb0[59].y
mul r2.z, r0.y, cb0[60].y
mul r2.w, r0.y, cb0[61].y
mad r3.x, r0.z, cb0[58].z, cb0[58].w
mad r3.y, r0.z, cb0[59].z, cb0[59].w
mad r3.z, r0.z, cb0[60].z, cb0[60].w
mad r3.w, r0.z, cb0[61].z, cb0[61].w
add r0.xyzw, r2.xyzw, r3.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o1.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d7f9ed9961bcf567-vs.txt
ne r13.w, r0.w, l(1.0)
if_nz r13.w
  add r13.w, r0.w, -r13.y
  mad r0.x, r13.w, r13.x, r0.x
endif

mul r1.xy, r0.xyxx, cb0[66].xyxx
mul o0.xy, r1.xyxx, l(0.00390625000, -0.00390625000, 0.000000, 0.000000)
mov o0.z, r0.w
mov o0.w, v5.w

// mov o1.xyzw, r0.xyzw // Relocated from here with asmtool.py

ret 
// Approximately 121 instruction slots used