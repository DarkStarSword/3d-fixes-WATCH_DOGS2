// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 5db7d9e3810c0217-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:06:45 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float SSRTextureMaxMipIndex;       // Offset:  128 Size:     4
//   bool GameIsPaused;                 // Offset:  132 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    4        1
// DeferredLightingBase__SunShadowMaskTexture    texture  float2          2d    5        1
// DeferredLightingBase__ProbeLightingTexture    texture  float4          2d    6        1
// SSR__MotionVectorTexture__TexObj__    texture  float4          2d    7        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    8        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    9        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d   10        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d   11        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d   12        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// SSR                               cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecubearray (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 29

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r25.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 5db7d9e3810c0217-ps.txt

// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 5db7d9e3810c0217-ps.txt

mul r25.w, r25.x, r25.y
mul r27.x, r25.w, cb1[9].x
mul r27.y, r25.w, cb1[10].x
mul r27.z, r25.w, cb1[11].x
mul r27.w, r25.w, cb1[12].x
dp4 r28.x, r27.xyzw, cb1[17].xyzw
dp4 r28.y, r27.xyzw, cb1[18].xyzw
dp4 r28.z, r27.xyzw, cb1[19].xyzw
add r26.xyz, cb1[174].xyz, r28.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t2.zwxy
mov r0.w, l(1.000000)
dp2 r2.x, r0.zwzz, cb1[11].zwzz
dp2 r0.z, r0.zwzz, cb1[12].zwzz
div r0.z, -r2.x, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 5db7d9e3810c0217-ps.txt

add r25.w, -r2.z, -r25.y
mul r25.w, r25.w, r25.x
mad r2.x, -r25.w, cb1[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb1[17].xyzw
dp4 r3.y, r2.xyzw, cb1[18].xyzw
dp4 r3.z, r2.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t10.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t11.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyww, t12.zyxw
mad r0.z, r5.w, l(255.000000), l(0.500000)
round_ni r0.z, r0.z
ftou r0.z, r0.z
ushr r0.z, r0.z, l(5)
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r4.xyzx
ieq r7.xyz, r0.zzzz, l(1, 4, 0, 0)
ge r0.w, r2.x, l(0.750000)
add r6.w, r2.x, l(-0.750000)
mad r6.w, r6.w, l(-0.599999905), l(1.000000)
movc r0.w, r0.w, r6.w, l(1.000000)
movc r0.w, r7.y, r0.w, r2.x
movc r0.w, r7.x, l(1.000000), r0.w
add r8.xyz, -r3.xyzx, r26.xyzx
dp3 r6.w, r8.xyzx, r8.xyzx
rsq r6.w, r6.w
mul r9.xyz, r6.wwww, r8.xyzx
mul r10.yzw, r0.wwww, r2.yyzw
if_nz r7.x
  mad r2.w, r4.w, l(0.500000), l(0.500000)
  mad r2.w, r2.w, l(65535.000000), l(0.500000)
  ftou r2.w, r2.w
  and r11.xy, r2.wwww, l(255, 0x0000ff00, 0, 0)
  utof r11.xy, r11.xyxx
  mul r11.xz, r11.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.w, r2.x, l(255.000000)
  ftou r2.w, r2.w
  and r12.xy, r2.wwww, l(15, 240, 0, 0)
  utof r12.xy, r12.xyxx
  mul r11.yw, r12.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r12.w, l(0)
  mov r10.x, r10.y
  mov r13.x, l(0)
else 
  mul r2.w, r5.y, r5.y
  max r5.y, r2.w, l(0.001000)
  ieq r2.w, r0.z, l(2)
  if_nz r2.w
    mad r2.w, r4.w, l(0.500000), l(0.500000)
    mad r2.w, r2.w, l(65535.000000), l(0.500000)
    ftou r2.w, r2.w
    and r14.xy, r2.wwww, l(255, 0x0000ff00, 0, 0)
    utof r14.xy, r14.xyxx
    mov r14.z, r5.z
    mad r14.xyz, r14.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.w, -r2.x, l(1.000000)
    mul r2.w, r2.w, r10.y
    mad r10.x, r2.w, l(0.500000), r10.y
    dp3 r2.w, r14.xyzx, r14.xyzx
    rsq r2.w, r2.w
    mul r11.xzw, r2.wwww, r14.xxyz
    mov r11.y, l(0)
    mov r5.z, l(0.500000)
    mov r12.w, l(0)
    mov r13.x, l(0)
  else 
    ieq r2.w, r0.z, l(3)
    if_nz r2.w
      mad r2.w, r4.w, l(0.500000), l(0.500000)
      mad r2.w, r2.w, l(65535.000000), l(0.500000)
      ftou r2.w, r2.w
      and r14.xyzw, r2.wwww, l(0x0000f800, 2016, 31, 31)
      utof r14.xyzw, r14.xyzw
      ge r15.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r14.wyxw
      mul r2.w, r14.w, l(0.00249675405)
      mad r16.xyz, r14.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r16.xyz, r16.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r16.xyz, r16.xyzx
      movc r11.x, r15.x, r2.w, r16.x
      mul r14.xy, r14.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r11.zw, r15.yyyz, r14.xxxy, r16.yyyz
      mov r11.y, l(0)
      mov r12.w, l(0)
      mov r13.x, l(0)
    else 
      if_nz r7.y
        mad r2.w, r4.w, l(32767.000000), l(32767.000000)
        ftou r2.w, r2.w
        and r7.w, r2.w, l(255)
        utof r7.w, r7.w
        mul r7.w, r7.w, l(0.0123199718)
        ubfe r2.w, l(8), l(8), r2.w
        utof r2.w, r2.w
        mad r2.w, r2.w, l(0.0246399436), l(-3.14159274)
        sincos r14.x, r15.x, r7.w
        sincos r16.x, r17.x, r2.w
        mul r17.x, r14.x, r17.x
        mul r17.y, r14.x, r16.x
        mov r17.z, r15.x
        dp3 r2.w, r17.xyzx, r17.xyzx
        rsq r2.w, r2.w
        mul r11.xzw, r2.wwww, r17.xxyz
        mul_sat r12.w, r2.x, l(0.250000)
        mov r11.y, l(0)
        mov r13.x, l(0)
      else 
        ieq r2.w, r0.z, l(5)
        lt r7.w, r4.z, l(0.900000)
        movc r14.xyz, r7.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r15.xyz, r4.zxyz, r14.xyzx
        mad r14.xyz, r4.yzxy, r14.yzxy, -r15.xyzx
        dp3 r7.w, r14.xyzx, r14.xyzx
        rsq r7.w, r7.w
        mul r14.xyz, r7.wwww, r14.xyzx
        mul r15.xyz, r4.zxyz, r14.yzxy
        mad r4.xyz, r4.yzxy, r14.zxyz, -r15.xyzx
        dp3 r7.w, r4.xyzx, r4.xyzx
        rsq r7.w, r7.w
        mul r4.xyz, r4.xyzx, r7.wwww
        mad r7.w, r4.w, l(2.000000), l(-1.000000)
        mul r7.w, r7.w, l(3.14159274)
        sincos r15.x, r16.x, r7.w
        mul r14.xyz, r14.xyzx, r15.xxxx
        mad r14.xyz, r4.xyzx, r16.xxxx, r14.xyzx
        mad r4.x, r4.w, l(0.500000), l(0.500000)
        mad r4.x, r4.x, l(65535.000000), l(0.500000)
        ftou r4.x, r4.x
        and r4.xy, r4.xxxx, l(255, 0x0000ff00, 0, 0)
        utof r4.xy, r4.xyxx
        mul r4.x, r4.x, l(0.00392156886)
        mad r4.z, r4.y, l(0.0000306372567), l(-1.000000)
        movc r4.xy, r0.zzzz, l(0,0,0,0), r4.xzxx
        mov r14.w, r5.x
        mov r4.z, l(0)
        movc r11.xyzw, r2.wwww, r14.xwyz, r4.xzzz
        mov r2.yz, l(0,0,0,0)
        mov r4.w, r14.w
        movc r13.xyz, r2.wwww, r2.zxyz, r4.yzwy
        mov r12.w, r13.y
        mov r5.x, r13.z
      endif 
    endif 
    mov r10.x, r10.y
  endif 
endif 
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyww, t6.xyzw
div r2.xyz, r2.xyzx, cb1[176].wwww
ld_indexable(texture2d)(float,float,float,float) r4.xy, r1.xyww, t5.xyzw
mul r4.y, r4.y, r4.y
dp3 r4.z, r3.xyzx, cb0[1].xyzx
add_sat r4.z, r4.z, cb0[1].w
mul r4.x, r4.z, r4.x
mad r4.x, r4.x, cb3[37].x, cb3[37].y
lt r4.z, l(0.000000), r4.x
lt r4.w, l(0.000000), r11.x
and r4.w, r4.w, r7.z
or r4.z, r4.w, r4.z
if_nz r4.z
  dp3 r14.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r4.z, r6.xyzx, cb2[2].xyzx
  mov_sat r4.w, r4.z
  ieq r7.z, r0.z, l(2)
  dp3 r7.w, r11.xzwx, r11.xzwx
  rsq r7.w, r7.w
  mul r13.yzw, r7.wwww, r11.xxzw
  dp3 r7.w, r13.yzwy, cb2[2].xyzx
  add r7.w, r7.w, l(1.000000)
  mul_sat r7.w, r7.w, l(0.500000)
  mul r8.w, r7.w, r7.w
  mul r7.w, r7.w, r8.w
  movc r13.yzw, r7.zzzz, r11.xxzw, r6.xxyz
  movc r7.w, r7.z, r7.w, r4.w
  if_nz r7.x
    mov_sat r15.xyzw, r11.xyzw
    mov_sat r16.xy, r5.xyxx
    log r17.xyz, r10.xzwx
    mul r18.xyz, r15.yyyy, r17.xyzx
    mul r18.xyz, r18.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r17.xyz, r17.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r18.xyzx
    eq r8.w, r15.x, l(0.000000)
    add r9.w, -r16.x, l(1.000000)
    mul r18.xyz, r9.wwww, r10.xzwx
    mul r18.xyz, r18.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r19.xyz, -r15.xxxx, r17.xyzx
    exp r19.xyz, r19.xyzx
    mul r19.xyz, r18.xyzx, r19.xyzx
    mul r19.xyz, r19.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r18.xyz, r8.wwww, r18.xyzx, r19.xyzx
    mov r18.w, l(0.180000)
    mul r9.w, r15.w, l(0.080000)
    mad r10.y, r15.x, l(48.750000), l(1.250000)
    mul r15.x, r16.y, r16.y
    mul r15.y, r15.z, r15.z
    max r15.xy, r15.xyxx, l(0.001000, 0.001000, 0.000000, 0.000000)
    lt r15.z, l(0.000000), r4.z
    lt r16.y, r4.z, l(0.000000)
    iadd r15.z, -r15.z, r16.y
    itof r15.z, r15.z
    mad r16.y, r4.z, r4.z, l(-1.000000)
    mad r16.y, r16.y, l(0.666860044), l(1.000000)
    sqrt r16.y, r16.y
    mul r15.z, r15.z, r16.y
    mad r4.z, r4.z, l(0.666860044), -r15.z
    mul r16.yzw, cb2[2].xxyz, l(0.000000, 0.666860044, 0.666860044, 0.666860044)
    mad r16.yzw, r4.zzzz, r6.xxyz, -r16.yyzw
    add r19.xyz, -r16.yzwy, -cb2[2].xyzx
    mad r16.yzw, r15.xxxx, r19.xxyz, r16.yyzw
    dp3 r4.z, r16.yzwy, r16.yzwy
    rsq r4.z, r4.z
    mul r19.xyz, r4.zzzz, r16.yzwy
    dp3 r15.z, r9.xyzx, r6.xyzx
    lt r17.w, l(0.000000), r15.z
    lt r19.w, r15.z, l(0.000000)
    iadd r17.w, -r17.w, r19.w
    itof r17.w, r17.w
    mad r19.w, r15.z, r15.z, l(-1.000000)
    mad r19.w, r19.w, l(0.666860044), l(1.000000)
    sqrt r19.w, r19.w
    mul r17.w, r17.w, r19.w
    mad r17.w, r15.z, l(0.666860044), -r17.w
    mul r20.xyz, r9.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r20.xyz, r17.wwww, r6.xyzx, -r20.xyzx
    mad r21.xyz, -r8.xyzx, r6.wwww, -r20.xyzx
    mad r20.xyz, r15.xxxx, r21.xyzx, r20.xyzx
    dp3 r17.w, r20.xyzx, r20.xyzx
    rsq r17.w, r17.w
    mul r20.xyz, r17.wwww, r20.xyzx
    dp3 r17.w, r6.xyzx, r19.xyzx
    mad r17.w, -|r17.w|, |r17.w|, l(1.000000)
    mad r17.w, -r17.w, l(0.444702327), l(1.000000)
    add r10.y, r10.y, r10.y
    sqrt r17.w, r17.w
    div r10.y, r10.y, r17.w
    mov_sat r15.z, r15.z
    mad r21.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
    dp3 r17.w, r21.xyzx, r21.xyzx
    rsq r17.w, r17.w
    mul r21.xyz, r17.wwww, r21.xyzx
    dp3_sat r17.w, r6.xyzx, r21.xyzx
    mul r19.w, r15.x, r15.x
    mul r17.w, r17.w, r17.w
    mad r20.w, r15.x, r15.x, l(-1.000000)
    mad r17.w, r17.w, r20.w, l(1.000000)
    mul r17.w, r17.w, r17.w
    mul r17.w, r17.w, l(3.14159274)
    div r17.w, r19.w, r17.w
    mad r15.x, r15.x, l(0.500000), l(0.500000)
    mul r19.w, r4.w, r4.w
    mul r15.x, r15.x, r15.x
    mad r20.w, -r4.w, r4.w, l(1.000000)
    mul r20.w, r15.x, r20.w
    max r19.w, r19.w, l(1.000000047E-034)
    div r19.w, r20.w, r19.w
    add r19.w, r19.w, l(1.000000)
    sqrt r19.w, r19.w
    add r19.w, r19.w, l(1.000000)
    div r19.w, l(2.000000), r19.w
    mul r20.w, r15.z, r15.z
    mad r15.z, -r15.z, r15.z, l(1.000000)
    mul r15.x, r15.z, r15.x
    max r15.z, r20.w, l(1.000000047E-034)
    div r15.x, r15.x, r15.z
    add r15.x, r15.x, l(1.000000)
    sqrt r15.x, r15.x
    add r15.x, r15.x, l(1.000000)
    div r15.x, l(2.000000), r15.x
    mul r15.x, r15.x, r19.w
    mad r21.xyz, r4.wwww, r4.wwww, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r21.xyz, r21.xyzx
    add r22.xyz, -r4.wwww, r21.zyzz
    add r21.xyz, r4.wwww, r21.xyzx
    mul r23.xyz, r22.zyzz, r22.zyzz
    mul r24.xyz, r21.zyzz, r21.zyzz
    add r24.xyz, r24.xyzx, r24.xyzx
    div r23.xyz, r23.xyzx, r24.xyzx
    mad r21.xyz, r4.wwww, r21.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r22.xyz, r4.wwww, r22.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r21.xyz, r21.xyzx, r22.xyzx
    mad r21.xyz, r21.xyzx, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r21.xyz, r21.xyzx, r23.xyzx
    mul r15.x, r15.x, r17.w
    mul r21.xyz, r21.xyzx, r15.xxxx
    mad r15.xzw, -r15.wwww, l(0.080000, 0.000000, 0.080000, 0.080000), r10.xxzw
    mad r15.xzw, r16.xxxx, r15.xxzw, r9.wwww
    dp3_sat r9.w, r6.xyzx, -r20.xyzx
    mad r16.xyz, -r16.yzwy, r4.zzzz, -r20.xyzx
    dp3 r4.z, r16.xyzx, r16.xyzx
    rsq r4.z, r4.z
    mul r16.xyz, r4.zzzz, r16.xyzx
    dp3 r4.z, r16.xyzx, -r19.xyzx
    dp3_sat r16.w, r6.xyzx, -r19.xyzx
    dp3_sat r16.x, r6.xyzx, r16.xyzx
    mul r16.y, r15.y, r15.y
    mul r16.x, r16.x, r16.x
    mad r16.z, r15.y, r15.y, l(-1.000000)
    mad r16.x, r16.x, r16.z, l(1.000000)
    mul r16.x, r16.x, r16.x
    mul r16.x, r16.x, l(3.14159274)
    div r16.x, r16.y, r16.x
    mad r15.y, r15.y, l(0.500000), l(0.500000)
    mul r16.y, r16.w, r16.w
    mul r15.y, r15.y, r15.y
    mad r16.z, -r16.w, r16.w, l(1.000000)
    mul r16.z, r15.y, r16.z
    max r16.y, r16.y, l(1.000000047E-034)
    div r16.y, r16.z, r16.y
    add r16.y, r16.y, l(1.000000)
    sqrt r16.y, r16.y
    add r16.y, r16.y, l(1.000000)
    div r16.y, l(2.000000), r16.y
    mul r16.z, r9.w, r9.w
    mad r9.w, -r9.w, r9.w, l(1.000000)
    mul r9.w, r9.w, r15.y
    max r15.y, r16.z, l(1.000000047E-034)
    div r9.w, r9.w, r15.y
    add r9.w, r9.w, l(1.000000)
    sqrt r9.w, r9.w
    add r9.w, r9.w, l(1.000000)
    div r9.w, l(2.000000), r9.w
    mul r9.w, r9.w, r16.y
    dp3 r15.y, r15.xzwx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r15.y, r15.y, l(50.000000)
    add r4.z, -r4.z, l(1.000000)
    mul r16.y, r4.z, r4.z
    mul r16.y, r16.y, r16.y
    add r19.xyz, -r15.xzwx, r15.yyyy
    mul r16.yzw, r16.yyyy, r19.xxyz
    mad r15.xyz, r16.yzwy, r4.zzzz, r15.xzwx
    mul r4.z, r9.w, r16.x
    mul r15.xyz, r15.xyzx, r4.zzzz
    mul r16.xyz, r10.yyyy, -r17.xyzx
    exp r16.xyz, r16.xyzx
    mad r16.xyz, r15.xyzx, r16.xyzx, r21.xyzx
    movc r15.xyz, r8.wwww, r15.xyzx, r16.xyzx
    dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r16.xyzw, l(0,0,0,0)
  else 
    if_nz r7.z
      mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r17.w, l(0.0572957806)
      add r4.z, -r5.x, l(1.000000)
      mul r18.xyzw, r4.zzzz, r17.xyzw
    else 
      ieq r4.z, r0.z, l(3)
      if_nz r4.z
        mad r17.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
        dp3 r4.z, r17.xyzx, r17.xyzx
        rsq r4.z, r4.z
        mul r17.xyz, r4.zzzz, r17.xyzx
        dp3_sat r4.z, r17.xyzx, r9.xyzx
        mul r8.w, r5.z, l(0.080000)
        add r4.z, -r4.z, l(1.000000)
        mul r9.w, r4.z, r4.z
        mul r9.w, r9.w, r9.w
        mad r10.y, -r5.z, l(0.080000), l(1.000000)
        mul r9.w, r9.w, r10.y
        mad r4.z, r9.w, r4.z, r8.w
        add_sat r8.w, r5.y, r5.y
        mad r17.w, r8.w, -r4.z, l(1.000000)
        mul r17.xyz, r10.xzwx, r17.wwww
        mul r18.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r7.y
          add r17.xyz, -r11.xzwx, r13.yzwy
          mad r19.xyz, r17.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r11.xzwx
          dp3 r4.z, r19.xyzx, r19.xyzx
          rsq r4.z, r4.z
          mul r19.xyz, r4.zzzz, r19.xyzx
          mad r17.xyz, r17.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r11.xzwx
          dp3 r4.z, r17.xyzx, r17.xyzx
          rsq r4.z, r4.z
          mul r17.xyz, r4.zzzz, r17.xyzx
          dp3 r4.z, r11.xzwx, cb2[2].xyzx
          dp3 r8.w, r19.xyzx, cb2[2].xyzx
          dp3 r9.w, r17.xyzx, cb2[2].xyzx
          mad r12.z, r4.z, l(0.500000), l(0.500000)
          mad r17.xy, r12.zwzz, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r17.x, r17.xyxx, t0.xyzw, s0, l(0.000000)
          mad r12.y, r8.w, l(0.500000), l(0.500000)
          mad r12.yz, r12.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r17.y, r12.yzyy, t0.xyzw, s0, l(0.000000)
          mad r12.x, r9.w, l(0.500000), l(0.500000)
          mad r12.xy, r12.xwxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r17.z, r12.xyxx, t0.xyzw, s0, l(0.000000)
          mul r17.xyz, r10.xzwx, r17.xyzx
          mov r17.w, l(0.0572957806)
          mul r18.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r4.z, r0.z, l(5)
          dp3 r8.w, r11.xzwx, cb2[2].xyzx
          mad r8.w, -r8.w, r8.w, l(1.000000)
          sqrt r8.w, r8.w
          mul r17.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r17.w, l(0.0572957806)
          add r9.w, -r5.x, l(1.000000)
          mul r17.xyzw, r9.wwww, r17.xyzw
          mul r19.xyzw, r8.wwww, r17.xyzw
          mul r19.xyzw, r19.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r8.w, -r11.y, l(1.000000)
          mul r19.xyzw, r8.wwww, r19.xyzw
          movc r18.xyzw, r4.zzzz, r19.xyzw, r17.xyzw
        endif 
      endif 
    endif 
    if_nz r7.z
      mul r4.z, r5.z, l(0.080000)
      mad r12.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
      mad r12.xyz, r5.xxxx, r12.xyzx, r4.zzzz
      dp3_sat r4.z, r6.xyzx, r9.xyzx
      mad r17.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
      dp3 r8.w, r17.xyzx, r17.xyzx
      rsq r8.w, r8.w
      mul r17.xyz, r8.wwww, r17.xyzx
      dp3 r8.w, r17.xyzx, cb2[2].xyzx
      dp3_sat r9.w, r6.xyzx, r17.xyzx
      mul r10.y, r5.y, r5.y
      mul r9.w, r9.w, r9.w
      mad r17.x, r5.y, r5.y, l(-1.000000)
      mad r9.w, r9.w, r17.x, l(1.000000)
      mul r9.w, r9.w, r9.w
      mul r9.w, r9.w, l(3.14159274)
      div r9.w, r10.y, r9.w
      mad r10.y, r5.y, l(0.500000), l(0.500000)
      mul r17.x, r4.w, r4.w
      mul r10.y, r10.y, r10.y
      mad r17.y, -r4.w, r4.w, l(1.000000)
      mul r17.y, r10.y, r17.y
      max r17.x, r17.x, l(1.000000047E-034)
      div r17.x, r17.y, r17.x
      add r17.x, r17.x, l(1.000000)
      sqrt r17.x, r17.x
      add r17.x, r17.x, l(1.000000)
      div r17.x, l(2.000000), r17.x
      mul r17.y, r4.z, r4.z
      mad r4.z, -r4.z, r4.z, l(1.000000)
      mul r4.z, r4.z, r10.y
      max r10.y, r17.y, l(1.000000047E-034)
      div r4.z, r4.z, r10.y
      add r4.z, r4.z, l(1.000000)
      sqrt r4.z, r4.z
      add r4.z, r4.z, l(1.000000)
      div r4.z, l(2.000000), r4.z
      mul r4.z, r4.z, r17.x
      dp3 r10.y, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r10.y, r10.y, l(50.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r17.x, r8.w, r8.w
      mul r17.x, r17.x, r17.x
      add r17.yzw, -r12.xxyz, r10.yyyy
      mul r17.xyz, r17.xxxx, r17.yzwy
      mad r12.xyz, r17.xyzx, r8.wwww, r12.xyzx
      mul r4.z, r4.z, r9.w
      mul r15.xyz, r12.xyzx, r4.zzzz
      dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r4.z, r0.z, l(3)
      if_nz r4.z
        mad r12.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
        dp3 r4.z, r12.xyzx, r12.xyzx
        rsq r4.z, r4.z
        mul r12.xyz, r4.zzzz, r12.xyzx
        dp3_sat r4.z, r12.xyzx, r9.xyzx
        mul r8.w, r5.z, l(0.080000)
        add r4.z, -r4.z, l(1.000000)
        mul r9.w, r4.z, r4.z
        mul r9.w, r9.w, r9.w
        mad r10.y, -r5.z, l(0.080000), l(1.000000)
        mul r9.w, r9.w, r10.y
        mad r4.z, r9.w, r4.z, r8.w
        dp3_sat r8.w, r6.xyzx, r12.xyzx
        mul r9.w, r8.w, r8.w
        mad r12.xy, -r8.wwww, r8.wwww, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r9.w, r9.w, r12.x
        mul r10.y, r12.y, r12.y
        mul r12.x, r5.y, r5.y
        mad r12.yz, r5.yyyy, r5.yyyy, l(0.000000, 0.000001, 0.000002, 0.000000)
        mad r12.y, r12.y, l(4.000000), l(1.000000)
        mul r12.y, r12.y, l(3.14159274)
        div r12.y, l(1.000000, 1.000000, 1.000000, 1.000000), r12.y
        div r9.w, -r9.w, r12.z
        mul r9.w, r9.w, l(1.442695)
        exp r9.w, r9.w
        mul r9.w, r9.w, l(4.000000)
        div r9.w, r9.w, r10.y
        add r9.w, r9.w, l(1.000000)
        mul r9.w, r9.w, r12.y
        dp3_sat r10.y, r6.xyzx, r9.xyzx
        add r12.y, r4.w, r10.y
        mad r10.y, -r4.w, r10.y, r12.y
        mul r10.y, r10.y, l(4.000000)
        div r10.y, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
        mov_sat r10.y, r10.y
        div r12.x, l(2.000000), r12.x
        add r12.x, r12.x, l(-2.000000)
        max r12.x, r12.x, l(1.000000031E-022)
        log r8.w, r8.w
        mul r8.w, r8.w, r12.x
        exp r8.w, r8.w
        add r12.x, r12.x, l(8.000000)
        mul r8.w, r8.w, r12.x
        mul r8.w, r8.w, l(0.0397887342)
        min r8.w, r8.w, l(1.000000)
        add_sat r12.x, r5.y, r5.y
        mad r9.w, r9.w, r10.y, -r8.w
        mad r8.w, r12.x, r9.w, r8.w
        mul r17.xyz, r4.zzzz, r8.wwww
        dp3 r17.w, r17.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r19.xyz, r11.xzwx
        mov r19.w, l(1.000000)
        mul r15.xyzw, r17.xyzw, r19.xyzw
      else 
        if_nz r7.y
          mul r12.xy, r5.zyzz, l(0.080000, 0.400000, 0.000000, 0.000000)
          mad r17.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r17.xyz, r5.xxxx, r17.xyzx, r12.xxxx
          dp3_sat r4.z, r6.xyzx, r9.xyzx
          mad r19.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
          dp3 r8.w, r19.xyzx, r19.xyzx
          rsq r8.w, r8.w
          mul r19.xyz, r8.wwww, r19.xyzx
          dp3 r8.w, r19.xyzx, cb2[2].xyzx
          dp3_sat r9.w, r6.xyzx, r19.xyzx
          mul r10.y, r5.y, r5.y
          mul r9.w, r9.w, r9.w
          mad r12.x, r5.y, r5.y, l(-1.000000)
          mad r12.x, r9.w, r12.x, l(1.000000)
          mul r12.x, r12.x, r12.x
          mul r12.x, r12.x, l(3.14159274)
          div r10.y, r10.y, r12.x
          mad r12.xz, r5.yyyy, l(0.500000, 0.000000, 0.200000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
          mul r17.w, r4.w, r4.w
          mul r12.xz, r12.xxzx, r12.xxzx
          mad r19.x, -r4.w, r4.w, l(1.000000)
          mul r19.xy, r12.xzxx, r19.xxxx
          max r17.w, r17.w, l(1.000000047E-034)
          div r19.xy, r19.xyxx, r17.wwww
          add r19.xy, r19.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r19.xy, r19.xyxx
          add r19.xy, r19.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r19.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r19.xyxx
          mul r17.w, r4.z, r4.z
          mad r4.z, -r4.z, r4.z, l(1.000000)
          mul r12.xz, r4.zzzz, r12.xxzx
          max r4.z, r17.w, l(1.000000047E-034)
          div r12.xz, r12.xxzx, r4.zzzz
          add r12.xz, r12.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          sqrt r12.xz, r12.xxzx
          add r12.xz, r12.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          div r12.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r12.xxzx
          mul r12.xz, r12.xxzx, r19.xxyx
          dp3 r4.z, r17.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r4.z, r4.z, l(50.000000)
          add r8.w, -r8.w, l(1.000000)
          mul r17.w, r8.w, r8.w
          mul r17.w, r17.w, r17.w
          add r19.xyz, -r17.xyzx, r4.zzzz
          mul r19.xyz, r17.wwww, r19.xyzx
          mad r17.xyz, r19.xyzx, r8.wwww, r17.xyzx
          mul r4.z, r10.y, r12.x
          mul r19.xyz, r17.xyzx, r4.zzzz
          dp3 r19.w, r19.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r4.z, r12.y, r12.y
          mad r8.w, r12.y, r12.y, l(-1.000000)
          mad r8.w, r9.w, r8.w, l(1.000000)
          mul r8.w, r8.w, r8.w
          mul r8.w, r8.w, l(3.14159274)
          div r4.z, r4.z, r8.w
          mul r4.z, r12.z, r4.z
          mul r17.xyz, r17.xyzx, r4.zzzz
          dp3 r17.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r17.xyzw, r17.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r15.xyzw, r19.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r17.xyzw
        else 
          ieq r4.z, r0.z, l(5)
          dp3_sat r8.w, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r8.w, r8.w, l(1.66666663), l(1.33333337)
          mul r12.xyz, r5.yyyy, r11.xzwx
          mad r12.xyz, r12.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r6.xyzx
          div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
          dp3 r9.w, -cb2[2].xyzx, r12.xyzx
          mul r10.y, r8.w, r8.w
          mad r17.x, -r9.w, r9.w, l(1.000000)
          mad r17.x, -r10.y, r17.x, l(1.000000)
          sqrt r17.y, r17.x
          mad r9.w, r8.w, r9.w, -r17.y
          mul r17.yzw, r12.xxyz, r9.wwww
          mad r17.yzw, r8.wwww, cb2[2].xxyz, r17.yyzw
          lt r9.w, l(0.000000), r17.x
          and r9.w, r9.w, l(0x3f800000)
          mul r19.xyz, r9.wwww, r17.yzwy
          dp3 r17.x, -r9.xyzx, r12.xyzx
          mad r19.w, -r17.x, r17.x, l(1.000000)
          mad r10.y, -r10.y, r19.w, l(1.000000)
          sqrt r19.w, r10.y
          mad r17.x, r8.w, r17.x, -r19.w
          mul r12.xyz, r12.xyzx, r17.xxxx
          mad r12.xyz, r8.wwww, r9.xyzx, r12.xyzx
          lt r8.w, l(0.000000), r10.y
          and r8.w, r8.w, l(0x3f800000)
          mul r12.xyz, r8.wwww, r12.xyzx
          mad r8.xyz, r8.xyzx, r6.wwww, cb2[2].xyzx
          dp3 r6.w, r8.xyzx, r8.xyzx
          rsq r6.w, r6.w
          mul r8.xyz, r6.wwww, r8.xyzx
          dp3_sat r6.w, r6.xyzx, r9.xyzx
          dp3_sat r8.w, r6.xyzx, r8.xyzx
          dp3 r10.y, r8.xyzx, cb2[2].xyzx
          mov_sat r17.x, r10.y
          dp3 r19.w, r8.xyzx, r11.xzwx
          mul r20.xyz, r6.yzxy, r11.wxzw
          mad r20.xyz, r11.zwxz, r6.zxyz, -r20.xyzx
          dp3 r20.w, r20.xyzx, r20.xyzx
          rsq r20.w, r20.w
          mul r20.xyz, r20.wwww, r20.xyzx
          dp3 r8.x, r8.xyzx, r20.xyzx
          mul r8.yz, r5.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r21.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r21.xyz, r5.xxxx, r21.xyzx, r8.yyyy
          dp3 r8.y, r21.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r8.y, r8.y, l(50.000000)
          add r17.x, -r17.x, l(1.000000)
          mul r20.w, r17.x, r17.x
          mul r20.w, r20.w, r20.w
          add r22.xyz, -r21.xyzx, r8.yyyy
          mul r23.xyz, r20.wwww, r22.xyzx
          mad r23.xyz, r23.xyzx, r17.xxxx, r21.xyzx
          mul r8.y, r5.y, r5.y
          mul r17.x, r8.w, r8.w
          mul r19.w, r19.w, r19.w
          div r19.w, r19.w, r8.y
          mad r8.x, r8.x, r8.x, r19.w
          mad r8.x, r8.w, r8.w, r8.x
          mul r8.x, r8.x, r8.x
          mul r8.x, r8.z, r8.x
          div r8.x, l(1.000000, 1.000000, 1.000000, 1.000000), r8.x
          mul r8.w, r4.w, r4.w
          mad r19.w, -r4.w, r4.w, l(1.000000)
          mul r20.w, r8.y, r19.w
          max r8.w, r8.w, l(1.000000047E-034)
          div r20.w, r20.w, r8.w
          add r20.w, r20.w, l(1.000000)
          sqrt r20.w, r20.w
          add r20.w, r20.w, l(1.000000)
          div r20.w, l(2.000000), r20.w
          mul r21.w, r6.w, r6.w
          mad r6.w, -r6.w, r6.w, l(1.000000)
          mul r22.w, r6.w, r8.y
          max r21.w, r21.w, l(1.000000047E-034)
          div r22.w, r22.w, r21.w
          add r22.w, r22.w, l(1.000000)
          sqrt r22.w, r22.w
          add r22.w, r22.w, l(1.000000)
          div r22.w, l(2.000000), r22.w
          mul r20.w, r20.w, r22.w
          mul r8.x, r8.x, r20.w
          mul_sat r23.xyz, r23.xyzx, r8.xxxx
          mul r23.xyz, r12.wwww, r23.xyzx
          mul r24.xyz, r23.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r17.yzw, -r17.yyzw, r9.wwww, -r12.xxyz
          dp3 r8.x, r17.yzwy, r17.yzwy
          rsq r8.x, r8.x
          mul r17.yzw, r8.xxxx, r17.yyzw
          dp3_sat r8.x, r6.xyzx, -r19.xyzx
          dp3_sat r9.w, r6.xyzx, -r12.xyzx
          dp3_sat r12.x, r6.xyzx, r17.yzwy
          dp3_sat r12.y, r17.yzwy, -r19.xyzx
          dp3 r12.z, r17.yzwy, r11.xzwx
          dp3 r12.w, r17.yzwy, r20.xyzx
          add r12.y, -r12.y, l(1.000000)
          mul r17.y, r12.y, r12.y
          mul r17.y, r17.y, r17.y
          mul r17.yzw, r17.yyyy, r22.xxyz
          mad r17.yzw, r17.yyzw, r12.yyyy, r21.xxyz
          mul r12.y, r12.z, r12.z
          div r12.y, r12.y, r8.y
          mad r12.y, r12.w, r12.w, r12.y
          mad r12.x, r12.x, r12.x, r12.y
          mul r12.x, r12.x, r12.x
          mul r8.z, r8.z, r12.x
          div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r8.z
          mul r12.x, r8.x, r8.x
          mad r8.x, -r8.x, r8.x, l(1.000000)
          mul r8.x, r8.x, r8.y
          max r12.x, r12.x, l(1.000000047E-034)
          div r8.x, r8.x, r12.x
          add r8.x, r8.x, l(1.000000)
          sqrt r8.x, r8.x
          add r8.x, r8.x, l(1.000000)
          div r8.x, l(2.000000), r8.x
          mul r12.x, r9.w, r9.w
          mad r9.w, -r9.w, r9.w, l(1.000000)
          mul r9.w, r8.y, r9.w
          max r12.x, r12.x, l(1.000000047E-034)
          div r9.w, r9.w, r12.x
          add r9.w, r9.w, l(1.000000)
          sqrt r9.w, r9.w
          add r9.w, r9.w, l(1.000000)
          div r9.w, l(2.000000), r9.w
          mul r8.x, r8.x, r9.w
          mul r8.x, r8.x, r8.z
          mul_sat r12.xyz, r17.yzwy, r8.xxxx
          sqrt r17.yzw, r10.xxzw
          mad r12.xyz, -r23.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r12.xyzx
          mad r12.xyz, r17.yzwy, r12.xyzx, r24.xyzx
          dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r8.x, r5.y, r5.y, l(-1.000000)
          mad r8.x, r17.x, r8.x, l(1.000000)
          mul r8.x, r8.x, r8.x
          mul r8.x, r8.x, l(3.14159274)
          div r8.x, r8.y, r8.x
          mad r8.y, r5.y, l(0.500000), l(0.500000)
          mul r8.y, r8.y, r8.y
          mul r8.z, r19.w, r8.y
          div r8.z, r8.z, r8.w
          add r8.z, r8.z, l(1.000000)
          sqrt r8.z, r8.z
          add r8.z, r8.z, l(1.000000)
          div r8.z, l(2.000000), r8.z
          mul r6.w, r6.w, r8.y
          div r6.w, r6.w, r21.w
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.w, l(2.000000), r6.w
          mul r6.w, r6.w, r8.z
          add r8.y, -r10.y, l(1.000000)
          mul r8.z, r8.y, r8.y
          mul r8.z, r8.z, r8.z
          mul r17.xyz, r8.zzzz, r22.xyzx
          mad r8.yzw, r17.xxyz, r8.yyyy, r21.xxyz
          mul r6.w, r6.w, r8.x
          mul r8.xyz, r8.yzwy, r6.wwww
          dp3 r8.w, r8.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r15.xyzw, r4.zzzz, r12.xyzw, r8.xyzw
        endif 
      endif 
    endif 
    if_nz r7.z
      mov r16.xyzw, l(0,0,0,0)
    else 
      ieq r4.z, r0.z, l(3)
      if_nz r4.z
        mov r16.xyzw, l(0,0,0,0)
      else 
        if_nz r7.y
          mov r16.xyzw, l(0,0,0,0)
        else 
          dp3 r4.z, r11.xzwx, cb2[2].xyzx
          mad r4.z, -r4.z, r4.z, l(1.000000)
          sqrt r4.z, r4.z
          mul r6.w, r11.y, l(-1.500000)
          dp3 r7.z, r13.yzwy, cb2[2].xyzx
          mad r8.x, -r11.y, l(-1.500000), r7.z
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r6.w
          mul_sat r6.w, r6.w, r8.x
          mad r8.x, r6.w, l(-2.000000), l(3.000000)
          mul r6.w, r6.w, r6.w
          mul r6.w, r6.w, r8.x
          mul r8.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r9.w, -r5.x, l(1.000000)
          mul r8.xyzw, r8.xyzw, r9.wwww
          mul r8.xyzw, r6.wwww, r8.xyzw
          mul r8.xyzw, r4.zzzz, r8.xyzw
          mul r8.xyzw, r11.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r12.xy, r0.zzzz, l(5, 8, 0, 0)
          max r4.z, |r7.z|, l(0.000001)
          rcp r4.z, r4.z
          mul r4.z, r4.z, r7.z
          dp3 r6.w, r13.yzwy, r9.xyzx
          max r7.z, |r6.w|, l(0.000001)
          rcp r7.z, r7.z
          mul r6.w, r6.w, r7.z
          eq r4.z, r4.z, r6.w
          movc r17.w, r4.z, l(0), l(1.000000)
          mul r13.yzw, r9.wwww, r11.xxzw
          mul r17.xyz, r17.wwww, r13.yzwy
          mul r17.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r19.xyz, r10.xzwx, r11.xxxx
          mov r19.w, r11.x
          mul r19.xyzw, r19.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r17.xyzw, r12.yyyy, r17.xyzw, r19.xyzw
          movc r16.xyzw, r12.xxxx, r8.xyzw, r17.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r4.z, r7.y, l(1.000000), r7.w
  dp3 r6.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r7.z, r4.x, r11.x
  add r6.w, -r4.z, r6.w
  mad r6.w, r7.z, r6.w, r4.z
  movc r4.z, r0.z, r4.z, r6.w
  mul r8.xyzw, r4.wwww, r15.xyzw
  mad r8.xyzw, r18.xyzw, r4.zzzz, r8.xyzw
  add r8.xyzw, r16.xyzw, r8.xyzw
  mul r8.xyzw, r4.xxxx, r8.xyzw
  mov r14.xyz, cb2[0].xyzx
  mul r8.xyzw, r8.xyzw, r14.xyzw
else 
  mov r8.xyzw, l(0,0,0,0)
endif 
dp3 r2.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r7.y
  mul r2.xyz, r2.xyzx, r10.xzwx
  mul r12.xyzw, r2.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r7.x
    mov_sat r4.xz, r11.xxyx
    mov_sat r4.w, r5.x
    log r7.yzw, r10.xxzw
    mul r13.yzw, r4.zzzz, r7.yyzw
    mul r13.yzw, r13.yyzw, l(0.000000, -12.780000, -12.780000, -12.780000)
    mad r7.yzw, r7.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r13.yyzw
    eq r4.z, r4.x, l(0.000000)
    add r4.w, -r4.w, l(1.000000)
    mul r13.yzw, r4.wwww, r10.xxzw
    mul r13.yzw, r13.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r7.yzw, -r4.xxxx, r7.yyzw
    exp r7.yzw, r7.yyzw
    mul r7.yzw, r13.yyzw, r7.yyzw
    mul r7.yzw, r7.yyzw, l(0.000000, 0.444444448, 0.444444448, 0.444444448)
    movc r14.xyz, r4.zzzz, r13.yzwy, r7.yzwy
    mov r14.w, l(0.180000)
  else 
    ieq r4.x, r0.z, l(2)
    if_nz r4.x
      mul r15.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r15.w, l(0.0572957806)
      add r4.x, -r5.x, l(1.000000)
      mul r14.xyzw, r4.xxxx, r15.xyzw
    else 
      ieq r4.x, r0.z, l(3)
      if_nz r4.x
        dp3 r4.x, r9.xyzx, r9.xyzx
        min r4.x, r4.x, l(1.000000)
        mul r4.z, r5.z, l(0.080000)
        add r4.x, -r4.x, l(1.000000)
        mul r4.w, r4.x, r4.x
        mul r4.w, r4.w, r4.w
        mad r6.w, -r5.z, l(0.080000), l(1.000000)
        mul r4.w, r4.w, r6.w
        mad r4.x, r4.w, r4.x, r4.z
        add_sat r4.z, r5.y, r5.y
        mad r15.w, r4.z, -r4.x, l(1.000000)
        mul r15.xyz, r10.xzwx, r15.wwww
        mul r14.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r15.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r15.w, l(0.0572957806)
        add r16.w, -r5.x, l(1.000000)
        mul r15.xyzw, r15.xyzw, r16.wwww
        mov r16.xyz, r15.xyzx
        mul r17.xyzw, r16.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r4.x, -r11.y, l(1.000000)
        mul r18.xyzw, r11.yyyy, r15.xyzw
        mul r18.xyzw, r18.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r17.xyzw, r17.xyzw, r4.xxxx, r18.xyzw
        ieq r4.xz, r0.zzzz, l(5, 0, 8, 0)
        dp3 r4.w, r6.xyzx, r9.xyzx
        max r6.w, |r4.w|, l(0.000001)
        rcp r6.w, r6.w
        mul r4.w, r4.w, r6.w
        eq r4.w, r4.w, l(0.000000)
        movc r18.w, r4.w, l(0), l(1.000000)
        mul r7.yzw, r11.xxzw, r16.wwww
        mul r18.xyz, r18.wwww, r7.yzwy
        mad r16.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r15.xyzw
        mul r18.xyz, r10.xzwx, r11.xxxx
        mov r18.w, r11.x
        mad r15.xyzw, r18.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r15.xyzw
        movc r15.xyzw, r4.zzzz, r16.xyzw, r15.xyzw
        movc r14.xyzw, r4.xxxx, r17.xyzw, r15.xyzw
      endif 
    endif 
  endif 
  mul r12.xyzw, r2.xyzw, r14.xyzw
endif 
add r2.xyzw, r8.wxyz, r12.wxyz
if_nz r7.x
  mov_sat r11.xyzw, r11.xyzw
  mov_sat r5.xyz, r5.xyzx
  mul r4.x, r5.y, r5.y
  max r7.y, r4.x, l(0.001000)
  mul r4.x, r11.z, r11.z
  max r4.x, r4.x, l(0.001000)
  dp3 r4.z, -r9.xyzx, r6.xyzx
  add r4.z, r4.z, r4.z
  mad r8.xyz, r6.xyzx, -r4.zzzz, -r9.xyzx
  dp3 r4.z, r6.xyzx, r8.xyzx
  mad r4.z, -|r4.z|, |r4.z|, l(1.000000)
  mad r4.z, -r4.z, l(0.444702327), l(1.000000)
  add r4.w, r11.x, r11.x
  sqrt r4.z, r4.z
  div r4.z, r4.w, r4.z
  log r12.xyz, r10.xzwx
  mul r13.yzw, r11.yyyy, r12.xxyz
  mul r13.yzw, r13.yyzw, l(0.000000, -12.780000, -12.780000, -12.780000)
  mad r12.xyz, r12.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r13.yzwy
  eq r4.w, r11.x, l(0.000000)
  mul r6.w, r7.y, r7.y
  div r6.w, l(2.000000), r6.w
  add r6.w, r6.w, l(-2.000000)
  max r6.w, r6.w, l(1.000000031E-022)
  sqrt r6.w, r6.w
  div r6.w, l(-10.000000), r6.w
  exp r6.w, r6.w
  add r6.w, r6.w, l(-0.000980)
  mul_sat r6.w, r6.w, l(1.00795019)
  add r6.w, -r6.w, l(1.000000)
  mul r7.w, r6.w, cb1[183].w
  mul r8.w, r6.w, cb1[174].w
  ge r9.w, l(0.250000), r7.y
  if_nz r9.w
    ge r9.w, r6.z, l(0.250000)
    if_nz r9.w
      dp3 r14.x, r8.xyzx, cb1[51].xyzx
      dp3 r14.y, r8.xyzx, cb1[52].xyzx
      dp3 r14.z, r8.xyzx, cb1[53].xyzx
      dp3 r9.w, r14.xyzx, r14.xyzx
      rsq r9.w, r9.w
      mul r13.yzw, r9.wwww, r14.xxyz
      ld_indexable(texture2d)(float,float,float,float) r14.x, r1.xyww, t8.xyzw
      mov r14.yw, l(0,1.000000,0,1.000000)
      dp2 r9.w, r14.xyxx, cb1[11].zwzz
      dp2 r10.y, r14.xyxx, cb1[12].zwzz
      div r9.w, -r9.w, r10.y
      mov r15.z, -r9.w
      mul r15.xy, r0.xyxx, r15.zzzz
      dp3 r16.x, r6.xyzx, cb1[51].xyzx
      dp3 r16.y, r6.xyzx, cb1[52].xyzx
      dp3 r16.z, r6.xyzx, cb1[53].xyzx
      mul r9.w, r9.w, l(0.010000)
      max r9.w, r9.w, l(0.001000)
      mad r15.xyz, r16.xyzx, r9.wwww, r15.xyzx
      mad r9.w, r13.w, l(1000.000000), r15.z
      lt r9.w, l(-0.010000), r9.w
      add r10.y, -r15.z, l(-0.010000)
      div r10.y, r10.y, r13.w
      movc r9.w, r9.w, r10.y, l(1000.000000)
      mad r16.xyz, r13.yzwy, r9.wwww, r15.xyzx
      mov r15.w, l(1.000000)
      dp4 r14.y, r15.xyzw, cb4[4].xyzw
      dp4 r14.x, r15.xyzw, cb4[5].xyzw
      dp4 r9.w, r15.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r9.w, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r14.y, r25.w, l(0.5), r14.y

      mov r16.w, l(1.000000)
      dp4 r15.x, r16.xyzw, cb4[4].xyzw
      dp4 r15.y, r16.xyzw, cb4[5].xyzw
      dp4 r10.y, r16.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r10.y, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r15.x, r25.w, l(0.5), r15.x

      div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
      div r10.y, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
      mul r13.yz, r9.wwww, r14.xxyx
      mul r16.xy, r10.yyyy, r15.xyxx
      mul r11.y, r9.w, r15.z
      mul r12.w, r10.y, r16.z
      add r16.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
      lt r17.xy, r16.zwzz, r16.yxyy
      lt r17.zw, r16.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
      or r17.zw, r17.zzzw, r17.xxxy
      movc r16.zw, r17.xxxy, -r16.zzzw, l(0,0,-0.500000,-0.500000)
      mad r16.zw, r15.yyyx, r10.yyyy, r16.zzzw
      mad r15.xy, r15.yxyy, r10.yyyy, -r13.yzyy
      div r15.xy, r16.zwzz, r15.xyxx
      and r13.w, r15.x, r17.z
      max r15.x, r15.y, r13.w
      movc r13.w, r17.w, r15.x, r13.w
      mad r15.xy, r14.yxyy, r9.wwww, -r16.xyxx
      mad r15.xy, r13.wwww, r15.xyxx, r16.xyxx
      add r15.w, r9.w, -r10.y
      mad r10.y, r13.w, r15.w, r10.y
      mad r15.w, r15.z, r9.w, -r12.w
      mad r12.w, r13.w, r15.w, r12.w
      mad r16.xy, r14.yxyy, r9.wwww, -r15.xyxx
      dp2 r13.w, r16.xyxx, r16.xyxx
      lt r13.w, r13.w, l(0.000100)
      mad r16.xy, r14.yxyy, r9.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r16.xy, r13.wwww, r16.xyxx, r15.xyxx
      mad r16.zw, -r14.yyyx, r9.wwww, r16.xxxy
      lt r13.w, |r16.z|, |r16.w|
      movc r13.yz, r13.wwww, r13.yyzy, r13.zzyz
      movc r15.xyw, r13.wwww, r16.ywyz, r16.xzxw
      lt r14.x, l(0.000000), r15.y
      lt r14.y, r15.y, l(0.000000)
      iadd r14.x, -r14.x, r14.y
      itof r14.x, r14.x
      div r15.y, r14.x, r15.y
      mul r14.y, r15.w, r15.y
      mad r12.w, -r15.z, r9.w, r12.w
      mul r12.w, r15.y, r12.w
      add r10.y, -r9.w, r10.y
      mul r10.y, r15.y, r10.y
      mul r15.x, r14.x, r15.x
      ge r15.y, r15.z, l(99999.796875)
      ge r15.w, l(100000.000000), r15.z
      and r15.y, r15.w, r15.y
      mov r16.x, r11.y
      mov r16.y, r9.w
      mov r17.xy, l(-1.000000,-1.000000,0,0)
      mov r18.xy, r13.yzyy
      mov r15.w, l(0)
      mov r19.y, r15.z
      mov r17.zw, r15.yyyy
      loop 
        mul r18.z, r14.x, r18.x
        ge r18.z, r15.x, r18.z
        ilt r18.w, r15.w, l(100)
        and r18.z, r18.w, r18.z
        not r18.w, r17.w
        and r18.z, r18.w, r18.z
        breakc_z r18.z
        mad r16.xz, r12.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
        mad r16.yw, r10.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
        div r19.x, r16.z, r16.w
        lt r16.z, r19.x, r19.y
        movc r16.zw, r16.zzzz, r19.xxxy, r19.yyyx
        movc r17.xy, r13.wwww, r18.yxyy, r18.xyxx
        mul r18.zw, r17.xxxy, cb1[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r14.z, r18.zwzz, t8.yzxw, s1, l(0.000000)
        dp2 r18.z, r14.zwzz, cb1[11].zwzz
        dp2 r14.z, r14.zwzz, cb1[12].zwzz
        div r14.z, -r18.z, r14.z
        ge r16.z, -r14.z, r16.z
        add r14.z, -r14.z, l(-0.200000)
        ge r14.z, r16.w, r14.z
        and r17.w, r14.z, r16.z
        mad r18.xy, r14.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r18.xyxx
        iadd r15.w, r15.w, l(1)
        mov r17.xyz, r17.xywx
        mov r19.y, r19.x
      endloop 
      if_nz r17.z
        if_z cb4[8].y
          ftoi r13.yz, r17.xxyx
          imax r13.yz, r13.yyzy, l(0, 0, 0, 0)
          ftoi r14.xy, cb1[66].xyxx
          iadd r14.xy, r14.xyxx, l(-1, -1, 0, 0)
          imin r14.xy, r13.yzyy, r14.xyxx
          mov r14.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r13.yz, r14.xyww, t7.wxyz
          ne r15.xy, r13.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r9.w, r15.y, r15.x
          if_nz r9.w
            lt r9.w, l(1.000000), r13.y
            add r10.y, r13.y, l(-2.000000)
            movc r13.y, r9.w, r10.y, r13.y
          else 
            ld_indexable(texture2d)(float,float,float,float) r14.z, r14.xyzw, t8.zwxy
            mov r14.w, l(1.000000)
            dp2 r9.w, r14.zwzz, cb1[11].zwzz
            dp2 r10.y, r14.zwzz, cb1[12].zwzz
            div r9.w, -r9.w, r10.y
            itof r14.xy, r14.xyxx
            mad r14.xy, r14.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r14.xy, r14.xyxx, cb1[0].xyxx
            mul r14.xy, r14.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r9.w, r9.w, cb1[67].x
            mov r14.z, -cb1[67].x
            mul r14.xyz, r9.wwww, r14.xyzx
            mov r14.w, l(1.000000)
            dp4 r15.x, r14.xyzw, cb1[24].xyzw
            dp4 r15.y, r14.xyzw, cb1[25].xyzw
            dp4 r9.w, r14.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r25.w, r9.w, -r25.y
mad r15.x, r25.w, r25.x, r15.x

            dp4 r16.x, r14.xyzw, cb4[0].xyzw
            dp4 r16.y, r14.xyzw, cb4[1].xyzw
            dp4 r10.y, r14.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r25.w, r10.y, -r25.y
mad r16.x, r25.w, r25.x, r16.x

            max r10.y, r10.y, l(0.000100)
            div r14.xy, r16.xyxx, r10.yyyy
            div r14.zw, r15.xxxy, r9.wwww
            add r14.xy, -r14.xyxx, r14.zwzz
            mul r13.yw, r14.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
            mov r13.z, -r13.w
          endif 
        else 
          mov r13.yz, l(0,0,0,0)
        endif 
        mad r14.xy, r17.xyxx, cb1[66].zwzz, -r13.yzyy
        add r13.yz, -r17.xxyx, v0.xxyx
        dp2 r9.w, r13.yzyy, r13.yzyy
        sqrt r9.w, r9.w
        ge r10.y, r9.w, l(350.000000)
        add r9.w, r9.w, l(-350.000000)
        mad r9.w, -r9.w, l(0.00666666683), l(1.000000)
        movc r9.w, r10.y, r9.w, l(1.000000)
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r15.xyzw, r14.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r10.y, r15.y, r15.x
        mul r10.y, r15.z, r10.y
        mul r10.y, r15.w, r10.y
        mul r9.w, r9.w, r10.y
        lt r10.y, l(0.137000), r7.y
        mad r11.y, -r7.y, l(4.000000), l(1.000000)
        max r11.y, r11.y, l(0.000000)
        mul r11.y, r9.w, r11.y
        movc r9.w, r10.y, r11.y, r9.w
      else 
        mov r14.xy, l(0,0,0,0)
        mov r9.w, l(0)
      endif 
      lt r10.y, l(0.000000), r9.w
      if_nz r10.y
        mul r6.w, r6.w, cb4[8].x
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r14.xyxx, t9.wxyz, s2, r6.w
      else 
        mov r13.yzw, l(0,0,0,0)
      endif 
    else 
      mov r13.yzw, l(0,0,0,0)
      mov r9.w, l(0)
    endif 
  else 
    mov r13.yzw, l(0,0,0,0)
    mov r9.w, l(0)
  endif 
  lt r6.w, l(0.000000), r9.w
  if_nz r6.w
    div r14.xyz, r13.yzwy, cb1[176].wwww
    lt r6.w, r9.w, l(1.000000)
    if_nz r6.w
      if_z cb1[184].z
        mov r3.w, l(1.000000)
        mov r15.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
        mov r10.y, l(0)
        loop 
          uge r11.y, r10.y, l(15)
          breakc_nz r11.y
          imul null, r11.y, r10.y, l(7)
          dp4 r16.x, r3.xyzw, cb1[r11.y + 68].xyzw
          dp4 r16.y, r3.xyzw, cb1[r11.y + 69].xyzw
          dp4 r16.z, r3.xyzw, cb1[r11.y + 70].xyzw
          ge r13.yzw, r16.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r13.yzw, r13.yyzw, cb1[r11.y + 72].xxyz, cb1[r11.y + 73].xxyz
          add r16.xyz, -|r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r13.yzw, r13.yyzw, r16.xxyz
          mul r12.w, r13.z, r13.y
          mul r12.w, r13.w, r12.w
          lt r13.y, l(0.000000), r12.w
          if_nz r13.y
            dp3 r16.x, r8.xyzx, cb1[r11.y + 68].xyzx
            dp3 r16.y, r8.xyzx, cb1[r11.y + 69].xyzx
            dp3 r16.z, r8.xyzx, cb1[r11.y + 70].xyzx
            mul r12.w, r12.w, cb1[r11.y + 73].w
            mov r16.w, cb1[r11.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r16.xyzw, t4.xyzw, s3, r8.w
            mul r16.xyzw, r16.xyzw, cb1[r11.y + 74].xxxy
            min r11.y, r6.w, r12.w
            mad r16.xyzw, r16.xyzw, r11.yyyy, r15.xyzw
            add r11.y, r6.w, -r11.y
            ge r12.w, l(0.000000), r11.y
            if_nz r12.w
              mov r15.xyzw, r16.xyzw
              mov r6.w, r11.y
              break 
            endif 
            mov r15.xyzw, r16.xyzw
            mov r6.w, r11.y
          endif 
          iadd r10.y, r10.y, l(1)
        endloop 
      else 
        mov r15.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
      endif 
      add r10.y, r6.w, r15.w
      mul r10.y, r4.y, r10.y
      lt r11.y, l(0.000000), r10.y
      if_nz r11.y
        add r11.y, -|r8.z|, r8.z
        mad r6.w, r6.w, r11.y, |r8.z|
        mad r6.w, r6.w, l(2.000000), l(2.000000)
        div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r6.wwww
        mul r13.yz, r8.yyxy, r13.yyzy
        mad r13.yz, r13.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t3.wxyz, s2, r7.w
        mov_sat r16.xyz, r13.yzwy
        movc r13.yzw, cb1[184].zzzz, r16.xxyz, r13.yyzw
        div r13.yzw, r13.yyzw, cb1[176].wwww
        mad r15.xyz, r13.yzwy, r10.yyyy, r15.xyzx
      endif 
      mov_sat r9.w, r9.w
      add r13.yzw, r14.xxyz, -r15.xxyz
      mad r14.xyz, r9.wwww, r13.yzwy, r15.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r3.w, l(1.000000)
      mov r14.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
      mov r9.w, l(0)
      loop 
        uge r10.y, r9.w, l(15)
        breakc_nz r10.y
        imul null, r10.y, r9.w, l(7)
        dp4 r15.x, r3.xyzw, cb1[r10.y + 68].xyzw
        dp4 r15.y, r3.xyzw, cb1[r10.y + 69].xyzw
        dp4 r15.z, r3.xyzw, cb1[r10.y + 70].xyzw
        ge r13.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r10.y + 72].xxyz, cb1[r10.y + 73].xxyz
        add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.yzw, r13.yyzw, r15.xxyz
        mul r11.y, r13.z, r13.y
        mul r11.y, r13.w, r11.y
        lt r12.w, l(0.000000), r11.y
        if_nz r12.w
          dp3 r15.x, r8.xyzx, cb1[r10.y + 68].xyzx
          dp3 r15.y, r8.xyzx, cb1[r10.y + 69].xyzx
          dp3 r15.z, r8.xyzx, cb1[r10.y + 70].xyzx
          mul r11.y, r11.y, cb1[r10.y + 73].w
          mov r15.w, cb1[r10.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r8.w
          mul r15.xyzw, r15.xyzw, cb1[r10.y + 74].xxxy
          min r10.y, r6.w, r11.y
          mad r15.xyzw, r15.xyzw, r10.yyyy, r14.xyzw
          add r10.y, r6.w, -r10.y
          ge r11.y, l(0.000000), r10.y
          if_nz r11.y
            mov r14.xyzw, r15.xyzw
            mov r6.w, r10.y
            break 
          endif 
          mov r14.xyzw, r15.xyzw
          mov r6.w, r10.y
        endif 
        iadd r9.w, r9.w, l(1)
      endloop 
    else 
      mov r14.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
    endif 
    add r8.w, r6.w, r14.w
    mul r8.w, r4.y, r8.w
    lt r9.w, l(0.000000), r8.w
    if_nz r9.w
      add r9.w, -|r8.z|, r8.z
      mad r6.w, r6.w, r9.w, |r8.z|
      mad r6.w, r6.w, l(2.000000), l(2.000000)
      div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r6.wwww
      mul r13.yz, r8.yyxy, r13.yyzy
      mad r13.yz, r13.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t3.wxyz, s2, r7.w
      mov_sat r15.xyz, r13.yzwy
      movc r13.yzw, cb1[184].zzzz, r15.xxyz, r13.yyzw
      div r13.yzw, r13.yyzw, cb1[176].wwww
      mad r14.xyz, r13.yzwy, r8.wwww, r14.xyzx
    endif 
  endif 
  mul r6.w, r5.z, l(0.080000)
  dp3 r7.w, r6.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r7.x, r6.xyzx, r9.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r13.yz, r7.xyxx, t1.zxyw, s2, l(0.000000)
  mad r6.w, r6.w, r13.y, r13.z
  mul r6.w, r7.w, r6.w
  mul r13.yzw, r6.wwww, r14.xxyz
  mul r13.yzw, r0.wwww, r13.yyzw
  add r4.x, r4.x, r7.y
  min r7.z, r4.x, l(1.000000)
  mul r4.x, r7.z, r7.z
  div r4.x, l(2.000000), r4.x
  add r4.x, r4.x, l(-2.000000)
  max r4.x, r4.x, l(1.000000031E-022)
  sqrt r4.x, r4.x
  div r4.x, l(-10.000000), r4.x
  exp r4.x, r4.x
  add r4.x, r4.x, l(-0.000980)
  mul r4.x, r4.x, l(1.00795019)
  max r4.x, r4.x, l(0.000000)
  add r4.x, -r4.x, l(1.000000)
  mul r6.w, r4.x, cb1[183].w
  mul r7.y, r4.x, cb1[174].w
  ge r7.w, l(0.250000), r7.z
  if_nz r7.w
    ge r7.w, r6.z, l(0.250000)
    if_nz r7.w
      dp3 r14.x, r8.xyzx, cb1[51].xyzx
      dp3 r14.y, r8.xyzx, cb1[52].xyzx
      dp3 r14.z, r8.xyzx, cb1[53].xyzx
      dp3 r7.w, r14.xyzx, r14.xyzx
      rsq r7.w, r7.w
      mul r14.xyz, r7.wwww, r14.xyzx
      ld_indexable(texture2d)(float,float,float,float) r15.x, r1.xyww, t8.xyzw
      mov r15.yw, l(0,1.000000,0,1.000000)
      dp2 r7.w, r15.xyxx, cb1[11].zwzz
      dp2 r8.w, r15.xyxx, cb1[12].zwzz
      div r7.w, -r7.w, r8.w
      mov r16.z, -r7.w
      mul r16.xy, r0.xyxx, r16.zzzz
      dp3 r17.x, r6.xyzx, cb1[51].xyzx
      dp3 r17.y, r6.xyzx, cb1[52].xyzx
      dp3 r17.z, r6.xyzx, cb1[53].xyzx
      mul r7.w, r7.w, l(0.010000)
      max r7.w, r7.w, l(0.001000)
      mad r16.xyz, r17.xyzx, r7.wwww, r16.xyzx
      mad r7.w, r14.z, l(1000.000000), r16.z
      lt r7.w, l(-0.010000), r7.w
      add r8.w, -r16.z, l(-0.010000)
      div r8.w, r8.w, r14.z
      movc r7.w, r7.w, r8.w, l(1000.000000)
      mad r14.xyz, r14.xyzx, r7.wwww, r16.xyzx
      mov r16.w, l(1.000000)
      dp4 r15.y, r16.xyzw, cb4[4].xyzw
      dp4 r15.x, r16.xyzw, cb4[5].xyzw
      dp4 r7.w, r16.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r7.w, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r15.y, r25.w, l(0.5), r15.y

      mov r14.w, l(1.000000)
      dp4 r16.x, r14.xyzw, cb4[4].xyzw
      dp4 r16.y, r14.xyzw, cb4[5].xyzw
      dp4 r8.w, r14.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r8.w, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r16.x, r25.w, l(0.5), r16.x

      div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
      div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
      mul r14.xy, r7.wwww, r15.xyxx
      mul r17.xy, r8.wwww, r16.xyxx
      mul r9.w, r7.w, r16.z
      mul r10.y, r8.w, r14.z
      add r14.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
      lt r17.zw, r14.zzzw, r17.yyyx
      lt r18.xy, r17.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
      or r18.xy, r17.zwzz, r18.xyxx
      movc r14.zw, r17.zzzw, -r14.zzzw, l(0,0,-0.500000,-0.500000)
      mad r14.zw, r16.yyyx, r8.wwww, r14.zzzw
      mad r16.xy, r16.yxyy, r8.wwww, -r14.xyxx
      div r14.zw, r14.zzzw, r16.xxxy
      and r11.y, r14.z, r18.x
      max r12.w, r14.w, r11.y
      movc r11.y, r18.y, r12.w, r11.y
      mad r14.zw, r15.yyyx, r7.wwww, -r17.xxxy
      mad r14.zw, r11.yyyy, r14.zzzw, r17.xxxy
      add r12.w, r7.w, -r8.w
      mad r8.w, r11.y, r12.w, r8.w
      mad r12.w, r16.z, r7.w, -r10.y
      mad r10.y, r11.y, r12.w, r10.y
      mad r16.xy, r15.yxyy, r7.wwww, -r14.zwzz
      dp2 r11.y, r16.xyxx, r16.xyxx
      lt r11.y, r11.y, l(0.000100)
      mad r16.xy, r15.yxyy, r7.wwww, l(0.010000, 0.010000, 0.000000, 0.000000)
      movc r17.xy, r11.yyyy, r16.xyxx, r14.zwzz
      mad r17.zw, -r15.yyyx, r7.wwww, r17.xxxy
      lt r11.y, |r17.z|, |r17.w|
      movc r14.xy, r11.yyyy, r14.xyxx, r14.yxyy
      movc r16.xyw, r11.yyyy, r17.ywyz, r17.xzxw
      lt r12.w, l(0.000000), r16.y
      lt r14.z, r16.y, l(0.000000)
      iadd r12.w, -r12.w, r14.z
      itof r15.x, r12.w
      div r12.w, r15.x, r16.y
      mul r15.y, r16.w, r12.w
      mad r10.y, -r16.z, r7.w, r10.y
      mul r10.y, r12.w, r10.y
      add r8.w, -r7.w, r8.w
      mul r8.w, r12.w, r8.w
      mul r12.w, r15.x, r16.x
      ge r14.z, r16.z, l(99999.796875)
      ge r14.w, l(100000.000000), r16.z
      and r14.z, r14.w, r14.z
      mov r17.x, r9.w
      mov r17.y, r7.w
      mov r16.xy, l(-1.000000,-1.000000,0,0)
      mov r14.w, l(0)
      mov r16.w, r14.z
      mov r19.y, r16.z
      mov r18.xyz, r14.xyzx
      loop 
        mul r18.w, r15.x, r18.x
        ge r18.w, r12.w, r18.w
        ilt r19.z, r14.w, l(100)
        and r18.w, r18.w, r19.z
        not r19.z, r18.z
        and r18.w, r18.w, r19.z
        breakc_z r18.w
        mad r17.xz, r10.yyyy, l(5.000000, 0.000000, 2.500000, 0.000000), r17.xxxx
        mad r17.yw, r8.wwww, l(0.000000, 5.000000, 0.000000, 2.500000), r17.yyyy
        div r19.x, r17.z, r17.w
        lt r17.z, r19.x, r19.y
        movc r17.zw, r17.zzzz, r19.xxxy, r19.yyyx
        movc r16.xy, r11.yyyy, r18.yxyy, r18.xyxx
        mul r19.zw, r16.xxxy, cb1[66].zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.z, r19.zwzz, t8.yzxw, s1, l(0.000000)
        dp2 r18.w, r15.zwzz, cb1[11].zwzz
        dp2 r15.z, r15.zwzz, cb1[12].zwzz
        div r15.z, -r18.w, r15.z
        ge r17.z, -r15.z, r17.z
        add r15.z, -r15.z, l(-0.200000)
        ge r15.z, r17.w, r15.z
        and r18.z, r15.z, r17.z
        mad r18.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r18.xyxx
        iadd r14.w, r14.w, l(1)
        mov r16.w, r18.z
        mov r19.y, r19.x
      endloop 
      if_nz r16.w
        if_z cb4[8].y
          ftoi r14.xy, r16.xyxx
          imax r14.xy, r14.xyxx, l(0, 0, 0, 0)
          ftoi r14.zw, cb1[66].xxxy
          iadd r14.zw, r14.zzzw, l(0, 0, -1, -1)
          imin r14.xy, r14.zwzz, r14.xyxx
          mov r14.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r15.xy, r14.xyww, t7.xyzw
          ne r16.zw, r15.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
          and r7.w, r16.w, r16.z
          if_nz r7.w
            lt r7.w, l(1.000000), r15.x
            add r8.w, r15.x, l(-2.000000)
            movc r15.x, r7.w, r8.w, r15.x
          else 
            ld_indexable(texture2d)(float,float,float,float) r14.z, r14.xyzw, t8.zwxy
            mov r14.w, l(1.000000)
            dp2 r7.w, r14.zwzz, cb1[11].zwzz
            dp2 r8.w, r14.zwzz, cb1[12].zwzz
            div r7.w, -r7.w, r8.w
            itof r14.xy, r14.xyxx
            mad r14.xy, r14.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
            mul r14.xy, r14.xyxx, cb1[0].xyxx
            mul r14.xy, r14.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
            div r7.w, r7.w, cb1[67].x
            mov r14.z, -cb1[67].x
            mul r14.xyz, r7.wwww, r14.xyzx
            mov r14.w, l(1.000000)
            dp4 r17.x, r14.xyzw, cb1[24].xyzw
            dp4 r17.y, r14.xyzw, cb1[25].xyzw
            dp4 r7.w, r14.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r25.w, r7.w, -r25.y
mad r17.x, r25.w, r25.x, r17.x

            dp4 r18.x, r14.xyzw, cb4[0].xyzw
            dp4 r18.y, r14.xyzw, cb4[1].xyzw
            dp4 r8.w, r14.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r25.w, r8.w, -r25.y
mad r18.x, r25.w, r25.x, r18.x

            max r8.w, r8.w, l(0.000100)
            div r14.xy, r18.xyxx, r8.wwww
            div r14.zw, r17.xxxy, r7.wwww
            add r14.xy, -r14.xyxx, r14.zwzz
            mul r15.xz, r14.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
            mov r15.y, -r15.z
          endif 
        else 
          mov r15.xy, l(0,0,0,0)
        endif 
        mad r14.xy, r16.xyxx, cb1[66].zwzz, -r15.xyxx
        add r15.xy, -r16.xyxx, v0.xyxx
        dp2 r7.w, r15.xyxx, r15.xyxx
        sqrt r7.w, r7.w
        ge r8.w, r7.w, l(350.000000)
        add r7.w, r7.w, l(-350.000000)
        mad r7.w, -r7.w, l(0.00666666683), l(1.000000)
        movc r7.w, r8.w, r7.w, l(1.000000)
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul_sat r15.xyzw, r14.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
        mul r8.w, r15.y, r15.x
        mul r8.w, r15.z, r8.w
        mul r8.w, r15.w, r8.w
        mul r7.w, r7.w, r8.w
        lt r8.w, l(0.137000), r7.z
        mad r9.w, -r7.z, l(4.000000), l(1.000000)
        max r9.w, r9.w, l(0.000000)
        mul r9.w, r7.w, r9.w
        movc r7.w, r8.w, r9.w, r7.w
      else 
        mov r14.xy, l(0,0,0,0)
        mov r7.w, l(0)
      endif 
      lt r8.w, l(0.000000), r7.w
      if_nz r8.w
        mul r4.x, r4.x, cb4[8].x
        sample_l_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t9.xyzw, s2, r4.x
      else 
        mov r14.xyz, l(0,0,0,0)
      endif 
    else 
      mov r14.xyz, l(0,0,0,0)
      mov r7.w, l(0)
    endif 
  else 
    mov r14.xyz, l(0,0,0,0)
    mov r7.w, l(0)
  endif 
  lt r4.x, l(0.000000), r7.w
  if_nz r4.x
    div r14.xyz, r14.xyzx, cb1[176].wwww
    lt r4.x, r7.w, l(1.000000)
    if_nz r4.x
      if_z cb1[184].z
        mov r3.w, l(1.000000)
        mov r15.xyzw, l(0,0,0,0)
        mov r4.x, l(1.000000)
        mov r8.w, l(0)
        loop 
          uge r9.w, r8.w, l(15)
          breakc_nz r9.w
          imul null, r9.w, r8.w, l(7)
          dp4 r16.x, r3.xyzw, cb1[r9.w + 68].xyzw
          dp4 r16.y, r3.xyzw, cb1[r9.w + 69].xyzw
          dp4 r16.z, r3.xyzw, cb1[r9.w + 70].xyzw
          ge r17.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r17.xyz, r17.xyzx, cb1[r9.w + 72].xyzx, cb1[r9.w + 73].xyzx
          add r16.xyz, -|r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r16.xyz, r17.xyzx, r16.xyzx
          mul r10.y, r16.y, r16.x
          mul r10.y, r16.z, r10.y
          lt r11.y, l(0.000000), r10.y
          if_nz r11.y
            dp3 r16.x, r8.xyzx, cb1[r9.w + 68].xyzx
            dp3 r16.y, r8.xyzx, cb1[r9.w + 69].xyzx
            dp3 r16.z, r8.xyzx, cb1[r9.w + 70].xyzx
            mul r10.y, r10.y, cb1[r9.w + 73].w
            mov r16.w, cb1[r9.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r16.xyzw, t4.xyzw, s3, r7.y
            mul r16.xyzw, r16.xyzw, cb1[r9.w + 74].xxxy
            min r9.w, r4.x, r10.y
            mad r16.xyzw, r16.xyzw, r9.wwww, r15.xyzw
            add r9.w, r4.x, -r9.w
            ge r10.y, l(0.000000), r9.w
            if_nz r10.y
              mov r15.xyzw, r16.xyzw
              mov r4.x, r9.w
              break 
            endif 
            mov r15.xyzw, r16.xyzw
            mov r4.x, r9.w
          endif 
          iadd r8.w, r8.w, l(1)
        endloop 
      else 
        mov r15.xyzw, l(0,0,0,0)
        mov r4.x, l(1.000000)
      endif 
      add r8.w, r4.x, r15.w
      mul r8.w, r4.y, r8.w
      lt r9.w, l(0.000000), r8.w
      if_nz r9.w
        add r9.w, -|r8.z|, r8.z
        mad r4.x, r4.x, r9.w, |r8.z|
        mad r4.x, r4.x, l(2.000000), l(2.000000)
        div r16.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r4.xxxx
        mul r16.xy, r8.yxyy, r16.xyxx
        mad r16.xy, r16.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.xyz, r16.xyxx, t3.xyzw, s2, r6.w
        mov_sat r17.xyz, r16.xyzx
        movc r16.xyz, cb1[184].zzzz, r17.xyzx, r16.xyzx
        div r16.xyz, r16.xyzx, cb1[176].wwww
        mad r15.xyz, r16.xyzx, r8.wwww, r15.xyzx
      endif 
      mov_sat r7.w, r7.w
      add r16.xyz, r14.xyzx, -r15.xyzx
      mad r14.xyz, r7.wwww, r16.xyzx, r15.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r3.w, l(1.000000)
      mov r14.xyzw, l(0,0,0,0)
      mov r4.x, l(1.000000)
      mov r7.w, l(0)
      loop 
        uge r8.w, r7.w, l(15)
        breakc_nz r8.w
        imul null, r8.w, r7.w, l(7)
        dp4 r15.x, r3.xyzw, cb1[r8.w + 68].xyzw
        dp4 r15.y, r3.xyzw, cb1[r8.w + 69].xyzw
        dp4 r15.z, r3.xyzw, cb1[r8.w + 70].xyzw
        ge r16.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r16.xyz, r16.xyzx, cb1[r8.w + 72].xyzx, cb1[r8.w + 73].xyzx
        add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r15.xyz, r16.xyzx, r15.xyzx
        mul r9.w, r15.y, r15.x
        mul r9.w, r15.z, r9.w
        lt r10.y, l(0.000000), r9.w
        if_nz r10.y
          dp3 r15.x, r8.xyzx, cb1[r8.w + 68].xyzx
          dp3 r15.y, r8.xyzx, cb1[r8.w + 69].xyzx
          dp3 r15.z, r8.xyzx, cb1[r8.w + 70].xyzx
          mul r9.w, r9.w, cb1[r8.w + 73].w
          mov r15.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r7.y
          mul r15.xyzw, r15.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r4.x, r9.w
          mad r15.xyzw, r15.xyzw, r8.wwww, r14.xyzw
          add r8.w, r4.x, -r8.w
          ge r9.w, l(0.000000), r8.w
          if_nz r9.w
            mov r14.xyzw, r15.xyzw
            mov r4.x, r8.w
            break 
          endif 
          mov r14.xyzw, r15.xyzw
          mov r4.x, r8.w
        endif 
        iadd r7.w, r7.w, l(1)
      endloop 
    else 
      mov r14.xyzw, l(0,0,0,0)
      mov r4.x, l(1.000000)
    endif 
    add r7.y, r4.x, r14.w
    mul r7.y, r4.y, r7.y
    lt r7.w, l(0.000000), r7.y
    if_nz r7.w
      add r7.w, -|r8.z|, r8.z
      mad r4.x, r4.x, r7.w, |r8.z|
      mad r4.x, r4.x, l(2.000000), l(2.000000)
      div r8.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.xxxx
      mul r8.xy, r8.zwzz, r8.yxyy
      mad r8.xy, r8.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t3.xyzw, s2, r6.w
      mov_sat r15.xyz, r8.xyzx
      movc r8.xyz, cb1[184].zzzz, r15.xyzx, r8.xyzx
      div r8.xyz, r8.xyzx, cb1[176].wwww
      mad r14.xyz, r8.xyzx, r7.yyyy, r14.xyzx
    endif 
  endif 
  mul r4.x, r11.w, l(0.080000)
  mad r8.xyz, -r11.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
  mad r8.xyz, r5.xxxx, r8.xyzx, r4.xxxx
  dp3 r4.x, r8.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r4.x, r4.x, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xzxx, t1.xyzw, s2, l(0.000000)
  mad r7.xyz, r8.xyzx, r7.xxxx, r7.yyyy
  mul r7.xyz, r4.xxxx, r7.xyzx
  mul r7.xyz, r7.xyzx, r14.xyzx
  mul r7.xyz, r0.wwww, r7.xyzx
  mul r8.xyz, r4.zzzz, -r12.xyzx
  exp r8.xyz, r8.xyzx
  mad r8.xyz, r7.xyzx, r8.xyzx, r13.yzwy
  movc r4.xzw, r4.wwww, r7.xxyz, r8.xxyz
  dp3 r6.w, r4.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r0.z, r0.z, l(5)
  if_nz r0.z
    dp3 r0.z, -r9.xyzx, r6.xyzx
    add r0.z, r0.z, r0.z
    mad r7.xyz, r6.xyzx, -r0.zzzz, -r9.xyzx
    dp3 r0.z, r7.xyzx, r11.xzwx
    dp3 r7.x, r7.xyzx, r6.xyzx
    mul r7.xyz, r6.xyzx, r7.xxxx
    mad r7.xyz, r11.xzwx, r0.zzzz, r7.xyzx
    dp3 r0.z, r11.xzwx, r9.xyzx
    mad r0.z, -r0.z, r0.z, l(1.000000)
    sqrt r0.z, r0.z
    mul r7.w, r5.y, r5.y
    div r7.w, l(2.000000), r7.w
    add r7.w, r7.w, l(-2.000000)
    max r7.w, r7.w, l(1.000000031E-022)
    sqrt r7.w, r7.w
    div r7.w, l(-10.000000), r7.w
    exp r7.w, r7.w
    add r7.w, r7.w, l(-0.000980)
    mul_sat r7.w, r7.w, l(1.00795019)
    add r7.w, -r7.w, l(1.000000)
    if_z cb1[184].z
      mul r8.x, r7.w, cb1[174].w
      mov r3.w, l(1.000000)
      mov r11.xyzw, l(0,0,0,0)
      mov r8.yz, l(0,1.000000,0,0)
      loop 
        uge r8.w, r8.z, l(15)
        breakc_nz r8.w
        imul null, r8.w, r8.z, l(7)
        dp4 r12.x, r3.xyzw, cb1[r8.w + 68].xyzw
        dp4 r12.y, r3.xyzw, cb1[r8.w + 69].xyzw
        dp4 r12.z, r3.xyzw, cb1[r8.w + 70].xyzw
        ge r13.yzw, r12.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
        add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r12.xyz, r13.yzwy, r12.xyzx
        mul r9.w, r12.y, r12.x
        mul r9.w, r12.z, r9.w
        lt r10.y, l(0.000000), r9.w
        if_nz r10.y
          dp3 r12.x, r7.xyzx, cb1[r8.w + 68].xyzx
          dp3 r12.y, r7.xyzx, cb1[r8.w + 69].xyzx
          dp3 r12.z, r7.xyzx, cb1[r8.w + 70].xyzx
          mul r9.w, r9.w, cb1[r8.w + 73].w
          mov r12.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t4.xyzw, s3, r8.x
          mul r12.xyzw, r12.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r8.y, r9.w
          mad r12.xyzw, r12.xyzw, r8.wwww, r11.xyzw
          add r8.w, -r8.w, r8.y
          ge r9.w, l(0.000000), r8.w
          if_nz r9.w
            mov r11.xyzw, r12.xyzw
            mov r8.y, r8.w
            break 
          endif 
          mov r11.xyzw, r12.xyzw
          mov r8.y, r8.w
        endif 
        iadd r8.z, r8.z, l(1)
      endloop 
    else 
      mov r11.xyzw, l(0,0,0,0)
      mov r8.y, l(1.000000)
    endif 
    add r8.x, r8.y, r11.w
    mul r8.x, r4.y, r8.x
    lt r8.z, l(0.000000), r8.x
    if_nz r8.z
      mul r7.w, r7.w, cb1[183].w
      add r8.z, -|r7.z|, r7.z
      mad r7.z, r8.y, r8.z, |r7.z|
      mad r7.z, r7.z, l(2.000000), l(2.000000)
      div r8.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r7.zzzz
      mul r7.xy, r7.yxyy, r8.yzyy
      mad r7.xy, r7.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t3.xyzw, s2, r7.w
      mov_sat r8.yzw, r7.xxyz
      movc r7.xyz, cb1[184].zzzz, r8.yzwy, r7.xyzx
      div r7.xyz, r7.xyzx, cb1[176].wwww
      mad r11.xyz, r7.xyzx, r8.xxxx, r11.xyzx
    endif 
    sqrt r7.xyz, r10.xzwx
    dp3 r7.w, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r0.wwww
    mad r7.xyz, r7.wwww, r7.xyzx, r0.wwww
    mul r7.xyz, r7.xyzx, r11.xyzx
    mul r7.w, r5.z, l(0.080000)
    mad r8.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r8.xyz, r5.xxxx, r8.xyzx, r7.wwww
    dp3 r7.w, r8.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r7.w, r7.w, l(50.000000)
    dp3_sat r5.w, r6.xyzx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r11.xy, r5.wyww, t1.xyzw, s2, l(0.000000)
    mad r8.xyz, r8.xyzx, r11.xxxx, r11.yyyy
    mul r8.xyz, r7.wwww, r8.xyzx
    mul r8.xyz, r0.zzzz, r8.xyzx
    mul r4.xzw, r7.xxyz, r8.xxyz
    dp3 r6.w, r4.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r0.z, r5.y, r13.x
    dp3 r7.x, -r9.xyzx, r6.xyzx
    add r7.x, r7.x, r7.x
    mad r7.xyz, r6.xyzx, -r7.xxxx, -r9.xyzx
    mul r7.w, r0.z, r0.z
    div r7.w, l(2.000000), r7.w
    add r7.w, r7.w, l(-2.000000)
    max r7.w, r7.w, l(1.000000031E-022)
    sqrt r7.w, r7.w
    div r7.w, l(-10.000000), r7.w
    exp r7.w, r7.w
    add r7.w, r7.w, l(-0.000980)
    mul_sat r7.w, r7.w, l(1.00795019)
    add r7.w, -r7.w, l(1.000000)
    mul r8.x, r7.w, cb1[183].w
    mul r8.y, r7.w, cb1[174].w
    ge r8.z, l(0.250000), r0.z
    if_nz r8.z
      ge r8.z, r6.z, l(0.250000)
      if_nz r8.z
        dp3 r11.x, r7.xyzx, cb1[51].xyzx
        dp3 r11.y, r7.xyzx, cb1[52].xyzx
        dp3 r11.z, r7.xyzx, cb1[53].xyzx
        dp3 r8.z, r11.xyzx, r11.xyzx
        rsq r8.z, r8.z
        mul r11.xyz, r8.zzzz, r11.xyzx
        ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t8.xyzw
        mov r1.yw, l(0,1.000000,0,1.000000)
        dp2 r8.z, r1.xyxx, cb1[11].zwzz
        dp2 r1.x, r1.xyxx, cb1[12].zwzz
        div r1.x, -r8.z, r1.x
        mov r12.z, -r1.x
        mul r12.xy, r0.xyxx, r12.zzzz
        dp3 r13.x, r6.xyzx, cb1[51].xyzx
        dp3 r13.y, r6.xyzx, cb1[52].xyzx
        dp3 r13.z, r6.xyzx, cb1[53].xyzx
        mul r0.x, r1.x, l(0.010000)
        max r0.x, r0.x, l(0.001000)
        mad r12.xyz, r13.xyzx, r0.xxxx, r12.xyzx
        mad r0.x, r11.z, l(1000.000000), r12.z
        lt r0.x, l(-0.010000), r0.x
        add r0.y, -r12.z, l(-0.010000)
        div r0.y, r0.y, r11.z
        movc r0.x, r0.x, r0.y, l(1000.000000)
        mad r11.xyz, r11.xyzx, r0.xxxx, r12.xyzx
        mov r12.w, l(1.000000)
        dp4 r0.y, r12.xyzw, cb4[4].xyzw
        dp4 r0.x, r12.xyzw, cb4[5].xyzw
        dp4 r1.x, r12.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r1.x, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r0.y, r25.w, l(0.5), r0.y

        mov r11.w, l(1.000000)
        dp4 r12.x, r11.xyzw, cb4[4].xyzw
        dp4 r12.y, r11.xyzw, cb4[5].xyzw
        dp4 r1.y, r11.xyzw, cb4[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r25.w, r1.y, -r25.y
mul r25.w, r25.w, r25.x
mul r25.w, r25.w, cb1[66].x
mad r12.x, r25.w, l(0.5), r12.x

        div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
        div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
        mul r8.zw, r0.xxxy, r1.xxxx
        mul r11.xy, r1.yyyy, r12.xyxx
        mul r9.w, r1.x, r12.z
        mul r10.y, r1.y, r11.z
        add r11.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r13.xy, r11.zwzz, r11.yxyy
        lt r13.zw, r11.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r13.zw, r13.zzzw, r13.xxxy
        movc r11.zw, r13.xxxy, -r11.zzzw, l(0,0,-0.500000,-0.500000)
        mad r11.zw, r12.yyyx, r1.yyyy, r11.zzzw
        mad r12.xy, r12.yxyy, r1.yyyy, -r8.zwzz
        div r11.zw, r11.zzzw, r12.xxxy
        and r11.z, r11.z, r13.z
        max r11.w, r11.w, r11.z
        movc r11.z, r13.w, r11.w, r11.z
        mad r12.xy, r0.yxyy, r1.xxxx, -r11.xyxx
        mad r11.xy, r11.zzzz, r12.xyxx, r11.xyxx
        add r11.w, -r1.y, r1.x
        mad r1.y, r11.z, r11.w, r1.y
        mad r11.w, r12.z, r1.x, -r10.y
        mad r10.y, r11.z, r11.w, r10.y
        mad r11.zw, r0.yyyx, r1.xxxx, -r11.xxxy
        dp2 r11.z, r11.zwzz, r11.zwzz
        lt r11.z, r11.z, l(0.000100)
        mad r12.xy, r0.yxyy, r1.xxxx, l(0.010000, 0.010000, 0.000000, 0.000000)
        movc r11.xy, r11.zzzz, r12.xyxx, r11.xyxx
        mad r11.zw, -r0.yyyx, r1.xxxx, r11.xxxy
        lt r0.x, |r11.z|, |r11.w|
        movc r8.zw, r0.xxxx, r8.zzzw, r8.wwwz
        movc r11.xyz, r0.xxxx, r11.ywzy, r11.xzwx
        lt r0.y, l(0.000000), r11.y
        lt r11.w, r11.y, l(0.000000)
        iadd r0.y, -r0.y, r11.w
        itof r12.x, r0.y
        div r0.y, r12.x, r11.y
        mul r12.y, r11.z, r0.y
        mad r10.y, -r12.z, r1.x, r10.y
        mul r10.y, r0.y, r10.y
        add r1.y, -r1.x, r1.y
        mul r0.y, r0.y, r1.y
        mul r1.y, r11.x, r12.x
        ge r11.x, r12.z, l(99999.796875)
        ge r11.y, l(100000.000000), r12.z
        and r11.x, r11.y, r11.x
        mov r13.x, r9.w
        mov r13.y, r1.x
        mov r14.xy, r8.zwzz
        mov r11.yzw, l(0,-1.000000,-1.000000,0)
        mov r12.w, r11.x
        mov r15.y, r12.z
        mov r14.z, r11.x
        loop 
          mul r14.w, r12.x, r14.x
          ge r14.w, r1.y, r14.w
          ilt r15.z, r11.w, l(100)
          and r14.w, r14.w, r15.z
          not r15.z, r14.z
          and r14.w, r14.w, r15.z
          breakc_z r14.w
          mad r13.xz, r10.yyyy, l(5.000000, 0.000000, 2.500000, 0.000000), r13.xxxx
          mad r13.yw, r0.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r13.yyyy
          div r15.x, r13.z, r13.w
          lt r13.z, r15.x, r15.y
          movc r13.zw, r13.zzzz, r15.xxxy, r15.yyyx
          movc r11.yz, r0.xxxx, r14.yyxy, r14.xxyx
          mul r15.zw, r11.yyyz, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r1.z, r15.zwzz, t8.yzxw, s1, l(0.000000)
          dp2 r14.w, r1.zwzz, cb1[11].zwzz
          dp2 r1.z, r1.zwzz, cb1[12].zwzz
          div r1.z, -r14.w, r1.z
          ge r13.z, -r1.z, r13.z
          add r1.z, -r1.z, l(-0.200000)
          ge r1.z, r13.w, r1.z
          and r14.z, r1.z, r13.z
          mad r14.xy, r12.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r14.xyxx
          iadd r11.w, r11.w, l(1)
          mov r12.w, r14.z
          mov r15.y, r15.x
        endloop 
        if_nz r12.w
          if_z cb4[8].y
            ftoi r0.xy, r11.yzyy
            imax r0.xy, r0.xyxx, l(0, 0, 0, 0)
            ftoi r1.xy, cb1[66].xyxx
            iadd r1.xy, r1.xyxx, l(-1, -1, 0, 0)
            imin r1.xy, r0.xyxx, r1.xyxx
            mov r1.zw, l(0,0,0,0)
            ld_indexable(texture2d)(float,float,float,float) r12.xy, r1.xyww, t7.xyzw
            ne r0.xy, r12.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r0.x, r0.y, r0.x
            if_nz r0.x
              lt r0.x, l(1.000000), r12.x
              add r0.y, r12.x, l(-2.000000)
              movc r12.x, r0.x, r0.y, r12.x
            else 
              ld_indexable(texture2d)(float,float,float,float) r0.x, r1.xyzw, t8.xyzw
              mov r0.y, l(1.000000)
              dp2 r1.z, r0.xyxx, cb1[11].zwzz
              dp2 r0.x, r0.xyxx, cb1[12].zwzz
              div r0.x, -r1.z, r0.x
              itof r1.xy, r1.xyxx
              mad r1.xy, r1.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r1.xy, r1.xyxx, cb1[0].xyxx
              mul r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r0.x, r0.x, cb1[67].x
              mov r1.z, -cb1[67].x
              mul r1.xyz, r0.xxxx, r1.xyzx
              mov r1.w, l(1.000000)
              dp4 r0.x, r1.xyzw, cb1[24].xyzw
              dp4 r0.y, r1.xyzw, cb1[25].xyzw
              dp4 r8.z, r1.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r25.w, r8.z, -r25.y
mad r0.x, r25.w, r25.x, r0.x

              dp4 r13.x, r1.xyzw, cb4[0].xyzw
              dp4 r13.y, r1.xyzw, cb4[1].xyzw
              dp4 r1.x, r1.xyzw, cb4[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r25.w, r1.x, -r25.y
mad r13.x, r25.w, r25.x, r13.x

              max r1.x, r1.x, l(0.000100)
              div r1.xy, r13.xyxx, r1.xxxx
              div r0.xy, r0.xyxx, r8.zzzz
              add r0.xy, -r1.xyxx, r0.xyxx
              mul r12.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
              mov r12.y, -r12.z
            endif 
          else 
            mov r12.xy, l(0,0,0,0)
          endif 
          mad r1.xy, r11.yzyy, cb1[66].zwzz, -r12.xyxx
          add r0.xy, -r11.yzyy, v0.xyxx
          dp2 r0.x, r0.xyxx, r0.xyxx
          sqrt r0.x, r0.x
          ge r0.y, r0.x, l(350.000000)
          add r0.x, r0.x, l(-350.000000)
          mad r0.x, -r0.x, l(0.00666666683), l(1.000000)
          movc r0.x, r0.y, r0.x, l(1.000000)
          add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul_sat r11.xyzw, r1.xzyw, l(10.000000, 10.000000, 10.000000, 10.000000)
          mul r0.y, r11.y, r11.x
          mul r0.y, r11.z, r0.y
          mul r0.y, r11.w, r0.y
          mul r0.x, r0.y, r0.x
          lt r0.y, l(0.137000), r0.z
          mad r0.z, -r0.z, l(4.000000), l(1.000000)
          max r0.z, r0.z, l(0.000000)
          mul r0.z, r0.z, r0.x
          movc r0.x, r0.y, r0.z, r0.x
        else 
          mov r1.xy, l(0,0,0,0)
          mov r0.x, l(0)
        endif 
        lt r0.y, l(0.000000), r0.x
        if_nz r0.y
          mul r0.y, r7.w, cb4[8].x
          sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t9.xyzw, s2, r0.y
        else 
          mov r1.xyz, l(0,0,0,0)
        endif 
      else 
        mov r1.xyz, l(0,0,0,0)
        mov r0.x, l(0)
      endif 
    else 
      mov r1.xyz, l(0,0,0,0)
      mov r0.x, l(0)
    endif 
    lt r0.y, l(0.000000), r0.x
    if_nz r0.y
      div r1.xyz, r1.xyzx, cb1[176].wwww
      lt r0.y, r0.x, l(1.000000)
      if_nz r0.y
        if_z cb1[184].z
          mov r3.w, l(1.000000)
          mov r11.xyzw, l(0,0,0,0)
          mov r0.yz, l(0,1.000000,0,0)
          loop 
            uge r7.w, r0.z, l(15)
            breakc_nz r7.w
            imul null, r7.w, r0.z, l(7)
            dp4 r12.x, r3.xyzw, cb1[r7.w + 68].xyzw
            dp4 r12.y, r3.xyzw, cb1[r7.w + 69].xyzw
            dp4 r12.z, r3.xyzw, cb1[r7.w + 70].xyzw
            ge r13.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r13.xyz, r13.xyzx, cb1[r7.w + 72].xyzx, cb1[r7.w + 73].xyzx
            add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r12.xyz, r13.xyzx, r12.xyzx
            mul r8.z, r12.y, r12.x
            mul r8.z, r12.z, r8.z
            lt r8.w, l(0.000000), r8.z
            if_nz r8.w
              dp3 r12.x, r7.xyzx, cb1[r7.w + 68].xyzx
              dp3 r12.y, r7.xyzx, cb1[r7.w + 69].xyzx
              dp3 r12.z, r7.xyzx, cb1[r7.w + 70].xyzx
              mul r8.z, r8.z, cb1[r7.w + 73].w
              mov r12.w, cb1[r7.w + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t4.xyzw, s3, r8.y
              mul r12.xyzw, r12.xyzw, cb1[r7.w + 74].xxxy
              min r7.w, r0.y, r8.z
              mad r12.xyzw, r12.xyzw, r7.wwww, r11.xyzw
              add r7.w, r0.y, -r7.w
              ge r8.z, l(0.000000), r7.w
              if_nz r8.z
                mov r11.xyzw, r12.xyzw
                mov r0.y, r7.w
                break 
              endif 
              mov r11.xyzw, r12.xyzw
              mov r0.y, r7.w
            endif 
            iadd r0.z, r0.z, l(1)
          endloop 
        else 
          mov r11.xyzw, l(0,0,0,0)
          mov r0.y, l(1.000000)
        endif 
        add r0.z, r0.y, r11.w
        mul r0.z, r4.y, r0.z
        lt r7.w, l(0.000000), r0.z
        if_nz r7.w
          add r7.w, -|r7.z|, r7.z
          mad r0.y, r0.y, r7.w, |r7.z|
          mad r0.y, r0.y, l(2.000000), l(2.000000)
          div r8.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.yyyy
          mul r8.zw, r7.yyyx, r8.zzzw
          mad r8.zw, r8.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
          sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r8.zwzz, t3.xyzw, s2, r8.x
          mov_sat r13.xyz, r12.xyzx
          movc r12.xyz, cb1[184].zzzz, r13.xyzx, r12.xyzx
          div r12.xyz, r12.xyzx, cb1[176].wwww
          mad r11.xyz, r12.xyzx, r0.zzzz, r11.xyzx
        endif 
        mov_sat r0.x, r0.x
        add r12.xyz, r1.xyzx, -r11.xyzx
        mad r1.xyz, r0.xxxx, r12.xyzx, r11.xyzx
      endif 
    else 
      if_z cb1[184].z
        mov r3.w, l(1.000000)
        mov r1.xyzw, l(0,0,0,0)
        mov r0.xy, l(1.000000,0,0,0)
        loop 
          uge r0.z, r0.y, l(15)
          breakc_nz r0.z
          imul null, r0.z, r0.y, l(7)
          dp4 r11.x, r3.xyzw, cb1[r0.z + 68].xyzw
          dp4 r11.y, r3.xyzw, cb1[r0.z + 69].xyzw
          dp4 r11.z, r3.xyzw, cb1[r0.z + 70].xyzw
          ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r12.xyz, r12.xyzx, cb1[r0.z + 72].xyzx, cb1[r0.z + 73].xyzx
          add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r11.xyz, r12.xyzx, r11.xyzx
          mul r7.w, r11.y, r11.x
          mul r7.w, r11.z, r7.w
          lt r8.z, l(0.000000), r7.w
          if_nz r8.z
            dp3 r11.x, r7.xyzx, cb1[r0.z + 68].xyzx
            dp3 r11.y, r7.xyzx, cb1[r0.z + 69].xyzx
            dp3 r11.z, r7.xyzx, cb1[r0.z + 70].xyzx
            mul r7.w, r7.w, cb1[r0.z + 73].w
            mov r11.w, cb1[r0.z + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t4.xyzw, s3, r8.y
            mul r11.xyzw, r11.xyzw, cb1[r0.z + 74].xxxy
            min r0.z, r0.x, r7.w
            mad r11.xyzw, r11.xyzw, r0.zzzz, r1.xyzw
            add r0.z, -r0.z, r0.x
            ge r7.w, l(0.000000), r0.z
            if_nz r7.w
              mov r1.xyzw, r11.xyzw
              mov r0.x, r0.z
              break 
            endif 
            mov r1.xyzw, r11.xyzw
            mov r0.x, r0.z
          endif 
          iadd r0.y, r0.y, l(1)
        endloop 
      else 
        mov r1.xyzw, l(0,0,0,0)
        mov r0.x, l(1.000000)
      endif 
      add r0.y, r0.x, r1.w
      mul r0.y, r4.y, r0.y
      lt r0.z, l(0.000000), r0.y
      if_nz r0.z
        add r0.z, -|r7.z|, r7.z
        mad r0.x, r0.x, r0.z, |r7.z|
        mad r0.x, r0.x, l(2.000000), l(2.000000)
        div r0.xz, l(-1.000000, 0.000000, 1.000000, 0.000000), r0.xxxx
        mul r0.xz, r0.xxzx, r7.yyxy
        mad r0.xz, r0.xxzx, l(0.950000, 0.000000, 0.950000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xzxx, t3.xyzw, s2, r8.x
        mov_sat r7.xyz, r3.xyzx
        movc r3.xyz, cb1[184].zzzz, r7.xyzx, r3.xyzx
        div r3.xyz, r3.xyzx, cb1[176].wwww
        mad r1.xyz, r3.xyzx, r0.yyyy, r1.xyzx
      endif 
    endif 
    mul r0.x, r5.z, l(0.080000)
    mad r3.xyz, -r5.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r0.xyz, r5.xxxx, r3.xyzx, r0.xxxx
    dp3 r1.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r1.w, r1.w, l(50.000000)
    dp3_sat r5.w, r6.xyzx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r5.wyww, t1.xyzw, s2, l(0.000000)
    mad r0.xyz, r0.xyzx, r3.xxxx, r3.yyyy
    mul r0.xyz, r1.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r1.xyzx
    mul r4.xzw, r0.wwww, r0.xxyz
    dp3 r6.w, r4.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r2.x, r6.w
add r0.yzw, r2.yyzw, r4.xxzw
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 2102 instruction slots used