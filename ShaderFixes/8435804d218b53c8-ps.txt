// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 8435804d218b53c8-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 07:08:08 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ShadowRealSampler               sampler_c      NA          NA    0        1
// LongRangeShadowSampler          sampler_c      NA          NA    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    1        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    2        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    3        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    4        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    5        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
// GBufferMini                       cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 11
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 8435804d218b53c8-ps.txt

mul r7.w, r7.x, r7.y
mul r9.x, r7.w, cb1[9].x
mul r9.y, r7.w, cb1[10].x
mul r9.z, r7.w, cb1[11].x
mul r9.w, r7.w, cb1[12].x
dp4 r10.x, r9.xyzw, cb1[17].xyzw
dp4 r10.y, r9.xyzw, cb1[18].xyzw
dp4 r10.z, r9.xyzw, cb1[19].xyzw
add r8.xyz, cb1[174].xyz, r10.xyz

mad r0.x, cb5[0].y, cb1[66].x, v0.x
ftoi r0.x, r0.x
ftoi r0.y, v0.y
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t3.yzxw
mad r2.xy, v0.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[9].xyzw
dp4 r2.y, r1.xyzw, cb1[10].xyzw
dp4 r2.z, r1.xyzw, cb1[11].xyzw
dp4 r2.w, r1.xyzw, cb1[12].xyzw
div r1.xyzw, r2.xyzw, r2.wwww

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 8435804d218b53c8-ps.txt

add r7.w, -r1.z, -r7.y
mul r7.w, r7.w, r7.x
mad r1.x, -r7.w, cb1[9].x, r1.x

dp4 r2.x, r1.xyzw, cb1[17].xyzw
dp4 r2.y, r1.xyzw, cb1[18].xyzw
dp4 r2.z, r1.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t5.xyzw
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r4.z, l(0)
mov r0.w, l(0)
mov r2.w, l(3)
mov r3.xyz, l(0,0,0,0)
loop 
  uge r3.w, r3.z, l(4)
  breakc_nz r3.w
  ishl r3.w, r3.z, l(2)
  mul r5.xyz, r2.yyyy, cb3[r3.w + 1].xyzx
  mad r5.xyz, cb3[r3.w + 0].xyzx, r2.xxxx, r5.xyzx
  mad r5.xyz, cb3[r3.w + 2].xyzx, r2.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[r3.w + 3].xyzx
  max r3.w, |r5.y|, |r5.x|
  add r3.w, r3.w, cb3[16].x
  ult r4.w, r3.z, l(3)
  if_nz r4.w
    lt r4.w, r3.w, l(1.000000)
    if_nz r4.w
      mov r3.xy, r5.xyxx
      mov r4.z, r5.z
      mov r0.w, r3.w
      mov r2.w, r3.z
      break 
    endif 
  endif 
  iadd r3.z, r3.z, l(1)
  mov r3.xy, r5.xyxx
  mov r4.z, r5.z
  mov r0.w, r3.w
  mov r2.w, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r5.x, x0[r2.w + 0].z
mov r5.yzw, l(0,0.500000,0,0)
mad r4.xy, r3.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r5.xyxx
dp4 r3.x, cb3[17].xyzw, icb[r2.w + 0].xyzw
ieq r2.w, r2.w, l(3)
mad_sat r0.w, r0.w, cb3[16].z, cb3[16].w
and r0.w, r0.w, r2.w
ftoi r3.yz, v0.xxyx
and r5.xy, r3.yzyy, l(63, 63, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r3.yz, r5.xyzw, t0.zxyw
mad r3.yz, r3.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r5.xy, r3.yyyy, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r5.xy, r3.zzzz, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r5.xyxx
dp2 r5.z, r3.yzyy, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r3.xw, r3.xxxx, cb3[38].zzzw
mul r6.xy, r3.xwxx, r5.xzxx
mov r6.z, l(0)
add r6.xyz, r4.xyzx, r6.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r6.xyxx, t1.xxxx, s0, r6.z
dp2 r5.w, r3.yzyy, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r5.xy, r3.xwxx, r5.ywyy
mov r5.z, l(0)
add r5.xyz, r4.xyzx, r5.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s0, r5.z
add r2.w, r2.w, r4.w
mul r5.xy, r3.yyyy, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r5.xy, r3.zzzz, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r5.xyxx
dp2 r5.z, r3.yzyy, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r6.xy, r3.xwxx, r5.xzxx
mov r6.z, l(0)
add r6.xyz, r4.xyzx, r6.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r6.xyxx, t1.xxxx, s0, r6.z
add r2.w, r2.w, r4.w
dp2 r5.w, r3.yzyy, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r3.xy, r3.xwxx, r5.ywyy
mov r3.z, l(0)
add r3.xyz, r3.xyzx, r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xxxx, s0, r3.z
add r2.w, r2.w, r3.x
mul r3.x, r2.w, l(0.250000)
mad r3.yz, r0.xxyx, cb4[0].xxyx, r2.xxyx
mad r3.w, r2.z, cb4[0].z, cb4[0].w
mad r3.yz, r3.yyzy, cb4[1].xxyx, cb4[1].zzwz
sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r3.yzyy, t2.xxxx, s1, r3.w
mad r2.w, -r2.w, l(0.250000), r3.y
mad r0.w, r0.w, r2.w, r3.x
dp3 r2.w, r2.xyzx, cb0[1].xyzx
add_sat r2.w, r2.w, cb0[1].w
mul r0.w, r0.w, r2.w
mad r0.w, r0.w, cb3[37].x, cb3[37].y
lt r2.w, l(0.000000), r0.w
if_nz r2.w
  add r2.xyz, -r2.xyzx, r8.xyzx
  dp3 r2.w, r2.xyzx, r2.xyzx
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, r2.xyzx
  dp3_sat r3.w, r0.xyzx, cb2[2].xyzx
  mul r1.xyz, r1.xyzx, r3.wwww
  dp3_sat r3.x, r0.xyzx, r3.xyzx
  mad r2.xyz, r2.xyzx, r2.wwww, cb2[2].xyzx
  dp3 r2.w, r2.xyzx, r2.xyzx
  rsq r2.w, r2.w
  mul r2.xyz, r2.wwww, r2.xyzx
  dp3 r2.w, r2.xyzx, cb2[2].xyzx
  dp3_sat r0.x, r0.xyzx, r2.xyzx
  mul r0.x, r0.x, r0.x
  mad r0.x, r0.x, l(-0.937500), l(1.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, l(3.14159274)
  mul r0.y, r3.w, r3.w
  mad r0.z, -r3.w, r3.w, l(1.000000)
  mul r0.z, r0.z, l(0.390625)
  max r0.y, r0.y, l(1.000000047E-034)
  div r0.y, r0.z, r0.y
  add r0.y, r0.y, l(1.000000)
  sqrt r0.y, r0.y
  add r0.y, r0.y, l(1.000000)
  mul r0.z, r3.x, r3.x
  mad r2.x, -r3.x, r3.x, l(1.000000)
  mul r2.x, r2.x, l(0.390625)
  max r0.z, r0.z, l(1.000000047E-034)
  div r0.z, r2.x, r0.z
  add r0.z, r0.z, l(1.000000)
  sqrt r0.z, r0.z
  add r0.z, r0.z, l(1.000000)
  div r0.xyz, l(0.062500, 2.000000, 2.000000, 0.000000), r0.xyzx
  mul r0.y, r0.z, r0.y
  add r0.z, -r2.w, l(1.000000)
  mul r2.x, r0.z, r0.z
  mul r2.x, r2.x, r2.x
  mul r0.z, r0.z, r2.x
  mad r0.z, r0.z, l(0.156800), l(0.003200)
  mul r0.x, r0.y, r0.x
  mul r0.x, r0.z, r0.x
  mul r0.x, r3.w, r0.x
  mad r0.xyz, r1.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r0.xxxx
  mul r0.xyz, r0.wwww, r0.xyzx
  mul r0.xyz, r0.xyzx, cb2[0].xyzx
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r1.wwww, r0.xyzx
add r0.x, -r1.w, l(1.000000)
mul o0.w, r0.x, cb5[0].x
ret 
// Approximately 165 instruction slots used