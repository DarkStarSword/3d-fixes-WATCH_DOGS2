// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed 3c5cd977e4ea256c-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:06:15 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneMesh
// {
//
//   float4 BoundingBoxMax_LodIndex;    // Offset:    0 Size:    16 [unused]
//   float4 BoundingBoxMin_PrimitiveNb; // Offset:   16 Size:    16 [unused]
//   
//   struct Sphere
//   {
//       
//       float3 center;                 // Offset:   32
//       float radius;                  // Offset:   44
//
//   } BoundingSphere;                  // Offset:   32 Size:    16 [unused]
//   uint MaterialIndex;                // Offset:   48 Size:     4
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12
//
// }
//
// cbuffer MaterialWD2Building
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 ColorizeParams;             // Offset:   16 Size:    16 [unused]
//   float4 FakeInteriorTextureSize;    // Offset:   32 Size:    16
//   float4 LightIntensityCurveSel;     // Offset:   48 Size:    16 [unused]
//   float4 WindowLightMaskTexture1Size;// Offset:   64 Size:    16
//   float3 DiffuseColor1;              // Offset:   80 Size:    12 [unused]
//   float AmountOfUnlitWindows;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12 [unused]
//   float FakeInteriorPerBuildingRandom;// Offset:  108 Size:     4
//   float3 DiffuseColor3;              // Offset:  112 Size:    12 [unused]
//   float FakeInteriorRandomUvOffset;  // Offset:  124 Size:     4
//   float3 DiffuseColorWindow;         // Offset:  128 Size:    12 [unused]
//   float FakeInteriorRotationAngle;   // Offset:  140 Size:     4
//   float3 FakeCeilingIntensity;       // Offset:  144 Size:    12 [unused]
//   float FakeInteriorTiling;          // Offset:  156 Size:     4 [unused]
//   float3 FakeCeilingLightIntensity;  // Offset:  160 Size:    12 [unused]
//   float GrungeOpacity;               // Offset:  172 Size:     4 [unused]
//   float3 FakeFloorIntensity;         // Offset:  176 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  188 Size:     4 [unused]
//   float3 FakeInteriorHeightParams;   // Offset:  192 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  204 Size:     4
//   float3 RoundedCornersParameters;   // Offset:  208 Size:    12
//   float MaskChannelUsageGreen;       // Offset:  220 Size:     4 [unused]
//   float3 WindowLightIntensity;       // Offset:  224 Size:    12 [unused]
//   float MaskChannelUsageRed;         // Offset:  236 Size:     4 [unused]
//   float2 DiffuseTextureTiling2;      // Offset:  240 Size:     8 [unused]
//   float Metalness;                   // Offset:  248 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  252 Size:     4 [unused]
//   float2 FakeCeilingFadeDistance;    // Offset:  256 Size:     8 [unused]
//   float Reflectance;                 // Offset:  264 Size:     4 [unused]
//   float ReflectionRoughnessBias;     // Offset:  268 Size:     4 [unused]
//   float2 FakeFloorFadeDistance;      // Offset:  272 Size:     8 [unused]
//   float Roughness;                   // Offset:  280 Size:     4 [unused]
//   float WindowMetalness;             // Offset:  284 Size:     4 [unused]
//   float2 FakeInteriorSpacing;        // Offset:  288 Size:     8
//   int DiffuseTexture2ArrayIndex;     // Offset:  296 Size:     4 [unused]
//   int FakeInteriorTextureIndex;      // Offset:  300 Size:     4
//   float2 GrungeTiling;               // Offset:  304 Size:     8 [unused]
//   int GrungeTextureArrayIndex;       // Offset:  312 Size:     4 [unused]
//   int WindowLightMaskTextureArrayIndex;// Offset:  316 Size:     4 [unused]
//   float2 ManualOffsetUV;             // Offset:  320 Size:     8 [unused]
//   bool Colorize;                     // Offset:  328 Size:     4 [unused]
//   bool FakeInteriorUseRandomRotation;// Offset:  332 Size:     4
//   float2 WindowLightMaskWindowsCount;// Offset:  336 Size:     8 [unused]
//   bool FakeInteriorUseRandomTexture; // Offset:  344 Size:     4
//   bool GrungeNewMode;                // Offset:  348 Size:     4 [unused]
//   bool StaticMeshWindowLightSpecialMode;// Offset:  352 Size:     4 [unused]
//   bool WindowDressingParallax;       // Offset:  356 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Building__WindowLightVariationTexture__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Building__WindowLightVariationTexture__TexObj__    texture  float4          2d    0        1
// BuildingAtlasMaterials__Materials    texture   uint4         buf    1        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneMesh                         cbuffer      NA          NA    2        1
// SceneGeometry                     cbuffer      NA          NA    3        1
// MaterialWD2Building               cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xy          1     NONE     int   xy  
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    1   xyzw        3     NONE   float   xy  
// texcoord                 1   xyzw        4     NONE   float      w
// texcoord                 0   xyzw        5     NONE   float      w
// texcoord                 4   xyz         6     NONE   float   xyz 
// texcoord                 5   xy          7     NONE   float   xy  
// texcoord                 8   xyzw        8     NONE   float   xyzw
// texcoord                 3   xy          9     NONE     int   xy  
// texcoord                 6   x          10     NONE    uint   x   
// texcoord                 9   x          11     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// TEXCOORD                 9   xyzw        9     NONE   float   xyzw
// TEXCOORD                10   xyzw       10     NONE   float   xyzw
// TEXCOORD                11   xyzw       11     NONE   float   xyzw
// TEXCOORD                12   x          12     NONE   float   x   
// TEXCOORD                13   x          13     NONE   float   x   
// TEXCOORD                14    y         13     NONE    uint    y  
// SV_Position              0   xyzw       14      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.w
dcl_input v5.w
dcl_input v6.xyz
dcl_input v7.xy
dcl_input v8.xyzw
dcl_input v9.xy
dcl_input v10.x
dcl_input v11.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.x
dcl_output o13.x
dcl_output o13.y
dcl_output_siv o14.xyzw, position
dcl_temps 15

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed 3c5cd977e4ea256c-vs.txt

mul r11.w, r11.x, r11.y
mul r13.x, r11.w, cb1[9].x
mul r13.y, r11.w, cb1[10].x
mul r13.z, r11.w, cb1[11].x
mul r13.w, r11.w, cb1[12].x
dp4 r14.x, r13.xyzw, cb1[17].xyzw
dp4 r14.y, r13.xyzw, cb1[18].xyzw
dp4 r14.z, r13.xyzw, cb1[19].xyzw
add r12.xyz, cb1[174].xyz, r14.xyz

itof r0.xyz, v0.xyzx
itof r1.xy, v1.xyxx
itof r1.zw, v9.xxxy
mad r0.xyz, r0.xyzx, cb3[3].yyyy, cb3[3].xxxx
mad r1.xy, r1.xyxx, cb3[2].zwzz, cb3[2].xyxx
mad r2.xy, v2.zyzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.0000479383634, 0.0000479383634)
and o13.y, v10.x, l(0x000fffff)
ishl r0.w, cb2[3].x, l(1)
iadd r0.w, r0.w, l(24)
ushr r0.w, v10.x, r0.w
and r0.w, r0.w, l(3)
bfi r2.z, l(20), l(2), v10.x, l(0)
ld_indexable(buffer)(uint,uint,uint,uint) r3.xyzw, r2.zzzz, t1.xyzw
iadd r4.xyz, r2.zzzz, l(1, 2, 3, 0)
ld_indexable(buffer)(uint,uint,uint,uint) r5.xyzw, r4.xxxx, t1.xyzw
if_z r0.w
  ubfe r6.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r3.xxyy
  utof r6.xyzw, r6.xyzw
  and r2.zw, r3.xxxy, l(0, 0, 255, 255)
  utof r7.xz, r2.zzwz
  mov r7.yw, r6.xxxy
  ge r8.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r6.xyzw
  mul r9.xyzw, r6.xyzw, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
  mad r10.xyz, r7.ywxy, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
  log r10.xyz, r10.xyzx
  mul r10.xyz, r10.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r10.xyz, r10.xyzx
  movc o0.xy, r8.xyxx, r9.xyxx, r10.xyxx
  ge r2.zw, l(0.000000, 0.000000, 10.314749, 10.314749), r7.xxxz
  mul r3.xy, r7.xzxx, l(0.000303526991, 0.000303526991, 0.000000, 0.000000)
  movc o0.z, r2.z, r3.x, r10.z
  mov r7.xy, r6.zwzz
  mad r6.xyz, r7.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r6.xyz, r6.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
  log r6.xyz, r6.xyzx
  mul r6.xyz, r6.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r6.xyz, r6.xyzx
  movc o1.xy, r8.zwzz, r9.zwzz, r6.xyxx
  movc o1.z, r2.w, r3.y, r6.z
else 
  ieq r0.w, r0.w, l(1)
  if_nz r0.w
    ubfe r6.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r3.zzww
    utof r6.xyzw, r6.xyzw
    and r2.zw, r3.zzzw, l(0, 0, 255, 255)
    utof r3.xz, r2.zzwz
    mov r3.yw, r6.xxxy
    ge r7.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r6.xyzw
    mul r8.xyzw, r6.xyzw, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
    mad r9.xyz, r3.ywxy, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
    mul r9.xyz, r9.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
    log r9.xyz, r9.xyzx
    mul r9.xyz, r9.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
    exp r9.xyz, r9.xyzx
    movc o0.xy, r7.xyxx, r8.xyxx, r9.xyxx
    ge r2.zw, l(0.000000, 0.000000, 10.314749, 10.314749), r3.xxxz
    mul r4.xw, r3.xxxz, l(0.000303526991, 0.000000, 0.000000, 0.000303526991)
    movc o0.z, r2.z, r4.x, r9.z
    mov r3.xy, r6.zwzz
    mad r3.xyz, r3.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
    mul r3.xyz, r3.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
    log r3.xyz, r3.xyzx
    mul r3.xyz, r3.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
    exp r3.xyz, r3.xyzx
    movc o1.xy, r7.zwzz, r8.zwzz, r3.xyxx
    movc o1.z, r2.w, r4.w, r3.z
  else 
    ubfe r3.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r5.xxyy
    utof r3.xyzw, r3.xyzw
    and r2.zw, r5.xxxy, l(0, 0, 255, 255)
    utof r6.xz, r2.zzwz
    mov r6.yw, r3.xxxy
    ge r7.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r3.xyzw
    mul r8.xyzw, r3.xyzw, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
    mad r9.xyz, r6.ywxy, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
    mul r9.xyz, r9.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
    log r9.xyz, r9.xyzx
    mul r9.xyz, r9.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
    exp r9.xyz, r9.xyzx
    movc o0.xy, r7.xyxx, r8.xyxx, r9.xyxx
    ge r2.zw, l(0.000000, 0.000000, 10.314749, 10.314749), r6.xxxz
    mul r3.xy, r6.xzxx, l(0.000303526991, 0.000303526991, 0.000000, 0.000000)
    movc o0.z, r2.z, r3.x, r9.z
    mov r6.xy, r3.zwzz
    mad r3.xzw, r6.xxyz, l(0.00392156886, 0.000000, 0.00392156886, 0.00392156886), l(0.055000, 0.000000, 0.055000, 0.055000)
    mul r3.xzw, r3.xxzw, l(0.947867334, 0.000000, 0.947867334, 0.947867334)
    log r3.xzw, r3.xxzw
    mul r3.xzw, r3.xxzw, l(2.400000, 0.000000, 2.400000, 2.400000)
    exp r3.xzw, r3.xxzw
    movc o1.xy, r7.zwzz, r8.zwzz, r3.xzxx
    movc o1.z, r2.w, r3.y, r3.w
  endif 
endif 
eq r0.w, cb4[12].w, l(2.000000)
if_nz r0.w
  ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 16, 8), r5.zzzz
  utof r3.xy, r2.zwzz
  and r0.w, r5.z, l(255)
  utof r3.z, r0.w
  mul r0.w, r3.z, l(0.000303526991)
  ge r5.xyz, l(10.314749, 10.314749, 10.314749, 0.000000), r3.xyzx
  mul r2.zw, r3.xxxy, l(0.000000, 0.000000, 0.000303526991, 0.000303526991)
  mad r3.xyz, r3.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r3.xyz, r3.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
  log r3.xyz, r3.xyzx
  mul r3.xyz, r3.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r3.xyz, r3.xyzx
  movc o2.xy, r5.xyxx, r2.zwzz, r3.xyxx
  movc o2.z, r5.z, r0.w, r3.z
else 
  mov o2.xyz, l(0,0,0,0)
endif 
ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 16, 8), r5.wwww
utof r3.xy, r2.zwzz
and r0.w, r5.w, l(255)
utof r3.z, r0.w
mul r0.w, r3.z, l(0.000303526991)
ge r5.xyz, l(10.314749, 10.314749, 10.314749, 0.000000), r3.xyzx
mul r2.zw, r3.xxxy, l(0.000000, 0.000000, 0.000303526991, 0.000303526991)
mad r3.xyz, r3.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r3.xyz, r3.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r3.xyz, r3.xyzx
movc o3.xy, r5.xyxx, r2.zwzz, r3.xyxx
movc o3.z, r5.z, r0.w, r3.z
sincos r3.xy, r5.xy, r1.zwzz
div r1.zw, r3.xxxy, r5.xxxy
mad r1.zw, r0.yyyy, r1.zzzw, l(0.000000, 0.000000, 0.001000, 0.001000)
mad r0.w, -v3.y, r1.z, r0.x
mad r3.x, v3.x, r1.w, r0.w
mul r5.x, r0.z, l(1.000100)
add r0.w, r0.x, -r3.x
add_sat r1.z, v3.x, v3.y
mul r1.z, r1.z, cb4[13].z
mul r2.zw, v7.yyyx, l(0.000000, 0.000000, 1.000000, -1.000000)
dp2 r6.x, r2.xyxx, r2.zwzz
dp2 r6.y, r2.xyxx, v7.xyxx
mov r3.y, r0.y
mov r3.z, l(1.000000)
mul r2.xy, v7.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r2.z, v6.x
dp3 r2.x, r3.xyzx, r2.xyzx
mov r7.xy, v7.xyxx
mov r7.z, v6.y
dp3 r2.y, r3.xyzx, r7.xyzx
mov r5.y, v6.z
dp2 r2.z, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r3.xyz, r2.xyzx, -cb1[174].xyzx
mul r5.x, r3.x, cb1[58].x
mul r5.y, r3.x, cb1[59].x
mul r5.z, r3.x, cb1[60].x
mul r5.w, r3.x, cb1[61].x
mul r7.x, r3.y, cb1[58].y
mul r7.y, r3.y, cb1[59].y
mul r7.z, r3.y, cb1[60].y
mul r7.w, r3.y, cb1[61].y
mad r8.x, r3.z, cb1[58].z, cb1[58].w
mad r8.y, r3.z, cb1[59].z, cb1[59].w
mad r8.z, r3.z, cb1[60].z, cb1[60].w
mad r8.w, r3.z, cb1[61].z, cb1[61].w
add r7.xyzw, r7.xyzw, r8.xyzw
add o14.xyzw, r5.xyzw, r7.xyzw
mad o9.x, r0.w, r1.z, r1.x
ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r4.yyyy, t1.yxzw
ushr r0.w, r0.y, l(28)
ubfe r1.xz, l(4, 0, 2, 0), l(20, 0, 1, 0), r0.yyyy
and r0.y, v11.x, l(15)
utof r0.yw, r0.yyyw
div r0.y, r0.y, r0.w
frc r5.x, r0.y
ieq r0.y, r1.x, l(3)
ubfe r0.w, l(4), l(4), v11.x
utof r0.w, r0.w
mul r0.w, r0.w, l(0.250000)
frc r0.w, r0.w
and r0.y, r0.w, r0.y
add r4.y, r0.y, -v5.w
mov r4.x, v4.w
mov r5.yw, l(0,1.000000,0,0.500000)
add o10.xy, r4.xyxx, r5.xyxx
mad r6.z, v2.x, l(2.000000), l(-1.000000)
mad r7.xyz, r6.xyzx, l(0.300000, 0.300000, 0.220000, 0.000000), r2.xyzx
mov r7.w, l(1.000000)
dp4 o5.x, r7.xyzw, cb1[29].xyzw
dp4 o5.y, r7.xyzw, cb1[30].xyzw
dp4 o5.z, r7.xyzw, cb1[31].xyzw
lt r7.xyzw, |r6.yzxz|, |r6.xxyy|
and r1.xw, r7.yyyw, r7.xxxz
movc r2.w, r1.w, r2.z, r2.y
movc r1.xw, r1.xxxx, r2.yyyz, r2.xxxw
mul r0.w, cb1[66].x, l(0.062500)
mul o10.zw, r0.wwww, r1.xxxw
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, l(0.020000)
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(4.000000)
add r1.x, |r6.z|, l(0.200000)
min r1.x, r1.x, l(1.000000)
mul o0.w, r0.w, r1.x
mul o11.xy, r2.xyxx, cb1[180].wwww
mul r1.xw, v8.wwwy, l(255.000000, 0.000000, 0.000000, 63.750000)
round_ni r0.w, r1.w
mad r3.xy, v8.xwxx, l(255.000000, 255.000000, 0.000000, 0.000000), r0.wwww
add r0.xw, r0.xxxz, -cb3[5].xxxz
add r4.xyw, -r2.xyxz, r12.xyxz
dp3 r1.w, r4.xywx, r4.xywx
sqrt r2.w, r1.w
rsq r1.w, r1.w
mul r4.xyw, r1.wwww, r4.xyxw
dp3 r1.w, r6.xyzx, r4.xywx
add r2.w, r2.w, l(-115.000000)
mul_sat r2.w, r2.w, l(0.040000)
add r2.w, -r2.w, l(1.000000)
mad r1.w, r1.w, r1.w, l(-1.000000)
mad o3.w, r2.w, r1.w, l(1.000000)
ld_indexable(buffer)(uint,uint,uint,uint) r3.zw, r4.zzzz, t1.xyzw
and r1.w, r3.z, l(255)
utof r1.w, r1.w
mul o6.w, r1.w, l(0.00392156886)
switch r1.z
  case l(0)
  mov r1.z, cb0[2].x
  break 
  case l(1)
  mov r1.z, cb0[2].y
  break 
  case l(2)
  mov r1.z, cb0[2].z
  break 
  case l(3)
  mov r1.z, cb0[2].w
  break 
endswitch 
mov o2.w, r1.z
mad r1.zw, r0.xxxw, cb3[1].xxxy, r3.xxxy
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.001000, 0.001000)
div o11.zw, r1.zzzw, cb4[4].xxxy
mad r0.x, r0.w, cb3[1].y, r1.x
mul r0.x, r0.x, l(0.062500)
round_ni r0.x, r0.x
min r0.x, r0.x, l(6.000000)
mad r0.x, v8.z, l(7.000000), -r0.x
mul_sat o1.w, r0.x, l(4.000000)
dp3 r0.x, v6.xyzx, l(0.005000, 0.005900, 0.003100, 0.000000)
mul r0.x, r0.x, l(13.000000)
frc r0.x, r0.x
mad r5.z, cb0[34].x, l(0.010000), r0.x
sample_l_indexable(texture2d)(float,float,float,float) r4.z, r5.zwzz, t0.yzxw, s0, l(0.000000)
lt r0.w, l(0.700000), r0.x
mad r0.x, r0.x, l(0.100000), r5.z
frc r0.x, r0.x
lt r0.x, l(0.800000), r0.x
movc r4.y, r0.x, l(0), l(1.000000)
mov r4.xw, l(1.000000,0,0,1.000000)
movc r0.xw, r0.wwww, r4.xxxy, r4.zzzw
mov r3.x, cb3[5].z
mov r3.y, cb3[4].z
dp2 r1.x, cb4[12].yzyy, r3.xyxx
add r1.x, r1.x, cb4[12].x
add r0.z, r0.z, -r1.x
mul r0.z, r0.z, cb4[18].y
round_pi r0.z, r0.z
mad r0.z, r0.z, cb4[18].x, r1.x
add r0.z, r0.z, v6.z
add r4.w, r0.z, -r12.z
round_pi r0.z, r0.z
mad r0.z, v8.y, cb4[6].w, r0.z
sincos r0.z, null, r0.z
mul r0.z, r0.z, l(43758.546875)
frc r0.z, r0.z
add r1.x, r0.z, l(-0.500000)
mul r1.x, r1.x, cb4[7].w
mul r1.z, r0.z, cb4[2].z
round_ni r1.z, r1.z
itof r1.w, cb4[18].w
movc o13.x, cb4[21].z, r1.z, r1.w
mul r0.z, r0.z, l(4.000000)
round_ni r0.z, r0.z
mul r0.z, r0.z, l(0.250000)
movc r0.z, cb4[20].w, r0.z, cb4[8].w
mad r0.z, v8.y, cb4[6].w, r0.z
mul r0.z, r0.z, l(6.28318548)
sincos r3.x, r7.x, r0.z
mov r8.x, -r7.x
mov r8.y, r3.x
dp2 r0.z, r2.yxyy, r8.xyxx
mad r3.x, r1.x, l(0.890000), r0.z
mov r8.z, r7.x
dp2 r0.z, r2.yxyy, r8.yzyy
mad r3.y, r1.x, l(1.120000), r0.z
dp2 r0.z, r12.yxyy, r8.xyxx
mad o7.x, r1.x, l(0.890000), r0.z
dp2 r0.z, r12.yxyy, r8.yzyy
mad o7.y, r1.x, l(1.120000), r0.z
dp2 r4.x, -r6.yxyy, r8.xyxx
dp2 r4.y, -r6.yxyy, r8.yzyy
dp2 r0.z, r3.xyxx, r4.xyxx
mov o8.z, -r0.z
mad_sat r0.z, |r4.w|, l(-0.010000), l(1.500000)
add r1.xz, v6.xxyx, -r12.xxyx
dp2 r1.x, r1.xzxx, r1.xzxx
mad_sat r1.x, r1.x, l(-0.000080), l(1.800000)
min o12.x, r0.z, r1.x
mov o4.w, r0.x
mov o4.xyz, r6.xyzx
mov o5.w, r0.w
mov o6.z, r2.z
mov o6.xy, r3.xyxx
mov o7.z, r12.z
mov o7.w, r3.w
mov o8.xyw, r4.xyxw
mov o9.y, r1.y
mov o9.z, r5.x
mov o9.w, r0.y
ret 
// Approximately 320 instruction slots used