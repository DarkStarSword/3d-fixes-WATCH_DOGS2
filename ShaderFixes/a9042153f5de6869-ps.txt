// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a9042153f5de6869-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 08:48:34 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// ShadowRealSampler               sampler_c      NA          NA    1        1
// LongRangeShadowSampler          sampler_c      NA          NA    2        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    2        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    3        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    4        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    5        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    6        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    7        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    8        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2dms(0) (float,float,float,float) t6
dcl_resource_texture2dms(0) (float,float,float,float) t7
dcl_resource_texture2dms(0) (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 26
dcl_indexableTemp x0[3], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r22.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a9042153f5de6869-ps.txt

mul r22.w, r22.x, r22.y
mul r24.x, r22.w, cb1[9].x
mul r24.y, r22.w, cb1[10].x
mul r24.z, r22.w, cb1[11].x
mul r24.w, r22.w, cb1[12].x
dp4 r25.x, r24.xyzw, cb1[17].xyzw
dp4 r25.y, r24.xyzw, cb1[18].xyzw
dp4 r25.z, r24.xyzw, cb1[19].xyzw
add r23.xyz, cb1[174].xyz, r25.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r2.x, r1.xyww, t6.xyzw, l(0)
mov r2.yw, l(0,1.000000,0,0.500000)
dp2 r0.z, r2.xyxx, cb1[11].zwzz
dp2 r0.w, r2.xyxx, cb1[12].zwzz
div r0.z, -r0.z, r0.w
mov r3.z, -r0.z
mul r3.xy, r0.xyxx, r3.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a9042153f5de6869-ps.txt

add r22.w, -r3.z, -r22.y
mul r22.w, r22.w, r22.x
mad r3.x, -r22.w, cb1[9].x, r3.x

mov r3.w, l(1.000000)
dp4 r0.x, r3.xyzw, cb1[17].xyzw
dp4 r0.y, r3.xyzw, cb1[18].xyzw
dp4 r0.z, r3.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r1.xyww, t5.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r4.xyzw, r1.xyww, t7.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r5.xyzw, r1.xyww, t8.xyzw, l(0)
mad r0.w, r5.w, l(255.000000), l(0.500000)
round_ni r0.w, r0.w
ftou r0.w, r0.w
ushr r0.w, r0.w, l(5)
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r6.xyz, r2.xxxx, r4.xyzx
ieq r7.xyz, r0.wwww, l(1, 4, 0, 0)
ge r2.x, r3.w, l(0.750000)
add r2.y, r3.w, l(-0.750000)
mad r2.y, r2.y, l(-0.599999905), l(1.000000)
movc r2.x, r2.x, r2.y, l(1.000000)
movc r2.x, r7.y, r2.x, r3.w
movc r2.x, r7.x, l(1.000000), r2.x
add r8.xyz, -r0.xyzx, r23.xyzx
dp3 r2.y, r8.xyzx, r8.xyzx
rsq r2.y, r2.y
mul r9.xyz, r2.yyyy, r8.xyzx
mul r10.yzw, r2.xxxx, r3.xxyz
if_nz r7.x
  mad r2.x, r4.w, l(0.500000), l(0.500000)
  mad r2.x, r2.x, l(65535.000000), l(0.500000)
  ftou r2.x, r2.x
  and r3.xy, r2.xxxx, l(255, 0x0000ff00, 0, 0)
  utof r3.xy, r3.xyxx
  mul r11.xz, r3.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.x, r3.w, l(255.000000)
  ftou r2.x, r2.x
  and r3.xy, r2.xxxx, l(15, 240, 0, 0)
  utof r3.xy, r3.xyxx
  mul r11.yw, r3.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r12.w, l(0)
  mov r3.x, r5.z
  mov r10.x, r10.y
else 
  mul r2.x, r5.y, r5.y
  max r5.y, r2.x, l(0.001000)
  ieq r2.x, r0.w, l(2)
  if_nz r2.x
    mad r2.x, r4.w, l(0.500000), l(0.500000)
    mad r2.x, r2.x, l(65535.000000), l(0.500000)
    ftou r2.x, r2.x
    and r13.xy, r2.xxxx, l(255, 0x0000ff00, 0, 0)
    utof r13.xy, r13.xyxx
    mov r13.z, r5.x
    mad r13.xyz, r13.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.x, -r3.w, l(1.000000)
    mul r2.x, r2.x, r10.y
    mad r10.x, r2.x, l(0.500000), r10.y
    dp3 r2.x, r13.xyzx, r13.xyzx
    rsq r2.x, r2.x
    mul r11.xzw, r2.xxxx, r13.xxyz
    mov r11.y, l(0)
    mov r12.w, l(0)
    mov r5.x, l(0.500000)
    mov r3.x, r5.z
  else 
    ieq r2.x, r0.w, l(3)
    if_nz r2.x
      mad r2.x, r4.w, l(0.500000), l(0.500000)
      mad r2.x, r2.x, l(65535.000000), l(0.500000)
      ftou r2.x, r2.x
      and r13.xyzw, r2.xxxx, l(0x0000f800, 2016, 31, 31)
      utof r13.xyzw, r13.xyzw
      ge r14.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r13.wyxw
      mul r2.x, r13.w, l(0.00249675405)
      mad r15.xyz, r13.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r15.xyz, r15.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r15.xyz, r15.xyzx
      movc r11.x, r14.x, r2.x, r15.x
      mul r13.xy, r13.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r11.zw, r14.yyyz, r13.xxxy, r15.yyyz
      mov r11.y, l(0)
      mov r12.w, l(0)
      mov r3.x, r5.z
    else 
      if_nz r7.y
        mad r2.x, r4.w, l(32767.000000), l(32767.000000)
        ftou r2.x, r2.x
        and r3.z, r2.x, l(255)
        utof r3.z, r3.z
        mul r3.z, r3.z, l(0.0123199718)
        ubfe r2.x, l(8), l(8), r2.x
        utof r2.x, r2.x
        mad r2.x, r2.x, l(0.0246399436), l(-3.14159274)
        sincos r13.x, r14.x, r3.z
        sincos r2.x, r15.x, r2.x
        mul r15.x, r13.x, r15.x
        mul r15.y, r2.x, r13.x
        mov r15.z, r14.x
        dp3 r2.x, r15.xyzx, r15.xyzx
        rsq r2.x, r2.x
        mul r11.xzw, r2.xxxx, r15.xxyz
        mul_sat r12.w, r3.w, l(0.250000)
        mov r11.y, l(0)
        mov r3.x, r5.z
      else 
        ieq r2.x, r0.w, l(5)
        lt r3.z, r4.z, l(0.900000)
        movc r13.xyz, r3.zzzz, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r14.xyz, r4.zxyz, r13.xyzx
        mad r13.xyz, r4.yzxy, r13.yzxy, -r14.xyzx
        dp3 r3.z, r13.xyzx, r13.xyzx
        rsq r3.z, r3.z
        mul r13.xyz, r3.zzzz, r13.xyzx
        mul r14.xyz, r4.zxyz, r13.yzxy
        mad r4.xyz, r4.yzxy, r13.zxyz, -r14.xyzx
        dp3 r3.z, r4.xyzx, r4.xyzx
        rsq r3.z, r3.z
        mul r4.xyz, r3.zzzz, r4.xyzx
        mad r3.z, r4.w, l(2.000000), l(-1.000000)
        mul r3.z, r3.z, l(3.14159274)
        sincos r14.x, r15.x, r3.z
        mul r13.xyz, r13.xyzx, r14.xxxx
        mad r13.xyz, r4.xyzx, r15.xxxx, r13.xyzx
        mad r3.z, r4.w, l(0.500000), l(0.500000)
        mad r3.z, r3.z, l(65535.000000), l(0.500000)
        ftou r3.z, r3.z
        and r3.z, r3.z, l(255)
        utof r3.z, r3.z
        mul r3.z, r3.z, l(0.00392156886)
        movc r4.x, r0.w, l(0), r3.z
        mov r13.w, r5.z
        mov r4.yzw, l(0,0,0,0)
        movc r11.xyzw, r2.xxxx, r13.xwyz, r4.xwyz
        mov r13.x, r3.w
        mov r13.yz, l(0,0,0,0)
        movc r3.xy, r2.xxxx, r13.yxyy, r13.wzww
        mov r12.w, r3.y
      endif 
    endif 
    mov r10.x, r10.y
  endif 
endif 
ldms_indexable(texture2dms)(float,float,float,float) r3.yzw, r1.xyzw, t2.wxyz, l(0)
div r4.xyz, r3.yzwy, cb1[176].wwww
mov r1.zw, l(0,0,0,0)
mov r13.z, l(0)
mov r2.x, l(0)
mov r3.yz, l(0,2,0,0)
loop 
  uge r3.w, r3.z, l(3)
  breakc_nz r3.w
  ishl r3.w, r3.z, l(2)
  mul r14.xyz, r0.yyyy, cb3[r3.w + 1].xyzx
  mad r14.xyz, cb3[r3.w + 0].xyzx, r0.xxxx, r14.xyzx
  mad r14.xyz, cb3[r3.w + 2].xyzx, r0.zzzz, r14.xyzx
  add r14.xyz, r14.xyzx, cb3[r3.w + 3].xyzx
  max r3.w, |r14.y|, |r14.x|
  add r3.w, r3.w, cb3[16].x
  ult r5.z, r3.z, l(2)
  if_nz r5.z
    lt r5.z, r3.w, l(1.000000)
    if_nz r5.z
      mov r1.zw, r14.xxxy
      mov r13.z, r14.z
      mov r2.x, r3.w
      mov r3.y, r3.z
      break 
    endif 
  endif 
  iadd r3.z, r3.z, l(1)
  mov r1.zw, r14.xxxy
  mov r13.z, r14.z
  mov r2.x, r3.w
  mov r3.y, l(2)
endloop 
mov x0[0].z, l(0.166666672)
mov x0[1].z, l(0.500000)
mov x0[2].z, l(0.833333313)
mov r2.z, x0[r3.y + 0].z
mad r13.xy, r1.zwzz, l(0.166666672, -0.500000, 0.000000, 0.000000), r2.zwzz
dp3 r1.z, cb3[17].xyzx, icb[r3.y + 0].xyzx
ieq r1.w, r3.y, l(2)
mad_sat r2.x, r2.x, cb3[16].z, cb3[16].w
and r1.w, r1.w, r2.x
and r14.xy, r1.xyxx, l(63, 63, 0, 0)
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xy, r14.xyzw, t1.xyzw
mad r1.xy, r1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xz, r1.xxxx, l(-0.0620006211, 0.000000, 0.194514, 0.000000)
mad r14.xy, r1.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r2.xzxx
dp2 r14.z, r1.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r2.xz, r1.zzzz, cb3[38].zzwz
mul r15.xy, r2.xzxx, r14.xzxx
mov r15.z, l(0)
add r3.yzw, r13.xxyz, r15.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.z, r3.yzyy, t3.xxxx, s1, r3.w
dp2 r14.w, r1.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r14.xy, r2.xzxx, r14.ywyy
mov r14.z, l(0)
add r3.yzw, r13.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r3.yzyy, t3.xxxx, s1, r3.w
add r1.z, r1.z, r2.w
mul r3.yz, r1.xxxx, l(0.000000, -0.602610528, 0.987966299, 0.000000)
mad r14.xy, r1.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r3.yzyy
dp2 r14.z, r1.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r15.xy, r2.xzxx, r14.xzxx
mov r15.z, l(0)
add r3.yzw, r13.xxyz, r15.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r3.yzyy, t3.xxxx, s1, r3.w
add r1.z, r1.z, r2.w
dp2 r14.w, r1.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r14.xy, r2.xzxx, r14.ywyy
mov r14.z, l(0)
add r2.xzw, r13.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r2.xzxx, t3.xxxx, s1, r2.w
add r1.x, r1.x, r1.z
mul r1.y, r1.x, l(0.250000)
mad r2.xz, r6.xxyx, cb4[0].xxyx, r0.xxyx
mad r1.z, r0.z, cb4[0].z, cb4[0].w
mad r2.xz, r2.xxzx, cb4[1].xxyx, cb4[1].zzwz
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xzxx, t4.xxxx, s2, r1.z
mad r1.x, -r1.x, l(0.250000), r1.z
mad r1.x, r1.w, r1.x, r1.y
dp3 r0.x, r0.xyzx, cb0[1].xyzx
add_sat r0.x, r0.x, cb0[1].w
mul r0.x, r0.x, r1.x
mad r0.x, r0.x, cb3[37].x, cb3[37].y
lt r0.y, l(0.000000), r0.x
lt r0.z, l(0.000000), r11.x
and r0.z, r0.z, r7.z
or r0.y, r0.z, r0.y
if_nz r0.y
  dp3 r1.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r0.y, r6.xyzx, cb2[2].xyzx
  mov_sat r0.z, r0.y
  ieq r2.x, r0.w, l(2)
  dp3 r2.z, r11.xzwx, r11.xzwx
  rsq r2.z, r2.z
  mul r3.yzw, r2.zzzz, r11.xxzw
  dp3 r2.z, r3.yzwy, cb2[2].xyzx
  add r2.z, r2.z, l(1.000000)
  mul_sat r2.z, r2.z, l(0.500000)
  mul r2.w, r2.z, r2.z
  mul r2.z, r2.w, r2.z
  movc r3.yzw, r2.xxxx, r11.xxzw, r6.xxyz
  movc r2.z, r2.x, r2.z, r0.z
  if_nz r7.x
    mov_sat r13.xyzw, r11.xyzw
    mov_sat r2.w, r3.x
    log r14.xyz, r10.xzwx
    mul r15.xyz, r13.yyyy, r14.xyzx
    mul r15.xyz, r15.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r14.xyz, r14.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r15.xyzx
    eq r5.z, r13.x, l(0.000000)
    add r5.w, -r2.w, l(1.000000)
    mul r15.xyz, r5.wwww, r10.xzwx
    mul r15.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r16.xyz, -r13.xxxx, r14.xyzx
    exp r16.xyz, r16.xyzx
    mul r16.xyz, r15.xyzx, r16.xyzx
    mul r16.xyz, r16.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r15.xyz, r5.zzzz, r15.xyzx, r16.xyzx
    mov r15.w, l(0.180000)
    mul r5.w, r13.w, l(0.080000)
    mad r6.w, r13.x, l(48.750000), l(1.250000)
    mov_sat r7.z, r5.y
    mul r7.z, r7.z, r7.z
    mul r7.w, r13.z, r13.z
    max r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.001000, 0.001000)
    lt r8.w, l(0.000000), r0.y
    lt r9.w, r0.y, l(0.000000)
    iadd r8.w, -r8.w, r9.w
    itof r8.w, r8.w
    mad r9.w, r0.y, r0.y, l(-1.000000)
    mad r9.w, r9.w, l(0.666860044), l(1.000000)
    sqrt r9.w, r9.w
    mul r8.w, r8.w, r9.w
    mad r0.y, r0.y, l(0.666860044), -r8.w
    mul r13.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r13.xyz, r0.yyyy, r6.xyzx, -r13.xyzx
    add r16.xyz, -r13.xyzx, -cb2[2].xyzx
    mad r13.xyz, r7.zzzz, r16.xyzx, r13.xyzx
    dp3 r0.y, r13.xyzx, r13.xyzx
    rsq r0.y, r0.y
    mul r16.xyz, r0.yyyy, r13.xyzx
    dp3 r8.w, r9.xyzx, r6.xyzx
    lt r9.w, l(0.000000), r8.w
    lt r10.y, r8.w, l(0.000000)
    iadd r9.w, -r9.w, r10.y
    itof r9.w, r9.w
    mad r10.y, r8.w, r8.w, l(-1.000000)
    mad r10.y, r10.y, l(0.666860044), l(1.000000)
    sqrt r10.y, r10.y
    mul r9.w, r9.w, r10.y
    mad r9.w, r8.w, l(0.666860044), -r9.w
    mul r17.xyz, r9.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r17.xyz, r9.wwww, r6.xyzx, -r17.xyzx
    mad r18.xyz, -r8.xyzx, r2.yyyy, -r17.xyzx
    mad r17.xyz, r7.zzzz, r18.xyzx, r17.xyzx
    dp3 r9.w, r17.xyzx, r17.xyzx
    rsq r9.w, r9.w
    mul r17.xyz, r9.wwww, r17.xyzx
    dp3 r9.w, r6.xyzx, r16.xyzx
    mad r9.w, -|r9.w|, |r9.w|, l(1.000000)
    mad r9.w, -r9.w, l(0.444702327), l(1.000000)
    add r6.w, r6.w, r6.w
    sqrt r9.w, r9.w
    div r6.w, r6.w, r9.w
    mov_sat r8.w, r8.w
    mad r18.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
    dp3 r9.w, r18.xyzx, r18.xyzx
    rsq r9.w, r9.w
    mul r18.xyz, r9.wwww, r18.xyzx
    dp3_sat r9.w, r6.xyzx, r18.xyzx
    mul r10.y, r7.z, r7.z
    mul r9.w, r9.w, r9.w
    mad r14.w, r7.z, r7.z, l(-1.000000)
    mad r9.w, r9.w, r14.w, l(1.000000)
    mul r9.w, r9.w, r9.w
    mul r9.w, r9.w, l(3.14159274)
    div r9.w, r10.y, r9.w
    mad r7.z, r7.z, l(0.500000), l(0.500000)
    mul r10.y, r0.z, r0.z
    mul r7.z, r7.z, r7.z
    mad r14.w, -r0.z, r0.z, l(1.000000)
    mul r14.w, r7.z, r14.w
    max r10.y, r10.y, l(1.000000047E-034)
    div r10.y, r14.w, r10.y
    add r10.y, r10.y, l(1.000000)
    sqrt r10.y, r10.y
    add r10.y, r10.y, l(1.000000)
    div r10.y, l(2.000000), r10.y
    mul r14.w, r8.w, r8.w
    mad r8.w, -r8.w, r8.w, l(1.000000)
    mul r7.z, r7.z, r8.w
    max r8.w, r14.w, l(1.000000047E-034)
    div r7.z, r7.z, r8.w
    add r7.z, r7.z, l(1.000000)
    sqrt r7.z, r7.z
    add r7.z, r7.z, l(1.000000)
    div r7.z, l(2.000000), r7.z
    mul r7.z, r7.z, r10.y
    mad r18.xyz, r0.zzzz, r0.zzzz, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r18.xyz, r18.xyzx
    add r19.xyz, -r0.zzzz, r18.zyzz
    add r18.xyz, r0.zzzz, r18.xyzx
    mul r20.xyz, r19.zyzz, r19.zyzz
    mul r21.xyz, r18.zyzz, r18.zyzz
    add r21.xyz, r21.xyzx, r21.xyzx
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r18.xyz, r0.zzzz, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r19.xyz, r0.zzzz, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r18.xyz, r18.xyzx, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r18.xyz, r18.xyzx, r20.xyzx
    mul r7.z, r7.z, r9.w
    mul r18.xyz, r18.xyzx, r7.zzzz
    mad r19.xyz, -r13.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
    mad r19.xyz, r2.wwww, r19.xyzx, r5.wwww
    dp3_sat r2.w, r6.xyzx, -r17.xyzx
    mad r13.xyz, -r13.xyzx, r0.yyyy, -r17.xyzx
    dp3 r0.y, r13.xyzx, r13.xyzx
    rsq r0.y, r0.y
    mul r13.xyz, r0.yyyy, r13.xyzx
    dp3 r0.y, r13.xyzx, -r16.xyzx
    dp3_sat r5.w, r6.xyzx, -r16.xyzx
    dp3_sat r7.z, r6.xyzx, r13.xyzx
    mul r8.w, r7.w, r7.w
    mul r7.z, r7.z, r7.z
    mad r9.w, r7.w, r7.w, l(-1.000000)
    mad r7.z, r7.z, r9.w, l(1.000000)
    mul r7.z, r7.z, r7.z
    mul r7.z, r7.z, l(3.14159274)
    div r7.z, r8.w, r7.z
    mad r7.w, r7.w, l(0.500000), l(0.500000)
    mul r8.w, r5.w, r5.w
    mul r7.w, r7.w, r7.w
    mad r5.w, -r5.w, r5.w, l(1.000000)
    mul r5.w, r5.w, r7.w
    max r8.w, r8.w, l(1.000000047E-034)
    div r5.w, r5.w, r8.w
    add r5.w, r5.w, l(1.000000)
    sqrt r5.w, r5.w
    add r5.w, r5.w, l(1.000000)
    div r5.w, l(2.000000), r5.w
    mul r8.w, r2.w, r2.w
    mad r2.w, -r2.w, r2.w, l(1.000000)
    mul r2.w, r2.w, r7.w
    max r7.w, r8.w, l(1.000000047E-034)
    div r2.w, r2.w, r7.w
    add r2.w, r2.w, l(1.000000)
    sqrt r2.w, r2.w
    add r2.w, r2.w, l(1.000000)
    div r2.w, l(2.000000), r2.w
    mul r2.w, r2.w, r5.w
    dp3 r5.w, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r5.w, r5.w, l(50.000000)
    add r0.y, -r0.y, l(1.000000)
    mul r7.w, r0.y, r0.y
    mul r7.w, r7.w, r7.w
    add r13.xyz, -r19.xyzx, r5.wwww
    mul r13.xyz, r7.wwww, r13.xyzx
    mad r13.xyz, r13.xyzx, r0.yyyy, r19.xyzx
    mul r0.y, r2.w, r7.z
    mul r13.xyz, r13.xyzx, r0.yyyy
    mul r14.xyz, r6.wwww, -r14.xyzx
    exp r14.xyz, r14.xyzx
    mad r14.xyz, r13.xyzx, r14.xyzx, r18.xyzx
    movc r13.xyz, r5.zzzz, r13.xyzx, r14.xyzx
    dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r14.xyzw, l(0,0,0,0)
  else 
    if_nz r2.x
      mul r16.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r16.w, l(0.0572957806)
      add r0.y, -r3.x, l(1.000000)
      mul r15.xyzw, r0.yyyy, r16.xyzw
    else 
      ieq r0.y, r0.w, l(3)
      if_nz r0.y
        mad r16.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
        dp3 r0.y, r16.xyzx, r16.xyzx
        rsq r0.y, r0.y
        mul r16.xyz, r0.yyyy, r16.xyzx
        dp3_sat r0.y, r16.xyzx, r9.xyzx
        mul r2.w, r5.x, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r5.z, r0.y, r0.y
        mul r5.z, r5.z, r5.z
        mad r5.w, -r5.x, l(0.080000), l(1.000000)
        mul r5.z, r5.z, r5.w
        mad r0.y, r5.z, r0.y, r2.w
        add_sat r2.w, r5.y, r5.y
        mad r16.w, r2.w, -r0.y, l(1.000000)
        mul r16.xyz, r10.xzwx, r16.wwww
        mul r15.xyzw, r16.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r7.y
          add r16.xyz, -r11.xzwx, r3.yzwy
          mad r17.xyz, r16.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r11.xzwx
          dp3 r0.y, r17.xyzx, r17.xyzx
          rsq r0.y, r0.y
          mul r17.xyz, r0.yyyy, r17.xyzx
          mad r16.xyz, r16.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r11.xzwx
          dp3 r0.y, r16.xyzx, r16.xyzx
          rsq r0.y, r0.y
          mul r16.xyz, r0.yyyy, r16.xyzx
          dp3 r0.y, r11.xzwx, cb2[2].xyzx
          dp3 r2.w, r17.xyzx, cb2[2].xyzx
          dp3 r5.z, r16.xyzx, cb2[2].xyzx
          mad r12.z, r0.y, l(0.500000), l(0.500000)
          mad r7.zw, r12.zzzw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.x, r7.zwzz, t0.xyzw, s0, l(0.000000)
          mad r12.y, r2.w, l(0.500000), l(0.500000)
          mad r7.zw, r12.yyyw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.y, r7.zwzz, t0.xyzw, s0, l(0.000000)
          mad r12.x, r5.z, l(0.500000), l(0.500000)
          mad r5.zw, r12.xxxw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.z, r5.zwzz, t0.xyzw, s0, l(0.000000)
          mul r16.xyz, r10.xzwx, r16.xyzx
          mov r16.w, l(0.0572957806)
          mul r15.xyzw, r16.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r0.y, r0.w, l(5)
          dp3 r2.w, r11.xzwx, cb2[2].xyzx
          mad r2.w, -r2.w, r2.w, l(1.000000)
          sqrt r2.w, r2.w
          mul r16.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r16.w, l(0.0572957806)
          add r5.z, -r3.x, l(1.000000)
          mul r16.xyzw, r5.zzzz, r16.xyzw
          mul r17.xyzw, r2.wwww, r16.xyzw
          mul r17.xyzw, r17.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r2.w, -r11.y, l(1.000000)
          mul r17.xyzw, r2.wwww, r17.xyzw
          movc r15.xyzw, r0.yyyy, r17.xyzw, r16.xyzw
        endif 
      endif 
    endif 
    if_nz r2.x
      mul r0.y, r5.x, l(0.080000)
      mad r12.xyz, -r5.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
      mad r12.xyz, r3.xxxx, r12.xyzx, r0.yyyy
      dp3_sat r0.y, r6.xyzx, r9.xyzx
      mad r16.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
      dp3 r2.w, r16.xyzx, r16.xyzx
      rsq r2.w, r2.w
      mul r16.xyz, r2.wwww, r16.xyzx
      dp3 r2.w, r16.xyzx, cb2[2].xyzx
      dp3_sat r5.z, r6.xyzx, r16.xyzx
      mul r5.w, r5.y, r5.y
      mul r5.z, r5.z, r5.z
      mad r6.w, r5.y, r5.y, l(-1.000000)
      mad r5.z, r5.z, r6.w, l(1.000000)
      mul r5.z, r5.z, r5.z
      mul r5.z, r5.z, l(3.14159274)
      div r5.z, r5.w, r5.z
      mad r5.w, r5.y, l(0.500000), l(0.500000)
      mul r6.w, r0.z, r0.z
      mul r5.w, r5.w, r5.w
      mad r7.z, -r0.z, r0.z, l(1.000000)
      mul r7.z, r5.w, r7.z
      max r6.w, r6.w, l(1.000000047E-034)
      div r6.w, r7.z, r6.w
      add r6.w, r6.w, l(1.000000)
      sqrt r6.w, r6.w
      add r6.w, r6.w, l(1.000000)
      div r6.w, l(2.000000), r6.w
      mul r7.z, r0.y, r0.y
      mad r0.y, -r0.y, r0.y, l(1.000000)
      mul r0.y, r0.y, r5.w
      max r5.w, r7.z, l(1.000000047E-034)
      div r0.y, r0.y, r5.w
      add r0.y, r0.y, l(1.000000)
      sqrt r0.y, r0.y
      add r0.y, r0.y, l(1.000000)
      div r0.y, l(2.000000), r0.y
      mul r0.y, r0.y, r6.w
      dp3 r5.w, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r5.w, r5.w, l(50.000000)
      add r2.w, -r2.w, l(1.000000)
      mul r6.w, r2.w, r2.w
      mul r6.w, r6.w, r6.w
      add r16.xyz, -r12.xyzx, r5.wwww
      mul r16.xyz, r6.wwww, r16.xyzx
      mad r12.xyz, r16.xyzx, r2.wwww, r12.xyzx
      mul r0.y, r0.y, r5.z
      mul r13.xyz, r12.xyzx, r0.yyyy
      dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r0.y, r0.w, l(3)
      if_nz r0.y
        mad r12.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
        dp3 r0.y, r12.xyzx, r12.xyzx
        rsq r0.y, r0.y
        mul r12.xyz, r0.yyyy, r12.xyzx
        dp3_sat r0.y, r12.xyzx, r9.xyzx
        mul r2.w, r5.x, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r5.z, r0.y, r0.y
        mul r5.z, r5.z, r5.z
        mad r5.w, -r5.x, l(0.080000), l(1.000000)
        mul r5.z, r5.z, r5.w
        mad r0.y, r5.z, r0.y, r2.w
        dp3_sat r2.w, r6.xyzx, r12.xyzx
        mul r5.z, r2.w, r2.w
        mad r7.zw, -r2.wwww, r2.wwww, l(0.000000, 0.000000, 1.000001, 1.000000)
        div r5.z, r5.z, r7.z
        mul r5.w, r7.w, r7.w
        mul r6.w, r5.y, r5.y
        mad r7.zw, r5.yyyy, r5.yyyy, l(0.000000, 0.000000, 0.000001, 0.000002)
        mad r7.z, r7.z, l(4.000000), l(1.000000)
        mul r7.z, r7.z, l(3.14159274)
        div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
        div r5.z, -r5.z, r7.w
        mul r5.z, r5.z, l(1.442695)
        exp r5.z, r5.z
        mul r5.z, r5.z, l(4.000000)
        div r5.z, r5.z, r5.w
        add r5.z, r5.z, l(1.000000)
        mul r5.z, r5.z, r7.z
        dp3_sat r5.w, r6.xyzx, r9.xyzx
        add r7.z, r0.z, r5.w
        mad r5.w, -r0.z, r5.w, r7.z
        mul r5.w, r5.w, l(4.000000)
        div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
        mov_sat r5.w, r5.w
        div r6.w, l(2.000000), r6.w
        add r6.w, r6.w, l(-2.000000)
        max r6.w, r6.w, l(1.000000031E-022)
        log r2.w, r2.w
        mul r2.w, r2.w, r6.w
        exp r2.w, r2.w
        add r6.w, r6.w, l(8.000000)
        mul r2.w, r2.w, r6.w
        mul r2.w, r2.w, l(0.0397887342)
        min r2.w, r2.w, l(1.000000)
        add_sat r6.w, r5.y, r5.y
        mad r5.z, r5.z, r5.w, -r2.w
        mad r2.w, r6.w, r5.z, r2.w
        mul r16.xyz, r0.yyyy, r2.wwww
        dp3 r16.w, r16.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r17.xyz, r11.xzwx
        mov r17.w, l(1.000000)
        mul r13.xyzw, r16.xyzw, r17.xyzw
      else 
        if_nz r7.y
          mul r5.zw, r5.xxxy, l(0.000000, 0.000000, 0.080000, 0.400000)
          mad r12.xyz, -r5.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r12.xyz, r3.xxxx, r12.xyzx, r5.zzzz
          dp3_sat r0.y, r6.xyzx, r9.xyzx
          mad r16.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
          dp3 r2.w, r16.xyzx, r16.xyzx
          rsq r2.w, r2.w
          mul r16.xyz, r2.wwww, r16.xyzx
          dp3 r2.w, r16.xyzx, cb2[2].xyzx
          dp3_sat r5.z, r6.xyzx, r16.xyzx
          mul r6.w, r5.y, r5.y
          mul r5.z, r5.z, r5.z
          mad r7.z, r5.y, r5.y, l(-1.000000)
          mad r7.z, r5.z, r7.z, l(1.000000)
          mul r7.z, r7.z, r7.z
          mul r7.z, r7.z, l(3.14159274)
          div r6.w, r6.w, r7.z
          mad r7.zw, r5.yyyy, l(0.000000, 0.000000, 0.500000, 0.200000), l(0.000000, 0.000000, 0.500000, 0.500000)
          mul r8.w, r0.z, r0.z
          mul r7.zw, r7.zzzw, r7.zzzw
          mad r9.w, -r0.z, r0.z, l(1.000000)
          mul r16.xy, r7.zwzz, r9.wwww
          max r8.w, r8.w, l(1.000000047E-034)
          div r16.xy, r16.xyxx, r8.wwww
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r16.xy, r16.xyxx
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r16.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r16.xyxx
          mul r8.w, r0.y, r0.y
          mad r0.y, -r0.y, r0.y, l(1.000000)
          mul r7.zw, r0.yyyy, r7.zzzw
          max r0.y, r8.w, l(1.000000047E-034)
          div r7.zw, r7.zzzw, r0.yyyy
          add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          sqrt r7.zw, r7.zzzw
          add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          div r7.zw, l(0.000000, 0.000000, 2.000000, 2.000000), r7.zzzw
          mul r7.zw, r7.zzzw, r16.xxxy
          dp3 r0.y, r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r0.y, r0.y, l(50.000000)
          add r2.w, -r2.w, l(1.000000)
          mul r8.w, r2.w, r2.w
          mul r8.w, r8.w, r8.w
          add r16.xyz, -r12.xyzx, r0.yyyy
          mul r16.xyz, r8.wwww, r16.xyzx
          mad r12.xyz, r16.xyzx, r2.wwww, r12.xyzx
          mul r0.y, r6.w, r7.z
          mul r16.xyz, r12.xyzx, r0.yyyy
          dp3 r16.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r0.y, r5.w, r5.w
          mad r2.w, r5.w, r5.w, l(-1.000000)
          mad r2.w, r5.z, r2.w, l(1.000000)
          mul r2.w, r2.w, r2.w
          mul r2.w, r2.w, l(3.14159274)
          div r0.y, r0.y, r2.w
          mul r0.y, r7.w, r0.y
          mul r17.xyz, r12.xyzx, r0.yyyy
          dp3 r17.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r17.xyzw, r17.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r13.xyzw, r16.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r17.xyzw
        else 
          ieq r0.y, r0.w, l(5)
          dp3_sat r2.w, r10.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r2.w, r2.w, l(1.66666663), l(1.33333337)
          mul r12.xyz, r5.yyyy, r11.xzwx
          mad r12.xyz, r12.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r6.xyzx
          div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
          dp3 r5.z, -cb2[2].xyzx, r12.xyzx
          mul r5.w, r2.w, r2.w
          mad r6.w, -r5.z, r5.z, l(1.000000)
          mad r6.w, -r5.w, r6.w, l(1.000000)
          sqrt r7.z, r6.w
          mad r5.z, r2.w, r5.z, -r7.z
          mul r16.xyz, r12.xyzx, r5.zzzz
          mad r16.xyz, r2.wwww, cb2[2].xyzx, r16.xyzx
          lt r5.z, l(0.000000), r6.w
          and r5.z, r5.z, l(0x3f800000)
          mul r17.xyz, r5.zzzz, r16.xyzx
          dp3 r6.w, -r9.xyzx, r12.xyzx
          mad r7.z, -r6.w, r6.w, l(1.000000)
          mad r5.w, -r5.w, r7.z, l(1.000000)
          sqrt r7.z, r5.w
          mad r6.w, r2.w, r6.w, -r7.z
          mul r12.xyz, r12.xyzx, r6.wwww
          mad r12.xyz, r2.wwww, r9.xyzx, r12.xyzx
          lt r2.w, l(0.000000), r5.w
          and r2.w, r2.w, l(0x3f800000)
          mul r12.xyz, r2.wwww, r12.xyzx
          mad r8.xyz, r8.xyzx, r2.yyyy, cb2[2].xyzx
          dp3 r2.y, r8.xyzx, r8.xyzx
          rsq r2.y, r2.y
          mul r8.xyz, r2.yyyy, r8.xyzx
          dp3_sat r2.y, r6.xyzx, r9.xyzx
          dp3_sat r2.w, r6.xyzx, r8.xyzx
          dp3 r5.w, r8.xyzx, cb2[2].xyzx
          mov_sat r6.w, r5.w
          dp3 r7.z, r8.xyzx, r11.xzwx
          mul r18.xyz, r6.yzxy, r11.wxzw
          mad r18.xyz, r11.zwxz, r6.zxyz, -r18.xyzx
          dp3 r7.w, r18.xyzx, r18.xyzx
          rsq r7.w, r7.w
          mul r18.xyz, r7.wwww, r18.xyzx
          dp3 r7.w, r8.xyzx, r18.xyzx
          mul r8.xy, r5.xyxx, l(0.080000, 3.14159274, 0.000000, 0.000000)
          mad r19.xyz, -r5.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r10.xzwx
          mad r8.xzw, r3.xxxx, r19.xxyz, r8.xxxx
          dp3 r9.w, r8.xzwx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r9.w, r9.w, l(50.000000)
          add r6.w, -r6.w, l(1.000000)
          mul r10.y, r6.w, r6.w
          mul r10.y, r10.y, r10.y
          add r19.xyz, -r8.xzwx, r9.wwww
          mul r20.xyz, r10.yyyy, r19.xyzx
          mad r20.xyz, r20.xyzx, r6.wwww, r8.xzwx
          mul r6.w, r5.y, r5.y
          mul r9.w, r2.w, r2.w
          mul r7.z, r7.z, r7.z
          div r7.z, r7.z, r6.w
          mad r7.z, r7.w, r7.w, r7.z
          mad r2.w, r2.w, r2.w, r7.z
          mul r2.w, r2.w, r2.w
          mul r2.w, r8.y, r2.w
          div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
          mul r7.z, r0.z, r0.z
          mad r7.w, -r0.z, r0.z, l(1.000000)
          mul r10.y, r6.w, r7.w
          max r7.z, r7.z, l(1.000000047E-034)
          div r10.y, r10.y, r7.z
          add r10.y, r10.y, l(1.000000)
          sqrt r10.y, r10.y
          add r10.y, r10.y, l(1.000000)
          div r10.y, l(2.000000), r10.y
          mul r16.w, r2.y, r2.y
          mad r2.y, -r2.y, r2.y, l(1.000000)
          mul r17.w, r2.y, r6.w
          max r16.w, r16.w, l(1.000000047E-034)
          div r17.w, r17.w, r16.w
          add r17.w, r17.w, l(1.000000)
          sqrt r17.w, r17.w
          add r17.w, r17.w, l(1.000000)
          div r17.w, l(2.000000), r17.w
          mul r10.y, r10.y, r17.w
          mul r2.w, r2.w, r10.y
          mul_sat r20.xyz, r20.xyzx, r2.wwww
          mul r20.xyz, r12.wwww, r20.xyzx
          mul r21.xyz, r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r16.xyz, -r16.xyzx, r5.zzzz, -r12.xyzx
          dp3 r2.w, r16.xyzx, r16.xyzx
          rsq r2.w, r2.w
          mul r16.xyz, r2.wwww, r16.xyzx
          dp3_sat r2.w, r6.xyzx, -r17.xyzx
          dp3_sat r5.z, r6.xyzx, -r12.xyzx
          dp3_sat r10.y, r6.xyzx, r16.xyzx
          dp3_sat r12.x, r16.xyzx, -r17.xyzx
          dp3 r12.y, r16.xyzx, r11.xzwx
          dp3 r12.z, r16.xyzx, r18.xyzx
          add r12.x, -r12.x, l(1.000000)
          mul r12.w, r12.x, r12.x
          mul r12.w, r12.w, r12.w
          mul r16.xyz, r12.wwww, r19.xyzx
          mad r16.xyz, r16.xyzx, r12.xxxx, r8.xzwx
          mul r12.x, r12.y, r12.y
          div r12.x, r12.x, r6.w
          mad r12.x, r12.z, r12.z, r12.x
          mad r10.y, r10.y, r10.y, r12.x
          mul r10.y, r10.y, r10.y
          mul r8.y, r8.y, r10.y
          div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.y
          mul r10.y, r2.w, r2.w
          mad r2.w, -r2.w, r2.w, l(1.000000)
          mul r2.w, r2.w, r6.w
          max r10.y, r10.y, l(1.000000047E-034)
          div r2.w, r2.w, r10.y
          add r2.w, r2.w, l(1.000000)
          sqrt r2.w, r2.w
          add r2.w, r2.w, l(1.000000)
          div r2.w, l(2.000000), r2.w
          mul r10.y, r5.z, r5.z
          mad r5.z, -r5.z, r5.z, l(1.000000)
          mul r5.z, r5.z, r6.w
          max r10.y, r10.y, l(1.000000047E-034)
          div r5.z, r5.z, r10.y
          add r5.z, r5.z, l(1.000000)
          sqrt r5.z, r5.z
          add r5.z, r5.z, l(1.000000)
          div r5.z, l(2.000000), r5.z
          mul r2.w, r2.w, r5.z
          mul r2.w, r2.w, r8.y
          mul_sat r12.xyz, r16.xyzx, r2.wwww
          sqrt r16.xyz, r10.xzwx
          mad r12.xyz, -r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r12.xyzx
          mad r12.xyz, r16.xyzx, r12.xyzx, r21.xyzx
          dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r2.w, r5.y, r5.y, l(-1.000000)
          mad r2.w, r9.w, r2.w, l(1.000000)
          mul r2.w, r2.w, r2.w
          mul r2.w, r2.w, l(3.14159274)
          div r2.w, r6.w, r2.w
          mad r5.z, r5.y, l(0.500000), l(0.500000)
          mul r5.z, r5.z, r5.z
          mul r6.w, r7.w, r5.z
          div r6.w, r6.w, r7.z
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.w, l(2.000000), r6.w
          mul r2.y, r2.y, r5.z
          div r2.y, r2.y, r16.w
          add r2.y, r2.y, l(1.000000)
          sqrt r2.y, r2.y
          add r2.y, r2.y, l(1.000000)
          div r2.y, l(2.000000), r2.y
          mul r2.y, r2.y, r6.w
          add r5.z, -r5.w, l(1.000000)
          mul r5.w, r5.z, r5.z
          mul r5.w, r5.w, r5.w
          mul r16.xyz, r5.wwww, r19.xyzx
          mad r8.xyz, r16.xyzx, r5.zzzz, r8.xzwx
          mul r2.y, r2.y, r2.w
          mul r8.xyz, r8.xyzx, r2.yyyy
          dp3 r8.w, r8.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r13.xyzw, r0.yyyy, r12.xyzw, r8.xyzw
        endif 
      endif 
    endif 
    if_nz r2.x
      mov r14.xyzw, l(0,0,0,0)
    else 
      ieq r0.y, r0.w, l(3)
      if_nz r0.y
        mov r14.xyzw, l(0,0,0,0)
      else 
        if_nz r7.y
          mov r14.xyzw, l(0,0,0,0)
        else 
          dp3 r0.y, r11.xzwx, cb2[2].xyzx
          mad r0.y, -r0.y, r0.y, l(1.000000)
          sqrt r0.y, r0.y
          mul r2.x, r11.y, l(-1.500000)
          dp3 r2.y, r3.yzwy, cb2[2].xyzx
          mad r2.w, -r11.y, l(-1.500000), r2.y
          div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), -r2.x
          mul_sat r2.x, r2.x, r2.w
          mad r2.w, r2.x, l(-2.000000), l(3.000000)
          mul r2.x, r2.x, r2.x
          mul r2.x, r2.x, r2.w
          mul r8.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r2.w, -r3.x, l(1.000000)
          mul r8.xyzw, r2.wwww, r8.xyzw
          mul r8.xyzw, r2.xxxx, r8.xyzw
          mul r8.xyzw, r0.yyyy, r8.xyzw
          mul r8.xyzw, r11.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r5.zw, r0.wwww, l(0, 0, 5, 8)
          max r0.y, |r2.y|, l(0.000001)
          rcp r0.y, r0.y
          mul r0.y, r0.y, r2.y
          dp3 r2.x, r3.yzwy, r9.xyzx
          max r2.y, |r2.x|, l(0.000001)
          rcp r2.y, r2.y
          mul r2.x, r2.y, r2.x
          eq r0.y, r0.y, r2.x
          movc r12.w, r0.y, l(0), l(1.000000)
          mul r2.xyw, r2.wwww, r11.xzxw
          mul r12.xyz, r12.wwww, r2.xywx
          mul r12.xyzw, r12.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r16.xyz, r10.xzwx, r11.xxxx
          mov r16.w, r11.x
          mul r16.xyzw, r16.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r12.xyzw, r5.wwww, r12.xyzw, r16.xyzw
          movc r14.xyzw, r5.zzzz, r8.xyzw, r12.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r0.y, r7.y, l(1.000000), r2.z
  dp3 r2.x, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r2.y, r0.x, r11.x
  add r2.x, -r0.y, r2.x
  mad r2.x, r2.y, r2.x, r0.y
  movc r0.y, r0.w, r0.y, r2.x
  mul r2.xyzw, r0.zzzz, r13.xyzw
  mad r2.xyzw, r15.xyzw, r0.yyyy, r2.xyzw
  add r2.xyzw, r14.xyzw, r2.xyzw
  mul r2.xyzw, r0.xxxx, r2.xyzw
  mov r1.xyz, cb2[0].xyzx
  mul r1.xyzw, r1.xyzw, r2.xyzw
else 
  mov r1.xyzw, l(0,0,0,0)
endif 
dp3 r4.w, r4.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r7.y
  mul r4.xyz, r4.xyzx, r10.xzwx
  mul r2.xyzw, r4.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r7.x
    mov_sat r11.xy, r11.xyxx
    mov_sat r3.x, r3.x
    log r0.xyz, r10.xzwx
    mul r3.yzw, r11.yyyy, r0.xxyz
    mul r3.yzw, r3.yyzw, l(0.000000, -12.780000, -12.780000, -12.780000)
    mad r0.xyz, r0.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r3.yzwy
    eq r3.y, r11.x, l(0.000000)
    add r3.z, -r3.x, l(1.000000)
    mul r7.xyz, r3.zzzz, r10.xzwx
    mul r7.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r0.xyz, r0.xyzx, -r11.xxxx
    exp r0.xyz, r0.xyzx
    mul r0.xyz, r7.xyzx, r0.xyzx
    mul r0.xyz, r0.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r7.xyz, r3.yyyy, r7.xyzx, r0.xyzx
    mov r7.w, l(0.180000)
  else 
    ieq r0.x, r0.w, l(2)
    if_nz r0.x
      mul r8.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r8.w, l(0.0572957806)
      add r0.x, -r3.x, l(1.000000)
      mul r7.xyzw, r0.xxxx, r8.xyzw
    else 
      ieq r0.x, r0.w, l(3)
      if_nz r0.x
        dp3 r0.x, r9.xyzx, r9.xyzx
        min r0.x, r0.x, l(1.000000)
        mul r0.y, r5.x, l(0.080000)
        add r0.x, -r0.x, l(1.000000)
        mul r0.z, r0.x, r0.x
        mul r0.z, r0.z, r0.z
        mad r3.y, -r5.x, l(0.080000), l(1.000000)
        mul r0.z, r0.z, r3.y
        mad r0.x, r0.z, r0.x, r0.y
        add_sat r0.y, r5.y, r5.y
        mad r5.w, r0.y, -r0.x, l(1.000000)
        mul r5.xyz, r5.wwww, r10.xzwx
        mul r7.xyzw, r5.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r5.xyz, r10.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r5.w, l(0.0572957806)
        add r3.w, -r3.x, l(1.000000)
        mul r5.xyzw, r3.wwww, r5.xyzw
        mov r3.xyz, r5.xyzx
        mul r8.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r0.x, -r11.y, l(1.000000)
        mul r12.xyzw, r11.yyyy, r5.xyzw
        mul r12.xyzw, r12.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r8.xyzw, r8.xyzw, r0.xxxx, r12.xyzw
        ieq r0.xy, r0.wwww, l(5, 8, 0, 0)
        dp3 r0.z, r6.xyzx, r9.xyzx
        max r0.w, |r0.z|, l(0.000001)
        rcp r0.w, r0.w
        mul r0.z, r0.w, r0.z
        eq r0.z, r0.z, l(0.000000)
        movc r6.w, r0.z, l(0), l(1.000000)
        mul r3.xyz, r3.wwww, r11.xzwx
        mul r6.xyz, r6.wwww, r3.xyzx
        mad r3.xyzw, r6.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r5.xyzw
        mul r11.yzw, r10.wwxz, r11.xxxx
        mad r5.xyzw, r11.zwyx, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r5.xyzw
        movc r3.xyzw, r0.yyyy, r3.xyzw, r5.xyzw
        movc r7.xyzw, r0.xxxx, r8.xyzw, r3.xyzw
      endif 
    endif 
  endif 
  mul r2.xyzw, r4.xyzw, r7.xyzw
endif 
add r0.xyzw, r1.wxyz, r2.wxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 969 instruction slots used