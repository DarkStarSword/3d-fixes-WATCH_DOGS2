// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 312d6a869fec5064-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:09 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorWrap                         sampler      NA          NA    1        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    1        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    2        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    3        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d    4        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d    5        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d    6        1
// Viewport                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[185], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecubearray (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 19

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 312d6a869fec5064-ps.txt

mul r15.w, r15.x, r15.y
mul r17.x, r15.w, cb0[9].x
mul r17.y, r15.w, cb0[10].x
mul r17.z, r15.w, cb0[11].x
mul r17.w, r15.w, cb0[12].x
dp4 r18.x, r17.xyzw, cb0[17].xyzw
dp4 r18.y, r17.xyzw, cb0[18].xyzw
dp4 r18.z, r17.xyzw, cb0[19].xyzw
add r16.xyz, cb0[174].xyz, r18.xyz

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.zwxy
mov r0.w, l(1.000000)
dp2 r2.x, r0.zwzz, cb0[11].zwzz
dp2 r0.z, r0.zwzz, cb0[12].zwzz
div r0.z, -r2.x, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 312d6a869fec5064-ps.txt

add r15.w, -r2.z, -r15.y
mul r15.w, r15.w, r15.x
mad r2.x, -r15.w, cb0[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t5.xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t6.zyxw
mad r1.w, r1.w, l(255.000000), l(0.500000)
round_ni r1.w, r1.w
ftou r1.w, r1.w
ushr r1.w, r1.w, l(5)
dp3 r4.x, r3.xyzx, r3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r3.xyzx, r4.xxxx
ieq r5.xy, r1.wwww, l(1, 4, 0, 0)
ge r4.w, r2.w, l(0.750000)
add r5.z, r2.w, l(-0.750000)
mad r5.z, r5.z, l(-0.599999905), l(1.000000)
movc r4.w, r4.w, r5.z, l(1.000000)
movc r4.w, r5.y, r4.w, r2.w
movc r4.w, r5.x, l(1.000000), r4.w
add r6.xyz, -r0.xyzx, r16.xyzx
dp3 r5.z, r6.xyzx, r6.xyzx
rsq r5.z, r5.z
mul r6.xyz, r5.zzzz, r6.xyzx
mul r7.yzw, r2.xxyz, r4.wwww
if_nz r5.x
  mad r5.x, r3.w, l(0.500000), l(0.500000)
  mad r5.x, r5.x, l(65535.000000), l(0.500000)
  ftou r5.x, r5.x
  and r5.xz, r5.xxxx, l(0x0000ff00, 0, 255, 0)
  utof r5.xz, r5.xxzx
  mul r5.xw, r5.xxxz, l(0.0000153186284, 0.000000, 0.000000, 0.00784313772)
  mul r6.w, r2.w, l(255.000000)
  ftou r6.w, r6.w
  and r8.xy, r6.wwww, l(240, 15, 0, 0)
  utof r8.xy, r8.xyxx
  mul r8.xy, r8.xyxx, l(0.00416666688, 0.00533333328, 0.000000, 0.000000)
  mov_sat r1.xyz, r1.xyzx
  mul r6.w, r1.y, r1.y
  max r9.y, r6.w, l(0.001000)
  mul r5.x, r5.x, r5.x
  max r5.x, r5.x, l(0.001000)
  dp3 r6.w, -r6.xyzx, r4.xyzx
  add r6.w, r6.w, r6.w
  mad r10.xyz, r4.xyzx, -r6.wwww, -r6.xyzx
  dp3 r6.w, r4.xyzx, r10.xyzx
  mad r6.w, -|r6.w|, |r6.w|, l(1.000000)
  mad r6.w, -r6.w, l(0.444702327), l(1.000000)
  sqrt r6.w, r6.w
  div r5.w, r5.w, r6.w
  log r11.xyz, r7.yzwy
  mul r8.xzw, r8.xxxx, r11.xxyz
  mul r8.xzw, r8.xxzw, l(-12.780000, 0.000000, -12.780000, -12.780000)
  mad r8.xzw, r11.xxyz, l(-0.020000, 0.000000, -0.020000, -0.020000), r8.xxzw
  eq r5.z, r5.z, l(0.000000)
  mul r6.w, r9.y, r9.y
  div r6.w, l(2.000000), r6.w
  add r6.w, r6.w, l(-2.000000)
  max r6.w, r6.w, l(1.000000031E-022)
  sqrt r6.w, r6.w
  div r6.w, l(-10.000000), r6.w
  exp r6.w, r6.w
  add r6.w, r6.w, l(-0.000980)
  mul_sat r6.w, r6.w, l(1.00795019)
  add r6.w, -r6.w, l(1.000000)
  if_z cb0[184].z
    mul r9.w, r6.w, cb0[174].w
    mov r0.w, l(1.000000)
    mov r11.xyzw, l(0,0,0,0)
    mov r10.w, l(1.000000)
    mov r12.x, l(0)
    loop 
      uge r12.y, r12.x, l(15)
      breakc_nz r12.y
      imul null, r12.y, r12.x, l(7)
      dp4 r13.x, r0.xyzw, cb0[r12.y + 68].xyzw
      dp4 r13.y, r0.xyzw, cb0[r12.y + 69].xyzw
      dp4 r13.z, r0.xyzw, cb0[r12.y + 70].xyzw
      ge r14.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r14.xyz, r14.xyzx, cb0[r12.y + 72].xyzx, cb0[r12.y + 73].xyzx
      add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r13.xyz, r14.xyzx, r13.xyzx
      mul r12.z, r13.y, r13.x
      mul r12.z, r13.z, r12.z
      lt r12.w, l(0.000000), r12.z
      if_nz r12.w
        dp3 r13.x, r10.xyzx, cb0[r12.y + 68].xyzx
        dp3 r13.y, r10.xyzx, cb0[r12.y + 69].xyzx
        dp3 r13.z, r10.xyzx, cb0[r12.y + 70].xyzx
        mul r12.z, r12.z, cb0[r12.y + 73].w
        mov r13.w, cb0[r12.y + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t3.xyzw, s1, r9.w
        mul r13.xyzw, r13.xyzw, cb0[r12.y + 74].xxxy
        min r12.y, r10.w, r12.z
        mad r13.xyzw, r13.xyzw, r12.yyyy, r11.xyzw
        add r12.y, r10.w, -r12.y
        ge r12.z, l(0.000000), r12.y
        if_nz r12.z
          mov r11.xyzw, r13.xyzw
          mov r10.w, r12.y
          break 
        endif 
        mov r11.xyzw, r13.xyzw
        mov r10.w, r12.y
      endif 
      iadd r12.x, r12.x, l(1)
    endloop 
  else 
    mov r11.xyzw, l(0,0,0,0)
    mov r10.w, l(1.000000)
  endif 
  add r9.w, r10.w, r11.w
  lt r11.w, l(0.000000), r9.w
  if_nz r11.w
    mul r6.w, r6.w, cb0[183].w
    add r11.w, -|r10.z|, r10.z
    mad r10.w, r10.w, r11.w, |r10.z|
    mad r10.w, r10.w, l(2.000000), l(2.000000)
    div r12.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r10.wwww
    mul r12.xy, r10.yxyy, r12.xyxx
    mad r12.xy, r12.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t2.xyzw, s0, r6.w
    mov_sat r13.xyz, r12.xyzx
    movc r12.xyz, cb0[184].zzzz, r13.xyzx, r12.xyzx
    div r12.xyz, r12.xyzx, cb0[176].wwww
    mad r11.xyz, r12.xyzx, r9.wwww, r11.xyzx
  endif 
  mul r6.w, r1.z, l(0.080000)
  dp3 r9.w, r6.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r9.w, r9.w, l(50.000000)
  min r9.w, r9.w, l(1.000000)
  dp3_sat r9.x, r4.xyzx, r6.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r12.xy, r9.xyxx, t0.xyzw, s0, l(0.000000)
  mad r6.w, r6.w, r12.x, r12.y
  mul r6.w, r9.w, r6.w
  mul r11.xyz, r6.wwww, r11.xyzx
  mul r11.xyz, r4.wwww, r11.xyzx
  add r5.x, r5.x, r9.y
  min r9.z, r5.x, l(1.000000)
  mul r5.x, r9.z, r9.z
  div r5.x, l(2.000000), r5.x
  add r5.x, r5.x, l(-2.000000)
  max r5.x, r5.x, l(1.000000031E-022)
  sqrt r5.x, r5.x
  div r5.x, l(-10.000000), r5.x
  exp r5.x, r5.x
  add r5.x, r5.x, l(-0.000980)
  mul r5.x, r5.x, l(1.00795019)
  max r5.x, r5.x, l(0.000000)
  add r5.x, -r5.x, l(1.000000)
  if_z cb0[184].z
    mul r6.w, r5.x, cb0[174].w
    mov r0.w, l(1.000000)
    mov r12.xyzw, l(0,0,0,0)
    mov r9.yw, l(0,1.000000,0,0)
    loop 
      uge r10.w, r9.w, l(15)
      breakc_nz r10.w
      imul null, r10.w, r9.w, l(7)
      dp4 r13.x, r0.xyzw, cb0[r10.w + 68].xyzw
      dp4 r13.y, r0.xyzw, cb0[r10.w + 69].xyzw
      dp4 r13.z, r0.xyzw, cb0[r10.w + 70].xyzw
      ge r14.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r14.xyz, r14.xyzx, cb0[r10.w + 72].xyzx, cb0[r10.w + 73].xyzx
      add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r13.xyz, r14.xyzx, r13.xyzx
      mul r11.w, r13.y, r13.x
      mul r11.w, r13.z, r11.w
      lt r13.x, l(0.000000), r11.w
      if_nz r13.x
        dp3 r13.x, r10.xyzx, cb0[r10.w + 68].xyzx
        dp3 r13.y, r10.xyzx, cb0[r10.w + 69].xyzx
        dp3 r13.z, r10.xyzx, cb0[r10.w + 70].xyzx
        mul r11.w, r11.w, cb0[r10.w + 73].w
        mov r13.w, cb0[r10.w + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t3.xyzw, s1, r6.w
        mul r13.xyzw, r13.xyzw, cb0[r10.w + 74].xxxy
        min r10.w, r9.y, r11.w
        mad r13.xyzw, r13.xyzw, r10.wwww, r12.xyzw
        add r10.w, r9.y, -r10.w
        ge r11.w, l(0.000000), r10.w
        if_nz r11.w
          mov r12.xyzw, r13.xyzw
          mov r9.y, r10.w
          break 
        endif 
        mov r12.xyzw, r13.xyzw
        mov r9.y, r10.w
      endif 
      iadd r9.w, r9.w, l(1)
    endloop 
  else 
    mov r12.xyzw, l(0,0,0,0)
    mov r9.y, l(1.000000)
  endif 
  add r6.w, r9.y, r12.w
  lt r9.w, l(0.000000), r6.w
  if_nz r9.w
    mul r5.x, r5.x, cb0[183].w
    add r9.w, -|r10.z|, r10.z
    mad r9.y, r9.y, r9.w, |r10.z|
    mad r9.y, r9.y, l(2.000000), l(2.000000)
    div r9.yw, l(0.000000, -1.000000, 0.000000, 1.000000), r9.yyyy
    mul r9.yw, r9.yyyw, r10.yyyx
    mad r9.yw, r9.yyyw, l(0.000000, 0.950000, 0.000000, 0.950000), l(0.000000, 0.500000, 0.000000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r10.xyz, r9.ywyy, t2.xyzw, s0, r5.x
    mov_sat r13.xyz, r10.xyzx
    movc r10.xyz, cb0[184].zzzz, r13.xyzx, r10.xyzx
    div r10.xyz, r10.xyzx, cb0[176].wwww
    mad r12.xyz, r10.xyzx, r6.wwww, r12.xyzx
  endif 
  mad r2.xyz, r2.xyzx, r4.wwww, -r8.yyyy
  mad r2.xyz, r1.xxxx, r2.xyzx, r8.yyyy
  dp3 r5.x, r2.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r5.x, r5.x, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r9.xy, r9.xzxx, t0.xyzw, s0, l(0.000000)
  mad r2.xyz, r2.xyzx, r9.xxxx, r9.yyyy
  mul r2.xyz, r5.xxxx, r2.xyzx
  mul r2.xyz, r2.xyzx, r12.xyzx
  mul r2.xyz, r4.wwww, r2.xyzx
  mul r8.xyz, r5.wwww, -r8.xzwx
  exp r8.xyz, r8.xyzx
  mad r8.xyz, r2.xyzx, r8.xyzx, r11.xyzx
  movc r2.xyz, r5.zzzz, r2.xyzx, r8.xyzx
  dp3 r5.x, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  mul r1.y, r1.y, r1.y
  max r8.z, r1.y, l(0.001000)
  ieq r5.zw, r1.wwww, l(0, 0, 2, 5)
  if_nz r5.z
    mad r1.y, r3.w, l(0.500000), l(0.500000)
    mad r1.y, r1.y, l(65535.000000), l(0.500000)
    ftou r1.y, r1.y
    and r9.xy, r1.yyyy, l(255, 0x0000ff00, 0, 0)
    utof r9.xy, r9.xyxx
    mov r9.z, r1.z
    mad r9.xyz, r9.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r1.y, -r2.w, l(1.000000)
    mul r1.y, r1.y, r7.y
    mad r7.x, r1.y, l(0.500000), r7.y
    dp3 r1.y, r9.xyzx, r9.xyzx
    rsq r1.y, r1.y
    mul r9.xyz, r1.yyyy, r9.xyzx
    mov r1.z, l(0.500000)
    mov r10.x, r1.x
    mov r10.y, l(0)
  else 
    ieq r1.y, r1.w, l(3)
    if_nz r1.y
      mad r1.y, r3.w, l(0.500000), l(0.500000)
      mad r1.y, r1.y, l(65535.000000), l(0.500000)
      ftou r1.y, r1.y
      and r11.xyzw, r1.yyyy, l(0x0000f800, 2016, 31, 31)
      utof r11.xyzw, r11.xyzw
      ge r12.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r11.wyxw
      mul r1.y, r11.w, l(0.00249675405)
      mad r13.xyz, r11.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r13.xyz, r13.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r13.xyz, r13.xyzx
      mul r13.xyz, r13.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r13.xyz, r13.xyzx
      movc r9.x, r12.x, r1.y, r13.x
      mul r10.zw, r11.yyyx, l(0.000000, 0.000000, 0.0000383925508, 0.00000121911819)
      movc r9.yz, r12.yyzy, r10.zzwz, r13.yyzy
      mov r10.x, r1.x
      mov r10.y, l(0)
    else 
      if_nz r5.y
        mad r1.y, r3.w, l(32767.000000), l(32767.000000)
        ftou r1.y, r1.y
        and r2.w, r1.y, l(255)
        utof r2.w, r2.w
        mul r2.w, r2.w, l(0.0123199718)
        ubfe r1.y, l(8), l(8), r1.y
        utof r1.y, r1.y
        mad r1.y, r1.y, l(0.0246399436), l(-3.14159274)
        sincos r11.x, r12.x, r2.w
        sincos r13.x, r14.x, r1.y
        mul r14.x, r11.x, r14.x
        mul r14.y, r11.x, r13.x
        mov r14.z, r12.x
        dp3 r1.y, r14.xyzx, r14.xyzx
        rsq r1.y, r1.y
        mul r9.xyz, r1.yyyy, r14.xyzx
        mov r10.x, r1.x
        mov r10.y, l(0)
      else 
        ieq r1.y, r1.w, l(5)
        lt r2.w, r3.z, l(0.900000)
        movc r11.xyz, r2.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r12.xyz, r3.zxyz, r11.xyzx
        mad r11.xyz, r3.yzxy, r11.yzxy, -r12.xyzx
        dp3 r2.w, r11.xyzx, r11.xyzx
        rsq r2.w, r2.w
        mul r11.xyz, r2.wwww, r11.xyzx
        mul r12.xyz, r3.zxyz, r11.yzxy
        mad r3.xyz, r3.yzxy, r11.zxyz, -r12.xyzx
        dp3 r2.w, r3.xyzx, r3.xyzx
        rsq r2.w, r2.w
        mul r3.xyz, r2.wwww, r3.xyzx
        mad r2.w, r3.w, l(2.000000), l(-1.000000)
        mul r2.w, r2.w, l(3.14159274)
        sincos r12.x, r13.x, r2.w
        mul r11.xyz, r11.xyzx, r12.xxxx
        mad r3.xyz, r3.xyzx, r13.xxxx, r11.xyzx
        mad r2.w, r3.w, l(0.500000), l(0.500000)
        mad r2.w, r2.w, l(65535.000000), l(0.500000)
        ftou r2.w, r2.w
        and r5.yz, r2.wwww, l(0, 255, 0x0000ff00, 0)
        utof r5.yz, r5.yyzy
        mul r11.x, r5.y, l(0.00392156886)
        mad r11.z, r5.z, l(0.0000306372567), l(-1.000000)
        movc r11.xy, r1.wwww, l(0,0,0,0), r11.xzxx
        mov r11.z, l(0)
        movc r9.xyz, r1.yyyy, r3.xyzx, r11.xzzx
        mov r11.w, r1.x
        movc r10.xy, r1.yyyy, l(0,0,0,0), r11.wyww
      endif 
    endif 
    mov r7.x, r7.y
  endif 
  if_nz r5.w
    dp3 r1.x, -r6.xyzx, r4.xyzx
    add r1.x, r1.x, r1.x
    mad r1.xyw, r4.xyxz, -r1.xxxx, -r6.xyxz
    dp3 r2.w, r1.xywx, r9.xyzx
    dp3 r1.x, r1.xywx, r4.xyzx
    mul r1.xyw, r1.xxxx, r4.xyxz
    mad r1.xyw, r9.xyxz, r2.wwww, r1.xyxw
    dp3 r2.w, r9.xyzx, r6.xyzx
    mad r2.w, -r2.w, r2.w, l(1.000000)
    sqrt r2.w, r2.w
    mul r3.x, r8.z, r8.z
    div r3.x, l(2.000000), r3.x
    add r3.x, r3.x, l(-2.000000)
    max r3.x, r3.x, l(1.000000031E-022)
    sqrt r3.x, r3.x
    div r3.x, l(-10.000000), r3.x
    exp r3.x, r3.x
    add r3.x, r3.x, l(-0.000980)
    mul_sat r3.x, r3.x, l(1.00795019)
    add r3.x, -r3.x, l(1.000000)
    if_z cb0[184].z
      mul r3.y, r3.x, cb0[174].w
      mov r0.w, l(1.000000)
      mov r9.xyzw, l(0,0,0,0)
      mov r3.zw, l(0,0,1.000000,0)
      loop 
        uge r5.y, r3.w, l(15)
        breakc_nz r5.y
        imul null, r5.y, r3.w, l(7)
        dp4 r11.x, r0.xyzw, cb0[r5.y + 68].xyzw
        dp4 r11.y, r0.xyzw, cb0[r5.y + 69].xyzw
        dp4 r11.z, r0.xyzw, cb0[r5.y + 70].xyzw
        ge r12.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.xyz, r12.xyzx, cb0[r5.y + 72].xyzx, cb0[r5.y + 73].xyzx
        add r11.xyz, -|r11.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r11.xyz, r12.xyzx, r11.xyzx
        mul r5.z, r11.y, r11.x
        mul r5.z, r11.z, r5.z
        lt r5.w, l(0.000000), r5.z
        if_nz r5.w
          dp3 r11.x, r1.xywx, cb0[r5.y + 68].xyzx
          dp3 r11.y, r1.xywx, cb0[r5.y + 69].xyzx
          dp3 r11.z, r1.xywx, cb0[r5.y + 70].xyzx
          mul r5.z, r5.z, cb0[r5.y + 73].w
          mov r11.w, cb0[r5.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s1, r3.y
          mul r11.xyzw, r11.xyzw, cb0[r5.y + 74].xxxy
          min r5.y, r3.z, r5.z
          mad r11.xyzw, r11.xyzw, r5.yyyy, r9.xyzw
          add r5.y, r3.z, -r5.y
          ge r5.z, l(0.000000), r5.y
          if_nz r5.z
            mov r9.xyzw, r11.xyzw
            mov r3.z, r5.y
            break 
          endif 
          mov r9.xyzw, r11.xyzw
          mov r3.z, r5.y
        endif 
        iadd r3.w, r3.w, l(1)
      endloop 
    else 
      mov r9.xyzw, l(0,0,0,0)
      mov r3.z, l(1.000000)
    endif 
    add r3.y, r3.z, r9.w
    lt r3.w, l(0.000000), r3.y
    if_nz r3.w
      mul r3.x, r3.x, cb0[183].w
      add r3.w, -|r1.w|, r1.w
      mad r1.w, r3.z, r3.w, |r1.w|
      mad r1.w, r1.w, l(2.000000), l(2.000000)
      div r3.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r1.wwww
      mul r1.xy, r1.yxyy, r3.zwzz
      mad r1.xy, r1.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.xyw, r1.xyxx, t2.xywz, s0, r3.x
      mov_sat r3.xzw, r1.xxyw
      movc r1.xyw, cb0[184].zzzz, r3.xzxw, r1.xyxw
      div r1.xyw, r1.xyxw, cb0[176].wwww
      mad r9.xyz, r1.xywx, r3.yyyy, r9.xyzx
    endif 
    sqrt r1.xyw, r7.xzxw
    dp3 r3.x, r7.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r1.xyw, r1.xyxw, l(4.000000, 4.000000, 0.000000, 4.000000), -r4.wwww
    mad r1.xyw, r3.xxxx, r1.xyxw, r4.wwww
    mul r1.xyw, r1.xyxw, r9.xyxz
    mul r3.x, r1.z, l(0.080000)
    mad r3.yzw, -r1.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r7.xxzw
    mad r3.xyz, r10.xxxx, r3.yzwy, r3.xxxx
    dp3 r3.w, r3.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r3.w, r3.w, l(50.000000)
    dp3_sat r8.y, r4.xyzx, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r8.yzyy, t0.zxyw, s0, l(0.000000)
    mad r3.xyz, r3.xyzx, r5.yyyy, r5.zzzz
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r3.xyz, r2.wwww, r3.xyzx
    mul r2.xyz, r1.xywx, r3.xyzx
    dp3 r5.x, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r1.x, r8.z, r10.y
    dp3 r1.y, -r6.xyzx, r4.xyzx
    add r1.y, r1.y, r1.y
    mad r3.xyz, r4.xyzx, -r1.yyyy, -r6.xyzx
    mul r1.x, r1.x, r1.x
    div r1.x, l(2.000000), r1.x
    add r1.x, r1.x, l(-2.000000)
    max r1.x, r1.x, l(1.000000031E-022)
    sqrt r1.x, r1.x
    div r1.x, l(-10.000000), r1.x
    exp r1.x, r1.x
    add r1.x, r1.x, l(-0.000980)
    mul_sat r1.x, r1.x, l(1.00795019)
    add r1.x, -r1.x, l(1.000000)
    if_z cb0[184].z
      mul r1.y, r1.x, cb0[174].w
      mov r0.w, l(1.000000)
      mov r9.xyzw, l(0,0,0,0)
      mov r1.w, l(1.000000)
      mov r2.w, l(0)
      loop 
        uge r3.w, r2.w, l(15)
        breakc_nz r3.w
        imul null, r3.w, r2.w, l(7)
        dp4 r11.x, r0.xyzw, cb0[r3.w + 68].xyzw
        dp4 r11.y, r0.xyzw, cb0[r3.w + 69].xyzw
        dp4 r11.z, r0.xyzw, cb0[r3.w + 70].xyzw
        ge r5.yzw, r11.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r5.yzw, r5.yyzw, cb0[r3.w + 72].xxyz, cb0[r3.w + 73].xxyz
        add r10.yzw, -|r11.xxyz|, l(0.000000, 1.000000, 1.000000, 1.000000)
        mul_sat r5.yzw, r5.yyzw, r10.yyzw
        mul r5.y, r5.z, r5.y
        mul r5.y, r5.w, r5.y
        lt r5.z, l(0.000000), r5.y
        if_nz r5.z
          dp3 r11.x, r3.xyzx, cb0[r3.w + 68].xyzx
          dp3 r11.y, r3.xyzx, cb0[r3.w + 69].xyzx
          dp3 r11.z, r3.xyzx, cb0[r3.w + 70].xyzx
          mul r5.y, r5.y, cb0[r3.w + 73].w
          mov r11.w, cb0[r3.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r11.xyzw, t3.xyzw, s1, r1.y
          mul r11.xyzw, r11.xyzw, cb0[r3.w + 74].xxxy
          min r3.w, r1.w, r5.y
          mad r11.xyzw, r11.xyzw, r3.wwww, r9.xyzw
          add r3.w, r1.w, -r3.w
          ge r5.y, l(0.000000), r3.w
          if_nz r5.y
            mov r9.xyzw, r11.xyzw
            mov r1.w, r3.w
            break 
          endif 
          mov r9.xyzw, r11.xyzw
          mov r1.w, r3.w
        endif 
        iadd r2.w, r2.w, l(1)
      endloop 
    else 
      mov r9.xyzw, l(0,0,0,0)
      mov r1.w, l(1.000000)
    endif 
    add r0.x, r1.w, r9.w
    lt r0.y, l(0.000000), r0.x
    if_nz r0.y
      mul r0.y, r1.x, cb0[183].w
      add r0.z, -|r3.z|, r3.z
      mad r0.z, r1.w, r0.z, |r3.z|
      mad r0.z, r0.z, l(2.000000), l(2.000000)
      div r0.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.zzzz
      mul r0.zw, r0.zzzw, r3.yyyx
      mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t2.wxyz, s0, r0.y
      mov_sat r1.xyw, r0.yzyw
      movc r0.yzw, cb0[184].zzzz, r1.xxyw, r0.yyzw
      div r0.yzw, r0.yyzw, cb0[176].wwww
      mad r9.xyz, r0.yzwy, r0.xxxx, r9.xyzx
    endif 
    mul r0.x, r1.z, l(0.080000)
    mad r0.yzw, -r1.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r7.xxzw
    mad r0.xyz, r10.xxxx, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r8.x, r4.xyzx, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r8.xzxx, t0.xyzw, s0, l(0.000000)
    mad r0.xyz, r0.xyzx, r1.xxxx, r1.yyyy
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r9.xyzx
    mul r2.xyz, r4.wwww, r0.xyzx
    dp3 r5.x, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
mul r0.xyz, r2.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r0.x, r5.x, cb0[176].w
max r0.x, r0.x, l(0.000000)
min o0.w, r0.x, l(64512.000000)
ret 
// Approximately 529 instruction slots used