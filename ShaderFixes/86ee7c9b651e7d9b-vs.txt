// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 86ee7c9b651e7d9b-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:58:40 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16 [unused]
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer MaterialWD2Emissive
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 LightIntensityCurveSel;     // Offset:   16 Size:    16
//   float4 VideoTexture1Unpack[8];     // Offset:   32 Size:   128 [unused]
//   float3 DiffuseColor1;              // Offset:  160 Size:    12
//   float IntensityOffsetInEV;         // Offset:  172 Size:     4
//   float3 DiffuseTextureRemap;        // Offset:  176 Size:    12 [unused]
//   float InverseNormalAttenuation;    // Offset:  188 Size:     4
//   float3 Intensity;                  // Offset:  192 Size:    12
//   float NormalAttenuationPower;      // Offset:  204 Size:     4
//   float3 LightOffColor;              // Offset:  208 Size:    12 [unused]
//   float Reflectance;                 // Offset:  220 Size:     4 [unused]
//   float2 DiffuseTiling1;             // Offset:  224 Size:     8
//   float Roughness;                   // Offset:  232 Size:     4 [unused]
//   float Translucency;                // Offset:  236 Size:     4 [unused]
//   float2 FadeoutParams;              // Offset:  240 Size:     8
//   int AnimType;                      // Offset:  248 Size:     4
//   int DiffuseUV1;                    // Offset:  252 Size:     4
//   float2 UVSpeed;                    // Offset:  256 Size:     8
//   int NbFrames;                      // Offset:  264 Size:     4
//   bool AffectsGI;                    // Offset:  268 Size:     4 [unused]
//   bool AlphaTestEnabled;             // Offset:  272 Size:     4 [unused]
//   bool IsAffectedByTimeOfDay;        // Offset:  276 Size:     4 [unused]
//   bool NeedsElectricPower;           // Offset:  280 Size:     4
//   bool PreMultiplyEmissiveByDiffuseAlpha;// Offset:  284 Size:     4 [unused]
//   bool UseDiffuseTexture;            // Offset:  288 Size:     4 [unused]
//   bool UseVertexColor;               // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer ElectricPower
// {
//
//   float ElectricPowerIntensity;      // Offset:    0 Size:     4
//
// }
//
// cbuffer PreviousWorldTransform
// {
//
//   float4x3 PreviousWorldMatrix;      // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SkinningConfig                    texture   uint4         buf    0        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    4        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    5        1
// MaterialWD2Emissive               cbuffer      NA          NA    6        1
// ElectricPower                     cbuffer      NA          NA    7        1
// PreviousWorldTransform            cbuffer      NA          NA    8        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// normal                   0   xyzw        3     NONE   float   xyz 
// color                    1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[180], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[3066], dynamicIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[3], immediateIndexed
dcl_resource_buffer (uint,uint,uint,uint) t0
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 13

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
itof r1.xyzw, v1.xyzw
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r2.x, r0.w, l(1)
if_nz r2.x
  and r2.x, v0.w, l(8191)
  mov r3.xyzw, l(1.000000,0,0,0)
  mov r2.yzw, l(0,0,0,0)
else 
  and r4.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r4.xxxx, t0.xyzw
  and r2.xyzw, r4.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  mov r3.xyzw, v2.zyxw
endif 
mad r4.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mad r1.xyzw, r1.xyzw, cb2[2].zwzw, cb2[2].xyxy
mad r0.xyz, v3.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r5.xyzw, l(0,0,0,0)
mov r6.xyzw, l(0,0,0,0)
mov r7.xyzw, l(0,0,0,0)
mov r8.x, l(0)
loop 
  ult r8.z, r8.x, r0.w
  ult r8.w, r8.x, l(4)
  and r8.z, r8.w, r8.z
  breakc_z r8.z
  dp4 r8.z, r3.xyzw, icb[r8.x + 0].xyzw
  ineg r8.w, r8.x
  ult r9.xyz, r8.xxxx, l(1, 2, 3, 0)
  and r10.y, r8.w, r9.y
  iadd r8.xy, r8.xxxx, l(1, -3, 0, 0)
  movc r10.z, r9.y, l(0), r8.y
  ieq r10.w, r9.z, l(0)
  mov r10.x, r9.x
  and r9.xyzw, r2.xyzw, r10.xyzw
  or r8.yw, r9.yyyw, r9.xxxz
  or r8.y, r8.w, r8.y
  imul null, r8.y, r8.y, l(3)
  mad r5.xyzw, r8.zzzz, cb3[r8.y + 1533].xyzw, r5.xyzw
  mad r6.xyzw, r8.zzzz, cb3[r8.y + 1534].xyzw, r6.xyzw
  mad r7.xyzw, r8.zzzz, cb3[r8.y + 1535].xyzw, r7.xyzw
endloop 
mov r4.w, l(1.000000)
dp4 r5.x, r4.xyzw, r5.xyzw
dp4 r5.y, r4.xyzw, r6.xyzw
dp4 r5.z, r4.xyzw, r7.xyzw
mov r6.xyzw, l(0,0,0,0)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyzw, l(0,0,0,0)
mov r9.x, l(0)
loop 
  ult r9.z, r9.x, r0.w
  ult r9.w, r9.x, l(4)
  and r9.z, r9.w, r9.z
  breakc_z r9.z
  dp4 r9.z, r3.xyzw, icb[r9.x + 0].xyzw
  ineg r9.w, r9.x
  ult r10.xyz, r9.xxxx, l(1, 2, 3, 0)
  and r11.y, r9.w, r10.y
  iadd r9.xy, r9.xxxx, l(1, -3, 0, 0)
  movc r11.z, r10.y, l(0), r9.y
  ieq r11.w, r10.z, l(0)
  mov r11.x, r10.x
  and r10.xyzw, r2.xyzw, r11.xyzw
  or r9.yw, r10.yyyw, r10.xxxz
  or r9.y, r9.w, r9.y
  imul null, r9.y, r9.y, l(3)
  mul r10.x, r9.z, cb3[r9.y + 0].w
  mul r10.y, r9.z, cb3[r9.y + 1].w
  mul r10.z, r9.z, cb3[r9.y + 2].w
  mad r6.xyz, r9.zzzz, cb3[r9.y + 0].xyzx, r6.xyzx
  mad r7.xyz, r9.zzzz, cb3[r9.y + 1].xyzx, r7.xyzx
  mad r8.xyz, r9.zzzz, cb3[r9.y + 2].xyzx, r8.xyzx
  mov r11.x, r6.w
  mov r11.y, r7.w
  mov r11.z, r8.w
  add r9.yzw, r10.xxyz, r11.xxyz
  mov r6.w, r9.y
  mov r7.w, r9.z
  mov r8.w, r9.w
endloop 
dp4 r2.x, r4.xyzw, r6.xyzw
dp4 r2.y, r4.xyzw, r7.xyzw
dp4 r2.z, r4.xyzw, r8.xyzw
dp3 r3.x, r0.xyzx, r6.xyzx
dp3 r3.y, r0.xyzx, r7.xyzx
dp3 r3.z, r0.xyzx, r8.xyzx
dp3 r0.x, r3.xyzx, cb5[0].xyzx
dp3 r0.y, r3.xyzx, cb5[1].xyzx
dp3 r0.z, r3.xyzx, cb5[2].xyzx
movc r1.xy, cb6[15].wwww, r1.zwzz, r1.xyxx
ieq r0.w, cb6[15].z, l(1)
if_nz r0.w
  mad r1.zw, cb0[34].xxxx, cb6[16].xxxy, r1.xxxy
else 
  ieq r0.w, cb6[15].z, l(2)
  if_nz r0.w
    itof r0.w, cb6[16].z
    div r3.x, cb0[34].x, r0.w
    frc r3.x, r3.x
    mul r3.x, r0.w, r3.x
    mul r3.x, r3.x, cb6[16].x
    round_ni r3.x, r3.x
    add r3.x, r1.x, r3.x
    add r3.x, r3.x, cb4[3].z
    div r1.z, r3.x, r0.w
    mad r1.w, cb0[34].x, cb6[16].y, r1.y
  else 
    sincos r3.x, r4.x, cb0[34].x
    mad r4.x, r4.x, cb6[16].x, r1.x
    mad r4.y, r3.x, cb6[16].y, r1.y
    mul r3.xy, cb0[34].xxxx, cb6[16].xyxx
    sincos null, r0.w, r3.x
    sincos r3.y, null, r3.y
    mul r3.yz, r1.yyxy, r3.yyyy
    mad r6.x, r0.w, r1.x, -r3.y
    mad r6.y, r0.w, r1.y, r3.z
    ieq r3.yzw, cb6[15].zzzz, l(0, 3, 4, 5)
    itof r0.w, cb6[16].z
    add r4.z, r0.w, l(-1.000000)
    add r3.x, r3.x, r3.x
    ishl r4.w, cb6[16].z, l(1)
    itof r4.w, r4.w
    div r3.x, r3.x, r4.w
    add r3.x, r3.x, l(0.500000)
    frc r3.x, r3.x
    mad r3.x, r3.x, l(2.000000), l(-1.000000)
    mad r3.x, r4.z, |r3.x|, l(0.500000)
    round_ni r3.x, r3.x
    add r3.x, r1.x, r3.x
    div r7.x, r3.x, r0.w
    mad r7.y, cb0[34].x, cb6[16].y, r1.y
    movc r1.xy, r3.wwww, r7.xyxx, r1.xyxx
    movc r1.xy, r3.zzzz, r6.xyxx, r1.xyxx
    movc r1.zw, r3.yyyy, r4.xxxy, r1.xxxy
  endif 
endif 
mul o4.xy, r1.zwzz, cb6[14].xyxx
mov r2.w, l(1.000000)
dp4 r1.x, r2.xyzw, cb5[0].xyzw
dp4 r1.y, r2.xyzw, cb5[1].xyzw
dp4 r1.z, r2.xyzw, cb5[2].xyzw
add r2.xyz, r1.xyzx, -cb1[174].xyzx
mul r3.x, r2.x, cb1[58].x
mul r3.y, r2.x, cb1[59].x
mul r3.z, r2.x, cb1[60].x
mul r3.w, r2.x, cb1[61].x
mul r4.x, r2.y, cb1[58].y
mul r4.y, r2.y, cb1[59].y
mul r4.z, r2.y, cb1[60].y
mul r4.w, r2.y, cb1[61].y
mad r6.x, r2.z, cb1[58].z, cb1[58].w
mad r6.y, r2.z, cb1[59].z, cb1[59].w
mad r6.z, r2.z, cb1[60].z, cb1[60].w
mad r6.w, r2.z, cb1[61].z, cb1[61].w
add r4.xyzw, r4.xyzw, r6.xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
add r1.xyz, -r1.xyzx, cb1[174].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov r4.x, cb5[0].w
mov r4.y, cb5[1].w
mov r4.z, cb5[2].w
add r6.xyz, -r4.xyzx, cb1[174].xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
sqrt r0.w, r0.w
add r0.w, r0.w, -cb6[15].x
add r1.w, -cb6[15].x, cb6[15].y
max r1.w, r1.w, l(0.000010)
div_sat r0.w, r0.w, r1.w
add r0.w, -r0.w, l(1.000000)
mul r1.w, cb6[12].y, l(0.000100)
exp r2.w, cb6[10].w
div r1.w, r2.w, r1.w
div r1.w, r1.w, cb1[179].w
add r1.w, r1.w, cb6[12].z
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r1.w, r0.w
mul r6.xyz, r0.wwww, cb6[10].xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
add r0.w, -|r0.w|, cb6[11].w
log r0.w, |r0.w|
mul r0.w, r0.w, cb6[12].w
exp r0.w, r0.w
mov r6.w, l(1.000000)
mul r1.xyzw, r0.wwww, r6.xyzw
mul_sat r0.w, cb7[0].x, l(28.000000)
mul r6.xyzw, r0.wwww, r1.xyzw
movc r1.xyzw, cb6[17].zzzz, r6.xyzw, r1.xyzw
mul r4.xy, r4.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
round_ni r4.xy, r4.xyxx
dp2 r0.w, r4.xyxx, l(17.122999, 23.455999, 0.000000, 0.000000)
mul r2.w, r0.w, l(0.200000)
round_z r2.w, r2.w
mad r0.w, r0.w, l(0.200000), -r2.w
dp4 r2.w, cb0[2].xyzw, cb6[1].xyzw
mul r0.w, |r0.w|, l(127.000000)
mad_sat r0.w, r2.w, l(128.000000), -r0.w
lt r0.w, r0.w, l(0.500000)
movc r0.w, r0.w, l(0), l(1.000000)
mul o0.xyzw, r0.wwww, r1.xyzw
mov r5.w, l(1.000000)
dp4 r1.x, r5.xyzw, cb8[0].xyzw
dp4 r1.y, r5.xyzw, cb8[1].xyzw
dp4 r1.z, r5.xyzw, cb8[2].xyzw
mov r1.w, l(1.000000)
dp4 r4.x, r1.xyzw, cb1[20].xyzw
dp4 r4.y, r1.xyzw, cb1[21].xyzw
dp4 o3.z, r1.xyzw, cb1[23].xyzw
mul o3.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 o1.w, r2.xyzx, cb1[173].xyzx
mov o1.xyz, r0.xyzx
mov o5.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 86ee7c9b651e7d9b-vs.txt
ne r12.w, r3.w, l(1.0)
if_nz r12.w
  add r12.w, r3.w, -r12.y
  mad r3.x, r12.w, r12.x, r3.x
endif

mul o2.xyz, r3.xywx, l(0.500000, -0.500000, 1.000000, 0.000000)
ret 
// Approximately 218 instruction slots used