// asmtool.py --fix-wd2-camera-pos --fix-wd2-view-dir-reconstruction -i -f --only-autofixed 72f057815c794b7a-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:52:16 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FogVolumes__VFOutputBuffer1           UAV  float2          3d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// VolumetricFog                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   x           4     NONE   float       
// SV_Position              0   xyzw        5      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[37], immediateIndexed
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear centroid v3.xyzw
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos --fix-wd2-view-dir-reconstruction -i -f --only-autofixed 72f057815c794b7a-ps.txt

mul r6.w, r6.x, r6.y
mul r8.x, r6.w, cb0[9].x
mul r8.y, r6.w, cb0[10].x
mul r8.z, r6.w, cb0[11].x
mul r8.w, r6.w, cb0[12].x
dp4 r9.x, r8.xyzw, cb0[17].xyzw
dp4 r9.y, r8.xyzw, cb0[18].xyzw
dp4 r9.z, r8.xyzw, cb0[19].xyzw
add r7.xyz, cb0[174].xyz, r9.xyz

ftoi r0.xy, v5.xyxx
utof r1.xy, r0.xyxx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
utof r1.zw, cb1[28].xxxy
div r1.xy, r1.xyxx, r1.zwzz
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), cb1[36].xyxx

// VFViewDirReconstruction adjustement (sun/moon volumetric fog) inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos --fix-wd2-view-dir-reconstruction -i -f --only-autofixed 72f057815c794b7a-ps.txt

add r1.x, r1.x, -r6.x

mul r1.xy, r1.xyxx, cb1[27].xyxx
mul r1.yzw, r1.yyyy, cb1[32].xxyz
mad r1.xyz, r1.xxxx, cb1[31].xyzx, r1.yzwy
add r1.xyz, r1.xyzx, cb1[33].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyz, -v0.xyzx, r7.xyzx
dp3 r1.w, v1.xyzx, r2.xyzx
dp3 r2.w, v1.xyzx, r1.xyzx
mov r3.x, v1.w
mov r3.y, v2.w
mov r3.z, v3.w
lt r3.w, |r2.w|, l(0.000001)
lt r4.x, r1.w, -r3.x
lt r4.y, v1.w, r1.w
or r4.x, r4.y, r4.x
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r3.x, -r1.w, -r3.x
mul r5.y, r2.w, r3.x
add r1.w, -r1.w, v1.w
mul r5.x, r2.w, r1.w
lt r1.w, r5.x, r5.y
movc r4.yz, r1.wwww, r5.xxyx, r5.yyxy
max r5.x, r4.y, l(0.000000)
min r5.y, r4.z, l(10000000.000000)
lt r1.w, r5.y, r5.x
movc r4.yz, r3.wwww, l(0,0,10000000.000000,0), r5.xxyx
movc r1.w, r3.w, r4.x, r1.w
not r2.w, r1.w
if_z r1.w
  dp3 r1.w, v2.xyzx, r2.xyzx
  dp3 r3.x, v2.xyzx, r1.xyzx
  lt r3.w, |r3.x|, l(0.000001)
  lt r4.x, r1.w, -r3.y
  lt r4.w, v2.w, r1.w
  or r4.x, r4.w, r4.x
  and r4.x, r2.w, r4.x
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
  add r3.y, -r1.w, -r3.y
  mul r5.y, r3.x, r3.y
  add r1.w, -r1.w, v2.w
  mul r5.x, r3.x, r1.w
  lt r1.w, r5.x, r5.y
  movc r3.xy, r1.wwww, r5.xyxx, r5.yxyy
  lt r1.w, r4.y, r3.x
  movc r5.x, r1.w, r3.x, r4.y
  lt r1.w, r3.y, r4.z
  movc r5.y, r1.w, r3.y, r4.z
  lt r1.w, r5.y, r5.x
  and r1.w, r1.w, r2.w
  movc r4.yz, r3.wwww, r4.yyzy, r5.xxyx
  movc r3.y, r3.w, r4.x, r1.w
  mov r3.x, r3.y
else 
  mov r3.xy, l(-1,-1,0,0)
endif 
not r3.yw, r3.yyyx
and r1.w, r3.w, r3.y
if_nz r1.w
  dp3 r1.w, v3.xyzx, r2.xyzx
  dp3 r1.x, v3.xyzx, r1.xyzx
  lt r1.y, |r1.x|, l(0.000001)
  lt r1.z, r1.w, -r3.z
  lt r2.x, v3.w, r1.w
  or r1.z, r1.z, r2.x
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  add r2.x, -r1.w, -r3.z
  mul r2.y, r1.x, r2.x
  add r1.w, -r1.w, v3.w
  mul r2.x, r1.x, r1.w
  lt r1.x, r2.x, r2.y
  movc r1.xw, r1.xxxx, r2.xxxy, r2.yyyx
  lt r2.x, r4.y, r1.x
  movc r2.x, r2.x, r1.x, r4.y
  lt r1.x, r1.w, r4.z
  movc r2.y, r1.x, r1.w, r4.z
  lt r1.x, r2.y, r2.x
  movc r4.yz, r1.yyyy, r4.yyzy, r2.xxyx
  movc r3.x, r1.y, r1.z, r1.x
endif 
if_z r3.x
  add r1.x, r4.y, l(-0.500000)
  add r1.x, r1.x, -cb1[1].w
  div r1.x, r1.x, cb1[1].z
  log r1.x, r1.x
  mad r1.x, r1.x, l(32.000000), l(0.500000)
  ftou r1.x, r1.x
  add r1.y, r4.z, -cb1[1].w
  add r1.y, r1.y, l(0.500000)
  div r1.y, r1.y, cb1[1].z
  log r1.y, r1.y
  mad r1.y, r1.y, l(32.000000), l(0.500000)
  ftou r1.y, r1.y
  umin r1.xy, r1.xyxx, l(255, 255, 0, 0)
  mov r2.xzw, v0.wwww
  mov r2.y, l(1.000000)
  mov r1.z, r1.x
  loop 
    uge r1.w, r1.z, r1.y
    breakc_nz r1.w
    mov r0.zw, r1.zzzz
    store_uav_typed u0.xyzw, r0.xyzw, r2.xyzw
    iadd r1.z, r1.z, l(1)
  endloop 
endif 
ret 
// Approximately 114 instruction slots used