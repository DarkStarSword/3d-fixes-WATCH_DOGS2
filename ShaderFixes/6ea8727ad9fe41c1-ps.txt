// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6ea8727ad9fe41c1-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:08:39 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer SceneProceduralShadowCaster
// {
//
//   float4 ProceduralShadowFactors[2]; // Offset:    0 Size:    32
//   float4 ProceduralShadowFactors2[2];// Offset:   32 Size:    32
//   float4 ProceduralShadowOrigin[2];  // Offset:   64 Size:    32
//   float4 ProceduralShadowPlane[2];   // Offset:   96 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    1        1
// DeferredLightingBase__SunShadowMaskTexture    texture  float2          2d    2        1
// DeferredLightingBase__ProbeLightingTexture    texture  float4          2d    3        1
// DeferredLightingCommon__AlbedoTexture__TexObj__    texture  float4          2d    4        1
// DeferredLightingCommon__NormalTexture__TexObj__    texture  float4          2d    5        1
// DeferredLightingCommon__OtherTexture__TexObj__    texture  float4          2d    6        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// SceneProceduralShadowCaster       cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 26

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r22.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6ea8727ad9fe41c1-ps.txt

mul r22.w, r22.x, r22.y
mul r24.x, r22.w, cb1[9].x
mul r24.y, r22.w, cb1[10].x
mul r24.z, r22.w, cb1[11].x
mul r24.w, r22.w, cb1[12].x
dp4 r25.x, r24.xyzw, cb1[17].xyzw
dp4 r25.y, r24.xyzw, cb1[18].xyzw
dp4 r25.z, r24.xyzw, cb1[19].xyzw
add r23.xyz, cb1[174].xyz, r25.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.zwxy
mov r0.w, l(1.000000)
dp2 r2.x, r0.zwzz, cb1[11].zwzz
dp2 r0.z, r0.zwzz, cb1[12].zwzz
div r0.z, -r2.x, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 6ea8727ad9fe41c1-ps.txt

add r22.w, -r2.z, -r22.y
mul r22.w, r22.w, r22.x
mad r2.x, -r22.w, cb1[9].x, r2.x

mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb1[17].xyzw
dp4 r0.y, r2.xyzw, cb1[18].xyzw
dp4 r0.z, r2.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t5.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t6.xyzw
mad r4.w, r4.w, l(255.000000), l(0.500000)
round_ni r4.w, r4.w
ftou r4.w, r4.w
ushr r4.w, r4.w, l(5)
dp3 r5.x, r3.xyzx, r3.xyzx
rsq r5.x, r5.x
mul r5.xyz, r3.xyzx, r5.xxxx
ieq r6.xyzw, r4.wwww, l(1, 4, 2, 0)
ge r5.w, r2.w, l(0.750000)
add r7.x, r2.w, l(-0.750000)
mad r7.x, r7.x, l(-0.599999905), l(1.000000)
movc r5.w, r5.w, r7.x, l(1.000000)
movc r5.w, r6.y, r5.w, r2.w
movc r5.w, r6.x, l(1.000000), r5.w
add r7.xyz, -r0.xyzx, r23.xyzx
dp3 r7.w, r7.xyzx, r7.xyzx
rsq r7.w, r7.w
mul r8.xyz, r7.wwww, r7.xyzx
mul r9.yzw, r2.xxyz, r5.wwww
if_nz r6.x
  mad r2.x, r3.w, l(0.500000), l(0.500000)
  mad r2.x, r2.x, l(65535.000000), l(0.500000)
  ftou r2.x, r2.x
  and r2.xy, r2.xxxx, l(255, 0x0000ff00, 0, 0)
  utof r2.xy, r2.xyxx
  mul r10.xz, r2.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r2.x, r2.w, l(255.000000)
  ftou r2.x, r2.x
  and r2.xy, r2.xxxx, l(15, 240, 0, 0)
  utof r2.xy, r2.xyxx
  mul r10.yw, r2.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r11.w, l(0)
  mov r2.x, r4.z
  mov r9.x, r9.y
else 
  mul r2.z, r4.y, r4.y
  max r4.y, r2.z, l(0.001000)
  ieq r2.z, r4.w, l(2)
  if_nz r2.z
    mad r2.z, r3.w, l(0.500000), l(0.500000)
    mad r2.z, r2.z, l(65535.000000), l(0.500000)
    ftou r2.z, r2.z
    and r12.xy, r2.zzzz, l(255, 0x0000ff00, 0, 0)
    utof r12.xy, r12.xyxx
    mov r12.z, r4.x
    mad r12.xyz, r12.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r2.z, -r2.w, l(1.000000)
    mul r2.z, r2.z, r9.y
    mad r9.x, r2.z, l(0.500000), r9.y
    dp3 r2.z, r12.xyzx, r12.xyzx
    rsq r2.z, r2.z
    mul r10.xzw, r2.zzzz, r12.xxyz
    mov r10.y, l(0)
    mov r11.w, l(0)
    mov r4.x, l(0.500000)
    mov r2.x, r4.z
  else 
    ieq r2.z, r4.w, l(3)
    if_nz r2.z
      mad r2.z, r3.w, l(0.500000), l(0.500000)
      mad r2.z, r2.z, l(65535.000000), l(0.500000)
      ftou r2.z, r2.z
      and r12.xyzw, r2.zzzz, l(0x0000f800, 2016, 31, 31)
      utof r12.xyzw, r12.xyzw
      ge r13.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r12.wyxw
      mul r2.z, r12.w, l(0.00249675405)
      mad r14.xyz, r12.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r14.xyz, r14.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r14.xyz, r14.xyzx
      movc r10.x, r13.x, r2.z, r14.x
      mul r12.xy, r12.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r10.zw, r13.yyyz, r12.xxxy, r14.yyyz
      mov r10.y, l(0)
      mov r11.w, l(0)
      mov r2.x, r4.z
    else 
      if_nz r6.y
        mad r2.z, r3.w, l(32767.000000), l(32767.000000)
        ftou r2.z, r2.z
        and r5.w, r2.z, l(255)
        utof r5.w, r5.w
        mul r5.w, r5.w, l(0.0123199718)
        ubfe r2.z, l(8), l(8), r2.z
        utof r2.z, r2.z
        mad r2.z, r2.z, l(0.0246399436), l(-3.14159274)
        sincos r12.x, r13.x, r5.w
        sincos r14.x, r15.x, r2.z
        mul r15.x, r12.x, r15.x
        mul r15.y, r12.x, r14.x
        mov r15.z, r13.x
        dp3 r2.z, r15.xyzx, r15.xyzx
        rsq r2.z, r2.z
        mul r10.xzw, r2.zzzz, r15.xxyz
        mul_sat r11.w, r2.w, l(0.250000)
        mov r10.y, l(0)
        mov r2.x, r4.z
      else 
        ieq r2.z, r4.w, l(5)
        lt r5.w, r3.z, l(0.900000)
        movc r12.xyz, r5.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r13.xyz, r3.zxyz, r12.xyzx
        mad r12.xyz, r3.yzxy, r12.yzxy, -r13.xyzx
        dp3 r5.w, r12.xyzx, r12.xyzx
        rsq r5.w, r5.w
        mul r12.xyz, r5.wwww, r12.xyzx
        mul r13.xyz, r3.zxyz, r12.yzxy
        mad r3.xyz, r3.yzxy, r12.zxyz, -r13.xyzx
        dp3 r5.w, r3.xyzx, r3.xyzx
        rsq r5.w, r5.w
        mul r3.xyz, r3.xyzx, r5.wwww
        mad r5.w, r3.w, l(2.000000), l(-1.000000)
        mul r5.w, r5.w, l(3.14159274)
        sincos r13.x, r14.x, r5.w
        mul r12.xyz, r12.xyzx, r13.xxxx
        mad r12.xyz, r3.xyzx, r14.xxxx, r12.xyzx
        mad r3.x, r3.w, l(0.500000), l(0.500000)
        mad r3.x, r3.x, l(65535.000000), l(0.500000)
        ftou r3.x, r3.x
        and r3.x, r3.x, l(255)
        utof r3.x, r3.x
        mul r3.x, r3.x, l(0.00392156886)
        movc r3.x, r4.w, l(0), r3.x
        mov r12.w, r4.z
        mov r3.yzw, l(0,0,0,0)
        movc r10.xyzw, r2.zzzz, r12.xwyz, r3.xwyz
        mov r12.x, r2.w
        mov r12.yz, l(0,0,0,0)
        movc r2.xy, r2.zzzz, r12.yxyy, r12.wzww
        mov r11.w, r2.y
      endif 
    endif 
    mov r9.x, r9.y
  endif 
endif 
ld_indexable(texture2d)(float,float,float,float) r2.yzw, r1.xyww, t3.wxyz
div r3.xyz, r2.yzwy, cb1[176].wwww
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t2.xyzw
or r1.y, r6.z, r6.y
if_nz r1.y
  dp3 r1.y, cb4[6].xyzx, cb0[31].xyzx
  mad_sat r1.z, r1.y, cb4[2].x, cb4[2].y
  mov r0.w, l(1.000000)
  dp4 r1.w, cb4[6].xyzw, r0.xyzw
  add_sat r2.y, r1.y, l(1.000000)
  mad r1.w, -r2.y, cb4[2].z, r1.w
  div r1.y, -r1.w, r1.y
  mad r2.yzw, cb0[31].xxyz, r1.yyyy, r0.xxyz
  add r12.xyz, -r0.xyzx, cb4[4].xyzx
  add r2.yzw, -r2.yyzw, cb4[4].xxyz
  dp3 r12.x, r12.xyzx, r12.xyzx
  dp3 r12.y, r2.yzwy, r2.yzwy
  mad_sat r2.yz, r12.xxyx, cb4[0].xxzx, cb4[0].yywy
  lt r1.y, l(0.000000), r1.y
  movc r1.y, r1.y, r2.y, r2.z
  add r1.y, r1.z, r1.y
  add_sat r1.y, r1.y, cb4[2].w
  dp3 r1.z, cb4[7].xyzx, cb0[31].xyzx
  mad_sat r1.w, r1.z, cb4[3].x, cb4[3].y
  dp4 r0.w, cb4[7].xyzw, r0.xyzw
  add_sat r2.y, r1.z, l(1.000000)
  mad r0.w, -r2.y, cb4[3].z, r0.w
  div r0.w, -r0.w, r1.z
  mad r2.yzw, cb0[31].xxyz, r0.wwww, r0.xxyz
  add r12.xyz, -r0.xyzx, cb4[5].xyzx
  add r2.yzw, -r2.yyzw, cb4[5].xxyz
  dp3 r12.x, r12.xyzx, r12.xyzx
  dp3 r12.y, r2.yzwy, r2.yzwy
  mad_sat r2.yz, r12.xxyx, cb4[1].xxzx, cb4[1].yywy
  lt r0.w, l(0.000000), r0.w
  movc r0.w, r0.w, r2.y, r2.z
  add r0.w, r1.w, r0.w
  add_sat r0.w, r0.w, cb4[3].w
  mul r0.w, r0.w, r1.y
  mul r1.x, r0.w, r1.x
endif 
dp3 r0.x, r0.xyzx, cb0[1].xyzx
add_sat r0.x, r0.x, cb0[1].w
mul r0.x, r0.x, r1.x
mad r0.x, r0.x, cb3[37].x, cb3[37].y
lt r0.y, l(0.000000), r0.x
lt r0.z, l(0.000000), r10.x
and r0.z, r0.z, r6.w
or r0.y, r0.z, r0.y
if_nz r0.y
  dp3 r1.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r0.y, r5.xyzx, cb2[2].xyzx
  mov_sat r0.z, r0.y
  dp3 r0.w, r10.xzwx, r10.xzwx
  rsq r0.w, r0.w
  mul r2.yzw, r0.wwww, r10.xxzw
  dp3 r0.w, r2.yzwy, cb2[2].xyzx
  add r0.w, r0.w, l(1.000000)
  mul_sat r0.w, r0.w, l(0.500000)
  mul r2.y, r0.w, r0.w
  mul r0.w, r0.w, r2.y
  movc r2.yzw, r6.zzzz, r10.xxzw, r5.xxyz
  movc r0.w, r6.z, r0.w, r0.z
  if_nz r6.x
    mov_sat r12.xyzw, r10.xyzw
    mov_sat r4.z, r2.x
    log r13.xyz, r9.xzwx
    mul r14.xyz, r12.yyyy, r13.xyzx
    mul r14.xyz, r14.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r13.xyz, r13.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r14.xyzx
    eq r5.w, r12.x, l(0.000000)
    add r6.w, -r4.z, l(1.000000)
    mul r14.xyz, r6.wwww, r9.xzwx
    mul r14.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r15.xyz, -r12.xxxx, r13.xyzx
    exp r15.xyz, r15.xyzx
    mul r15.xyz, r14.xyzx, r15.xyzx
    mul r15.xyz, r15.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r14.xyz, r5.wwww, r14.xyzx, r15.xyzx
    mov r14.w, l(0.180000)
    mul r6.w, r12.w, l(0.080000)
    mad r8.w, r12.x, l(48.750000), l(1.250000)
    mov_sat r9.y, r4.y
    mul r9.y, r9.y, r9.y
    max r9.y, r9.y, l(0.001000)
    mul r12.x, r12.z, r12.z
    max r12.x, r12.x, l(0.001000)
    lt r12.y, l(0.000000), r0.y
    lt r12.z, r0.y, l(0.000000)
    iadd r12.y, -r12.y, r12.z
    itof r12.y, r12.y
    mad r12.z, r0.y, r0.y, l(-1.000000)
    mad r12.z, r12.z, l(0.666860044), l(1.000000)
    sqrt r12.z, r12.z
    mul r12.y, r12.z, r12.y
    mad r0.y, r0.y, l(0.666860044), -r12.y
    mul r15.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r15.xyz, r0.yyyy, r5.xyzx, -r15.xyzx
    add r16.xyz, -r15.xyzx, -cb2[2].xyzx
    mad r15.xyz, r9.yyyy, r16.xyzx, r15.xyzx
    dp3 r0.y, r15.xyzx, r15.xyzx
    rsq r0.y, r0.y
    mul r16.xyz, r0.yyyy, r15.xyzx
    dp3 r12.y, r8.xyzx, r5.xyzx
    lt r12.z, l(0.000000), r12.y
    lt r13.w, r12.y, l(0.000000)
    iadd r12.z, -r12.z, r13.w
    itof r12.z, r12.z
    mad r13.w, r12.y, r12.y, l(-1.000000)
    mad r13.w, r13.w, l(0.666860044), l(1.000000)
    sqrt r13.w, r13.w
    mul r12.z, r12.z, r13.w
    mad r12.z, r12.y, l(0.666860044), -r12.z
    mul r17.xyz, r8.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r17.xyz, r12.zzzz, r5.xyzx, -r17.xyzx
    mad r18.xyz, -r7.xyzx, r7.wwww, -r17.xyzx
    mad r17.xyz, r9.yyyy, r18.xyzx, r17.xyzx
    dp3 r12.z, r17.xyzx, r17.xyzx
    rsq r12.z, r12.z
    mul r17.xyz, r12.zzzz, r17.xyzx
    dp3 r12.z, r5.xyzx, r16.xyzx
    mad r12.z, -|r12.z|, |r12.z|, l(1.000000)
    mad r12.z, -r12.z, l(0.444702327), l(1.000000)
    add r8.w, r8.w, r8.w
    sqrt r12.z, r12.z
    div r8.w, r8.w, r12.z
    mov_sat r12.y, r12.y
    mad r18.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
    dp3 r12.z, r18.xyzx, r18.xyzx
    rsq r12.z, r12.z
    mul r18.xyz, r12.zzzz, r18.xyzx
    dp3_sat r12.z, r5.xyzx, r18.xyzx
    mul r13.w, r9.y, r9.y
    mul r12.z, r12.z, r12.z
    mad r15.w, r9.y, r9.y, l(-1.000000)
    mad r12.z, r12.z, r15.w, l(1.000000)
    mul r12.z, r12.z, r12.z
    mul r12.z, r12.z, l(3.14159274)
    div r12.z, r13.w, r12.z
    mad r9.y, r9.y, l(0.500000), l(0.500000)
    mul r13.w, r0.z, r0.z
    mul r9.y, r9.y, r9.y
    mad r15.w, -r0.z, r0.z, l(1.000000)
    mul r15.w, r9.y, r15.w
    max r13.w, r13.w, l(1.000000047E-034)
    div r13.w, r15.w, r13.w
    add r13.w, r13.w, l(1.000000)
    sqrt r13.w, r13.w
    add r13.w, r13.w, l(1.000000)
    div r13.w, l(2.000000), r13.w
    mul r15.w, r12.y, r12.y
    mad r12.y, -r12.y, r12.y, l(1.000000)
    mul r9.y, r9.y, r12.y
    max r12.y, r15.w, l(1.000000047E-034)
    div r9.y, r9.y, r12.y
    add r9.y, r9.y, l(1.000000)
    sqrt r9.y, r9.y
    add r9.y, r9.y, l(1.000000)
    div r9.y, l(2.000000), r9.y
    mul r9.y, r9.y, r13.w
    mad r18.xyz, r0.zzzz, r0.zzzz, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r18.xyz, r18.xyzx
    add r19.xyz, -r0.zzzz, r18.zyzz
    add r18.xyz, r0.zzzz, r18.xyzx
    mul r20.xyz, r19.zyzz, r19.zyzz
    mul r21.xyz, r18.zyzz, r18.zyzz
    add r21.xyz, r21.xyzx, r21.xyzx
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r18.xyz, r0.zzzz, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r19.xyz, r0.zzzz, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r18.xyz, r18.xyzx, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r18.xyz, r18.xyzx, r20.xyzx
    mul r9.y, r9.y, r12.z
    mul r18.xyz, r18.xyzx, r9.yyyy
    mad r12.yzw, -r12.wwww, l(0.000000, 0.080000, 0.080000, 0.080000), r9.xxzw
    mad r12.yzw, r4.zzzz, r12.yyzw, r6.wwww
    dp3_sat r4.z, r5.xyzx, -r17.xyzx
    mad r15.xyz, -r15.xyzx, r0.yyyy, -r17.xyzx
    dp3 r0.y, r15.xyzx, r15.xyzx
    rsq r0.y, r0.y
    mul r15.xyz, r0.yyyy, r15.xyzx
    dp3 r0.y, r15.xyzx, -r16.xyzx
    dp3_sat r6.w, r5.xyzx, -r16.xyzx
    dp3_sat r9.y, r5.xyzx, r15.xyzx
    mul r13.w, r12.x, r12.x
    mul r9.y, r9.y, r9.y
    mad r15.x, r12.x, r12.x, l(-1.000000)
    mad r9.y, r9.y, r15.x, l(1.000000)
    mul r9.y, r9.y, r9.y
    mul r9.y, r9.y, l(3.14159274)
    div r9.y, r13.w, r9.y
    mad r12.x, r12.x, l(0.500000), l(0.500000)
    mul r13.w, r6.w, r6.w
    mul r12.x, r12.x, r12.x
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r12.x
    max r13.w, r13.w, l(1.000000047E-034)
    div r6.w, r6.w, r13.w
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r13.w, r4.z, r4.z
    mad r4.z, -r4.z, r4.z, l(1.000000)
    mul r4.z, r4.z, r12.x
    max r12.x, r13.w, l(1.000000047E-034)
    div r4.z, r4.z, r12.x
    add r4.z, r4.z, l(1.000000)
    sqrt r4.z, r4.z
    add r4.z, r4.z, l(1.000000)
    div r4.z, l(2.000000), r4.z
    mul r4.z, r4.z, r6.w
    dp3 r6.w, r12.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r6.w, r6.w, l(50.000000)
    add r0.y, -r0.y, l(1.000000)
    mul r12.x, r0.y, r0.y
    mul r12.x, r12.x, r12.x
    add r15.xyz, -r12.yzwy, r6.wwww
    mul r15.xyz, r12.xxxx, r15.xyzx
    mad r12.xyz, r15.xyzx, r0.yyyy, r12.yzwy
    mul r0.y, r4.z, r9.y
    mul r12.xyz, r12.xyzx, r0.yyyy
    mul r13.xyz, r8.wwww, -r13.xyzx
    exp r13.xyz, r13.xyzx
    mad r13.xyz, r12.xyzx, r13.xyzx, r18.xyzx
    movc r12.xyz, r5.wwww, r12.xyzx, r13.xyzx
    dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r13.xyzw, l(0,0,0,0)
  else 
    if_nz r6.z
      mul r15.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r15.w, l(0.0572957806)
      add r0.y, -r2.x, l(1.000000)
      mul r14.xyzw, r0.yyyy, r15.xyzw
    else 
      ieq r0.y, r4.w, l(3)
      if_nz r0.y
        mad r15.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
        dp3 r0.y, r15.xyzx, r15.xyzx
        rsq r0.y, r0.y
        mul r15.xyz, r0.yyyy, r15.xyzx
        dp3_sat r0.y, r15.xyzx, r8.xyzx
        mul r4.z, r4.x, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r5.w, r0.y, r0.y
        mul r5.w, r5.w, r5.w
        mad r6.w, -r4.x, l(0.080000), l(1.000000)
        mul r5.w, r5.w, r6.w
        mad r0.y, r5.w, r0.y, r4.z
        add_sat r4.z, r4.y, r4.y
        mad r15.w, r4.z, -r0.y, l(1.000000)
        mul r15.xyz, r9.xzwx, r15.wwww
        mul r14.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r6.y
          add r15.xyz, -r10.xzwx, r2.yzwy
          mad r16.xyz, r15.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r10.xzwx
          dp3 r0.y, r16.xyzx, r16.xyzx
          rsq r0.y, r0.y
          mul r16.xyz, r0.yyyy, r16.xyzx
          mad r15.xyz, r15.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r10.xzwx
          dp3 r0.y, r15.xyzx, r15.xyzx
          rsq r0.y, r0.y
          mul r15.xyz, r0.yyyy, r15.xyzx
          dp3 r0.y, r10.xzwx, cb2[2].xyzx
          dp3 r4.z, r16.xyzx, cb2[2].xyzx
          dp3 r5.w, r15.xyzx, cb2[2].xyzx
          mad r11.z, r0.y, l(0.500000), l(0.500000)
          mad r15.xy, r11.zwzz, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.x, r15.xyxx, t0.xyzw, s0, l(0.000000)
          mad r11.y, r4.z, l(0.500000), l(0.500000)
          mad r11.yz, r11.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.y, r11.yzyy, t0.xyzw, s0, l(0.000000)
          mad r11.x, r5.w, l(0.500000), l(0.500000)
          mad r11.xy, r11.xwxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r15.z, r11.xyxx, t0.xyzw, s0, l(0.000000)
          mul r15.xyz, r9.xzwx, r15.xyzx
          mov r15.w, l(0.0572957806)
          mul r14.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r0.y, r4.w, l(5)
          dp3 r4.z, r10.xzwx, cb2[2].xyzx
          mad r4.z, -r4.z, r4.z, l(1.000000)
          sqrt r4.z, r4.z
          mul r15.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r15.w, l(0.0572957806)
          add r5.w, -r2.x, l(1.000000)
          mul r15.xyzw, r5.wwww, r15.xyzw
          mul r16.xyzw, r4.zzzz, r15.xyzw
          mul r16.xyzw, r16.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r4.z, -r10.y, l(1.000000)
          mul r16.xyzw, r4.zzzz, r16.xyzw
          movc r14.xyzw, r0.yyyy, r16.xyzw, r15.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mul r0.y, r4.x, l(0.080000)
      mad r11.xyz, -r4.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
      mad r11.xyz, r2.xxxx, r11.xyzx, r0.yyyy
      dp3_sat r0.y, r5.xyzx, r8.xyzx
      mad r15.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
      dp3 r4.z, r15.xyzx, r15.xyzx
      rsq r4.z, r4.z
      mul r15.xyz, r4.zzzz, r15.xyzx
      dp3 r4.z, r15.xyzx, cb2[2].xyzx
      dp3_sat r5.w, r5.xyzx, r15.xyzx
      mul r6.w, r4.y, r4.y
      mul r5.w, r5.w, r5.w
      mad r8.w, r4.y, r4.y, l(-1.000000)
      mad r5.w, r5.w, r8.w, l(1.000000)
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(3.14159274)
      div r5.w, r6.w, r5.w
      mad r6.w, r4.y, l(0.500000), l(0.500000)
      mul r8.w, r0.z, r0.z
      mul r6.w, r6.w, r6.w
      mad r9.y, -r0.z, r0.z, l(1.000000)
      mul r9.y, r6.w, r9.y
      max r8.w, r8.w, l(1.000000047E-034)
      div r8.w, r9.y, r8.w
      add r8.w, r8.w, l(1.000000)
      sqrt r8.w, r8.w
      add r8.w, r8.w, l(1.000000)
      div r8.w, l(2.000000), r8.w
      mul r9.y, r0.y, r0.y
      mad r0.y, -r0.y, r0.y, l(1.000000)
      mul r0.y, r0.y, r6.w
      max r6.w, r9.y, l(1.000000047E-034)
      div r0.y, r0.y, r6.w
      add r0.y, r0.y, l(1.000000)
      sqrt r0.y, r0.y
      add r0.y, r0.y, l(1.000000)
      div r0.y, l(2.000000), r0.y
      mul r0.y, r0.y, r8.w
      dp3 r6.w, r11.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r6.w, r6.w, l(50.000000)
      add r4.z, -r4.z, l(1.000000)
      mul r8.w, r4.z, r4.z
      mul r8.w, r8.w, r8.w
      add r15.xyz, -r11.xyzx, r6.wwww
      mul r15.xyz, r8.wwww, r15.xyzx
      mad r11.xyz, r15.xyzx, r4.zzzz, r11.xyzx
      mul r0.y, r0.y, r5.w
      mul r12.xyz, r11.xyzx, r0.yyyy
      dp3 r12.w, r12.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r0.y, r4.w, l(3)
      if_nz r0.y
        mad r11.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
        dp3 r0.y, r11.xyzx, r11.xyzx
        rsq r0.y, r0.y
        mul r11.xyz, r0.yyyy, r11.xyzx
        dp3_sat r0.y, r11.xyzx, r8.xyzx
        mul r4.z, r4.x, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r5.w, r0.y, r0.y
        mul r5.w, r5.w, r5.w
        mad r6.w, -r4.x, l(0.080000), l(1.000000)
        mul r5.w, r5.w, r6.w
        mad r0.y, r5.w, r0.y, r4.z
        dp3_sat r4.z, r5.xyzx, r11.xyzx
        mul r5.w, r4.z, r4.z
        mad r11.xy, -r4.zzzz, r4.zzzz, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r5.w, r5.w, r11.x
        mul r6.w, r11.y, r11.y
        mul r8.w, r4.y, r4.y
        mad r11.xy, r4.yyyy, r4.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r9.y, r11.x, l(4.000000), l(1.000000)
        mul r9.y, r9.y, l(3.14159274)
        div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r9.y
        div r5.w, -r5.w, r11.y
        mul r5.w, r5.w, l(1.442695)
        exp r5.w, r5.w
        mul r5.w, r5.w, l(4.000000)
        div r5.w, r5.w, r6.w
        add r5.w, r5.w, l(1.000000)
        mul r5.w, r5.w, r9.y
        dp3_sat r6.w, r5.xyzx, r8.xyzx
        add r9.y, r0.z, r6.w
        mad r6.w, -r0.z, r6.w, r9.y
        mul r6.w, r6.w, l(4.000000)
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        mov_sat r6.w, r6.w
        div r8.w, l(2.000000), r8.w
        add r8.w, r8.w, l(-2.000000)
        max r8.w, r8.w, l(1.000000031E-022)
        log r4.z, r4.z
        mul r4.z, r4.z, r8.w
        exp r4.z, r4.z
        add r8.w, r8.w, l(8.000000)
        mul r4.z, r4.z, r8.w
        mul r4.z, r4.z, l(0.0397887342)
        min r4.z, r4.z, l(1.000000)
        add_sat r8.w, r4.y, r4.y
        mad r5.w, r5.w, r6.w, -r4.z
        mad r4.z, r8.w, r5.w, r4.z
        mul r15.xyz, r0.yyyy, r4.zzzz
        dp3 r15.w, r15.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r16.xyz, r10.xzwx
        mov r16.w, l(1.000000)
        mul r12.xyzw, r15.xyzw, r16.xyzw
      else 
        if_nz r6.y
          mul r11.xy, r4.xyxx, l(0.080000, 0.400000, 0.000000, 0.000000)
          mad r15.xyz, -r4.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r15.xyz, r2.xxxx, r15.xyzx, r11.xxxx
          dp3_sat r0.y, r5.xyzx, r8.xyzx
          mad r16.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r4.z, r16.xyzx, r16.xyzx
          rsq r4.z, r4.z
          mul r16.xyz, r4.zzzz, r16.xyzx
          dp3 r4.z, r16.xyzx, cb2[2].xyzx
          dp3_sat r5.w, r5.xyzx, r16.xyzx
          mul r6.w, r4.y, r4.y
          mul r5.w, r5.w, r5.w
          mad r8.w, r4.y, r4.y, l(-1.000000)
          mad r8.w, r5.w, r8.w, l(1.000000)
          mul r8.w, r8.w, r8.w
          mul r8.w, r8.w, l(3.14159274)
          div r6.w, r6.w, r8.w
          mad r11.xz, r4.yyyy, l(0.500000, 0.000000, 0.200000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
          mul r8.w, r0.z, r0.z
          mul r11.xz, r11.xxzx, r11.xxzx
          mad r9.y, -r0.z, r0.z, l(1.000000)
          mul r16.xy, r9.yyyy, r11.xzxx
          max r8.w, r8.w, l(1.000000047E-034)
          div r16.xy, r16.xyxx, r8.wwww
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r16.xy, r16.xyxx
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r16.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r16.xyxx
          mul r8.w, r0.y, r0.y
          mad r0.y, -r0.y, r0.y, l(1.000000)
          mul r11.xz, r0.yyyy, r11.xxzx
          max r0.y, r8.w, l(1.000000047E-034)
          div r11.xz, r11.xxzx, r0.yyyy
          add r11.xz, r11.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          sqrt r11.xz, r11.xxzx
          add r11.xz, r11.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          div r11.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r11.xxzx
          mul r11.xz, r11.xxzx, r16.xxyx
          dp3 r0.y, r15.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r0.y, r0.y, l(50.000000)
          add r4.z, -r4.z, l(1.000000)
          mul r8.w, r4.z, r4.z
          mul r8.w, r8.w, r8.w
          add r16.xyz, -r15.xyzx, r0.yyyy
          mul r16.xyz, r8.wwww, r16.xyzx
          mad r15.xyz, r16.xyzx, r4.zzzz, r15.xyzx
          mul r0.y, r6.w, r11.x
          mul r16.xyz, r15.xyzx, r0.yyyy
          dp3 r16.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r0.y, r11.y, r11.y
          mad r4.z, r11.y, r11.y, l(-1.000000)
          mad r4.z, r5.w, r4.z, l(1.000000)
          mul r4.z, r4.z, r4.z
          mul r4.z, r4.z, l(3.14159274)
          div r0.y, r0.y, r4.z
          mul r0.y, r11.z, r0.y
          mul r15.xyz, r15.xyzx, r0.yyyy
          dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r15.xyzw, r15.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r12.xyzw, r16.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r15.xyzw
        else 
          ieq r0.y, r4.w, l(5)
          dp3_sat r4.z, r9.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r4.z, r4.z, l(1.66666663), l(1.33333337)
          mul r11.xyz, r4.yyyy, r10.xzwx
          mad r11.xyz, r11.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.xyzx
          div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
          dp3 r5.w, -cb2[2].xyzx, r11.xyzx
          mul r6.w, r4.z, r4.z
          mad r8.w, -r5.w, r5.w, l(1.000000)
          mad r8.w, -r6.w, r8.w, l(1.000000)
          sqrt r9.y, r8.w
          mad r5.w, r4.z, r5.w, -r9.y
          mul r15.xyz, r11.xyzx, r5.wwww
          mad r15.xyz, r4.zzzz, cb2[2].xyzx, r15.xyzx
          lt r5.w, l(0.000000), r8.w
          and r5.w, r5.w, l(0x3f800000)
          mul r16.xyz, r5.wwww, r15.xyzx
          dp3 r8.w, -r8.xyzx, r11.xyzx
          mad r9.y, -r8.w, r8.w, l(1.000000)
          mad r6.w, -r6.w, r9.y, l(1.000000)
          sqrt r9.y, r6.w
          mad r8.w, r4.z, r8.w, -r9.y
          mul r11.xyz, r11.xyzx, r8.wwww
          mad r11.xyz, r4.zzzz, r8.xyzx, r11.xyzx
          lt r4.z, l(0.000000), r6.w
          and r4.z, r4.z, l(0x3f800000)
          mul r11.xyz, r4.zzzz, r11.xyzx
          mad r7.xyz, r7.xyzx, r7.wwww, cb2[2].xyzx
          dp3 r4.z, r7.xyzx, r7.xyzx
          rsq r4.z, r4.z
          mul r7.xyz, r4.zzzz, r7.xyzx
          dp3_sat r4.z, r5.xyzx, r8.xyzx
          dp3_sat r6.w, r5.xyzx, r7.xyzx
          dp3 r7.w, r7.xyzx, cb2[2].xyzx
          mov_sat r8.w, r7.w
          dp3 r9.y, r7.xyzx, r10.xzwx
          mul r17.xyz, r5.yzxy, r10.wxzw
          mad r17.xyz, r10.zwxz, r5.zxyz, -r17.xyzx
          dp3 r15.w, r17.xyzx, r17.xyzx
          rsq r15.w, r15.w
          mul r17.xyz, r15.wwww, r17.xyzx
          dp3 r7.x, r7.xyzx, r17.xyzx
          mul r7.yz, r4.xxyx, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r18.xyz, -r4.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r18.xyz, r2.xxxx, r18.xyzx, r7.yyyy
          dp3 r7.y, r18.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r7.y, r7.y, l(50.000000)
          add r8.w, -r8.w, l(1.000000)
          mul r15.w, r8.w, r8.w
          mul r15.w, r15.w, r15.w
          add r19.xyz, -r18.xyzx, r7.yyyy
          mul r20.xyz, r15.wwww, r19.xyzx
          mad r20.xyz, r20.xyzx, r8.wwww, r18.xyzx
          mul r7.y, r4.y, r4.y
          mul r8.w, r6.w, r6.w
          mul r9.y, r9.y, r9.y
          div r9.y, r9.y, r7.y
          mad r7.x, r7.x, r7.x, r9.y
          mad r6.w, r6.w, r6.w, r7.x
          mul r6.w, r6.w, r6.w
          mul r6.w, r7.z, r6.w
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          mul r7.x, r0.z, r0.z
          mad r9.y, -r0.z, r0.z, l(1.000000)
          mul r15.w, r7.y, r9.y
          max r7.x, r7.x, l(1.000000047E-034)
          div r15.w, r15.w, r7.x
          add r15.w, r15.w, l(1.000000)
          sqrt r15.w, r15.w
          add r15.w, r15.w, l(1.000000)
          div r15.w, l(2.000000), r15.w
          mul r16.w, r4.z, r4.z
          mad r4.z, -r4.z, r4.z, l(1.000000)
          mul r17.w, r4.z, r7.y
          max r16.w, r16.w, l(1.000000047E-034)
          div r17.w, r17.w, r16.w
          add r17.w, r17.w, l(1.000000)
          sqrt r17.w, r17.w
          add r17.w, r17.w, l(1.000000)
          div r17.w, l(2.000000), r17.w
          mul r15.w, r15.w, r17.w
          mul r6.w, r6.w, r15.w
          mul_sat r20.xyz, r20.xyzx, r6.wwww
          mul r20.xyz, r11.wwww, r20.xyzx
          mul r21.xyz, r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r15.xyz, -r15.xyzx, r5.wwww, -r11.xyzx
          dp3 r5.w, r15.xyzx, r15.xyzx
          rsq r5.w, r5.w
          mul r15.xyz, r5.wwww, r15.xyzx
          dp3_sat r5.w, r5.xyzx, -r16.xyzx
          dp3_sat r6.w, r5.xyzx, -r11.xyzx
          dp3_sat r11.x, r5.xyzx, r15.xyzx
          dp3_sat r11.y, r15.xyzx, -r16.xyzx
          dp3 r11.z, r15.xyzx, r10.xzwx
          dp3 r11.w, r15.xyzx, r17.xyzx
          add r11.y, -r11.y, l(1.000000)
          mul r15.x, r11.y, r11.y
          mul r15.x, r15.x, r15.x
          mul r15.xyz, r15.xxxx, r19.xyzx
          mad r15.xyz, r15.xyzx, r11.yyyy, r18.xyzx
          mul r11.y, r11.z, r11.z
          div r11.y, r11.y, r7.y
          mad r11.y, r11.w, r11.w, r11.y
          mad r11.x, r11.x, r11.x, r11.y
          mul r11.x, r11.x, r11.x
          mul r7.z, r7.z, r11.x
          div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
          mul r11.x, r5.w, r5.w
          mad r5.w, -r5.w, r5.w, l(1.000000)
          mul r5.w, r5.w, r7.y
          max r11.x, r11.x, l(1.000000047E-034)
          div r5.w, r5.w, r11.x
          add r5.w, r5.w, l(1.000000)
          sqrt r5.w, r5.w
          add r5.w, r5.w, l(1.000000)
          div r5.w, l(2.000000), r5.w
          mul r11.x, r6.w, r6.w
          mad r6.w, -r6.w, r6.w, l(1.000000)
          mul r6.w, r6.w, r7.y
          max r11.x, r11.x, l(1.000000047E-034)
          div r6.w, r6.w, r11.x
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.w, l(2.000000), r6.w
          mul r5.w, r5.w, r6.w
          mul r5.w, r5.w, r7.z
          mul_sat r11.xyz, r15.xyzx, r5.wwww
          sqrt r15.xyz, r9.xzwx
          mad r11.xyz, -r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r11.xyzx
          mad r11.xyz, r15.xyzx, r11.xyzx, r21.xyzx
          dp3 r11.w, r11.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r5.w, r4.y, r4.y, l(-1.000000)
          mad r5.w, r8.w, r5.w, l(1.000000)
          mul r5.w, r5.w, r5.w
          mul r5.w, r5.w, l(3.14159274)
          div r5.w, r7.y, r5.w
          mad r6.w, r4.y, l(0.500000), l(0.500000)
          mul r6.w, r6.w, r6.w
          mul r7.y, r9.y, r6.w
          div r7.x, r7.y, r7.x
          add r7.x, r7.x, l(1.000000)
          sqrt r7.x, r7.x
          add r7.x, r7.x, l(1.000000)
          div r7.x, l(2.000000), r7.x
          mul r4.z, r4.z, r6.w
          div r4.z, r4.z, r16.w
          add r4.z, r4.z, l(1.000000)
          sqrt r4.z, r4.z
          add r4.z, r4.z, l(1.000000)
          div r4.z, l(2.000000), r4.z
          mul r4.z, r4.z, r7.x
          add r6.w, -r7.w, l(1.000000)
          mul r7.x, r6.w, r6.w
          mul r7.x, r7.x, r7.x
          mul r7.xyz, r7.xxxx, r19.xyzx
          mad r7.xyz, r7.xyzx, r6.wwww, r18.xyzx
          mul r4.z, r4.z, r5.w
          mul r7.xyz, r7.xyzx, r4.zzzz
          dp3 r7.w, r7.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r12.xyzw, r0.yyyy, r11.xyzw, r7.xyzw
        endif 
      endif 
    endif 
    if_nz r6.z
      mov r13.xyzw, l(0,0,0,0)
    else 
      ieq r0.y, r4.w, l(3)
      if_nz r0.y
        mov r13.xyzw, l(0,0,0,0)
      else 
        if_nz r6.y
          mov r13.xyzw, l(0,0,0,0)
        else 
          dp3 r0.y, r10.xzwx, cb2[2].xyzx
          mad r0.y, -r0.y, r0.y, l(1.000000)
          sqrt r0.y, r0.y
          mul r4.z, r10.y, l(-1.500000)
          dp3 r5.w, r2.yzwy, cb2[2].xyzx
          mad r6.w, -r10.y, l(-1.500000), r5.w
          div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), -r4.z
          mul_sat r4.z, r4.z, r6.w
          mad r6.w, r4.z, l(-2.000000), l(3.000000)
          mul r4.z, r4.z, r4.z
          mul r4.z, r4.z, r6.w
          mul r7.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r7.w, l(0.0572957806)
          add r6.w, -r2.x, l(1.000000)
          mul r7.xyzw, r6.wwww, r7.xyzw
          mul r7.xyzw, r4.zzzz, r7.xyzw
          mul r7.xyzw, r0.yyyy, r7.xyzw
          mul r7.xyzw, r10.yyyy, r7.xyzw
          mul r7.xyzw, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r11.xy, r4.wwww, l(5, 8, 0, 0)
          max r0.y, |r5.w|, l(0.000001)
          rcp r0.y, r0.y
          mul r0.y, r0.y, r5.w
          dp3 r2.y, r2.yzwy, r8.xyzx
          max r2.z, |r2.y|, l(0.000001)
          rcp r2.z, r2.z
          mul r2.y, r2.z, r2.y
          eq r0.y, r0.y, r2.y
          movc r15.w, r0.y, l(0), l(1.000000)
          mul r2.yzw, r6.wwww, r10.xxzw
          mul r15.xyz, r15.wwww, r2.yzwy
          mul r15.xyzw, r15.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r16.xyz, r9.xzwx, r10.xxxx
          mov r16.w, r10.x
          mul r16.xyzw, r16.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r15.xyzw, r11.yyyy, r15.xyzw, r16.xyzw
          movc r13.xyzw, r11.xxxx, r7.xyzw, r15.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r0.y, r6.y, l(1.000000), r0.w
  dp3 r0.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r2.y, r0.x, r10.x
  add r0.w, -r0.y, r0.w
  mad r0.w, r2.y, r0.w, r0.y
  movc r0.y, r4.w, r0.y, r0.w
  mul r7.xyzw, r0.zzzz, r12.xyzw
  mad r7.xyzw, r14.xyzw, r0.yyyy, r7.xyzw
  add r7.xyzw, r13.xyzw, r7.xyzw
  mul r0.xyzw, r0.xxxx, r7.xyzw
  mov r1.xyz, cb2[0].xyzx
  mul r0.xyzw, r0.xyzw, r1.xyzw
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
dp3 r3.w, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r6.y
  mul r3.xyz, r3.xyzx, r9.xzwx
  mul r1.xyzw, r3.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r6.x
    mov_sat r10.xy, r10.xyxx
    mov_sat r2.x, r2.x
    log r2.yzw, r9.xxzw
    mul r6.xyw, r10.yyyy, r2.yzyw
    mul r6.xyw, r6.xyxw, l(-12.780000, -12.780000, 0.000000, -12.780000)
    mad r2.yzw, r2.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r6.xxyw
    eq r4.z, r10.x, l(0.000000)
    add r5.w, -r2.x, l(1.000000)
    mul r6.xyw, r5.wwww, r9.xzxw
    mul r6.xyw, r6.xyxw, l(0.318309873, 0.318309873, 0.000000, 0.318309873)
    mul r2.yzw, r2.yyzw, -r10.xxxx
    exp r2.yzw, r2.yyzw
    mul r2.yzw, r6.xxyw, r2.yyzw
    mul r2.yzw, r2.yyzw, l(0.000000, 0.444444448, 0.444444448, 0.444444448)
    movc r7.xyz, r4.zzzz, r6.xywx, r2.yzwy
    mov r7.w, l(0.180000)
  else 
    if_nz r6.z
      mul r6.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r6.w, l(0.0572957806)
      add r2.y, -r2.x, l(1.000000)
      mul r7.xyzw, r2.yyyy, r6.xyzw
    else 
      ieq r2.y, r4.w, l(3)
      if_nz r2.y
        dp3 r2.y, r8.xyzx, r8.xyzx
        min r2.y, r2.y, l(1.000000)
        mul r2.z, r4.x, l(0.080000)
        add r2.y, -r2.y, l(1.000000)
        mul r2.w, r2.y, r2.y
        mul r2.w, r2.w, r2.w
        mad r4.x, -r4.x, l(0.080000), l(1.000000)
        mul r2.w, r2.w, r4.x
        mad r2.y, r2.w, r2.y, r2.z
        add_sat r2.z, r4.y, r4.y
        mad r6.w, r2.z, -r2.y, l(1.000000)
        mul r6.xyz, r6.wwww, r9.xzwx
        mul r7.xyzw, r6.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r6.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r6.w, l(0.0572957806)
        add r2.w, -r2.x, l(1.000000)
        mul r6.xyzw, r2.wwww, r6.xyzw
        mov r2.xyz, r6.xyzx
        mul r11.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r2.x, -r10.y, l(1.000000)
        mul r12.xyzw, r10.yyyy, r6.xyzw
        mul r12.xyzw, r12.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r11.xyzw, r11.xyzw, r2.xxxx, r12.xyzw
        ieq r2.xy, r4.wwww, l(5, 8, 0, 0)
        dp3 r2.z, r5.xyzx, r8.xyzx
        max r4.x, |r2.z|, l(0.000001)
        rcp r4.x, r4.x
        mul r2.z, r2.z, r4.x
        eq r2.z, r2.z, l(0.000000)
        movc r4.w, r2.z, l(0), l(1.000000)
        mul r5.xyz, r2.wwww, r10.xzwx
        mul r4.xyz, r4.wwww, r5.xyzx
        mad r4.xyzw, r4.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r6.xyzw
        mul r10.yzw, r9.wwxz, r10.xxxx
        mad r5.xyzw, r10.zwyx, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r6.xyzw
        movc r4.xyzw, r2.yyyy, r4.xyzw, r5.xyzw
        movc r7.xyzw, r2.xxxx, r11.xyzw, r4.xyzw
      endif 
    endif 
  endif 
  mul r1.xyzw, r3.xyzw, r7.xyzw
endif 
add r0.xyzw, r0.xyzw, r1.xyzw
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r0.x, r0.w, cb1[176].w
max r0.x, r0.x, l(0.000000)
min o0.w, r0.x, l(64512.000000)
ret 
// Approximately 931 instruction slots used