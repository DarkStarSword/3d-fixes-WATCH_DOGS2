// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 28a42ed9e0dd8374-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:04 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Hair
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 AlphaUVTiling1;             // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 MaskUVTiling1;              // Offset:   48 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   64 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   80 Size:    12
//   float AlphaBlendFadeOutEnd;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12
//   float AlphaBlendFadeOutStart;      // Offset:  108 Size:     4 [unused]
//   float AlphaBlendTransition;        // Offset:  112 Size:     4 [unused]
//   float AlphaBlendValue;             // Offset:  116 Size:     4 [unused]
//   float AlphaTestValue;              // Offset:  120 Size:     4
//   float HairFilterStrength;          // Offset:  124 Size:     4 [unused]
//   float LuminanceAsAlphaMultiplier;  // Offset:  128 Size:     4
//   float MaskChannelUsageBlue;        // Offset:  132 Size:     4 [unused]
//   float MaskChannelUsageGreen;       // Offset:  136 Size:     4 [unused]
//   float MaskChannelUsageRed;         // Offset:  140 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  144 Size:     4 [unused]
//   float Reflectance;                 // Offset:  148 Size:     4
//   float Roughness;                   // Offset:  152 Size:     4
//   float TangentAngle;                // Offset:  156 Size:     4
//   float Translucency;                // Offset:  160 Size:     4
//   int DiffuseColor1BlendingType;     // Offset:  164 Size:     4
//   int HairFilterUVChannel;           // Offset:  168 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  172 Size:     4
//   bool AlphaBlendEnabled;            // Offset:  176 Size:     4 [unused]
//   bool LuminanceAsAlpha;             // Offset:  180 Size:     4
//   bool MirroredMapping;              // Offset:  184 Size:     4
//   bool UseColorMask;                 // Offset:  188 Size:     4
//   bool UseHairFilter;                // Offset:  192 Size:     4 [unused]
//   bool UseHairFilterMask;            // Offset:  196 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48 [unused]
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Hair__AlphaTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Hair__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// MaterialWD2Hair__AlphaTexture1__TexObj__    texture  float4          2d    0        1
// MaterialWD2Hair__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialWD2Hair                   cbuffer      NA          NA    2        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   x zw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float       
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xy          4   TARGET   float   xy  
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear sample v0.xzw
dcl_input_ps linear sample v1.xyz
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyz
dcl_input_ps linear sample v4.xyz
dcl_input_ps linear sample v5.xyzw
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 28a42ed9e0dd8374-ps.txt

mul r5.w, r5.x, r5.y
mul r7.x, r5.w, cb1[9].x
mul r7.y, r5.w, cb1[10].x
mul r7.z, r5.w, cb1[11].x
mul r7.w, r5.w, cb1[12].x
dp4 r8.x, r7.xyzw, cb1[17].xyzw
dp4 r8.y, r7.xyzw, cb1[18].xyzw
dp4 r8.z, r7.xyzw, cb1[19].xyzw
add r6.xyz, cb1[174].xyz, r8.xyz

sample_b_indexable(texture2d)(float,float,float,float) r0.x, v5.xyxx, t0.xyzw, s0, cb1[180].x
add r0.x, r0.x, -cb2[7].z
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
add r0.xyz, -cb2[5].xyzx, cb2[6].xyzx
mad r0.xyz, v0.xxxx, r0.xyzx, cb2[5].xyzx
movc r0.xyz, cb2[11].wwww, r0.xyzx, cb2[5].xyzx
add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r2.xyz, v5.zwzz, t1.xyzw, s1, cb1[180].x
add r3.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r3.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, -r3.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r2.xyzx
mad r3.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r1.xyzx
ge r4.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
dp3 r0.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mul_sat r0.w, r0.w, cb2[8].x
movc r0.w, cb2[11].y, r0.w, l(1.000000)
and r2.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mad r1.xyz, r2.xyzx, r3.xyzx, r1.xyzx
ieq r1.w, cb2[10].y, l(1)
movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
dp3 r1.x, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r1.y, -r0.w, l(1.000000)
mad r0.w, r1.x, r1.y, r0.w
mul o0.w, r0.w, v0.w
iadd r0.w, cb2[10].w, l(1)
ult r0.w, r0.w, l(1)
movc r0.w, r0.w, l(0), l(21)
add r1.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb0[r0.w + 4].xyxx
add_sat r0.w, cb0[3].w, cb3[5].z
add r1.z, cb0[3].x, -cb3[5].x
mad r0.w, r0.w, r1.z, cb3[5].x
mad r1.xy, r0.wwww, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul o0.xyz, r0.xyzx, r1.xxxx
mul o2.y, r1.y, cb2[9].z
deriv_rtx_coarse r0.xy, v5.zwzz
deriv_rty_coarse r0.zw, v5.zzzw
dp2 r1.x, r0.xzxx, r0.xzxx
rsq r1.x, r1.x
mul r0.xz, r0.xxzx, r1.xxxx
dp2 r1.x, r0.ywyy, r0.ywyy
rsq r1.x, r1.x
mul r0.yw, r0.wwwy, r1.xxxx
mul r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.y, -r0.z
lt r0.y, l(0.000000), r0.x
lt r0.x, r0.x, l(0.000000)
iadd r0.x, -r0.y, r0.x
itof r0.x, r0.x
movc r0.x, cb2[11].z, r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, v2.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v1.xyzx
movc r1.xyz, v7.xxxx, r1.xyzx, -r1.xyzx
lt r0.w, r1.z, l(0.900000)
movc r2.xyz, r0.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
mul r3.xyz, r1.zxyz, r2.xyzx
mad r2.xyz, r1.yzxy, r2.yzxy, -r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r1.zxyz, r2.yzxy
mad r3.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
mov o1.xyz, r1.xyzx
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.y, |r0.x|, |r0.w|
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
min r0.z, |r0.x|, |r0.w|
mul r0.y, r0.y, r0.z
mul r0.z, r0.y, r0.y
mad r1.x, r0.z, l(0.0208350997), l(-0.085133)
mad r1.x, r0.z, r1.x, l(0.180141)
mad r1.x, r0.z, r1.x, l(-0.330299497)
mad r0.z, r0.z, r1.x, l(0.999866)
mul r1.x, r0.z, r0.y
mad r1.x, r1.x, l(-2.000000), l(1.57079637)
lt r1.y, |r0.x|, |r0.w|
and r1.x, r1.y, r1.x
mad r0.y, r0.y, r0.z, r1.x
lt r0.z, r0.x, -r0.x
and r0.z, r0.z, l(0xc0490fdb)
add r0.y, r0.z, r0.y
min r0.z, r0.x, r0.w
max r0.x, r0.x, r0.w
ge r0.x, r0.x, -r0.x
lt r0.z, r0.z, -r0.z
and r0.x, r0.x, r0.z
movc r0.x, r0.x, -r0.y, r0.y
mad r0.x, r0.x, l(0.318309873), cb2[9].w
add r0.xy, r0.xxxx, l(0.500000, 1.500000, 0.000000, 0.000000)
mul r0.y, r0.y, l(0.500000)
round_ni r0.y, r0.y
mad r0.x, -r0.y, l(2.000000), r0.x
mad o1.w, r0.x, l(0.500000), l(0.500000)
mul o2.z, v0.z, cb2[10].x
mov o2.x, cb2[9].y
mov o2.w, l(0.627451)
mov o3.xyzw, l(0,0,0,0)
div r0.xy, v3.xyxx, v3.zzzz
div r0.zw, v4.xxxy, v4.zzzz
add o4.xy, -r0.zwzz, r0.xyxx
ret 
// Approximately 108 instruction slots used