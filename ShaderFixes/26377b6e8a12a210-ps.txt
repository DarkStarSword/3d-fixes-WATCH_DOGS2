// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 26377b6e8a12a210-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:03 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4 [unused]
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer GIFillLightFog
// {
//
//   bool VFIsInsideAnyGIBox;           // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    0        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    2        1
// GIFillLightFog__VFLightOutputBuffer        UAV  float4          3d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// VolumetricFog                     cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// GIFillLightFog                    cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_IsFrontFace           0   x           1    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[37], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_temps 13

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 26377b6e8a12a210-ps.txt

mul r9.w, r9.x, r9.y
mul r11.x, r9.w, cb0[9].x
mul r11.y, r9.w, cb0[10].x
mul r11.z, r9.w, cb0[11].x
mul r11.w, r9.w, cb0[12].x
dp4 r12.x, r11.xyzw, cb0[17].xyzw
dp4 r12.y, r11.xyzw, cb0[18].xyzw
dp4 r12.z, r11.xyzw, cb0[19].xyzw
add r10.xyz, cb0[174].xyz, r12.xyz

ftoi r0.xy, v0.xyxx
utof r1.xy, r0.xyxx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
utof r1.zw, cb1[28].xxxy
div r1.xy, r1.xyxx, r1.zwzz
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), cb1[36].xyxx
mul r1.xy, r1.xyxx, cb1[27].xyxx
mul r1.yzw, r1.yyyy, cb1[32].xxyz
mad r1.xyz, r1.xxxx, cb1[31].xyzx, r1.yzwy
add r1.xyz, r1.xyzx, cb1[33].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
mov r3.x, l(0)
mul r3.z, cb2[21].z, l(0.500000)
add r3.xyz, r3.xxzx, cb2[19].xyzx
add r3.xyz, -r3.xyzx, r10.xyzx
dp3 r1.w, r3.xyzx, cb2[0].xyzx
dp3 r2.w, r2.xyzx, cb2[0].xyzx
movc r4.xy, cb3[0].xxxx, l(2.000000,-2.000000,0,0), l(-1.000000,1.000000,0,0)
mad r4.yzw, cb2[21].xxyz, l(0.000000, -0.500000, -0.500000, -0.500000), r4.yyyy
mad r5.xyz, cb2[21].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xxxx
lt r3.w, |r2.w|, l(0.000001)
lt r4.x, r1.w, r4.y
lt r5.w, r5.x, r1.w
or r4.x, r4.x, r5.w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r4.y, -r1.w, r4.y
mul r6.y, r2.w, r4.y
add r1.w, -r1.w, r5.x
mul r6.x, r2.w, r1.w
lt r1.w, r6.x, r6.y
movc r5.xw, r1.wwww, r6.xxxy, r6.yyyx
max r6.x, r5.x, l(0.000000)
min r6.y, r5.w, l(10000000.000000)
lt r1.w, r6.y, r6.x
movc r5.xw, r3.wwww, l(0,0,0,10000000.000000), r6.xxxy
movc r1.w, r3.w, r4.x, r1.w
not r2.w, r1.w
if_z r1.w
  dp3 r1.w, r3.xyzx, cb2[1].xyzx
  dp3 r3.w, r2.xyzx, cb2[1].xyzx
  lt r4.x, |r3.w|, l(0.000001)
  lt r4.y, r1.w, r4.z
  lt r6.x, r5.y, r1.w
  or r4.y, r4.y, r6.x
  and r4.y, r2.w, r4.y
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  add r4.z, -r1.w, r4.z
  mul r6.y, r3.w, r4.z
  add r1.w, -r1.w, r5.y
  mul r6.x, r3.w, r1.w
  lt r1.w, r6.x, r6.y
  movc r6.xy, r1.wwww, r6.xyxx, r6.yxyy
  lt r1.w, r5.x, r6.x
  movc r7.x, r1.w, r6.x, r5.x
  lt r1.w, r6.y, r5.w
  movc r7.y, r1.w, r6.y, r5.w
  lt r1.w, r7.y, r7.x
  and r1.w, r1.w, r2.w
  movc r5.xw, r4.xxxx, r5.xxxw, r7.xxxy
  movc r4.y, r4.x, r4.y, r1.w
  mov r4.x, r4.y
else 
  mov r4.xy, l(-1,-1,0,0)
endif 
not r4.yz, r4.yyxy
and r1.w, r4.z, r4.y
if_nz r1.w
  dp3 r1.w, r3.xyzx, cb2[2].xyzx
  dp3 r2.x, r2.xyzx, cb2[2].xyzx
  lt r2.y, |r2.x|, l(0.000001)
  lt r2.z, r1.w, r4.w
  lt r2.w, r5.z, r1.w
  or r2.z, r2.w, r2.z
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
  add r2.w, -r1.w, r4.w
  mul r3.y, r2.x, r2.w
  add r1.w, -r1.w, r5.z
  mul r3.x, r2.x, r1.w
  lt r1.w, r3.x, r3.y
  movc r2.xw, r1.wwww, r3.xxxy, r3.yyyx
  lt r1.w, r5.x, r2.x
  movc r3.x, r1.w, r2.x, r5.x
  lt r1.w, r2.w, r5.w
  movc r3.y, r1.w, r2.w, r5.w
  lt r1.w, r3.y, r3.x
  movc r5.xw, r2.yyyy, r5.xxxw, r3.xxxy
  movc r4.x, r2.y, r2.z, r1.w
endif 
not r1.w, r4.x
add r2.x, r5.x, l(-0.500000)
add r2.x, r2.x, -cb1[1].w
div r2.x, r2.x, cb1[1].z
log r2.x, r2.x
mad r2.x, r2.x, l(32.000000), l(0.500000)
ftou r2.x, r2.x
umin r2.x, r2.x, l(255)
ult r2.y, r2.x, l(128)
and r1.w, r1.w, r2.y
if_nz r1.w
  add r1.w, r5.w, -cb1[1].w
  add r1.w, r1.w, l(0.500000)
  div r1.w, r1.w, cb1[1].z
  log r1.w, r1.w
  mad r1.w, r1.w, l(32.000000), l(0.500000)
  ftou r1.w, r1.w
  umin r1.w, r1.w, l(255)
  add r2.yzw, cb2[16].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
  div r2.yz, r2.yyzy, cb2[16].xxyx
  lt r3.x, l(0.000000), cb2[17].y
  lt r3.y, cb2[17].y, l(1.000000)
  add r3.z, -cb2[17].y, l(1.000000)
  add r2.w, r2.w, -cb2[17].x
  div r4.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb2[16].xyzx
  mov r5.w, l(1.000000)
  mov r3.w, r2.x
  loop 
    ult r4.w, r1.w, r3.w
    breakc_nz r4.w
    utof r4.w, r3.w
    mul r4.w, r4.w, l(0.031250)
    exp r4.w, r4.w
    mad r4.w, r4.w, cb1[1].z, cb1[1].w
    mad r5.xyz, r1.xyzx, r4.wwww, r10.xyzx
    dp4 r6.x, r5.xyzw, cb2[12].xyzw
    dp4 r6.y, r5.xyzw, cb2[13].xyzw
    dp4_sat r5.x, r5.xyzw, cb2[14].xyzw
    add r5.yz, r6.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r6.xy, r5.yzyy, r2.yzyy, r4.xyxx
    div_sat r5.y, r5.x, cb2[17].y
    mul r5.y, r5.y, cb2[17].x
    add_sat r5.x, r5.x, -cb2[17].y
    div r5.x, r5.x, r3.z
    log r5.x, |r5.x|
    mul r5.x, r5.x, cb2[16].w
    exp r5.x, r5.x
    mul r5.x, r2.w, r5.x
    and r5.xy, r3.yxyy, r5.xyxx
    add r5.x, r5.x, r5.y
    div r5.x, r5.x, cb2[16].z
    add r6.z, r4.z, r5.x
    sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r6.xyzx, t2.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r6.xyzx, t1.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0, l(0.000000)
    log r7.xyzw, |r7.xyzw|
    mul r7.xyzw, r7.xyzw, cb2[22].xxxx
    exp r7.xyzw, r7.xyzw
    log r8.xyzw, |r8.xyzw|
    mul r8.xyzw, r8.xyzw, cb2[22].xxxx
    exp r8.xyzw, r8.xyzw
    log r6.xyzw, |r6.xyzw|
    mul r6.xyzw, r6.xyzw, cb2[22].xxxx
    exp r6.xyzw, r6.xywz
    add r5.xyz, r7.xyzx, r8.xyzx
    add r5.xyz, r6.xywx, r5.xyzx
    mov r6.x, r7.w
    mov r6.y, r8.w
    add r5.xyz, r5.xyzx, r6.xyzx
    mul r5.xyz, r5.xyzx, cb0[176].wwww
    mul r6.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
    mad_sat r4.w, r4.w, cb1[3].z, cb1[3].w
    add r6.w, -r4.w, l(1.000000)
    mov r0.zw, r3.wwww
    store_uav_typed u0.xyzw, r0.xyzw, r6.xyzw
    iadd r3.w, r3.w, l(1)
  endloop 
endif 
ret 
// Approximately 170 instruction slots used