// asmtool.py --fix-wd2-volumetric-fog -i --only-autofixed --ignore-other-errors e3f0475f96a752cb-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:01 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Confetti
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 DiffuseColors[10];          // Offset:   16 Size:   160 [unused]
//   float4 TextureAtlasSize;           // Offset:  176 Size:    16 [unused]
//   float3 EmissiveIntensity;          // Offset:  192 Size:    12 [unused]
//   float AlphaTestValue;              // Offset:  204 Size:     4 [unused]
//   float2 VisualSizeScale;            // Offset:  208 Size:     8
//   float BendDisplacement;            // Offset:  216 Size:     4 [unused]
//   float DiffuseColorCount;           // Offset:  220 Size:     4 [unused]
//   float Metalness;                   // Offset:  224 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  228 Size:     4 [unused]
//   float OmniSpotAttenuation;         // Offset:  232 Size:     4 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float Roughness;                   // Offset:  240 Size:     4 [unused]
//   float SunLightAttenuation;         // Offset:  244 Size:     4 [unused]
//   float TextureAtlasAnimFrames;      // Offset:  248 Size:     4 [unused]
//   float TextureAtlasSelection;       // Offset:  252 Size:     4 [unused]
//   float Translucency;                // Offset:  256 Size:     4 [unused]
//   float TransparencyAlpha;           // Offset:  260 Size:     4 [unused]
//   float VelocitySizeFactor;          // Offset:  264 Size:     4
//   int BlendingType;                  // Offset:  268 Size:     4 [unused]
//   int GeometryOrientation;           // Offset:  272 Size:     4
//   int SortingLayerBias;              // Offset:  276 Size:     4 [unused]
//   int TextureAtlasMode;              // Offset:  280 Size:     4 [unused]
//   bool AlphaFadeInEnabled;           // Offset:  284 Size:     4 [unused]
//   bool AlphaFadeOutEnabled;          // Offset:  288 Size:     4 [unused]
//   bool AlphaTestEnabled;             // Offset:  292 Size:     4 [unused]
//   bool IsLit;                        // Offset:  296 Size:     4 [unused]
//   bool RandomTextureRotation;        // Offset:  300 Size:     4 [unused]
//
// }
//
// cbuffer ConfettiGlobal
// {
//
//   struct SConfettiGlobalParameters
//   {
//       
//       float4 m_uvToView;             // Offset:    0
//       float4 m_depthBufferToViewSpace;// Offset:   16
//       float4 m_deltaTime;            // Offset:   32
//       float4x4 m_viewToWorldMatrix;  // Offset:   48
//       float4 m_frustumPlanes[4];     // Offset:  112
//       float m_topViewHeightFieldSize;// Offset:  176
//       uint m_baseRandomIndex;        // Offset:  180
//       uint m_numVehiclesAroundCamera;// Offset:  184
//       uint m_numKillShapes;          // Offset:  188
//       float4 m_forceTopDepthSphere;  // Offset:  192
//       float4 m_killShapePoints[32];  // Offset:  208
//       uint4 m_killShapes[10];        // Offset:  720
//       
//       struct SConfettiSystemVehicleInfo
//       {
//           
//           float4x4 m_transform;      // Offset:  880
//           float4x4 m_invTransform;   // Offset:  944
//           float4 m_size;             // Offset: 1008
//           float4 m_velocity;         // Offset: 1024
//           float4 m_angularVelocity;  // Offset: 1040
//
//       } m_vehiclesAroundCamera[32];  // Offset:  880
//
//   } ConfettiGlobalParams;            // Offset:    0 Size:  6512
//
// }
//
// cbuffer ConfettiEmitterSettings
// {
//
//   float3 AirDragForBigParticlesParams;// Offset:    0 Size:    12
//   float AlwaysStickDistanceSquared;  // Offset:   12 Size:     4 [unused]
//   float3 EmissionRadii;              // Offset:   16 Size:    12
//   float BounceNormalRestitution;     // Offset:   28 Size:     4
//   float3 EnvironmentSpawningOffset;  // Offset:   32 Size:    12 [unused]
//   float BounceTangentialRestitution; // Offset:   44 Size:     4
//   float2 EmissionDelayWindSpeedRange;// Offset:   48 Size:     8 [unused]
//   float CollisionRadius;             // Offset:   56 Size:     4
//   float EmissionDelayBase;           // Offset:   60 Size:     4
//   float2 EnvironmentSpawningRadius;  // Offset:   64 Size:     8 [unused]
//   float EmissionDelayVariance;       // Offset:   72 Size:     4
//   float EmissionDelayWindScale;      // Offset:   76 Size:     4 [unused]
//   float2 EnvironmentSpawningStretch; // Offset:   80 Size:     8 [unused]
//   float EmissionLength;              // Offset:   88 Size:     4
//   float EmissionMinWindSpeed;        // Offset:   92 Size:     4
//   float2 ParticleFadeInTime;         // Offset:   96 Size:     8
//   float EmissionSpeed;               // Offset:  104 Size:     4
//   float EmissionSpeedVariance;       // Offset:  108 Size:     4
//   float2 ParticleFadeOutTime;        // Offset:  112 Size:     8
//   float EmitDirectionSign;           // Offset:  120 Size:     4
//   float EnvironmentSpawningMinDistanceSquared;// Offset:  124 Size:     4 [unused]
//   float2 ParticleFadeScaleControl;   // Offset:  128 Size:     8
//   float EnvironmentSpawningVerticalRange;// Offset:  136 Size:     4 [unused]
//   float GravityAcceleration;         // Offset:  140 Size:     4
//   float LifetimeAfterImpact;         // Offset:  144 Size:     4
//   float LifetimeBase;                // Offset:  148 Size:     4
//   float LifetimeVariance;            // Offset:  152 Size:     4
//   float MinContactExtractionScale;   // Offset:  156 Size:     4
//   float NormalAirDrag;               // Offset:  160 Size:     4
//   float NormalExcentricityScale1;    // Offset:  164 Size:     4
//   float NormalExcentricityScale2;    // Offset:  168 Size:     4
//   float NormalExcentricityScale3;    // Offset:  172 Size:     4
//   float NormalExcentricityScaleVariance;// Offset:  176 Size:     4
//   float ParticleSize;                // Offset:  180 Size:     4
//   float ParticleSizeVariance;        // Offset:  184 Size:     4
//   float SlaveEmissionDirectionVariance;// Offset:  188 Size:     4 [unused]
//   float SpawnFluidVelocityUsageScale;// Offset:  192 Size:     4
//   float StaticFrictionCollisionRadius;// Offset:  196 Size:     4 [unused]
//   float StickingMaxSpeedSquared;     // Offset:  200 Size:     4 [unused]
//   float SurfaceExtractionMaxNormalSpeed;// Offset:  204 Size:     4
//   float TangentAirDrag;              // Offset:  208 Size:     4
//   float TrianglePhysicalBodyRadius;  // Offset:  212 Size:     4
//   float VehicleContactOffsetForVelocitySampling;// Offset:  216 Size:     4
//   float VisibilityLifeExtensionSquareRadius;// Offset:  220 Size:     4
//   float WindFactor;                  // Offset:  224 Size:     4
//   uint EmitDirectionAxis;            // Offset:  228 Size:     4
//   uint MaxNumVehiclesForSpawning;    // Offset:  232 Size:     4 [unused]
//   uint NumEmittedParticles;          // Offset:  236 Size:     4
//   uint NumParticlesInTheAir;         // Offset:  240 Size:     4 [unused]
//   uint NumParticlesOnTheGround;      // Offset:  244 Size:     4 [unused]
//   uint NumParticlesOnVehicles;       // Offset:  248 Size:     4 [unused]
//   bool EmitAwayFromCenter;           // Offset:  252 Size:     4
//   bool EmitFromUpperHalf;            // Offset:  256 Size:     4
//   bool EnableCollisionDetection;     // Offset:  260 Size:     4
//   bool EnableDestructionOnImpact;    // Offset:  264 Size:     4
//   bool EnableParticleRecycling;      // Offset:  268 Size:     4
//   bool EnvironmentSpawningHalfVolume;// Offset:  272 Size:     4 [unused]
//   bool EnvironmentSpawningUniformDistribution;// Offset:  276 Size:     4 [unused]
//   bool IgnoreInitialVelocityDirection;// Offset:  280 Size:     4
//
// }
//
// cbuffer ConfettiEmitterSimulation
// {
//
//   float4x4 LocalTransform;           // Offset:    0 Size:    64
//   float RcpSlaveMultiplexFactor;     // Offset:   64 Size:     4 [unused]
//   uint MasterParticleCount;          // Offset:   68 Size:     4 [unused]
//   uint ParticleCount;                // Offset:   72 Size:     4
//   uint ParticleCountPerInstance;     // Offset:   76 Size:     4
//   bool IsSlaveMultiplexFactorLessThan2;// Offset:   80 Size:     4 [unused]
//
// }
//
// Resource bind info for ConfettiGlobal__RandomVectors
// {
//
//   float3 $Element;                   // Offset:    0 Size:    12
//
// }
//
// Resource bind info for ConfettiSystemInstanceData__InstanceData
// {
//
//   struct SConfettiSystemInstanceInfo
//   {
//       
//       float4x4 m_localToWorld;       // Offset:    0
//       float3 m_initialVelocity;      // Offset:   64
//       uint m_bounceAndDrag;          // Offset:   76
//       float m_emissionSpeedMultiplier;// Offset:   80
//       float m_emissionDelayMultiplier;// Offset:   84
//       uint m_unused1;                // Offset:   88
//       uint m_unused2;                // Offset:   92
//       uint m_maxRecyclingCount;      // Offset:   96
//       uint m_textureSelAndFlags;     // Offset:  100
//       float m_sizeMultiplier;        // Offset:  104
//       uint m_debugIDs;               // Offset:  108
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
// Resource bind info for ConfettiEmitterSimulation__DynamicStates
// {
//
//   struct SParticleDynamicState
//   {
//       
//       float3 position1;              // Offset:    0
//       float3 position2;              // Offset:   12
//       float3 position3;              // Offset:   24
//       float3 velocity1;              // Offset:   36
//       float3 velocity2;              // Offset:   48
//       float3 velocity3;              // Offset:   60
//       float lifetime;                // Offset:   72
//       float emissionDelay;           // Offset:   76
//       uint recycleCount;             // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
// Resource bind info for ConfettiEmitterSimulation__StaticStates
// {
//
//   struct SParticleStaticState
//   {
//       
//       uint bounceDragAndSize;        // Offset:    0
//       uint textureSelAndRandomValue; // Offset:    4
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for ConfettiEmitterSimulation__OutParticleInstances
// {
//
//   struct SGraphicParticle
//   {
//       
//       float3 position;               // Offset:    0
//       float3 bitangent;              // Offset:   12
//       float3 tangent;                // Offset:   24
//       uint fadeFactors;              // Offset:   36
//       uint textureSelAndRandomValue; // Offset:   40
//       uint speedAndSize;             // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__WindGlobalNoiseTexture__SampObj__    sampler      NA          NA    0        1
// Global__WindVelocityTexture__SampObj__    sampler      NA          NA    1        1
// ColorClamp2D                      sampler      NA          NA    2        1
// Global__WindGlobalNoiseTexture__TexObj__    texture  float4          2d    0        1
// Global__WindVelocityTexture__TexObj__    texture  float4          2d    1        1
// ConfettiGlobal__DepthBlendedGBuffer__TexObj__    texture  float4          2d    2        1
// ConfettiGlobal__DepthGBufferMS    texture  float4        2dMS    3        1
// ConfettiGlobal__RandomVectors     texture  struct         r/o    4        1
// ConfettiSystemInstanceData__InstanceData    texture  struct         r/o    5        1
// ConfettiEmitterSimulation__DynamicStates        UAV  struct         r/w    0        1
// ConfettiEmitterSimulation__StaticStates        UAV  struct         r/w    1        1
// ConfettiEmitterSimulation__OutParticleInstances        UAV  struct         r/w    2        1
// ConfettiEmitterSimulation__IndirectDrawBuffer        UAV    byte         r/w    3        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialWD2Confetti               cbuffer      NA          NA    2        1
// ConfettiGlobal                    cbuffer      NA          NA    3        1
// ConfettiEmitterSettings           cbuffer      NA          NA    4        1
// ConfettiEmitterSimulation         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[38], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[18], immediateIndexed
dcl_constantbuffer cb3[407], dynamicIndexed
dcl_constantbuffer cb4[18], immediateIndexed
dcl_constantbuffer cb5[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_structured t4, 12 
dcl_resource_structured t5, 112 
dcl_uav_structured u0, 84
dcl_uav_structured u1, 8
dcl_uav_structured u2, 48
dcl_uav_raw u3
dcl_input vThreadID.x
dcl_temps 31
dcl_thread_group 64, 1, 1

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r28.xyzw, l(0, 0, 0, 0), t125.xyzw

ult r0.x, vThreadID.x, cb5[4].z
if_nz r0.x
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(68), u0.wyxz
  mul r1.x, cb4[9].z, l(0.500000)
  imul null, r1.y, vThreadID.x, l(4999)
  udiv null, r1.y, r1.y, l(5000)
  ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r1.y, r1.y, l(0), t4.xxxx
  mad r1.y, r1.x, r1.y, cb4[9].y
  ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r2.x, vThreadID.x, l(0), u1.xxxx
  f16tof32 r2.x, r2.x
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r3.xyzw, vThreadID.x, l(0), u0.xyzw
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r4.xyzw, vThreadID.x, l(16), u0.xyzw
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r5.xyzw, vThreadID.x, l(32), u0.yzxw
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r6.xyzw, vThreadID.x, l(48), u0.xyzw
  ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r7.x, vThreadID.x, l(64), u0.xxxx
  utof r2.y, vThreadID.x
  utof r2.z, cb5[4].w
  div r2.y, r2.y, r2.z
  ftou r2.y, r2.y
  ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r8.z, r2.y, l(96), t5.xxxx
  ult r2.z, r0.x, r8.z
  mov r8.xy, l(0,-1.000000,0,0)
  movc r8.xyz, r2.zzzz, r8.xyzx, r0.ywxy
  ge r2.w, r8.y, l(0.000000)
  if_nz r2.w
    add r9.w, r8.y, -cb3[2].x
    lt r2.w, r9.w, l(0.000000)
    ge r7.w, l(0.000000), cb4[5].w
    and r2.w, r2.w, r7.w
    if_nz r2.w
      ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.w, r2.y, l(100), t5.xxxx
      and r7.w, r2.w, l(1)
      if_nz r7.w
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r10.xyzw, r2.y, l(0), t5.xyzw
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r11.xyzw, r2.y, l(16), t5.xyzw
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r12.xyzw, r2.y, l(32), t5.xyzw
        mul r13.xyzw, r10.yyyy, cb5[1].xyzw
        mad r13.xyzw, cb5[0].xyzw, r10.xxxx, r13.xyzw
        mad r13.xyzw, cb5[2].xyzw, r10.zzzz, r13.xyzw
        mad r10.xyzw, cb5[3].xyzw, r10.wwww, r13.xyzw
        mul r13.xyzw, r11.yyyy, cb5[1].xyzw
        mad r13.xyzw, cb5[0].xyzw, r11.xxxx, r13.xyzw
        mad r13.xyzw, cb5[2].xyzw, r11.zzzz, r13.xyzw
        mad r11.xyzw, cb5[3].xyzw, r11.wwww, r13.xyzw
        mul r13.xyzw, r12.yyyy, cb5[1].xyzw
        mad r13.xyzw, cb5[0].xyzw, r12.xxxx, r13.xyzw
        mad r13.xyzw, cb5[2].xyzw, r12.zzzz, r13.xyzw
        mad r12.xyzw, cb5[3].xywz, r12.wwww, r13.xywz
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r13.xyzw, r2.y, l(64), t5.xyzw
        mul r7.w, cb4[11].z, l(0.500000)
        imad r14.xyzw, vThreadID.xxxx, l(4357, 517, 4253, 2153), cb3[11].yyyy
        udiv null, r14.xyzw, r14.xyzw, l(5000, 5000, 5000, 5000)
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r8.w, r14.x, l(0), t4.xxxx
        mad r7.w, r7.w, r8.w, cb4[11].y
        max r7.w, r7.w, l(0.001000)
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r8.w, r2.y, l(104), t5.xxxx
        mul r2.x, r7.w, r8.w
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r7.w, r14.y, l(0), t4.xxxx
        mul r7.w, r7.w, l(65534.000000)
        add r7.w, |r7.w|, l(1.000000)
        ftou r7.w, r7.w
        udiv null, r8.w, vThreadID.x, cb5[4].w
        ult r8.w, r8.w, cb4[14].w
        if_nz r8.w
          imad r8.w, vThreadID.x, l(5519), cb3[11].y
          udiv null, r8.w, r8.w, l(5000)
          ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r15.xyz, r8.w, l(0), t4.xyzx
          add r8.w, |r15.z|, l(0.000010)
          sqrt r8.w, r8.w
          mul r14.xy, r8.wwww, cb4[1].xyxx
          dp2 r15.z, r15.xyxx, r15.xyxx
          rsq r15.z, r15.z
          mul r16.xyzw, r15.zzzz, r15.xxyy
          lt r15.z, |r16.w|, |r16.y|
          mul r16.xyzw, r15.xyxy, |r16.xyzw|
          movc r15.xy, r15.zzzz, r16.xyxx, r16.zwzz
          mul r14.xy, r14.xyxx, r15.xyxx
          mul r15.y, r8.w, cb4[5].z
          movc r15.z, cb4[16].x, |r14.y|, r14.y
          mov r15.x, r14.x
          mov r15.w, l(1.000000)
          dp4 r16.x, r15.xyzw, r10.xyzw
          dp4 r16.y, r15.xyzw, r11.xyzw
          dp4 r16.z, r15.xywz, r12.xyzw
          if_nz cb4[15].w
            imad r8.w, vThreadID.x, l(5419), cb3[11].y
            udiv null, r8.w, r8.w, l(5000)
            ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t4.xxxx
            mul r8.w, r8.w, cb4[6].w
            mad r8.w, r8.w, l(0.500000), cb4[6].z
            mov r12.x, r10.w
            mov r12.y, r11.w
            add r15.xyz, -r12.xyzx, r16.xyzx
            dp3 r14.x, r15.xyzx, r15.xyzx
            rsq r14.x, r14.x
            mul r15.xyz, r14.xxxx, r15.xyzx
            mul r15.xyz, r8.wwww, r15.xyzx
          else 
            mov r17.x, r10.x
            mov r17.y, r11.x
            mov r17.z, r12.x
            mov r8.w, cb4[14].y
            mul r17.xyz, r17.xyzx, icb[r8.w + 0].xxxx
            mov r18.x, r10.y
            mov r18.y, r11.y
            mov r18.z, r12.y
            mad r17.xyz, icb[r8.w + 0].yyyy, r18.xyzx, r17.xyzx
            mov r12.x, r10.z
            mov r12.y, r11.z
            mad r17.xyz, icb[r8.w + 0].zzzz, r12.xywx, r17.xyzx
            mov r12.x, r10.w
            mov r12.y, r11.w
            mad r17.xyz, icb[r8.w + 0].wwww, r12.xyzx, r17.xyzx
            mul r17.xyz, r17.xyzx, cb4[7].zzzz
            mul r8.w, cb4[6].w, l(0.500000)
            imad r14.x, vThreadID.x, l(5739), cb3[11].y
            udiv null, r14.x, r14.x, l(5000)
            ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r14.x, r14.x, l(0), t4.xxxx
            mad r8.w, r8.w, r14.x, cb4[6].z
            mul r17.xyz, r8.wwww, r17.xyzx
            mad r14.xy, r16.xyxx, cb0[27].xyxx, cb0[27].zwzz
            add r18.xy, |r14.xyxx|, l(-1.000000, -1.000000, 0.000000, 0.000000)
            mul_sat r18.xy, r18.xyxx, l(-10.000000, -10.000000, 0.000000, 0.000000)
            mad r14.xy, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r14.xyxx, t1.xyzw, s1, l(0.000000)
            mad r18.zw, r16.xxxy, cb0[33].xxxx, cb0[33].yyyz
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r18.zwzz, t0.xyzw, s0, l(0.000000)
            dp3 r8.w, r19.xyzx, cb0[32].xyzx
            mad r19.xy, cb0[36].xyxx, r8.wwww, cb0[37].xyxx
            mul r8.w, r18.y, r18.x
            mul r8.w, r8.w, l(0.900000)
            mov r19.z, l(0)
            add r18.xy, r14.xyxx, -r19.xyxx
            mov r18.z, l(0)
            mad r18.xyz, r8.wwww, r18.xyzx, r19.xyzx
            mul r8.w, cb4[14].x, l(0.125000)
            mul r18.xyz, r18.xyzx, r8.wwww
            add r8.w, -cb4[12].x, l(1.000000)
            mul r17.xyz, r17.xyzx, r8.wwww
            mad r15.xyz, cb4[12].xxxx, r18.xyzx, r17.xyzx
          endif 
        else 
          mov r17.x, r10.x
          mov r17.y, r11.x
          mov r17.z, r12.x
          mov r8.w, cb4[14].y
          mul r17.xyz, r17.xyzx, icb[r8.w + 0].xxxx
          mov r18.x, r10.y
          mov r18.y, r11.y
          mov r18.z, r12.y
          mad r17.xyz, icb[r8.w + 0].yyyy, r18.xyzx, r17.xyzx
          mov r12.x, r10.z
          mov r12.y, r11.z
          mad r10.xyz, icb[r8.w + 0].zzzz, r12.xywx, r17.xyzx
          mov r12.x, r10.w
          mov r12.y, r11.w
          mad r10.xyz, icb[r8.w + 0].wwww, r12.xyzx, r10.xyzx
          mul r10.xyz, r10.xyzx, cb4[7].zzzz
          mul r8.w, cb4[6].w, l(0.500000)
          imad r10.w, vThreadID.x, l(5739), cb3[11].y
          udiv null, r10.w, r10.w, l(5000)
          ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t4.xxxx
          mad r8.w, r8.w, r10.w, cb4[6].z
          mul r10.xyz, r8.wwww, r10.xyzx
          add r11.xy, |cb0[27].zwzz|, l(-1.000000, -1.000000, 0.000000, 0.000000)
          mul_sat r11.xy, r11.xyxx, l(-10.000000, -10.000000, 0.000000, 0.000000)
          mad r11.zw, cb0[27].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
          sample_l_indexable(texture2d)(float,float,float,float) r11.zw, r11.zwzz, t1.zwxy, s1, l(0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, cb0[33].yzyy, t0.xyzw, s0, l(0.000000)
          dp3 r8.w, r12.xyzx, cb0[32].xyzx
          mad r12.xy, cb0[36].xyxx, r8.wwww, cb0[37].xyxx
          mul r8.w, r11.y, r11.x
          mul r8.w, r8.w, l(0.900000)
          mov r12.z, l(0)
          add r11.xy, r11.zwzz, -r12.xyxx
          mov r11.z, l(0)
          mad r11.xyz, r8.wwww, r11.xyzx, r12.xyzx
          mul r8.w, cb4[14].x, l(0.125000)
          mul r11.xyz, r11.xyzx, r8.wwww
          add r8.w, -cb4[12].x, l(1.000000)
          mul r10.xyz, r10.xyzx, r8.wwww
          mad r15.xyz, cb4[12].xxxx, r11.xyzx, r10.xyzx
          mov r16.xyz, l(0,0,-10000.000000,0)
        endif 
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r8.w, r2.y, l(80), t5.xxxx
        mul r10.xyz, r8.wwww, r15.xyzx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r11.x, r14.z, l(0), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r11.y, r14.w, l(4), t4.xxxx
        imad r12.xyzw, vThreadID.xxxx, l(5099, 5569, 5827, 1787), cb3[11].yyyy
        udiv null, r12.xyzw, r12.xyzw, l(5000, 5000, 5000, 5000)
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r11.z, r12.x, l(8), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r14.x, r12.y, l(4), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r14.y, r12.z, l(8), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r14.z, r12.w, l(8), t4.xxxx
        imad r12.xyz, vThreadID.xxxx, l(2309, 4729, 3847, 0), cb3[11].yyyy
        udiv null, r12.xyz, r12.xyzx, l(5000, 5000, 5000, 0)
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r17.x, r12.x, l(8), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r17.y, r12.y, l(0), t4.xxxx
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r17.z, r12.z, l(8), t4.xxxx
        add r12.xyz, r11.xyzx, r14.xyzx
        add r12.xyz, r17.xyzx, r12.xyzx
        mul r10.w, r2.x, cb4[13].y
        mad r11.xyz, -r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r11.xyzx
        dp3 r11.w, r11.xyzx, r11.xyzx
        rsq r11.w, r11.w
        mul r11.xyz, r11.wwww, r11.xyzx
        mad r14.xyz, -r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r14.xyzx
        dp3 r11.w, r14.xyzx, r14.xyzx
        rsq r11.w, r11.w
        mul r14.xyz, r11.wwww, r14.xyzx
        mad r12.xyz, -r12.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r17.xyzx
        dp3 r11.w, r12.xyzx, r12.xyzx
        rsq r11.w, r11.w
        mul r12.xyz, r11.wwww, r12.xyzx
        mad r11.xyz, r10.wwww, r11.xyzx, r16.xyzx
        mad r14.xyz, r10.wwww, r14.xyzx, r16.xyzx
        mad r12.xyz, r10.wwww, r12.xyzx, r16.xyzx
        dp3 r10.w, r13.xyzx, r13.xyzx
        sqrt r10.w, r10.w
        mul r10.xyz, r10.wwww, r10.xyzx
        mad r13.xyz, r15.xyzx, r8.wwww, r13.xyzx
        movc r1.xzw, cb4[17].zzzz, r10.xxyz, r13.xxyz
        f32tof16 r8.w, r2.x
        bfi r10.x, l(16), l(0), r8.w, r13.w
        and r2.w, r2.w, l(0xffff0000)
        or r10.y, r7.w, r2.w
        store_structured u1.xy, vThreadID.x, l(0), r10.xyxx
        mov r6.xyz, r1.xzwx
        mov r0.xyzw, r1.xzwy
      else 
        mov r11.xyz, r3.xyzx
        mov r1.xzw, r5.xxyw
        mov r14.x, r3.w
        mov r14.yz, r4.xxyx
        mov r12.xy, r4.zwzz
        mov r12.z, r5.z
        mov r0.x, r6.w
        mov r7.y, r0.z
        mov r7.z, r8.x
        mov r0.yzw, r7.xxyz
      endif 
    else 
      mov r11.xyz, r3.xyzx
      mov r1.xzw, r5.xxyw
      mov r14.x, r3.w
      mov r14.yz, r4.xxyx
      mov r12.xy, r4.zwzz
      mov r12.z, r5.z
      mov r0.x, r6.w
      mov r0.y, r7.x
      mov r0.w, r8.x
    endif 
    mov r2.w, l(0)
  else 
    lt r7.y, l(0.000000), r8.x
    lt r7.z, r3.z, l(-0.200000)
    add r10.xyz, r3.xyzx, -cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i --only-autofixed --ignore-other-errors e3f0475f96a752cb-cs.txt

mov r29.xyz, r10.xyzx
mov r29.w, l(1.0)
dp4 r30.w, r29.xyzw, cb1[57].xyzw
add r30.x, r30.w, -r28.y
mul r30.x, r30.x, -r28.x
mul r30.x, r30.x, cb1[9].x
mov r30.yzw, l(0.0)
dp4 r29.x, r30.xyzw, cb1[17].xyzw
dp4 r29.y, r30.xyzw, cb1[18].xyzw
dp4 r29.z, r30.xyzw, cb1[19].xyzw
add r10.xyz, r10.xyzw, r29.xyzx

    dp3 r7.w, r10.xyzx, cb1[173].xyzx
    lt r7.w, r7.w, l(0.000000)
    dp3 r8.w, r10.xyzx, r10.xyzx
    lt r8.w, cb4[13].w, r8.w
    or r7.w, r7.w, r8.w
    add r8.w, r1.y, -cb4[6].x
    lt r8.w, r8.w, r8.x
    or r7.w, r7.w, r8.w
    ge r8.w, cb4[7].x, r8.x
    or r7.w, r7.w, r8.w
    add r8.w, r8.x, -cb3[2].x
    movc r7.w, r7.w, r8.w, r8.x
    movc r7.z, r7.z, l(0), r7.w
    movc r0.w, r7.y, r7.z, r8.x
    lt r2.w, l(0.000000), r0.w
    if_nz r2.w
      mov r11.xyz, r3.xyzx
      mov r1.xzw, r5.xxyw
      mov r14.x, r3.w
      mov r14.yz, r4.xxyx
      mov r12.xy, r4.zwzz
      mov r12.z, r5.z
      mov r0.x, r6.w
      mov r0.y, r7.x
      mov r9.w, r8.y
    else 
      ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r5.w, r2.y, l(100), t5.xxxx
      and r5.w, r5.w, l(2)
      ine r5.w, r5.w, l(0)
      ine r7.x, cb4[16].w, l(0)
      and r5.w, r5.w, r7.x
      udiv null, r7.x, vThreadID.x, cb5[4].w
      or r2.z, r2.z, r5.w
      uge r5.w, r7.x, cb4[14].w
      or r2.z, r2.z, r5.w
      if_nz r2.z
        mul r2.z, cb4[4].z, l(0.500000)
        imad r5.w, vThreadID.x, l(3677), cb3[11].y
        udiv null, r5.w, r5.w, l(5000)
        ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r5.w, r5.w, l(0), t4.xxxx
        mad r2.z, r2.z, r5.w, cb4[3].w
        max r2.z, r2.z, l(0.000000)
        ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.y, r2.y, l(84), t5.xxxx
        mul r9.w, r2.y, r2.z
      else 
        mov r9.w, r8.y
      endif 
      mov r11.xyz, l(0,0,-10000.000000,0)
      mov r1.xzw, l(0,0,0,0)
      mov r6.xyz, l(0,0,0,0)
      mov r14.xyz, l(0.000100,0,-10000.000000,0)
      mov r12.xyz, l(0,0.000100,-10000.000000,0)
      mov r0.xyzw, l(0,0,0,0)
    endif 
  endif 
  if_nz r2.w
    lt r2.y, l(0.000000), cb3[2].x
    if_nz r2.y
      mad r2.y, r2.x, cb4[0].x, cb4[0].y
      max r2.y, r2.y, l(0.000000)
      mad r2.y, r2.y, cb4[0].z, l(1.000000)
      ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r2.z, vThreadID.x, l(0), u1.xxxx
      ubfe r2.z, l(8), l(16), r2.z
      utof r2.z, r2.z
      mul r2.y, r2.y, r2.z
      mul r2.y, r2.y, l(0.015625)
      add r7.xyz, r11.xyzx, r14.xyzx
      add r7.xyz, r12.xyzx, r7.xyzx
      add r8.xyw, -r11.zxzy, r14.zxzy
      dp3 r2.z, r8.xywx, r8.xywx
      rsq r2.z, r2.z
      mul r8.xyw, r2.zzzz, r8.xyxw
      add r10.xyz, -r11.yzxy, r12.yzxy
      dp3 r2.z, r10.xyzx, r10.xyzx
      rsq r2.z, r2.z
      mul r10.xyz, r2.zzzz, r10.xyzx
      mul r13.xyz, r8.xywx, r10.xyzx
      mad r8.xyw, r8.wxwy, r10.yzyx, -r13.xyxz
      imad r2.z, vThreadID.x, l(3593), cb3[11].y
      udiv null, r2.z, r2.z, l(5000)
      ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r2.z, r2.z, l(0), t4.xxxx
      mul r2.z, r2.z, cb4[11].x
      mul r10.xyz, r2.zzzz, cb4[10].yzwy
      mad r13.xyz, -r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r11.xyzx
      dp3 r2.z, r13.xyzx, r13.xyzx
      rsq r2.z, r2.z
      mul r13.xyz, r2.zzzz, r13.xyzx
      mad r13.xyz, r10.xxxx, r13.xyzx, r8.xywx
      dp3 r2.z, r13.xyzx, r13.xyzx
      rsq r2.z, r2.z
      mul r13.xyz, r2.zzzz, r13.xyzx
      mad r15.xyz, -r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r14.xyzx
      dp3 r2.z, r15.xyzx, r15.xyzx
      rsq r2.z, r2.z
      mul r15.xyz, r2.zzzz, r15.xyzx
      mad r10.xyw, r10.yyyy, r15.xyxz, r8.xyxw
      dp3 r2.z, r10.xywx, r10.xywx
      rsq r2.z, r2.z
      mul r10.xyw, r2.zzzz, r10.xyxw
      mad r7.xyz, -r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r12.xyzx
      dp3 r2.z, r7.xyzx, r7.xyzx
      rsq r2.z, r2.z
      mul r7.xyz, r2.zzzz, r7.xyzx
      mad r7.xyz, r10.zzzz, r7.xyzx, r8.xywx
      dp3 r2.z, r7.xyzx, r7.xyzx
      rsq r2.z, r2.z
      mul r7.xyz, r2.zzzz, r7.xyzx
      mad r2.zw, r11.xxxy, cb0[27].xxxy, cb0[27].zzzw
      add r8.xy, |r2.zwzz|, l(-1.000000, -1.000000, 0.000000, 0.000000)
      mul_sat r8.xy, r8.xyxx, l(-10.000000, -10.000000, 0.000000, 0.000000)
      mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t1.zwxy, s1, l(0.000000)
      mad r15.xy, r11.xyxx, cb0[33].xxxx, cb0[33].yzyy
      sample_l_indexable(texture2d)(float,float,float,float) r15.xyz, r15.xyxx, t0.xyzw, s0, l(0.000000)
      dp3 r5.w, r15.xyzx, cb0[32].xyzx
      mad r15.xy, cb0[36].xyxx, r5.wwww, cb0[37].xyxx
      mul r5.w, r8.y, r8.x
      mul r5.w, r5.w, l(0.900000)
      mov r15.z, l(0)
      add r16.xy, r2.zwzz, -r15.xyxx
      mov r16.z, l(0)
      mad r8.xyw, r5.wwww, r16.xyxz, r15.xyxz
      mul r2.z, cb4[14].x, l(0.125000)
      mad r8.xyw, r2.zzzz, r8.xyxw, -r1.xzxw
      mul r15.xyz, r2.yyyy, r8.xywx
      dp3 r2.w, r15.xyzx, r13.xyzx
      mul r13.xyz, r13.xyzx, r2.wwww
      mad r8.xyw, r8.xyxw, r2.yyyy, -r13.xyxz
      mul r8.xyw, r8.xyxw, cb4[13].xxxx
      mad r8.xyw, cb4[10].xxxx, r13.xyxz, r8.xyxw
      mov r13.x, l(0)
      mov r13.z, cb4[8].w
      add r8.xyw, r8.xyxw, r13.xxxz
      mad r13.yw, r14.xxxy, cb0[27].xxxy, cb0[27].zzzw
      add r15.xy, |r13.ywyy|, l(-1.000000, -1.000000, 0.000000, 0.000000)
      mul_sat r15.xy, r15.xyxx, l(-10.000000, -10.000000, 0.000000, 0.000000)
      mad r13.yw, r13.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t1.zxwy, s1, l(0.000000)
      mad r15.zw, r14.xxxy, cb0[33].xxxx, cb0[33].yyyz
      sample_l_indexable(texture2d)(float,float,float,float) r16.xyz, r15.zwzz, t0.xyzw, s0, l(0.000000)
      dp3 r2.w, r16.xyzx, cb0[32].xyzx
      mad r16.xy, cb0[36].xyxx, r2.wwww, cb0[37].xyxx
      mul r2.w, r15.y, r15.x
      mul r2.w, r2.w, l(0.900000)
      mov r16.z, l(0)
      add r15.xy, r13.ywyy, -r16.xyxx
      mov r15.z, l(0)
      mad r15.xyz, r2.wwww, r15.xyzx, r16.xyzx
      mad r15.xyz, r2.zzzz, r15.xyzx, -r6.xyzx
      mul r16.xyz, r2.yyyy, r15.xyzx
      dp3 r2.w, r16.xyzx, r10.xywx
      mul r10.xyz, r10.xywx, r2.wwww
      mad r15.xyz, r15.xyzx, r2.yyyy, -r10.xyzx
      mul r15.xyz, r15.xyzx, cb4[13].xxxx
      mad r10.xyz, cb4[10].xxxx, r10.xyzx, r15.xyzx
      add r10.xyz, r10.xyzx, r13.xxzx
      mad r13.yw, r12.xxxy, cb0[27].xxxy, cb0[27].zzzw
      add r15.xy, |r13.ywyy|, l(-1.000000, -1.000000, 0.000000, 0.000000)
      mul_sat r15.xy, r15.xyxx, l(-10.000000, -10.000000, 0.000000, 0.000000)
      mad r13.yw, r13.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t1.zxwy, s1, l(0.000000)
      mad r15.zw, r12.xxxy, cb0[33].xxxx, cb0[33].yyyz
      sample_l_indexable(texture2d)(float,float,float,float) r16.xyz, r15.zwzz, t0.xyzw, s0, l(0.000000)
      dp3 r2.w, r16.xyzx, cb0[32].xyzx
      mad r16.xy, cb0[36].xyxx, r2.wwww, cb0[37].xyxx
      mul r2.w, r15.y, r15.x
      mul r2.w, r2.w, l(0.900000)
      mov r16.z, l(0)
      add r15.xy, r13.ywyy, -r16.xyxx
      mov r15.z, l(0)
      mad r15.xyz, r2.wwww, r15.xyzx, r16.xyzx
      mad r15.xyz, r2.zzzz, r15.xyzx, -r0.xyzx
      mul r16.xyz, r2.yyyy, r15.xyzx
      dp3 r2.z, r16.xyzx, r7.xyzx
      mul r7.xyz, r7.xyzx, r2.zzzz
      mad r2.yzw, r15.xxyz, r2.yyyy, -r7.xxyz
      mul r2.yzw, r2.yyzw, cb4[13].xxxx
      mad r2.yzw, cb4[10].xxxx, r7.xxyz, r2.yyzw
      add r2.yzw, r2.yyzw, r13.xxxz
      mad r7.xyz, cb3[2].xxxx, r8.xywx, r1.xzwx
      mad r8.xyw, r7.xyxz, cb3[2].xxxx, r3.xyxz
      mad r10.xyz, cb3[2].xxxx, r10.xyzx, r6.xyzx
      mov r13.x, r3.w
      mov r13.yz, r4.xxyx
      mad r15.xyz, r10.xyzx, cb3[2].xxxx, r13.xyzx
      mad r2.yzw, cb3[2].xxxx, r2.yyzw, r0.xxyz
      mov r5.xy, r4.zwzz
      mad r4.xyz, r2.yzwy, cb3[2].xxxx, r5.xyzx
      add r16.xyz, r8.xywx, r15.xyzx
      add r16.xyz, r4.xyzx, r16.xyzx
      mul r17.xyz, r16.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul r3.w, r2.x, cb4[13].y
      mad r8.xyw, -r16.xyxz, l(0.333333343, 0.333333343, 0.000000, 0.333333343), r8.xyxw
      dp3 r4.w, r8.xywx, r8.xywx
      rsq r4.w, r4.w
      mul r8.xyw, r4.wwww, r8.xyxw
      mad r11.xyz, r3.wwww, r8.xywx, r17.xyzx
      mad r8.xyw, -r16.xyxz, l(0.333333343, 0.333333343, 0.000000, 0.333333343), r15.xyxz
      dp3 r4.w, r8.xywx, r8.xywx
      rsq r4.w, r4.w
      mul r8.xyw, r4.wwww, r8.xyxw
      mad r14.xyz, r3.wwww, r8.xywx, r17.xyzx
      mad r4.xyz, -r16.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r4.xyzx
      dp3 r4.w, r4.xyzx, r4.xyzx
      rsq r4.w, r4.w
      mul r4.xyz, r4.wwww, r4.xyzx
      mad r12.xyz, r3.wwww, r4.xyzx, r17.xyzx
      if_nz cb4[16].y
        add r4.xyz, r11.xyzx, -cb1[174].xyzx
        mov r4.w, l(1.000000)
        dp4 r8.x, r4.xyzw, cb1[58].xyzw
        dp4 r8.y, r4.xyzw, cb1[59].xyzw
        dp4 r4.w, r4.xyzw, cb1[61].xyzw
        lt r5.w, l(0.000100), r4.w
        div r15.xy, r8.xyxx, r4.wwww
        lt r15.zw, l(0.000000, 0.000000, -1.000000, -1.000000), r15.xxxy
        lt r16.xy, r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
        and r4.w, r15.z, r16.x
        and r4.w, r15.w, r4.w
        and r16.z, r16.y, r4.w
        mad r17.xy, r15.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r17.z, -r17.y, l(1.000000)
        mad r15.zw, r17.xxxz, cb1[66].xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
        movc r16.xy, r16.zzzz, r15.zwzz, l(-1000.000000,-1000.000000,0,0)
        movc r16.xyz, r5.wwww, r16.xyzx, l(-1000.000000,-1000.000000,0,0)
        if_nz r16.z
          movc r8.xy, r5.wwww, r15.xyxx, r8.xyxx
          round_ni r15.xy, r16.xyxx
          add r17.xyzw, r15.xyxy, l(1.000000, 1.000000, 0.500000, 0.500000)
          ftoi r18.xy, r15.xyxx
          ftoi r19.xy, r17.xyxx
          mad r20.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mov r18.z, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r21.x, r18.xyzz, t3.xyzw, l(0)
          mov r19.zw, r18.yyyz
          ldms_indexable(texture2dms)(float,float,float,float) r21.y, r19.xzww, t3.yxzw, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r21.z, r19.xyww, t3.yzxw, l(0)
          mov r18.w, r19.y
          ldms_indexable(texture2dms)(float,float,float,float) r21.w, r18.xwzz, t3.yzwx, l(0)
          add r20.z, -r20.y, l(1.000000)
          gather4_indexable(texture2d)(float,float,float,float) r20.xyzw, r20.xzxx, t2.xyzw, s2.x
          max r20.xyzw, r20.wzyx, r21.xyzw
          div r17.xy, r17.zwzz, cb1[66].xyxx
          add r17.z, -r17.y, l(1.000000)
          mad r17.xy, r17.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r17.z, r20.x
          mov r17.w, l(1.000000)
          dp4 r21.x, r17.xyzw, cb1[9].xyzw
          dp4 r21.y, r17.xyzw, cb1[10].xyzw
          dp4 r21.z, r17.xyzw, cb1[11].xyzw
          dp4 r21.w, r17.xyzw, cb1[12].xyzw
          div r17.xyzw, r21.xyzw, r21.wwww
          itof r8.xy, r19.xzxx
          add r8.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r19.xy, r8.xyxx, cb1[66].xyxx
          add r19.z, -r19.y, l(1.000000)
          mad r19.xy, r19.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r19.z, r20.y
          mov r19.w, l(1.000000)
          dp4 r21.x, r19.xyzw, cb1[9].xyzw
          dp4 r21.y, r19.xyzw, cb1[10].xyzw
          dp4 r21.z, r19.xyzw, cb1[11].xyzw
          dp4 r21.w, r19.xyzw, cb1[12].xyzw
          div r19.xyzw, r21.xyzw, r21.wwww
          add r8.xy, r15.xyxx, l(1.500000, 1.500000, 0.000000, 0.000000)
          div r21.xy, r8.xyxx, cb1[66].xyxx
          add r21.z, -r21.y, l(1.000000)
          mad r21.xy, r21.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r21.z, r20.z
          mov r21.w, l(1.000000)
          dp4 r22.x, r21.xyzw, cb1[9].xyzw
          dp4 r22.y, r21.xyzw, cb1[10].xyzw
          dp4 r22.z, r21.xyzw, cb1[11].xyzw
          dp4 r22.w, r21.xyzw, cb1[12].xyzw
          div r21.xyzw, r22.xyzw, r22.wwww
          itof r8.xy, r18.xwxx
          add r8.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r18.xy, r8.xyxx, cb1[66].xyxx
          add r18.z, -r18.y, l(1.000000)
          mad r18.xy, r18.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r18.z, r20.w
          mov r18.w, l(1.000000)
          dp4 r22.x, r18.xyzw, cb1[9].xyzw
          dp4 r22.y, r18.xyzw, cb1[10].xyzw
          dp4 r22.z, r18.xyzw, cb1[11].xyzw
          dp4 r22.w, r18.xyzw, cb1[12].xyzw
          div r18.xyzw, r22.xyzw, r22.wwww
          dp4 r22.y, r17.xyzw, cb1[17].xyzw
          dp4 r22.z, r17.xyzw, cb1[18].xyzw
          dp4 r22.x, r17.xyzw, cb1[19].xyzw
          dp4 r17.z, r19.xyzw, cb1[17].xyzw
          dp4 r17.x, r19.xyzw, cb1[18].xyzw
          dp4 r17.y, r19.xyzw, cb1[19].xyzw
          dp4 r19.z, r21.xyzw, cb1[17].xyzw
          dp4 r19.x, r21.xyzw, cb1[18].xyzw
          dp4 r19.y, r21.xyzw, cb1[19].xyzw
          dp4 r21.y, r18.xyzw, cb1[17].xyzw
          dp4 r21.z, r18.xyzw, cb1[18].xyzw
          dp4 r21.x, r18.xyzw, cb1[19].xyzw
          add r8.xy, -r15.xyxx, r16.xyxx
          add r15.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          mul r15.zw, r20.yyyz, r8.xxxx
          mad r15.xz, r15.xxxx, r20.xxwx, r15.zzwz
          mul r4.w, r8.y, r15.z
          mad r15.x, r15.y, r15.x, r4.w
          mov r15.yw, l(0,1.000000,0,1.000000)
          dp2 r4.w, r15.xyxx, cb1[11].zwzz
          dp2 r5.w, r15.xyxx, cb1[12].zwzz
          div r4.w, -r4.w, r5.w
          mov r11.w, l(1.000000)
          dp4 r15.x, r11.xyzw, cb1[51].xyzw
          dp4 r15.y, r11.xyzw, cb1[52].xyzw
          dp4 r15.z, r11.xyzw, cb1[53].xyzw
          div r4.w, -r4.w, r15.z
          mul r15.xyz, r4.wwww, r15.xyzx
          dp4 r18.x, r15.xyzw, cb1[17].xyzw
          dp4 r18.y, r15.xyzw, cb1[18].xyzw
          dp4 r18.z, r15.xyzw, cb1[19].xyzw
          lt r4.w, r8.y, r8.x
          add r8.xyw, -r22.zxzy, r19.xyxz
          add r15.xyz, -r22.zxyz, r17.xyzx
          mul r16.xyw, r8.ywyx, r15.xyxz
          mad r15.xyz, r8.xywx, r15.yzxy, -r16.xywx
          dp3 r5.w, r15.xyzx, r15.xyzx
          rsq r5.w, r5.w
          mul r15.xyz, r5.wwww, r15.xyzx
          add r16.xyw, -r22.xyxz, r21.xyxz
          mul r17.xyz, r8.xywx, r16.xywx
          mad r8.xyw, r16.wxwy, r8.ywyx, -r17.xyxz
          dp3 r5.w, r8.xywx, r8.xywx
          rsq r5.w, r5.w
          mul r8.xyw, r5.wwww, r8.xyxw
          movc r8.xyw, r4.wwww, r15.xyxz, r8.xyxw
        else 
          mov r18.xyz, l(0,0,0,0)
          mov r8.xyw, l(0,0,0,1.000000)
        endif 
        add r15.xyz, r11.xyzx, -r18.xyzx
        dp3 r4.w, r15.xyzx, r8.xywx
        movc r4.w, r16.z, r4.w, l(100000.000000)
        add r4.w, r4.w, -cb4[3].z
        mov r11.w, l(1.000000)
        mov r15.xyz, l(0,0,0,0)
        mov r5.w, l(0)
        mov r7.w, l(0)
        loop 
          uge r10.w, r5.w, cb3[11].z
          mov r7.w, l(0)
          breakc_nz r10.w
          imul null, r10.w, r5.w, l(11)
          mul r16.xyz, l(1.050000, 1.050000, 1.050000, 0.000000), cb3[r10.w + 63].xyzx
          dp4 r17.x, r11.xyzw, cb3[r10.w + 59].xyzw
          dp4 r17.y, r11.xyzw, cb3[r10.w + 60].xyzw
          dp4 r13.w, r11.xyzw, cb3[r10.w + 61].xyzw
          add r17.z, r13.w, cb4[13].z
          ge r16.xyz, r16.xyzx, |r17.xyzx|
          and r13.w, r16.y, r16.x
          and r13.w, r16.z, r13.w
          if_nz r13.w
            mov r16.z, -cb3[r10.w + 55].w
            mov r16.x, -cb3[r10.w + 56].w
            mov r16.y, -cb3[r10.w + 57].w
            add r16.xyz, r11.yzxy, r16.xyzx
            mul r17.xyz, r16.xyzx, cb3[r10.w + 65].zxyz
            mad r16.xyz, cb3[r10.w + 65].yzxy, r16.yzxy, -r17.xyzx
            add r15.xyz, r16.xyzx, cb3[r10.w + 64].xyzx
            mov r16.xyz, r15.xyzx
            mov r7.w, l(-1)
            break 
          else 
            mov r15.xyz, l(0,0,0,0)
          endif 
          iadd r5.w, r5.w, l(1)
          mov r7.w, r13.w
        endloop 
        and r15.xyz, r15.xyzx, r7.wwww
        add r16.xyz, r14.xyzx, -cb1[174].xyzx
        mov r16.w, l(1.000000)
        dp4 r17.x, r16.xyzw, cb1[58].xyzw
        dp4 r17.y, r16.xyzw, cb1[59].xyzw
        dp4 r5.w, r16.xyzw, cb1[61].xyzw
        lt r7.w, l(0.000100), r5.w
        div r17.zw, r17.xxxy, r5.wwww
        lt r18.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), r17.zwzz
        lt r18.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
        and r5.w, r18.z, r18.x
        and r5.w, r18.y, r5.w
        and r18.z, r18.w, r5.w
        mad r19.xy, r17.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r19.z, -r19.y, l(1.000000)
        mad r19.xy, r19.xzxx, cb1[66].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
        movc r18.xy, r18.zzzz, r19.xyxx, l(-1000.000000,-1000.000000,0,0)
        movc r18.xyz, r7.wwww, r18.xyzx, l(-1000.000000,-1000.000000,0,0)
        if_nz r18.z
          movc r17.xy, r7.wwww, r17.zwzz, r17.xyxx
          round_ni r17.zw, r18.xxxy
          add r19.xyzw, r17.zwzw, l(1.000000, 1.000000, 0.500000, 0.500000)
          ftoi r20.xy, r17.zwzz
          ftoi r21.xy, r19.xyxx
          mad r22.xy, r17.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mov r20.z, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r23.x, r20.xyzz, t3.xyzw, l(0)
          mov r21.zw, r20.yyyz
          ldms_indexable(texture2dms)(float,float,float,float) r23.y, r21.xzww, t3.yxzw, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r23.z, r21.xyww, t3.yzxw, l(0)
          mov r20.w, r21.y
          ldms_indexable(texture2dms)(float,float,float,float) r23.w, r20.xwzz, t3.yzwx, l(0)
          add r22.z, -r22.y, l(1.000000)
          gather4_indexable(texture2d)(float,float,float,float) r22.xyzw, r22.xzxx, t2.xyzw, s2.x
          max r22.xyzw, r22.wzyx, r23.xyzw
          div r19.xy, r19.zwzz, cb1[66].xyxx
          add r19.z, -r19.y, l(1.000000)
          mad r19.xy, r19.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r19.z, r22.x
          mov r19.w, l(1.000000)
          dp4 r23.x, r19.xyzw, cb1[9].xyzw
          dp4 r23.y, r19.xyzw, cb1[10].xyzw
          dp4 r23.z, r19.xyzw, cb1[11].xyzw
          dp4 r23.w, r19.xyzw, cb1[12].xyzw
          div r19.xyzw, r23.xyzw, r23.wwww
          itof r17.xy, r21.xzxx
          add r17.xy, r17.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r21.xy, r17.xyxx, cb1[66].xyxx
          add r21.z, -r21.y, l(1.000000)
          mad r21.xy, r21.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r21.z, r22.y
          mov r21.w, l(1.000000)
          dp4 r23.x, r21.xyzw, cb1[9].xyzw
          dp4 r23.y, r21.xyzw, cb1[10].xyzw
          dp4 r23.z, r21.xyzw, cb1[11].xyzw
          dp4 r23.w, r21.xyzw, cb1[12].xyzw
          div r21.xyzw, r23.xyzw, r23.wwww
          add r17.xy, r17.zwzz, l(1.500000, 1.500000, 0.000000, 0.000000)
          div r23.xy, r17.xyxx, cb1[66].xyxx
          add r23.z, -r23.y, l(1.000000)
          mad r23.xy, r23.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r23.z, r22.z
          mov r23.w, l(1.000000)
          dp4 r24.x, r23.xyzw, cb1[9].xyzw
          dp4 r24.y, r23.xyzw, cb1[10].xyzw
          dp4 r24.z, r23.xyzw, cb1[11].xyzw
          dp4 r24.w, r23.xyzw, cb1[12].xyzw
          div r23.xyzw, r24.xyzw, r24.wwww
          itof r17.xy, r20.xwxx
          add r17.xy, r17.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r20.xy, r17.xyxx, cb1[66].xyxx
          add r20.z, -r20.y, l(1.000000)
          mad r20.xy, r20.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r20.z, r22.w
          mov r20.w, l(1.000000)
          dp4 r24.x, r20.xyzw, cb1[9].xyzw
          dp4 r24.y, r20.xyzw, cb1[10].xyzw
          dp4 r24.z, r20.xyzw, cb1[11].xyzw
          dp4 r24.w, r20.xyzw, cb1[12].xyzw
          div r20.xyzw, r24.xyzw, r24.wwww
          dp4 r24.y, r19.xyzw, cb1[17].xyzw
          dp4 r24.z, r19.xyzw, cb1[18].xyzw
          dp4 r24.x, r19.xyzw, cb1[19].xyzw
          dp4 r19.z, r21.xyzw, cb1[17].xyzw
          dp4 r19.x, r21.xyzw, cb1[18].xyzw
          dp4 r19.y, r21.xyzw, cb1[19].xyzw
          dp4 r21.z, r23.xyzw, cb1[17].xyzw
          dp4 r21.x, r23.xyzw, cb1[18].xyzw
          dp4 r21.y, r23.xyzw, cb1[19].xyzw
          dp4 r23.y, r20.xyzw, cb1[17].xyzw
          dp4 r23.z, r20.xyzw, cb1[18].xyzw
          dp4 r23.x, r20.xyzw, cb1[19].xyzw
          add r17.xy, -r17.zwzz, r18.xyxx
          add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul r18.xy, r22.yzyy, r17.xxxx
          mad r18.xy, r17.zzzz, r22.xwxx, r18.xyxx
          mul r5.w, r17.y, r18.y
          mad r18.x, r17.w, r18.x, r5.w
          mov r18.y, l(1.000000)
          dp2 r5.w, r18.xyxx, cb1[11].zwzz
          dp2 r7.w, r18.xyxx, cb1[12].zwzz
          div r5.w, -r5.w, r7.w
          mov r14.w, l(1.000000)
          dp4 r20.x, r14.xyzw, cb1[51].xyzw
          dp4 r20.y, r14.xyzw, cb1[52].xyzw
          dp4 r20.z, r14.xyzw, cb1[53].xyzw
          div r5.w, -r5.w, r20.z
          mul r20.xyz, r5.wwww, r20.xyzx
          mov r20.w, l(1.000000)
          dp4 r22.x, r20.xyzw, cb1[17].xyzw
          dp4 r22.y, r20.xyzw, cb1[18].xyzw
          dp4 r22.z, r20.xyzw, cb1[19].xyzw
          lt r5.w, r17.y, r17.x
          add r17.xyz, -r24.zxyz, r21.xyzx
          add r18.xyw, -r24.zxzy, r19.xyxz
          mul r19.xyz, r17.yzxy, r18.xywx
          mad r18.xyw, r17.xyxz, r18.ywyx, -r19.xyxz
          dp3 r7.w, r18.xywx, r18.xywx
          rsq r7.w, r7.w
          mul r18.xyw, r7.wwww, r18.xyxw
          add r19.xyz, -r24.xyzx, r23.xyzx
          mul r20.xyz, r17.xyzx, r19.xyzx
          mad r17.xyz, r19.zxyz, r17.yzxy, -r20.xyzx
          dp3 r7.w, r17.xyzx, r17.xyzx
          rsq r7.w, r7.w
          mul r17.xyz, r7.wwww, r17.xyzx
          movc r17.xyz, r5.wwww, r18.xywx, r17.xyzx
        else 
          mov r22.xyz, l(0,0,0,0)
          mov r17.xyz, l(0,0,1.000000,0)
        endif 
        add r18.xyw, r14.xyxz, -r22.xyxz
        dp3 r5.w, r18.xywx, r17.xyzx
        movc r5.w, r18.z, r5.w, l(100000.000000)
        add r5.w, r5.w, -cb4[3].z
        mov r14.w, l(1.000000)
        mov r18.xyz, l(0,0,0,0)
        mov r7.w, l(0)
        mov r10.w, l(0)
        loop 
          uge r13.w, r7.w, cb3[11].z
          mov r10.w, l(0)
          breakc_nz r13.w
          imul null, r13.w, r7.w, l(11)
          mul r19.xyz, l(1.050000, 1.050000, 1.050000, 0.000000), cb3[r13.w + 63].xyzx
          dp4 r20.x, r14.xyzw, cb3[r13.w + 59].xyzw
          dp4 r20.y, r14.xyzw, cb3[r13.w + 60].xyzw
          dp4 r15.w, r14.xyzw, cb3[r13.w + 61].xyzw
          add r20.z, r15.w, cb4[13].z
          ge r19.xyz, r19.xyzx, |r20.xyzx|
          and r15.w, r19.y, r19.x
          and r15.w, r19.z, r15.w
          if_nz r15.w
            mov r19.z, -cb3[r13.w + 55].w
            mov r19.x, -cb3[r13.w + 56].w
            mov r19.y, -cb3[r13.w + 57].w
            add r19.xyz, r14.yzxy, r19.xyzx
            mul r20.xyz, r19.xyzx, cb3[r13.w + 65].zxyz
            mad r19.xyz, cb3[r13.w + 65].yzxy, r19.yzxy, -r20.xyzx
            add r18.xyz, r19.xyzx, cb3[r13.w + 64].xyzx
            mov r19.xyz, r18.xyzx
            mov r10.w, l(-1)
            break 
          else 
            mov r18.xyz, l(0,0,0,0)
          endif 
          iadd r7.w, r7.w, l(1)
          mov r10.w, r15.w
        endloop 
        and r18.xyz, r18.xyzx, r10.wwww
        add r19.xyz, r12.xyzx, -cb1[174].xyzx
        mov r19.w, l(1.000000)
        dp4 r20.x, r19.xyzw, cb1[58].xyzw
        dp4 r20.y, r19.xyzw, cb1[59].xyzw
        dp4 r7.w, r19.xyzw, cb1[61].xyzw
        lt r10.w, l(0.000100), r7.w
        div r20.zw, r20.xxxy, r7.wwww
        lt r21.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), r20.zwzz
        lt r21.zw, r20.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
        and r7.w, r21.z, r21.x
        and r7.w, r21.y, r7.w
        and r21.z, r21.w, r7.w
        mad r22.xy, r20.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r22.z, -r22.y, l(1.000000)
        mad r22.xy, r22.xzxx, cb1[66].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
        movc r21.xy, r21.zzzz, r22.xyxx, l(-1000.000000,-1000.000000,0,0)
        movc r21.xyz, r10.wwww, r21.xyzx, l(-1000.000000,-1000.000000,0,0)
        if_nz r21.z
          movc r20.xy, r10.wwww, r20.zwzz, r20.xyxx
          round_ni r20.zw, r21.xxxy
          add r22.xyzw, r20.zwzw, l(1.000000, 1.000000, 0.500000, 0.500000)
          ftoi r23.xy, r20.zwzz
          ftoi r24.xy, r22.xyxx
          mad r25.xy, r20.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mov r23.z, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r26.x, r23.xyzz, t3.xyzw, l(0)
          mov r24.zw, r23.yyyz
          ldms_indexable(texture2dms)(float,float,float,float) r26.y, r24.xzww, t3.yxzw, l(0)
          ldms_indexable(texture2dms)(float,float,float,float) r26.z, r24.xyww, t3.yzxw, l(0)
          mov r23.w, r24.y
          ldms_indexable(texture2dms)(float,float,float,float) r26.w, r23.xwzz, t3.yzwx, l(0)
          add r25.z, -r25.y, l(1.000000)
          gather4_indexable(texture2d)(float,float,float,float) r25.xyzw, r25.xzxx, t2.xyzw, s2.x
          max r25.xyzw, r25.wzyx, r26.xyzw
          div r22.xy, r22.zwzz, cb1[66].xyxx
          add r22.z, -r22.y, l(1.000000)
          mad r22.xy, r22.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r22.z, r25.x
          mov r22.w, l(1.000000)
          dp4 r26.x, r22.xyzw, cb1[9].xyzw
          dp4 r26.y, r22.xyzw, cb1[10].xyzw
          dp4 r26.z, r22.xyzw, cb1[11].xyzw
          dp4 r26.w, r22.xyzw, cb1[12].xyzw
          div r22.xyzw, r26.xyzw, r26.wwww
          itof r20.xy, r24.xzxx
          add r20.xy, r20.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r24.xy, r20.xyxx, cb1[66].xyxx
          add r24.z, -r24.y, l(1.000000)
          mad r24.xy, r24.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r24.z, r25.y
          mov r24.w, l(1.000000)
          dp4 r26.x, r24.xyzw, cb1[9].xyzw
          dp4 r26.y, r24.xyzw, cb1[10].xyzw
          dp4 r26.z, r24.xyzw, cb1[11].xyzw
          dp4 r26.w, r24.xyzw, cb1[12].xyzw
          div r24.xyzw, r26.xyzw, r26.wwww
          add r20.xy, r20.zwzz, l(1.500000, 1.500000, 0.000000, 0.000000)
          div r26.xy, r20.xyxx, cb1[66].xyxx
          add r26.z, -r26.y, l(1.000000)
          mad r26.xy, r26.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r26.z, r25.z
          mov r26.w, l(1.000000)
          dp4 r27.x, r26.xyzw, cb1[9].xyzw
          dp4 r27.y, r26.xyzw, cb1[10].xyzw
          dp4 r27.z, r26.xyzw, cb1[11].xyzw
          dp4 r27.w, r26.xyzw, cb1[12].xyzw
          div r26.xyzw, r27.xyzw, r27.wwww
          itof r20.xy, r23.xwxx
          add r20.xy, r20.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          div r23.xy, r20.xyxx, cb1[66].xyxx
          add r23.z, -r23.y, l(1.000000)
          mad r23.xy, r23.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          mov r23.z, r25.w
          mov r23.w, l(1.000000)
          dp4 r27.x, r23.xyzw, cb1[9].xyzw
          dp4 r27.y, r23.xyzw, cb1[10].xyzw
          dp4 r27.z, r23.xyzw, cb1[11].xyzw
          dp4 r27.w, r23.xyzw, cb1[12].xyzw
          div r23.xyzw, r27.xyzw, r27.wwww
          dp4 r27.y, r22.xyzw, cb1[17].xyzw
          dp4 r27.z, r22.xyzw, cb1[18].xyzw
          dp4 r27.x, r22.xyzw, cb1[19].xyzw
          dp4 r22.z, r24.xyzw, cb1[17].xyzw
          dp4 r22.x, r24.xyzw, cb1[18].xyzw
          dp4 r22.y, r24.xyzw, cb1[19].xyzw
          dp4 r24.z, r26.xyzw, cb1[17].xyzw
          dp4 r24.x, r26.xyzw, cb1[18].xyzw
          dp4 r24.y, r26.xyzw, cb1[19].xyzw
          dp4 r26.y, r23.xyzw, cb1[17].xyzw
          dp4 r26.z, r23.xyzw, cb1[18].xyzw
          dp4 r26.x, r23.xyzw, cb1[19].xyzw
          add r20.xy, -r20.zwzz, r21.xyxx
          add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul r21.xy, r25.yzyy, r20.xxxx
          mad r21.xy, r20.zzzz, r25.xwxx, r21.xyxx
          mul r7.w, r20.y, r21.y
          mad r21.x, r20.w, r21.x, r7.w
          mov r21.y, l(1.000000)
          dp2 r7.w, r21.xyxx, cb1[11].zwzz
          dp2 r10.w, r21.xyxx, cb1[12].zwzz
          div r7.w, -r7.w, r10.w
          mov r12.w, l(1.000000)
          dp4 r23.x, r12.xyzw, cb1[51].xyzw
          dp4 r23.y, r12.xyzw, cb1[52].xyzw
          dp4 r23.z, r12.xyzw, cb1[53].xyzw
          div r7.w, -r7.w, r23.z
          mul r23.xyz, r7.wwww, r23.xyzx
          mov r23.w, l(1.000000)
          dp4 r25.x, r23.xyzw, cb1[17].xyzw
          dp4 r25.y, r23.xyzw, cb1[18].xyzw
          dp4 r25.z, r23.xyzw, cb1[19].xyzw
          lt r7.w, r20.y, r20.x
          add r20.xyz, -r27.zxyz, r24.xyzx
          add r21.xyw, -r27.zxzy, r22.xyxz
          mul r22.xyz, r20.yzxy, r21.xywx
          mad r21.xyw, r20.xyxz, r21.ywyx, -r22.xyxz
          dp3 r10.w, r21.xywx, r21.xywx
          rsq r10.w, r10.w
          mul r21.xyw, r10.wwww, r21.xyxw
          add r22.xyz, -r27.xyzx, r26.xyzx
          mul r23.xyz, r20.xyzx, r22.xyzx
          mad r20.xyz, r22.zxyz, r20.yzxy, -r23.xyzx
          dp3 r10.w, r20.xyzx, r20.xyzx
          rsq r10.w, r10.w
          mul r20.xyz, r10.wwww, r20.xyzx
          movc r20.xyz, r7.wwww, r21.xywx, r20.xyzx
        else 
          mov r25.xyz, l(0,0,0,0)
          mov r20.xyz, l(0,0,1.000000,0)
        endif 
        add r21.xyw, r12.xyxz, -r25.xyxz
        dp3 r7.w, r21.xywx, r20.xyzx
        movc r7.w, r21.z, r7.w, l(100000.000000)
        add r7.w, r7.w, -cb4[3].z
        mov r12.w, l(1.000000)
        mov r21.xyz, l(0,0,0,0)
        mov r10.w, l(0)
        mov r13.w, l(0)
        loop 
          uge r15.w, r10.w, cb3[11].z
          mov r13.w, l(0)
          breakc_nz r15.w
          imul null, r15.w, r10.w, l(11)
          mul r22.xyz, l(1.050000, 1.050000, 1.050000, 0.000000), cb3[r15.w + 63].xyzx
          dp4 r23.x, r12.xyzw, cb3[r15.w + 59].xyzw
          dp4 r23.y, r12.xyzw, cb3[r15.w + 60].xyzw
          dp4 r16.w, r12.xyzw, cb3[r15.w + 61].xyzw
          add r23.z, r16.w, cb4[13].z
          ge r22.xyz, r22.xyzx, |r23.xyzx|
          and r16.w, r22.y, r22.x
          and r16.w, r22.z, r16.w
          if_nz r16.w
            mov r22.z, -cb3[r15.w + 55].w
            mov r22.x, -cb3[r15.w + 56].w
            mov r22.y, -cb3[r15.w + 57].w
            add r22.xyz, r12.yzxy, r22.xyzx
            mul r23.xyz, r22.xyzx, cb3[r15.w + 65].zxyz
            mad r22.xyz, cb3[r15.w + 65].yzxy, r22.yzxy, -r23.xyzx
            add r21.xyz, r22.xyzx, cb3[r15.w + 64].xyzx
            mov r22.xyz, r21.xyzx
            mov r13.w, l(-1)
            break 
          else 
            mov r21.xyz, l(0,0,0,0)
          endif 
          iadd r10.w, r10.w, l(1)
          mov r13.w, r16.w
        endloop 
        and r21.xyz, r21.xyzx, r13.wwww
        lt r10.w, r4.w, l(0.000000)
        lt r12.w, l(-0.300000), r4.w
        and r10.w, r10.w, r12.w
        add r7.xyz, r7.xyzx, -r15.xyzx
        dp3 r12.w, r7.xyzx, r8.xywx
        dp3 r4.x, r4.xyzx, r8.xywx
        add_sat r4.x, r4.x, -cb4[9].w
        add_sat r4.x, r4.x, cb4[9].w
        dp3 r4.y, r15.xyzx, r15.xyzx
        min r4.y, r4.y, l(1.000000)
        add r4.z, -r4.x, l(1.000000)
        mad r4.x, r4.y, r4.z, r4.x
        lt r4.y, r12.w, cb4[12].w
        mul r4.x, r4.x, r4.x
        mul r4.x, r4.w, r4.x
        mad r4.xzw, -r4.xxxx, r8.xxyw, r11.xxyz
        movc r4.xyz, r4.yyyy, r4.xzwx, r11.xyzx
        lt r4.w, r12.w, l(0.000000)
        if_nz r4.w
          mul r22.xyz, r8.xywx, r12.wwww
          mad r7.xyz, -r12.wwww, r8.xywx, r7.xyzx
          ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r4.w, vThreadID.x, l(0), u1.xxxx
          ushr r4.w, r4.w, l(24)
          utof r4.w, r4.w
          mul r4.w, r4.w, cb4[1].w
          mul r4.w, r4.w, l(0.015625)
          mad r8.xyw, -r4.wwww, r22.xyxz, r15.xyxz
          mad r7.xyz, cb4[2].wwww, r7.xyzx, r8.xywx
          mad r7.xyz, -r7.xyzx, cb3[2].xxxx, r4.xyzx
        else 
          mov r7.xyz, r3.xyzx
        endif 
        movc r4.xyz, r10.wwww, r4.xyzx, r11.xyzx
        movc r3.xyz, r10.wwww, r7.xyzx, r3.xyzx
        lt r4.w, r5.w, l(0.000000)
        lt r7.x, l(-0.300000), r5.w
        and r4.w, r4.w, r7.x
        add r7.xyz, r10.xyzx, -r18.xyzx
        dp3 r8.x, r7.xyzx, r17.xyzx
        dp3 r8.y, r16.xyzx, r17.xyzx
        add_sat r8.y, r8.y, -cb4[9].w
        add_sat r8.y, r8.y, cb4[9].w
        dp3 r8.w, r18.xyzx, r18.xyzx
        min r8.w, r8.w, l(1.000000)
        add r10.x, -r8.y, l(1.000000)
        mad r8.y, r8.w, r10.x, r8.y
        lt r8.w, r8.x, cb4[12].w
        mul r8.y, r8.y, r8.y
        mul r5.w, r5.w, r8.y
        mad r10.xyz, -r5.wwww, r17.xyzx, r14.xyzx
        movc r10.xyz, r8.wwww, r10.xyzx, r14.xyzx
        lt r5.w, r8.x, l(0.000000)
        if_nz r5.w
          mul r15.xyz, r17.xyzx, r8.xxxx
          mad r7.xyz, -r8.xxxx, r17.xyzx, r7.xyzx
          ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r5.w, vThreadID.x, l(0), u1.xxxx
          ushr r5.w, r5.w, l(24)
          utof r5.w, r5.w
          mul r5.w, r5.w, cb4[1].w
          mul r5.w, r5.w, l(0.015625)
          mad r8.xyw, -r5.wwww, r15.xyxz, r18.xyxz
          mad r7.xyz, cb4[2].wwww, r7.xyzx, r8.xywx
          mad r7.xyz, -r7.xyzx, cb3[2].xxxx, r10.xyzx
        else 
          mov r7.xyz, r13.xyzx
        endif 
        movc r8.xyw, r4.wwww, r10.xyxz, r14.xyxz
        movc r13.xyz, r4.wwww, r7.xyzx, r13.xyzx
        lt r5.w, r7.w, l(0.000000)
        lt r7.x, l(-0.300000), r7.w
        and r5.w, r5.w, r7.x
        add r2.yzw, r2.yyzw, -r21.xxyz
        dp3 r7.x, r2.yzwy, r20.xyzx
        dp3 r7.y, r19.xyzx, r20.xyzx
        add_sat r7.y, r7.y, -cb4[9].w
        add_sat r7.y, r7.y, cb4[9].w
        dp3 r7.z, r21.xyzx, r21.xyzx
        min r7.z, r7.z, l(1.000000)
        add r10.x, -r7.y, l(1.000000)
        mad r7.y, r7.z, r10.x, r7.y
        lt r7.z, r7.x, cb4[12].w
        mul r7.y, r7.y, r7.y
        mul r7.y, r7.w, r7.y
        mad r10.xyz, -r7.yyyy, r20.xyzx, r12.xyzx
        movc r7.yzw, r7.zzzz, r10.xxyz, r12.xxyz
        lt r10.x, r7.x, l(0.000000)
        if_nz r10.x
          mul r10.xyz, r20.xyzx, r7.xxxx
          mad r2.yzw, -r7.xxxx, r20.xxyz, r2.yyzw
          ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r7.x, vThreadID.x, l(0), u1.xxxx
          ushr r7.x, r7.x, l(24)
          utof r7.x, r7.x
          mul r7.x, r7.x, cb4[1].w
          mul r7.x, r7.x, l(0.015625)
          mad r10.xyz, -r7.xxxx, r10.xyzx, r21.xyzx
          mad r2.yzw, cb4[2].wwww, r2.yyzw, r10.xxyz
          mad r2.yzw, -r2.yyzw, cb3[2].xxxx, r7.yyzw
        else 
          mov r2.yzw, r5.xxyz
        endif 
        movc r7.xyz, r5.wwww, r7.yzwy, r12.xyzx
        movc r5.xyz, r5.wwww, r2.yzwy, r5.xyzx
        min r2.y, r0.w, cb4[9].x
        movc r2.y, cb4[16].z, r2.y, r0.w
        or r2.z, r4.w, r5.w
        or r2.z, r10.w, r2.z
        movc r0.w, r2.z, r2.y, r0.w
        add r2.yzw, r4.xxyz, r8.xxyw
        add r2.yzw, r7.xxyz, r2.yyzw
        mul r10.xyz, r2.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
        mad r4.xyz, -r2.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r4.xyzx
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r4.xyz, r4.wwww, r4.xyzx
        mad r11.xyz, r3.wwww, r4.xyzx, r10.xyzx
        mad r4.xyz, -r2.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000), r8.xywx
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r4.xyz, r4.wwww, r4.xyzx
        mad r14.xyz, r3.wwww, r4.xyzx, r10.xyzx
        mad r2.yzw, -r2.yyzw, l(0.000000, 0.333333343, 0.333333343, 0.333333343), r7.xxyz
        dp3 r4.x, r2.yzwy, r2.yzwy
        rsq r4.x, r4.x
        mul r2.yzw, r2.yyzw, r4.xxxx
        mad r12.xyz, r3.wwww, r2.yzwy, r10.xyzx
      endif 
      div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[2].x
      add r3.xyz, -r3.xyzx, r11.xyzx
      mul r1.xzw, r2.yyyy, r3.xxyz
      add r3.xyz, -r13.xyzx, r14.xyzx
      mul r6.xyz, r2.yyyy, r3.xyzx
      add r3.xyz, -r5.xyzx, r12.xyzx
      mul r0.xyz, r2.yyyy, r3.xyzx
    endif 
    add r2.yzw, r11.xxyz, r14.xxyz
    add r2.yzw, r12.xxyz, r2.yyzw
    mul r3.xyz, r2.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    max r4.x, cb2[13].y, cb2[13].x
    mov r3.w, l(1.000000)
    dp4 r4.y, r3.xyzw, cb3[7].xyzw
    mad r4.y, -r2.x, r4.x, r4.y
    dp4 r4.z, r3.xyzw, cb3[8].xyzw
    mad r4.z, -r2.x, r4.x, r4.z
    lt r4.yz, r4.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    and r4.y, r4.z, r4.y
    dp4 r4.z, r3.xyzw, cb3[9].xyzw
    mad r4.z, -r2.x, r4.x, r4.z
    lt r4.z, r4.z, l(0.000000)
    and r4.y, r4.z, r4.y
    dp4 r3.w, r3.xyzw, cb3[10].xyzw
    mad r3.w, -r2.x, r4.x, r3.w
    lt r3.w, r3.w, l(0.000000)
    and r3.w, r3.w, r4.y
    if_nz r3.w
      add r4.xyz, r6.xyzx, r1.xzwx
      add r4.xyz, r0.xyzx, r4.xyzx
      mul r4.xyz, r4.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      dp3 r3.w, r4.xyzx, r4.xyzx
      sqrt r5.x, r3.w
      imm_atomic_iadd r7.x, u3, l(4), l(1)
      store_structured u2.xyz, r7.x, l(0), r3.xyzx
      if_z cb2[17].x
        add r3.xyz, -r11.yzxy, r14.yzxy
        dp3 r3.w, r3.xyzx, r3.xyzx
        rsq r3.w, r3.w
        mul r3.xyz, r3.wwww, r3.xyzx
        add r7.yzw, -r11.xxyz, r12.xxyz
        dp3 r3.w, r7.yzwy, r7.yzwy
        rsq r3.w, r3.w
        mul r7.yzw, r3.wwww, r7.yyzw
        mul r8.xyw, r3.xyxz, r7.yzyw
        mad r7.yzw, r3.zzxy, r7.zzwy, -r8.xxyw
        mul r8.xyw, r3.xyxz, r7.yzyw
        mad r10.xyz, r7.wyzw, r3.yzxy, -r8.xywx
        mov r10.w, r3.z
      else 
        mad r2.yzw, r2.yyzw, l(0.000000, 0.333333343, 0.333333343, 0.333333343), -cb1[174].xxyz
        dp3 r3.z, r2.yzwy, r2.yzwy
        rsq r3.z, r3.z
        mul r2.yzw, r2.yyzw, r3.zzzz
        mov r13.y, cb1[19].y
        mov r13.z, cb1[17].y
        mov r13.x, cb1[18].y
        mul r7.yzw, r2.wwyz, r13.xxyz
        mad r13.xyz, r2.zwyz, r13.yzxy, -r7.yzwy
        mul r7.yzw, r2.zzwy, r13.zzxy
        mad r5.yzw, r13.yyzx, r2.wwyz, -r7.yyzw
        ieq r3.z, cb2[17].x, l(2)
        lt r3.w, l(0.000000), r5.x
        div r4.xyz, r4.xyzx, r5.xxxx
        movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,-0.001000,0)
        dp3 r3.w, r4.xyzx, r13.xyzx
        dp3 r4.w, r4.xyzx, r5.yzwy
        mul r7.yzw, r4.wwww, r5.yyzw
        mad r7.yzw, r13.xxyz, r3.wwww, r7.yyzw
        dp3 r3.w, r7.yzwy, r7.yzwy
        rsq r3.w, r3.w
        mul r15.xyz, r3.wwww, r7.yzwy
        mul r7.yzw, r2.zzwy, r15.zzxy
        mad r16.yzw, r15.yyzx, r2.wwyz, -r7.yyzw
        add r3.w, -cb2[16].z, l(10.000000)
        max r3.w, r3.w, l(1.000000)
        dp3 r2.y, r4.xyzx, r2.yzwy
        mad_sat r2.y, -r3.w, |r2.y|, r3.w
        mul r16.x, r2.y, r5.x
        mov r15.w, r16.y
        mov r13.w, r5.y
        movc r10.xyzw, r3.zzzz, r15.wyzx, r13.wyzx
        movc r5.xyz, r3.zzzz, r16.xzwx, r5.xzwx
        mov r3.xy, r10.yzyy
        mov r10.yz, r5.yyzy
      endif 
      store_structured u2.xy, r7.x, l(28), r3.xyxx
      store_structured u2.xyzw, r7.x, l(12), r10.xyzw
      add r2.y, -r0.w, r1.y
      mul_sat r2.y, r2.y, cb4[6].y
      mul_sat r2.z, r0.w, cb4[7].y
      add_sat r2.w, r2.y, cb4[8].x
      mul r2.x, r2.w, r2.x
      add_sat r2.w, r2.z, cb4[8].y
      mul r2.x, r2.w, r2.x
      f32tof16 r2.yz, r2.yyzy
      imad r3.x, r2.y, l(0x00010000), r2.z
      ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r3.y, vThreadID.x, l(4), u1.xxxx
      f32tof16 r2.y, r5.x
      f32tof16 r2.x, r2.x
      imad r3.z, r2.y, l(0x00010000), r2.x
      store_structured u2.xyz, r7.x, l(36), r3.xyzx
    endif 
    mov r1.yzw, r1.xxzw
    mov r11.w, r14.x
    mov r14.xz, r14.yyzy
    mov r14.yw, r12.xxxy
    mov r1.x, r12.z
    mov r6.w, r0.x
    mov r9.xyz, r0.yzwy
  else 
    mov r1.yzw, r1.xxzw
    mov r11.w, r14.x
    mov r14.xz, r14.yyzy
    mov r14.yw, r12.xxxy
    mov r1.x, r12.z
    mov r6.w, r0.x
    mov r9.xyz, r0.yzwy
  endif 
  store_structured u0.xyzw, vThreadID.x, l(0), r11.xyzw
  store_structured u0.xyzw, vThreadID.x, l(16), r14.xzyw
  store_structured u0.xyzw, vThreadID.x, l(32), r1.xyzw
  store_structured u0.xyzw, vThreadID.x, l(48), r6.xyzw
  store_structured u0.xyzw, vThreadID.x, l(64), r9.xyzw
  store_structured u0.x, vThreadID.x, l(80), r8.z
endif 
ret 
// Approximately 1224 instruction slots used