// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed f0837a4bb655706d-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:13:57 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2Glass
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 BaseColorUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 SurfaceParametersUVTiling;  // Offset:   32 Size:    16 [unused]
//   float3 AbsorptionColor;            // Offset:   48 Size:    12
//   float AbsorptionDistance;          // Offset:   60 Size:     4
//   float3 AbsorptionColorPreset;      // Offset:   64 Size:    12
//   float BaseColorAlpha;              // Offset:   76 Size:     4
//   float3 BaseColor;                  // Offset:   80 Size:    12
//   float DustIntensity;               // Offset:   92 Size:     4
//   float3 DamageStateUVSlide;         // Offset:   96 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  108 Size:     4
//   float3 DustColor;                  // Offset:  112 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  124 Size:     4
//   float3 MudColor;                   // Offset:  128 Size:    12
//   float MaskChannelUsageGreen;       // Offset:  140 Size:     4
//   float3 SurfaceAlbedo;              // Offset:  144 Size:    12
//   float MaskChannelUsageRed;         // Offset:  156 Size:     4
//   float2 AbsorptionDistanceTiling;   // Offset:  160 Size:     8 [unused]
//   float MaxFreePath;                 // Offset:  168 Size:     4
//   float Metalness;                   // Offset:  172 Size:     4
//   float2 AbsorptionTiling;           // Offset:  176 Size:     8 [unused]
//   float MudIntensity;                // Offset:  184 Size:     4
//   float NormalMapIntensity;          // Offset:  188 Size:     4 [unused]
//   float2 NormalMapTiling;            // Offset:  192 Size:     8 [unused]
//   float Reflectance;                 // Offset:  200 Size:     4
//   float ReflectanceDustAdjustment;   // Offset:  204 Size:     4
//   float2 ThicknessTiling;            // Offset:  208 Size:     8 [unused]
//   float Roughness;                   // Offset:  216 Size:     4
//   float RoughnessDustAdjustment;     // Offset:  220 Size:     4
//   float Thickness;                   // Offset:  224 Size:     4
//   int WetSurfaceTypeIndex;           // Offset:  228 Size:     4
//   bool AbsorptionDistanceModulateByVAlpha;// Offset:  232 Size:     4 [unused]
//   bool DamageStateEnabled;           // Offset:  236 Size:     4 [unused]
//   bool IsVehicule;                   // Offset:  240 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16 [unused]
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12 [unused]
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Glass__SurfaceParametersTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// Viewport__RainOcclusionShadowMap__TexObj__    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__RaindropRippleTexture    texture  float4     2darray    4        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    5        1
// MaterialWD2Glass__SurfaceParametersTexture__TexObj__    texture  float4          2d    6        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    7        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    8        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    9        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d   10        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d   11        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d   12        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d   13        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// MaterialWD2Glass                  cbuffer      NA          NA    3        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    4        1
// LightData                         cbuffer      NA          NA    5        1
// VolumetricFog                     cbuffer      NA          NA    6        1
// LightProbes                       cbuffer      NA          NA    7        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// SV_Position              0   xyzw        5      POS   float   xy  
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[40], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[55], dynamicIndexed
dcl_constantbuffer cb6[38], immediateIndexed
dcl_constantbuffer cb7[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2darray (float,float,float,float) t4
dcl_resource_texturecubearray (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_input_ps linear sample v0.xyzw
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyzw
dcl_input_ps linear sample v4.xyz
dcl_input_ps_siv linear noperspective sample v5.xy, position
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 19
dcl_indexableTemp x0[3], 4
dcl_indexableTemp x1[3], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw

mov_sat r0.x, cb4[3].y
movc r0.y, v6.x, l(1.000000), l(-1.000000)
mul r0.yzw, r0.yyyy, v1.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r2.xyw, r0.yzyw, r1.xxxx
sample_b_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t6.xyzw, s0, cb1[180].x
eq r0.yz, cb3[9].wwww, l(0.000000, 1.000000, 2.000000, 0.000000)
movc r0.y, r0.y, r3.x, cb3[12].z
eq r1.y, cb3[8].w, l(1.000000)
movc r1.y, r1.y, r3.y, cb3[13].z
eq r1.zw, cb3[7].wwww, l(0.000000, 0.000000, 1.000000, 3.000000)
movc_sat r1.z, r1.z, r3.z, cb3[10].w
if_nz r0.z
  mul r0.z, r3.x, cb3[5].w
else 
  eq r3.x, cb3[8].w, l(2.000000)
  eq r4.x, cb3[7].w, l(2.000000)
  eq r4.y, cb3[6].w, l(1.000000)
  mul r5.xyz, r3.yzwy, cb3[5].wwww
  movc r3.y, r4.y, r5.z, cb3[5].w
  movc r3.y, r4.x, r5.y, r3.y
  movc r0.z, r3.x, r5.x, r3.y
endif 
eq r3.x, cb3[6].w, l(2.000000)
movc r3.x, r3.x, r3.w, l(1.000000)
mul r3.y, r3.z, cb3[11].z
and r1.w, r1.w, r3.y
add_sat r3.yz, cb4[2].yywy, cb4[2].xxzx
mul r0.z, r0.z, r3.y
mul r3.y, r1.w, r3.z
add r4.xyz, -v0.xyzx, cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed f0837a4bb655706d-ps.txt

mov r17.xyz, r4.xyzx
mov r17.w, l(1.0)
dp4 r18.w, r17.xyzw, cb1[57].xyzw
add r18.x, r18.w, -r16.y
mul r18.x, r18.x, -r16.x
mul r18.x, r18.x, cb1[9].x
mov r18.yzw, l(0.0)
dp4 r17.x, r18.xyzw, cb1[17].xyzw
dp4 r17.y, r18.xyzw, cb1[18].xyzw
dp4 r17.z, r18.xyzw, cb1[19].xyzw
add r4.xyz, r4.xyzw, r17.xyzx

dp3 r3.w, r4.xyzx, r4.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r4.xyzx
dp3 r4.w, r2.xywx, r5.xyzx
max r4.w, r4.w, l(0.000010)
eq r5.w, cb3[4].x, l(0.000000)
movc r6.xyz, r5.wwww, cb3[3].xyzx, cb3[4].xyzx
mul r5.w, v1.w, cb3[3].w
log r6.xyz, r6.xyzx
max r5.w, r5.w, l(1.000000047E-034)
div r6.xyz, -r6.xyzx, r5.wwww
mul r5.w, cb3[14].x, l(0.500000)
div r4.w, r5.w, r4.w
mul r5.w, cb3[10].z, cb3[14].x
max r4.w, r4.w, l(0.000000)
min r4.w, r5.w, r4.w
mul r6.xyz, r4.wwww, -r6.xyzx
exp r6.xyz, r6.xyzx
max_sat r4.w, cb3[4].w, cb4[3].x
add r5.w, -r4.w, l(1.000000)
mul r6.xyz, r5.wwww, r6.xyzx
add r7.xyz, cb3[5].xyzx, -cb3[9].xyzx
mad r7.xyz, r4.wwww, r7.xyzx, cb3[9].xyzx
mad_sat r1.y, r0.z, cb3[13].w, r1.y
ftoi r8.xy, v3.zwzz
and r8.xy, r8.xyxx, l(63, 63, 0, 0)
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r8.xy, r8.xyzw, t1.xyzw
mad r8.xy, r8.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.zw, r8.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r9.xy, r8.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r8.zwzz
dp2 r9.z, r8.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r8.zw, v4.zzzz, cb1[33].zzzw
mul r10.xy, r8.zwzz, r9.xzxx
mov r10.z, l(0)
add r10.xyz, r10.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r10.xyxx, t2.xxxx, s3, r10.z
dp2 r9.w, r8.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r9.xy, r8.zwzz, r9.ywyy
mov r9.z, l(0)
add r9.xyz, r9.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r9.xyxx, t2.xxxx, s3, r9.z
add r4.w, r4.w, r5.w
mul r9.xy, r8.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r9.xy, r8.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r9.xyxx
dp2 r9.z, r8.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r10.xy, r8.zwzz, r9.xzxx
mov r10.z, l(0)
add r10.xyz, r10.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r10.xyxx, t2.xxxx, s3, r10.z
add r4.w, r4.w, r5.w
dp2 r9.w, r8.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r8.xy, r8.zwzz, r9.ywyy
mov r8.z, l(0)
add r8.xyz, r8.xyzx, v2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r8.xyxx, t2.xxxx, s3, r8.z
add r4.w, r4.w, r5.w
add r8.xy, v2.xyxx, -cb1[28].xyxx
add r8.xy, -|r8.xyxx|, cb1[28].zwzz
mul r8.xy, r8.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
min_sat r5.w, r8.y, r8.x
mad r4.w, r4.w, l(0.250000), l(-1.000000)
mad r4.w, r5.w, r4.w, l(1.000000)
mad_sat r5.w, r2.w, l(0.500000), l(0.500000)
mul r4.w, r4.w, r5.w
mul r4.w, r4.w, cb0[3].x
iadd r8.xy, cb3[14].yyyy, l(1, 19, 0, 0)
ult r5.w, r8.x, l(1)
movc r5.w, r5.w, l(0), r8.y
add r8.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb0[r5.w + 4].xyxx
mad r8.xy, r4.wwww, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.y, r1.y, r8.y
mov r9.xy, v4.xyxx
mov r9.z, l(0)
sample_b_indexable(texture2darray)(float,float,float,float) r8.yz, r9.xyzx, t4.zxyw, s2, cb1[180].x
mov_sat r6.w, r2.w
dp2 r6.w, r6.wwww, r6.wwww
add r6.w, r6.w, l(-1.000000)
max r6.w, r6.w, l(0.000000)
mul r4.w, r4.w, r6.w
mul r8.yz, r4.wwww, r8.yyzy
mad r2.xy, r8.yzyy, cb0[r5.w + 4].wwww, r2.xyxx
mad r1.w, r1.w, r3.z, -r0.z
add r1.w, r1.w, l(1.000000)
mul_sat r6.xyz, r1.wwww, r6.xyzx
mad r8.yzw, cb3[7].xxyz, r8.xxxx, -r7.xxyz
mad r7.xyz, r0.zzzz, r8.yzwy, r7.xyzx
mad r8.xyz, cb3[8].xyzx, r8.xxxx, -r7.xyzx
mad r7.xyz, r3.yyyy, r8.xyzx, r7.xyzx
dp3 r1.w, r6.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r8.xyz, -r7.xyzx, l(0.0356012993, 0.0356012993, 0.0356012993, 0.000000)
mad r7.xyz, r0.xxxx, r8.xyzx, r7.xyzx
mul r8.xyz, r3.xxxx, r7.xyzx
mad_sat r0.y, r0.z, cb3[12].w, r0.y
add r0.z, -r0.y, l(0.250000)
mad r0.y, r0.x, r0.z, r0.y
mul r0.y, r3.x, r0.y
mul r0.z, r1.y, r1.y
max r0.z, r0.z, l(0.001000)
min r0.z, r0.z, l(1.000000)
add r1.y, -r0.z, l(1.000000)
mad r9.y, r0.x, r1.y, r0.z
mad r0.x, r0.x, -r1.z, r1.z
mov r1.yz, l(0,0,0,0)
mov r10.z, l(0)
mov r0.z, l(0)
mov r3.yz, l(0,2,0,0)
loop 
  uge r4.w, r3.z, l(3)
  breakc_nz r4.w
  ishl r4.w, r3.z, l(2)
  mul r11.xyz, v0.yyyy, cb5[r4.w + 1].xyzx
  mad r11.xyz, cb5[r4.w + 0].xyzx, v0.xxxx, r11.xyzx
  mad r11.xyz, cb5[r4.w + 2].xyzx, v0.zzzz, r11.xyzx
  add r11.xyz, r11.xyzx, cb5[r4.w + 3].xyzx
  max r4.w, |r11.y|, |r11.x|
  add r4.w, r4.w, cb5[16].x
  ult r5.w, r3.z, l(2)
  if_nz r5.w
    lt r5.w, r4.w, l(1.000000)
    if_nz r5.w
      mov r1.yz, r11.xxyx
      mov r10.z, r11.z
      mov r0.z, r4.w
      mov r3.y, r3.z
      break 
    endif 
  endif 
  iadd r3.z, r3.z, l(1)
  mov r1.yz, r11.xxyx
  mov r10.z, r11.z
  mov r0.z, r4.w
  mov r3.y, l(2)
endloop 
mov x0[0].z, l(0.166666672)
mov x0[1].z, l(0.500000)
mov x0[2].z, l(0.833333313)
mov r11.x, x0[r3.y + 0].z
mov r11.yw, l(0,0.500000,0,0.500000)
mad r10.xy, r1.yzyy, l(0.166666672, -0.500000, 0.000000, 0.000000), r11.xyxx
dp3 r1.y, cb5[17].xyzx, icb[r3.y + 0].xyzx
ieq r1.z, r3.y, l(2)
mad_sat r0.z, r0.z, cb5[16].z, cb5[16].w
and r0.z, r0.z, r1.z
ftoi r3.yz, v5.xxyx
and r12.xy, r3.yzyy, l(63, 63, 0, 0)
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.yz, r12.xyzw, t1.zxyw
mad r3.yz, r3.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r9.zw, r3.yyyy, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r12.xy, r3.zzzz, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r9.zwzz
dp2 r12.z, r3.yzyy, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r1.yz, r1.yyyy, cb5[38].zzwz
mul r13.xy, r1.yzyy, r12.xzxx
mov r13.z, l(0)
add r13.xyz, r10.xyzx, r13.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r4.w, r13.xyxx, t7.xxxx, s3, r13.z
dp2 r12.w, r3.yzyy, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r13.xy, r1.yzyy, r12.ywyy
mov r13.z, l(0)
add r13.xyz, r10.xyzx, r13.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r13.xyxx, t7.xxxx, s3, r13.z
add r4.w, r4.w, r5.w
mul r9.zw, r3.yyyy, l(0.000000, 0.000000, -0.602610528, 0.987966299)
mad r13.xy, r3.zzzz, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r9.zwzz
dp2 r13.z, r3.yzyy, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r14.xy, r1.yzyy, r13.xzxx
mov r14.z, l(0)
add r14.xyz, r10.xyzx, r14.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r14.xyxx, t7.xxxx, s3, r14.z
add r4.w, r4.w, r5.w
dp2 r13.w, r3.yzyy, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r14.xy, r1.yzyy, r13.ywyy
mov r14.z, l(0)
add r10.xyz, r10.xyzx, r14.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r10.xyxx, t7.xxxx, s3, r10.z
add r1.y, r1.y, r4.w
mul r1.z, r1.y, l(0.250000)
mad r1.y, -r1.y, l(0.250000), l(1.000000)
mad r0.z, r0.z, r1.y, r1.z
dp3 r1.y, v0.xyzx, cb0[1].xyzx
add_sat r1.y, r1.y, cb0[1].w
mul r0.z, r0.z, r1.y
mad r0.z, r0.z, cb5[37].x, cb5[37].y
lt r1.z, l(0.000000), r0.z
if_nz r1.z
  mov r2.z, r2.w
  dp3_sat r1.z, r2.xyzx, cb2[2].xyzx
  mul r10.xyz, r8.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
  add r3.y, -r0.x, l(1.000000)
  mul r10.xyz, r3.yyyy, r10.xyzx
  mul r3.y, r0.y, l(0.080000)
  mad r14.xyz, r7.xyzx, r3.xxxx, -r3.yyyy
  mad r14.xyz, r0.xxxx, r14.xyzx, r3.yyyy
  dp3_sat r3.y, r2.xyzx, r5.xyzx
  mad r4.xyz, r4.xyzx, r3.wwww, cb2[2].xyzx
  dp3 r3.z, r4.xyzx, r4.xyzx
  rsq r3.z, r3.z
  mul r4.xyz, r3.zzzz, r4.xyzx
  dp3 r3.z, r4.xyzx, cb2[2].xyzx
  dp3_sat r2.z, r2.xyzx, r4.xyzx
  mul r3.w, r9.y, r9.y
  mul r2.z, r2.z, r2.z
  mad r4.x, r9.y, r9.y, l(-1.000000)
  mad r2.z, r2.z, r4.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(3.14159274)
  div r2.z, r3.w, r2.z
  mad r3.w, r9.y, l(0.500000), l(0.500000)
  mul r4.x, r1.z, r1.z
  mul r3.w, r3.w, r3.w
  mad r4.y, -r1.z, r1.z, l(1.000000)
  mul r4.y, r3.w, r4.y
  max r4.x, r4.x, l(1.000000047E-034)
  div r4.x, r4.y, r4.x
  add r4.x, r4.x, l(1.000000)
  sqrt r4.x, r4.x
  add r4.x, r4.x, l(1.000000)
  div r4.x, l(2.000000), r4.x
  mul r4.y, r3.y, r3.y
  mad r3.y, -r3.y, r3.y, l(1.000000)
  mul r3.y, r3.y, r3.w
  max r3.w, r4.y, l(1.000000047E-034)
  div r3.y, r3.y, r3.w
  add r3.y, r3.y, l(1.000000)
  sqrt r3.y, r3.y
  add r3.y, r3.y, l(1.000000)
  div r3.y, l(2.000000), r3.y
  mul r3.y, r3.y, r4.x
  dp3 r3.w, r14.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r3.w, r3.w, l(50.000000)
  add r3.z, -r3.z, l(1.000000)
  mul r4.x, r3.z, r3.z
  mul r4.x, r4.x, r4.x
  add r4.yzw, -r14.xxyz, r3.wwww
  mul r4.xyz, r4.xxxx, r4.yzwy
  mad r4.xyz, r4.xyzx, r3.zzzz, r14.xyzx
  mul r2.z, r2.z, r3.y
  mul r3.yzw, r4.xxyz, r2.zzzz
  mul r3.yzw, r1.zzzz, r3.yyzw
  mad r3.yzw, r10.xxyz, r1.zzzz, r3.yyzw
  mul r3.yzw, r0.zzzz, r3.yyzw
  mul r3.yzw, r3.yyzw, cb2[0].xxyz
else 
  mov r3.yzw, l(0,0,0,0)
endif 
mov r4.xy, l(0,0,0,0)
mov r10.z, l(0)
mov r0.z, l(0)
mov r1.z, l(2)
mov r2.z, l(0)
loop 
  uge r4.z, r2.z, l(3)
  breakc_nz r4.z
  ishl r4.z, r2.z, l(2)
  mul r14.xyz, v0.yyyy, cb5[r4.z + 1].xyzx
  mad r14.xyz, cb5[r4.z + 0].xyzx, v0.xxxx, r14.xyzx
  mad r14.xyz, cb5[r4.z + 2].xyzx, v0.zzzz, r14.xyzx
  add r14.xyz, r14.xyzx, cb5[r4.z + 3].xyzx
  max r4.z, |r14.y|, |r14.x|
  add r4.z, r4.z, cb5[16].x
  ult r4.w, r2.z, l(2)
  if_nz r4.w
    lt r4.w, r4.z, l(1.000000)
    if_nz r4.w
      mov r4.xy, r14.xyxx
      mov r10.z, r14.z
      mov r0.z, r4.z
      mov r1.z, r2.z
      break 
    endif 
  endif 
  iadd r2.z, r2.z, l(1)
  mov r4.xy, r14.xyxx
  mov r10.z, r14.z
  mov r0.z, r4.z
  mov r1.z, l(2)
endloop 
mov x1[0].z, l(0.166666672)
mov x1[1].z, l(0.500000)
mov x1[2].z, l(0.833333313)
mov r11.z, x1[r1.z + 0].z
mad r10.xy, r4.xyxx, l(0.166666672, -0.500000, 0.000000, 0.000000), r11.zwzz
dp3 r2.z, cb5[17].xyzx, icb[r1.z + 0].xyzx
ieq r1.z, r1.z, l(2)
mad_sat r0.z, r0.z, cb5[16].z, cb5[16].w
and r0.z, r0.z, r1.z
mul r4.xy, r2.zzzz, cb5[38].zwzz
mul r11.xy, r4.xyxx, r12.xzxx
mov r11.z, l(0)
add r11.xyz, r10.xyzx, r11.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.z, r11.xyxx, t7.xxxx, s3, r11.z
mul r11.xy, r4.xyxx, r12.ywyy
mov r11.z, l(0)
add r11.xyz, r10.xyzx, r11.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.z, r11.xyxx, t7.xxxx, s3, r11.z
add r1.z, r1.z, r2.z
mul r11.xy, r4.xyxx, r13.xzxx
mov r11.z, l(0)
add r11.xyz, r10.xyzx, r11.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.z, r11.xyxx, t7.xxxx, s3, r11.z
add r1.z, r1.z, r2.z
mul r4.xy, r4.xyxx, r13.ywyy
mov r4.zw, l(0,0,0,1.000000)
add r4.xyz, r4.xyzx, r10.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.z, r4.xyxx, t7.xxxx, s3, r4.z
add r1.z, r1.z, r2.z
mul r2.z, r1.z, l(0.250000)
mad r1.z, -r1.z, l(0.250000), l(1.000000)
mad r0.z, r0.z, r1.z, r2.z
mul r0.z, r1.y, r0.z
mad r0.z, r0.z, cb5[37].x, cb5[37].y
mad r4.xyz, cb1[173].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb1[183].xyzx
dp4 r10.x, r4.xyzw, cb7[12].xyzw
dp4 r10.y, r4.xyzw, cb7[13].xyzw
dp4_sat r1.y, r4.xyzw, cb7[14].xyzw
add r9.zw, r10.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
add r10.xyz, cb7[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r10.xy, r10.xyxx, cb7[16].xyxx
div r11.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb7[16].xyzx
mad r12.xy, r9.zwzz, r10.xyxx, r11.xyxx
lt r1.z, l(0.000000), cb7[17].y
div_sat r2.z, r1.y, cb7[17].y
mul r2.z, r2.z, cb7[17].x
and r1.z, r1.z, r2.z
lt r2.z, cb7[17].y, l(1.000000)
add_sat r1.y, r1.y, -cb7[17].y
add r4.w, -cb7[17].y, l(1.000000)
div r1.y, r1.y, r4.w
log r1.y, |r1.y|
mul r1.y, r1.y, cb7[16].w
exp r1.y, r1.y
add r4.w, r10.z, -cb7[17].x
mul r1.y, r1.y, r4.w
and r1.y, r1.y, r2.z
add r1.y, r1.y, r1.z
div r1.y, r1.y, cb7[16].z
add r12.z, r11.z, r1.y
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r12.xyzx, t11.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r12.xyzx, t10.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r12.xyzx, t9.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r14.xyzw, r12.xyzx, t12.xyzw, s1, l(0.000000)
log r10.xyzw, |r10.xyzw|
mul r10.xyzw, r10.xyzw, cb7[22].xxxx
exp r10.xyzw, r10.xyzw
log r11.xyzw, |r11.xyzw|
mul r11.xyzw, r11.xyzw, cb7[22].xxxx
exp r11.xyzw, r11.xyzw
log r13.xyzw, |r13.xyzw|
mul r13.xyzw, r13.xyzw, cb7[22].xxxx
exp r13.xyzw, r13.xywz
dp3 r15.x, r2.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r15.y, r2.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r15.z, r2.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
mad r0.w, -r0.w, r1.x, l(0.500000)
mul r15.w, r0.w, l(0.666666687)
max r15.xyzw, r15.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r11.xyzx, r15.yyyy
mad r1.xyz, r15.xxxx, r10.xyzx, r1.xyzx
mad r1.xyz, r15.zzzz, r13.xywx, r1.xyzx
mov r13.x, r10.w
mov r13.y, r11.w
mad r1.xyz, r15.wwww, r13.xyzx, r1.xyzx
add r0.w, r15.y, r15.x
add r0.w, r15.z, r0.w
add r0.w, r15.w, r0.w
div r1.xyz, r1.xyzx, r0.wwww
add r4.xyz, -r4.xyzx, cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed f0837a4bb655706d-ps.txt

mov r17.xyz, r4.xyzx
mov r17.w, l(1.0)
dp4 r18.w, r17.xyzw, cb1[57].xyzw
add r18.x, r18.w, -r16.y
mul r18.x, r18.x, -r16.x
mul r18.x, r18.x, cb1[9].x
mov r18.yzw, l(0.0)
dp4 r17.x, r18.xyzw, cb1[17].xyzw
dp4 r17.y, r18.xyzw, cb1[18].xyzw
dp4 r17.z, r18.xyzw, cb1[19].xyzw
add r4.xyz, r4.xyzw, r17.xyzx

dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, -r4.xyzx, r2.xywx
add r0.w, r0.w, r0.w
mad r4.xyz, r2.xywx, -r0.wwww, -r4.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyw, r0.wwww, r4.xyxz
if_nz cb7[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r12.xyzx, t13.xyzw, s1, l(0.000000)
  dp2 r2.z, r4.xyxx, r4.xyxx
  rsq r2.z, r2.z
  mul r9.zw, r2.zzzz, r4.xxxy
  dp2 r2.z, r9.zwzz, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r2.z, r2.z, l(-0.707106769)
  mul_sat r2.z, r2.z, l(3.41421342)
  dp2 r5.w, r9.zwzz, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r5.w, r5.w, l(-0.707106769)
  mul_sat r5.w, r5.w, l(3.41421342)
  add r6.w, r2.z, r5.w
  dp2 r7.w, r9.zwzz, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r7.w, r7.w, l(-0.707106769)
  mul_sat r7.w, r7.w, l(3.41421342)
  add r6.w, r6.w, r7.w
  dp2 r8.w, r9.zwzz, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r8.w, r8.w, l(-0.707106769)
  mul_sat r8.w, r8.w, l(3.41421342)
  add r6.w, r6.w, r8.w
  dp2 r11.x, r9.zwzz, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r11.x, r11.x, l(-0.707106769)
  mul_sat r11.x, r11.x, l(3.41421342)
  add r6.w, r6.w, r11.x
  dp2 r11.y, r9.zwzz, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r11.y, r11.y, l(-0.707106769)
  mul_sat r11.y, r11.y, l(3.41421342)
  add r6.w, r6.w, r11.y
  dp2 r11.z, r9.zwzz, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r11.z, r11.z, l(-0.707106769)
  mul_sat r11.z, r11.z, l(3.41421342)
  add r6.w, r6.w, r11.z
  dp2 r9.z, r9.zwzz, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r9.z, r9.z, l(-0.707106769)
  mul_sat r9.z, r9.z, l(3.41421342)
  add r6.w, r6.w, r9.z
  div r2.z, r2.z, r6.w
  div r5.w, r5.w, r6.w
  div r7.w, r7.w, r6.w
  div r8.w, r8.w, r6.w
  div r9.w, r11.x, r6.w
  div r11.x, r11.y, r6.w
  div r11.y, r11.z, r6.w
  div r6.w, r9.z, r6.w
  mul r5.w, r5.w, r14.y
  mad r2.z, r14.x, r2.z, r5.w
  mad r2.z, r14.z, r7.w, r2.z
  mad r2.z, r14.w, r8.w, r2.z
  mad r2.z, r10.x, r9.w, r2.z
  mad r2.z, r10.y, r11.x, r2.z
  mad r2.z, r10.z, r11.y, r2.z
  mad r10.y, r10.w, r6.w, r2.z
  ge r2.z, l(0.565600), r9.y
  mad r5.w, -r9.y, l(0.0968105793), l(1.05046380)
  mad r5.w, r5.w, r9.y, l(-0.601145864)
  add r6.w, r9.y, l(-0.619457066)
  div r5.w, r5.w, r6.w
  movc r2.z, r2.z, r5.w, l(0.705081284)
  mad r5.w, -r4.w, r4.w, l(1.000000)
  sqrt r5.w, r5.w
  mad r6.w, -r2.z, r2.z, l(1.000000)
  sqrt r6.w, r6.w
  mul r7.w, r5.w, r6.w
  mad r11.y, r4.w, r2.z, -r7.w
  mad r12.y, r4.w, r2.z, r7.w
  mul r6.w, r4.w, r6.w
  mad r11.x, r5.w, r2.z, r6.w
  mad r12.x, r5.w, r2.z, -r6.w
  lt r2.z, r11.x, l(0.000000)
  movc r9.zw, r2.zzzz, l(0,0,0,-1.000000), r11.xxxy
  lt r2.z, r12.x, l(0.000000)
  movc r10.zw, r2.zzzz, l(0,0,0,1.000000), r12.xxxy
  ge r2.z, r9.w, r10.y
  ge r5.w, r10.y, r10.w
  mul r6.w, r10.y, r10.y
  mad r7.w, -r10.y, r10.y, l(1.000000)
  sqrt r10.x, r7.w
  lt r7.w, r9.w, l(0.000000)
  add r11.xy, r10.zwzz, l(-1.000000, -0.000000, 0.000000, 0.000000)
  dp2 r8.w, r11.xyxx, r11.xyxx
  sqrt r8.w, r8.w
  mul r8.w, r8.w, l(0.500000)
  mul r8.w, r8.w, r8.w
  add r9.zw, r9.zzzw, -r10.zzzw
  dp2 r9.z, r9.zwzz, r9.zwzz
  sqrt r9.z, r9.z
  mul r9.z, r9.z, l(0.500000)
  mul r9.z, r9.z, r9.z
  movc r7.w, r7.w, r8.w, r9.z
  add r9.zw, -r10.zzzw, r10.xxxy
  dp2 r8.w, r9.zwzz, r9.zwzz
  sqrt r8.w, r8.w
  mul r8.w, r8.w, l(0.500000)
  mul r8.w, r8.w, r8.w
  div r7.w, r8.w, r7.w
  movc r5.w, r5.w, l(0), r7.w
  movc r2.z, r2.z, l(1.000000), r5.w
  mad r5.w, r6.w, l(-0.080000), l(0.080000)
  max r2.z, r2.z, r5.w
else 
  dp3 r10.x, r4.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r10.y, r4.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r10.z, r4.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r0.w, -r4.z, r0.w, l(0.500000)
  mul r10.w, r0.w, l(0.666666687)
  max r4.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r0.w, r4.xyzw, r14.xyzw
  add r4.x, r4.y, r4.x
  add r4.x, r4.z, r4.x
  add r4.x, r4.w, r4.x
  div r2.z, r0.w, r4.x
endif 
mul r4.xyz, r8.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
add r0.w, -r0.x, l(1.000000)
mul r4.xyz, r0.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, r4.xyzx, r3.yzwy
add r0.z, r0.z, r2.z
mul r0.yz, r0.yyzy, l(0.000000, 0.080000, 0.500000, 0.000000)
min r0.w, r9.y, l(1.000000)
dp3 r2.z, -r5.xyzx, r2.xywx
add r2.z, r2.z, r2.z
mad r3.yzw, r2.xxyw, -r2.zzzz, -r5.xxyz
mul r0.w, r0.w, r0.w
div r0.w, l(2.000000), r0.w
add r0.w, r0.w, l(-2.000000)
max r0.w, r0.w, l(1.000000031E-022)
sqrt r0.w, r0.w
div r0.w, l(-10.000000), r0.w
exp r0.w, r0.w
add r0.w, r0.w, l(-0.000980)
mul_sat r0.w, r0.w, l(1.00795019)
add r0.w, -r0.w, l(1.000000)
if_z cb1[184].z
  mul r2.z, r0.w, cb1[174].w
  mov r4.xyzw, l(0,0,0,0)
  mov r5.w, l(1.000000)
  mov r6.w, l(0)
  loop 
    uge r7.w, r6.w, l(15)
    breakc_nz r7.w
    imul null, r7.w, r6.w, l(7)
    dp4 r8.x, v0.xyzw, cb1[r7.w + 68].xyzw
    dp4 r8.y, v0.xyzw, cb1[r7.w + 69].xyzw
    dp4 r8.z, v0.xyzw, cb1[r7.w + 70].xyzw
    ge r10.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r10.xyz, r10.xyzx, cb1[r7.w + 72].xyzx, cb1[r7.w + 73].xyzx
    add r8.xyz, -|r8.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r8.xyz, r10.xyzx, r8.xyzx
    mul r8.x, r8.y, r8.x
    mul r8.x, r8.z, r8.x
    lt r8.y, l(0.000000), r8.x
    if_nz r8.y
      dp3 r10.x, r3.yzwy, cb1[r7.w + 68].xyzx
      dp3 r10.y, r3.yzwy, cb1[r7.w + 69].xyzx
      dp3 r10.z, r3.yzwy, cb1[r7.w + 70].xyzx
      mul r8.x, r8.x, cb1[r7.w + 73].w
      mov r10.w, cb1[r7.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t5.xyzw, s2, r2.z
      mul r10.xyzw, r10.xyzw, cb1[r7.w + 74].xxxy
      min r7.w, r5.w, r8.x
      mad r8.xyzw, r10.xyzw, r7.wwww, r4.xyzw
      add r7.w, r5.w, -r7.w
      ge r9.z, l(0.000000), r7.w
      if_nz r9.z
        mov r4.xyzw, r8.xyzw
        mov r5.w, r7.w
        break 
      endif 
      mov r4.xyzw, r8.xyzw
      mov r5.w, r7.w
    endif 
    iadd r6.w, r6.w, l(1)
  endloop 
else 
  mov r4.xyzw, l(0,0,0,0)
  mov r5.w, l(1.000000)
endif 
add r2.z, r4.w, r5.w
mul r0.z, r0.z, r2.z
lt r2.z, l(0.000000), r0.z
if_nz r2.z
  mul r0.w, r0.w, cb1[183].w
  add r2.z, -|r3.w|, r3.w
  mad r2.z, r5.w, r2.z, |r3.w|
  mad r2.z, r2.z, l(2.000000), l(2.000000)
  div r8.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.zzzz
  mul r3.yz, r3.zzyz, r8.xxyx
  mad r3.yz, r3.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t3.wxyz, s1, r0.w
  mov_sat r8.xyz, r3.yzwy
  movc r3.yzw, cb1[184].zzzz, r8.xxyz, r3.yyzw
  div r3.yzw, r3.yyzw, cb1[176].wwww
  mad r4.xyz, r3.yzwy, r0.zzzz, r4.xyzx
endif 
mad r3.yzw, r7.xxyz, r3.xxxx, -r0.yyyy
mad r0.xyz, r0.xxxx, r3.yzwy, r0.yyyy
dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r0.w, r0.w, l(50.000000)
dp3_sat r9.x, r2.xywx, r5.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r9.xyxx, t0.xyzw, s1, l(0.000000)
mad r0.xyz, r0.xyzx, r2.xxxx, r2.yyyy
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
add r1.xyz, v0.xyzx, -cb6[30].xyzx
dp3 r0.w, r1.xyzx, cb6[33].xyzx
mul r1.xy, v5.xyxx, cb6[37].zzzz
round_ni r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, cb6[17].xyxx
iadd r2.x, cb6[28].z, l(-1)
utof r2.x, r2.x
mul r2.y, r2.x, l(0.031250)
exp r2.y, r2.y
mad r2.y, r2.y, cb6[1].z, cb6[1].w
min r2.z, r0.w, r2.y
add r2.z, r2.z, -cb6[1].w
div r2.z, r2.z, cb6[1].z
log r2.z, r2.z
mul r2.z, r2.z, l(32.000000)
div r1.z, r2.z, r2.x
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r1.xyzx, t8.xyzw, s1, l(0.000000)
mad r5.xyzw, cb6[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r1.xyxy
mov r7.xy, r5.xyxx
mov r7.z, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r8.xyzw
mov r7.xy, r5.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r7.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r5.xyzw
mad r5.xyzw, cb6[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r1.xyxy
mov r7.xy, r5.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r8.xyzw
mov r7.xy, r5.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r7.xyzx, t8.xyzw, s1, l(0.000000)
add r4.xyzw, r4.xyzw, r5.xyzw
mul r4.xyzw, r4.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xz, r1.xxyx, cb6[0].zzwz
mul r1.xy, r2.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r2.x, r2.y, cb6[0].x
add r2.x, r2.x, l(1.000000)
mov r1.z, -cb6[0].x
mul r2.xyz, r1.xyzx, r2.xxxx
mov r2.w, l(1.000000)
dp4 r1.x, r2.xyzw, cb6[13].xyzw
dp4 r1.y, r2.xyzw, cb6[14].xyzw
dp4 r1.z, r2.xyzw, cb6[15].xyzw
add r2.xyzw, -r1.xyzx, cb6[30].xyzx
div r1.xyz, r4.xyzx, cb1[176].wwww
exp r3.y, r4.w
dp3 r3.z, r2.yzwy, r2.yzwy
rsq r3.z, r3.z
mul r2.xyzw, r2.xyzw, r3.zzzz
div r3.z, cb6[31].w, |r2.z|
min r0.w, r0.w, r3.z
mul r3.z, r0.w, cb6[29].w
min r3.z, r3.z, l(1.000000)
add r0.w, r0.w, -cb6[33].w
mul_sat r0.w, r0.w, cb6[32].w
mul r0.w, r0.w, r3.z
mul r3.z, r0.w, cb6[34].w
mul r0.w, r0.w, cb6[30].w
mul r0.w, r0.w, l(-1.442695)
exp r0.w, r0.w
mul r4.xyz, r2.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r5.xyz, r4.xxxx, cb2[32].xyzx
mad r5.xyz, cb2[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r5.xyzx
mad r4.xyw, r4.yyyy, cb2[33].xyxz, r5.xyxz
mad r4.xyz, r4.zzzz, cb2[34].xyzx, r4.xywx
mul r5.xyzw, r2.xyzw, r2.yzzz
mul r5.xyw, r5.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r4.xyz, r5.xxxx, cb2[35].xyzx, r4.xyzx
mad r4.xyz, r5.yyyy, cb2[36].xyzx, r4.xyzx
mad r2.x, r5.z, l(3.000000), l(-1.000000)
mul r2.x, r2.x, l(0.315392)
mad r4.xyz, r2.xxxx, cb2[37].xyzx, r4.xyzx
mad r4.xyz, r5.wwww, cb2[38].xyzx, r4.xyzx
mul r2.x, r2.y, r2.y
mad r2.x, r2.w, r2.w, -r2.x
mul r2.x, r2.x, l(0.546274)
mad r2.xyz, r2.xxxx, cb2[39].xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, r3.zzzz
mul r2.xyz, r2.xyzx, cb6[29].xyzx
mad r2.xyz, r2.xyzx, r3.yyyy, r1.xyzx
mul r2.w, r0.w, r3.y
movc r2.xyzw, cb6[37].wwww, r2.xyzw, l(0,0,0,1.000000)
add r1.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r2.wwww
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 r0.w, r0.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
ine r1.x, cb4[6].x, l(-1)
itof r1.y, cb4[6].x
mad r1.y, -r1.y, l(0.00392156886), l(1.000000)
movc r1.x, r1.x, r1.y, l(1.000000)
mul o0.xyzw, r0.xyzw, r1.xxxx
add r0.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r3.xxxx
add r1.y, r1.w, l(-1.000000)
mul r0.w, r1.y, r3.x
mad o1.xyzw, r1.xxxx, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ret 
// Approximately 713 instruction slots used