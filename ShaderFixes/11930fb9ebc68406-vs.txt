// Ocean halo
// VS 11930fb9ebc68406 - halo
// PS 80038b93c4898c8b - day
// PS 953df474c4797f71 - night
// CS 34ee0cfed5143e0c + b33738d8a11b90ed - SSR (Both must be altered identically!)

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:50 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer WaterGrid
// {
//
//   float4 DetailNormalMapParameters;  // Offset:    0 Size:    16 [unused]
//   float4x4 GridMatrix;               // Offset:   16 Size:    64
//   float4 SizeParams;                 // Offset:   80 Size:    16 [unused]
//   float4 WaterGuardBandSize;         // Offset:   96 Size:    16
//   float4 WaterParams;                // Offset:  112 Size:    16
//   float4 WaterParams1;               // Offset:  128 Size:    16 [unused]
//   float4 WaterParams2;               // Offset:  144 Size:    16 [unused]
//   float4 WorldSize;                  // Offset:  160 Size:    16 [unused]
//   float3 SunColor;                   // Offset:  176 Size:    12 [unused]
//   float SkyPixelToWorldSize;         // Offset:  188 Size:     4 [unused]
//   float3 SunDirection;               // Offset:  192 Size:    12 [unused]
//   float SunCosApparatus;             // Offset:  204 Size:     4 [unused]
//   float SunSinApparatus;             // Offset:  208 Size:     4 [unused]
//   float WaterCameraFarClip;          // Offset:  212 Size:     4 [unused]
//   float WaterCameraNearClip;         // Offset:  216 Size:     4 [unused]
//   float WaterSpecularDetailMapBias;  // Offset:  220 Size:     4 [unused]
//   float WaterSpecularDetailMapNormalLobe;// Offset:  224 Size:     4 [unused]
//   float WaterSpecularDetailMapScale; // Offset:  228 Size:     4 [unused]
//   float WaterSpecularDetailMapSpeed; // Offset:  232 Size:     4 [unused]
//   float WaterSpecularRoughness;      // Offset:  236 Size:     4 [unused]
//
// }
//
// cbuffer WaterGridTile
// {
//
//   float2 TileUVOffset;               // Offset:    0 Size:     8
//   uint TileIndex;                    // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// WaterGrid__VectorMapTexture__SampObj__    sampler      NA          NA    0        1
// WaterGrid__VectorMapTexture__TexObj__    texture  float4          2d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// WaterGrid                         cbuffer      NA          NA    1        1
// WaterGridTile                     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xy          3     NONE   float   xy  
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output_siv o4.xyzw, position
dcl_temps 5
// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
// Driver stereo parameters - declaring this neutralises the driver's stereo
// correction (even if it is not used):
dcl_constantbuffer cb12[1], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.z, l(1.000000)
add r1.xy, v0.xyxx, cb2[0].xyxx
min r0.xy, r1.xyxx, l(0.990000, 0.990000, 0.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb1[1].xywx
dp3 r1.y, r0.xyzx, cb1[2].xywx
dp3 r0.z, r0.xyzx, cb1[4].xywx
div r0.zw, r1.xxxy, r0.zzzz
add r1.xy, r0.zwzz, cb1[7].yzyy
mov r1.z, cb1[7].x
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mov o3.xy, r0.xyxx
add r0.xyz, r1.xyzx, r2.xyzx
mov o2.xyz, r1.xyzx
add r1.xyz, r0.xyzx, -cb0[174].xyzx
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[58].xyzw
dp4 r3.y, r1.xyzw, cb0[59].xyzw
dp4 r3.w, r1.xyzw, cb0[61].xyzw
dp4 r3.z, r1.xyzw, cb0[60].xyzw
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt o2.w, r0.w

// Halo fix variant - refer to f1b89303bc47a053-vs.txt for an explanation
add r4.w, r3.w, -r4.y
mad r3.x, r4.w, r4.x, r3.x

mov o4.xyw, r3.xyxw
mov o0.xyzw, r3.xyzw

add r0.w, r2.z, l(-6.000000)
mul_sat r0.w, r0.w, l(0.500000)
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
dp2 r1.x, r2.xyxx, r2.xyxx
eq r1.y, r2.w, l(0.000000)
movc r1.y, r1.y, l(-1.000000), r3.z
sqrt r1.x, r1.x
mad o1.w, r0.w, l(10.000000), r1.x
mov o1.xyz, r0.xyzx
lt r0.xy, |r0.xyxx|, cb1[6].xyxx
and r0.x, r0.y, r0.x
movc o4.z, r0.x, r1.y, r3.z
ret 
// Approximately 38 instruction slots used
