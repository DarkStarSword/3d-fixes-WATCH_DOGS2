// asmtool.py --fix-wd2-unproject -i -f --only-autofixed 6857b6f9c39993d7-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:44 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LongRangeShadowSampler          sampler_c      NA          NA    0        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    1        1
// Viewport__GBufferNormalTexture__TexObj__    texture  float4          2d    2        1
// Viewport__GBufferParamsTexture__TexObj__    texture  float4          2d    3        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// LongRangeShadow                   cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[55], dynamicIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r1.xyww, t1.xyzw
mov r2.yw, l(0,1.000000,0,2)
dp2 r0.z, r2.xyxx, cb0[11].zwzz
dp2 r0.w, r2.xyxx, cb0[12].zwzz
div r0.z, -r0.z, r0.w
mov r3.z, -r0.z
mul r3.xy, r0.xyxx, r3.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject -i -f --only-autofixed 6857b6f9c39993d7-ps.txt

add r8.w, -r3.z, -r8.y
mul r8.w, r8.w, r8.x
mad r0.x, r8.w, cb0[9].x, r0.x

mov r3.w, l(1.000000)
dp4 r4.x, r3.xyzw, cb0[17].xyzw
dp4 r4.y, r3.xyzw, cb0[18].xyzw
dp4 r4.z, r3.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r0.xyw, r1.xyww, t2.xywz
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t3.yxzw
max r3.xyzw, cb1[9].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r5.xyzw, cb1[10].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r6.xyzw, cb1[11].xywz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r7.x, r0.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r7.y, r0.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r7.z, r0.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r1.y, -r0.w, l(0.500000)
mul r7.w, r1.y, l(0.666666687)
max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.yzw, r5.xxyz, r7.yyyy
mad r1.yzw, r7.xxxx, r3.xxyz, r1.yyzw
mad r1.yzw, r7.zzzz, r6.xxyw, r1.yyzw
mov r6.x, r3.w
mov r6.y, r5.w
mad r1.yzw, r7.wwww, r6.xxyz, r1.yyzw
add r2.x, r7.y, r7.x
add r2.x, r7.z, r2.x
add r2.x, r7.w, r2.x
div r1.yzw, r1.yyzw, r2.xxxx
add r3.xyz, -r4.xyzx, cb0[174].xyzx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r3.xyz, r2.xxxx, r3.xyzx
dp3 r2.x, -r3.xyzx, r0.xywx
add r2.x, r2.x, r2.x
mad r3.xyz, r0.xywx, -r2.xxxx, -r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r0.w, r0.w, r3.z
ge r2.x, l(0.565600), r1.x
mad r2.y, -r1.x, l(0.0968105793), l(1.05046380)
mad r2.y, r2.y, r1.x, l(-0.601145864)
add r1.x, r1.x, l(-0.619457066)
div r1.x, r2.y, r1.x
movc r1.x, r2.x, r1.x, l(0.705081284)
mad r2.x, -r0.w, r0.w, l(1.000000)
mad r2.y, -r1.x, r1.x, l(1.000000)
sqrt r2.xy, r2.xyxx
mul r3.x, r2.y, r2.x
mad r5.y, r0.w, r1.x, -r3.x
mad r3.y, r0.w, r1.x, r3.x
mul r0.w, r0.w, r2.y
mad r5.x, r2.x, r1.x, r0.w
mad r3.x, r2.x, r1.x, -r0.w
lt r0.w, r5.x, l(0.000000)
movc r2.xy, r0.wwww, l(0,-1.000000,0,0), r5.xyxx
lt r0.w, r3.x, l(0.000000)
movc r3.xy, r0.wwww, l(0,1.000000,0,0), r3.xyxx
ge r0.w, r2.y, l(0.000000)
ge r1.x, l(0.000000), r3.y
lt r3.z, r2.y, l(0.000000)
add r5.xy, r3.xyxx, l(-1.000000, -0.000000, 0.000000, 0.000000)
dp2 r3.w, r5.xyxx, r5.xyxx
sqrt r3.w, r3.w
mul r3.w, r3.w, l(0.500000)
mul r3.w, r3.w, r3.w
add r2.xy, r2.xyxx, -r3.xyxx
dp2 r2.x, r2.xyxx, r2.xyxx
sqrt r2.x, r2.x
mul r2.x, r2.x, l(0.500000)
mul r2.x, r2.x, r2.x
movc r2.x, r3.z, r3.w, r2.x
add r3.xy, -r3.xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r2.y, r3.xyxx, r3.xyxx
sqrt r2.y, r2.y
mul r2.y, r2.y, l(0.500000)
mul r2.y, r2.y, r2.y
div r2.x, r2.y, r2.x
max r2.x, r2.x, l(0.080000)
movc r1.x, r1.x, l(0.080000), r2.x
movc r0.w, r0.w, l(1.000000), r1.x
ftou r2.xy, v0.xyxx
and r3.xy, r2.xyxx, l(127, 127, 0, 0)
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r3.xyzw, t0.xyzw
mov r2.xy, l(2,0,0,0)
mov r3.x, l(0)
loop 
  uge r3.y, r2.y, l(3)
  breakc_nz r3.y
  ishl r3.y, r2.y, l(2)
  mul r3.zw, r4.yyyy, cb2[r3.y + 1].xxxy
  mad r3.zw, cb2[r3.y + 0].xxxy, r4.xxxx, r3.zzzw
  mad r3.zw, cb2[r3.y + 2].xxxy, r4.zzzz, r3.zzzw
  add r3.yz, r3.zzwz, cb2[r3.y + 3].xxyx
  max r3.y, |r3.z|, |r3.y|
  add r3.x, r3.y, cb2[16].x
  ult r3.y, r2.y, l(2)
  if_nz r3.y
    mad r3.y, cb2[16].y, r1.x, r3.x
    lt r3.z, r3.y, l(1.000000)
    if_nz r3.z
      mov r3.x, r3.y
      mov r2.x, r2.y
      break 
    endif 
    mov r3.x, r3.y
  endif 
  iadd r2.z, r2.y, l(1)
  mov r2.xy, r2.wzww
endloop 
ieq r1.x, r2.x, l(2)
mad_sat r2.x, r3.x, cb2[16].z, cb2[16].w
and r1.x, r1.x, r2.x
mad r0.xy, r0.xyxx, cb3[0].xyxx, r4.xyxx
mad r2.x, r4.z, cb3[0].z, cb3[0].w
mad r0.xy, r0.xyxx, cb3[1].xyxx, cb3[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t4.xxxx, s0, r2.x
add r0.x, r0.x, l(-1.000000)
mad r0.x, r1.x, r0.x, l(1.000000)
mad r0.x, r0.x, l(255.000000), l(0.500000)
round_ni r0.x, r0.x
sqrt r0.y, r0.w
min r0.y, r0.y, l(1.000000)
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.xy, r0.xyxx
imad o1.x, r0.y, l(256), r0.x
mul_sat r0.x, r0.z, l(0.001000)
mad r0.x, r0.x, l(65535.000000), l(0.500000)
round_ni r0.x, r0.x
ftou o1.y, r0.x
mul r0.xyz, r1.yzwy, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 143 instruction slots used