// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 2e2fc7ca17014254-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Sun Jun 25 04:44:55 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer SSR
// {
//
//   float4x4 CameraSpaceToPreviousProjectedSpace;// Offset:    0 Size:    64
//   float4x4 ProjectToPixelMatrix;     // Offset:   64 Size:    64
//   float DepthScale;                  // Offset:  128 Size:     4
//   float SSRTextureMaxMipIndex;       // Offset:  132 Size:     4
//   bool GameIsPaused;                 // Offset:  136 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorWrap                         sampler      NA          NA    3        1
// ShadowRealSampler               sampler_c      NA          NA    4        1
// LongRangeShadowSampler          sampler_c      NA          NA    5        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    4        1
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    5        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    6        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    7        1
// SSR__SSRDepthTexture__TexObj__    texture  float4          2d    8        1
// SSR__SSRTexture__TexObj__         texture  float4          2d    9        1
// SSR__MotionVectorTextureMS        texture  float4        2dMS   10        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS   11        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS   12        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS   13        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS   14        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
// SSR                               cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_comparison
dcl_sampler s5, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecubearray (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2dms(0) (float,float,float,float) t10
dcl_resource_texture2dms(0) (float,float,float,float) t11
dcl_resource_texture2dms(0) (float,float,float,float) t12
dcl_resource_texture2dms(0) (float,float,float,float) t13
dcl_resource_texture2dms(0) (float,float,float,float) t14
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 28
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r24.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 2e2fc7ca17014254-ps.txt

// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 2e2fc7ca17014254-ps.txt

mul r24.w, r24.x, r24.y
mul r26.x, r24.w, cb1[9].x
mul r26.y, r24.w, cb1[10].x
mul r26.z, r24.w, cb1[11].x
mul r26.w, r24.w, cb1[12].x
dp4 r27.x, r26.xyzw, cb1[17].xyzw
dp4 r27.y, r26.xyzw, cb1[18].xyzw
dp4 r27.z, r26.xyzw, cb1[19].xyzw
add r25.xyz, cb1[174].xyz, r27.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r2.x, r1.xyww, t12.xyzw, l(0)
mov r2.yw, l(0,1.000000,0,0.500000)
dp2 r0.z, r2.xyxx, cb1[11].zwzz
dp2 r0.w, r2.xyxx, cb1[12].zwzz
div r0.z, -r0.z, r0.w
mov r3.z, -r0.z
mul r3.xy, r0.xyxx, r3.zzzz

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections -i -f --only-autofixed 2e2fc7ca17014254-ps.txt

add r24.w, -r3.z, -r24.y
mul r24.w, r24.w, r24.x
mad r3.x, -r24.w, cb1[9].x, r3.x

mov r3.w, l(1.000000)
dp4 r0.x, r3.xyzw, cb1[17].xyzw
dp4 r0.y, r3.xyzw, cb1[18].xyzw
dp4 r0.z, r3.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r1.xyww, t11.wxyz, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r4.xyzw, r1.xyww, t13.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r5.xyzw, r1.xyww, t14.wxyz, l(0)
mad r2.x, r5.x, l(255.000000), l(0.500000)
round_ni r2.x, r2.x
ftou r2.x, r2.x
ushr r2.x, r2.x, l(5)
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r6.xyz, r2.yyyy, r4.xyzx
ieq r7.xyz, r2.xxxx, l(1, 4, 0, 0)
ge r2.y, r3.x, l(0.750000)
add r6.w, r3.x, l(-0.750000)
mad r6.w, r6.w, l(-0.599999905), l(1.000000)
movc r2.y, r2.y, r6.w, l(1.000000)
movc r2.y, r7.y, r2.y, r3.x
movc r2.y, r7.x, l(1.000000), r2.y
mad r6.w, r4.w, l(0.500000), l(0.500000)
mad r6.w, r6.w, l(65535.000000), l(0.500000)
ftou r6.w, r6.w
and r7.w, r6.w, l(255)
utof r8.x, r7.w
lt r7.w, l(0.000000), r8.x
movc r7.w, r2.x, l(0), r7.w
add r9.xyz, -r0.xyzx, r25.xyzx
dp3 r8.w, r9.xyzx, r9.xyzx
rsq r8.w, r8.w
mul r10.xyz, r8.wwww, r9.xyzx
mul r11.yzw, r2.yyyy, r3.yyzw
if_nz r7.x
  mul r12.x, r8.x, l(0.00392156886)
  and r3.w, r6.w, l(0x0000ff00)
  utof r3.w, r3.w
  mul r12.z, r3.w, l(0.0000153186284)
  mul r3.w, r3.x, l(255.000000)
  ftou r3.w, r3.w
  and r13.xy, r3.wwww, l(15, 240, 0, 0)
  utof r13.xy, r13.xyxx
  mul r12.yw, r13.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r5.x, l(0)
  mov r5.xyzw, r5.zyxw
  mov r11.x, r11.y
  mov r13.x, l(0)
else 
  mul r3.w, r5.z, r5.z
  max r5.x, r3.w, l(0.001000)
  ieq r3.w, r2.x, l(2)
  if_nz r3.w
    and r3.w, r6.w, l(0x0000ff00)
    utof r8.y, r3.w
    mov r8.z, r5.y
    mad r14.xyz, r8.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r3.w, -r3.x, l(1.000000)
    mul r3.w, r3.w, r11.y
    mad r11.x, r3.w, l(0.500000), r11.y
    dp3 r3.w, r14.xyzx, r14.xyzx
    rsq r3.w, r3.w
    mul r12.xzw, r3.wwww, r14.xxyz
    mov r12.y, l(0)
    mov r5.yz, l(0,0.500000,0,0)
    mov r13.x, l(0)
  else 
    ieq r3.w, r2.x, l(3)
    if_nz r3.w
      and r14.xyzw, r6.wwww, l(0x0000f800, 2016, 31, 31)
      utof r14.xyzw, r14.xyzw
      ge r15.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r14.wyxw
      mul r3.w, r14.w, l(0.00249675405)
      mad r16.xyz, r14.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r16.xyz, r16.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r16.xyz, r16.xyzx
      movc r12.x, r15.x, r3.w, r16.x
      mul r8.yz, r14.yyxy, l(0.000000, 0.0000383925508, 0.00000121911819, 0.000000)
      movc r12.zw, r15.yyyz, r8.yyyz, r16.yyyz
      mov r12.y, l(0)
      mov r5.z, l(0)
      mov r13.x, l(0)
    else 
      if_nz r7.y
        mad r3.w, r4.w, l(32767.000000), l(32767.000000)
        ftou r3.w, r3.w
        and r8.y, r3.w, l(255)
        utof r8.y, r8.y
        mul r8.y, r8.y, l(0.0123199718)
        ubfe r3.w, l(8), l(8), r3.w
        utof r3.w, r3.w
        mad r3.w, r3.w, l(0.0246399436), l(-3.14159274)
        sincos r14.x, r15.x, r8.y
        sincos r16.x, r17.x, r3.w
        mul r17.x, r14.x, r17.x
        mul r17.y, r14.x, r16.x
        mov r17.z, r15.x
        dp3 r3.w, r17.xyzx, r17.xyzx
        rsq r3.w, r3.w
        mul r12.xzw, r3.wwww, r17.xxyz
        mul_sat r5.z, r3.x, l(0.250000)
        mov r12.y, l(0)
        mov r13.x, l(0)
      else 
        ieq r3.w, r2.x, l(5)
        lt r8.y, r4.z, l(0.900000)
        movc r14.xyz, r8.yyyy, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r15.xyz, r4.zxyz, r14.xyzx
        mad r14.xyz, r4.yzxy, r14.yzxy, -r15.xyzx
        dp3 r8.y, r14.xyzx, r14.xyzx
        rsq r8.y, r8.y
        mul r14.xyz, r8.yyyy, r14.xyzx
        mul r15.xyz, r4.zxyz, r14.yzxy
        mad r4.xyz, r4.yzxy, r14.zxyz, -r15.xyzx
        dp3 r8.y, r4.xyzx, r4.xyzx
        rsq r8.y, r8.y
        mul r4.xyz, r4.xyzx, r8.yyyy
        mad r4.w, r4.w, l(2.000000), l(-1.000000)
        mul r4.w, r4.w, l(3.14159274)
        sincos r15.x, r16.x, r4.w
        mul r14.xyz, r14.xyzx, r15.xxxx
        mad r4.xyz, r4.xyzx, r16.xxxx, r14.xyzx
        mul r8.x, r8.x, l(0.00392156886)
        and r6.w, r6.w, l(0x0000ff00)
        utof r6.w, r6.w
        mad r8.y, r6.w, l(0.0000306372567), l(-1.000000)
        movc r14.xy, r2.xxxx, l(0,0,0,0), r8.xyxx
        mov r4.w, r5.w
        mov r14.z, l(0)
        movc r12.xyzw, r3.wwww, r4.xwyz, r14.xzzz
        mov r3.yz, l(0,0,0,0)
        mov r14.w, r4.w
        movc r13.xyz, r3.wwww, r3.zxyz, r14.yzwy
        mov r5.zw, r13.yyyz
      endif 
    endif 
    mov r11.x, r11.y
  endif 
endif 
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r1.xyzw, t5.xyzw, l(0)
div r4.xyz, r3.xyzx, cb1[176].wwww
mov r1.zw, l(0,0,0,0)
mov r3.z, l(0)
mov r6.w, l(0)
mov r8.xy, l(3,0,0,0)
loop 
  uge r8.z, r8.y, l(4)
  breakc_nz r8.z
  ishl r8.z, r8.y, l(2)
  mul r13.yzw, r0.yyyy, cb3[r8.z + 1].xxyz
  mad r13.yzw, cb3[r8.z + 0].xxyz, r0.xxxx, r13.yyzw
  mad r13.yzw, cb3[r8.z + 2].xxyz, r0.zzzz, r13.yyzw
  add r13.yzw, r13.yyzw, cb3[r8.z + 3].xxyz
  max r8.z, |r13.z|, |r13.y|
  add r8.z, r8.z, cb3[16].x
  ult r9.w, r8.y, l(3)
  if_nz r9.w
    lt r9.w, r8.z, l(1.000000)
    if_nz r9.w
      mov r1.zw, r13.yyyz
      mov r3.z, r13.w
      mov r6.w, r8.z
      mov r8.x, r8.y
      break 
    endif 
  endif 
  iadd r8.y, r8.y, l(1)
  mov r1.zw, r13.yyyz
  mov r3.z, r13.w
  mov r6.w, r8.z
  mov r8.x, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r2.z, x0[r8.x + 0].z
mad r3.xy, r1.zwzz, l(0.125000, -0.500000, 0.000000, 0.000000), r2.zwzz
dp4 r1.z, cb3[17].xyzw, icb[r8.x + 0].xyzw
ieq r1.w, r8.x, l(3)
mad_sat r2.z, r6.w, cb3[16].z, cb3[16].w
and r1.w, r1.w, r2.z
and r14.xy, r1.xyxx, l(63, 63, 0, 0)
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xy, r14.xyzw, t2.xyzw
mad r1.xy, r1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, r1.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r14.xy, r1.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r2.zwzz
dp2 r14.z, r1.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r2.zw, r1.zzzz, cb3[38].zzzw
mul r8.xy, r2.zwzz, r14.xzxx
mov r8.z, l(0)
add r8.xyz, r3.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.z, r8.xyxx, t6.xxxx, s4, r8.z
dp2 r14.w, r1.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r8.xy, r2.zwzz, r14.ywyy
mov r8.z, l(0)
add r8.xyz, r3.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r6.w, r8.xyxx, t6.xxxx, s4, r8.z
add r1.z, r1.z, r6.w
mul r8.xy, r1.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r14.xy, r1.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r8.xyxx
dp2 r14.z, r1.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r8.xy, r2.zwzz, r14.xzxx
mov r8.z, l(0)
add r8.xyz, r3.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r6.w, r8.xyxx, t6.xxxx, s4, r8.z
add r1.z, r1.z, r6.w
dp2 r14.w, r1.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r8.xy, r2.zwzz, r14.ywyy
mov r8.z, l(0)
add r3.xyz, r3.xyzx, r8.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r3.xyxx, t6.xxxx, s4, r3.z
add r1.x, r1.x, r1.z
mul r1.y, r1.x, l(0.250000)
mad r2.zw, r6.xxxy, cb4[0].xxxy, r0.xxxy
mad r1.z, r0.z, cb4[0].z, cb4[0].w
mad r2.zw, r2.zzzw, cb4[1].xxxy, cb4[1].zzzw
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.zwzz, t7.xxxx, s5, r1.z
mad r1.x, -r1.x, l(0.250000), r1.z
mad r1.x, r1.w, r1.x, r1.y
dp3 r1.y, r0.xyzx, cb0[1].xyzx
add_sat r1.y, r1.y, cb0[1].w
mul r1.x, r1.y, r1.x
mad r1.x, r1.x, cb3[37].x, cb3[37].y
lt r1.y, l(0.000000), r1.x
lt r1.z, l(0.000000), r12.x
and r1.z, r1.z, r7.z
or r1.y, r1.z, r1.y
if_nz r1.y
  dp3 r14.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r1.y, r6.xyzx, cb2[2].xyzx
  mov_sat r1.z, r1.y
  ieq r1.w, r2.x, l(2)
  dp3 r2.z, r12.xzwx, r12.xzwx
  rsq r2.z, r2.z
  mul r3.xyz, r2.zzzz, r12.xzwx
  dp3 r2.z, r3.xyzx, cb2[2].xyzx
  add r2.z, r2.z, l(1.000000)
  mul_sat r2.z, r2.z, l(0.500000)
  mul r2.w, r2.z, r2.z
  mul r2.z, r2.w, r2.z
  movc r3.xyz, r1.wwww, r12.xzwx, r6.xyzx
  movc r2.z, r1.w, r2.z, r1.z
  if_nz r7.x
    mov_sat r15.xyzw, r12.xyzw
    mov_sat r8.xy, r5.wxww
    log r13.yzw, r11.xxzw
    mul r16.xyz, r15.yyyy, r13.yzwy
    mul r16.xyz, r16.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r13.yzw, r13.yyzw, l(0.000000, -0.020000, -0.020000, -0.020000), r16.xxyz
    eq r2.w, r15.x, l(0.000000)
    add r6.w, -r8.x, l(1.000000)
    mul r16.xyz, r6.wwww, r11.xzwx
    mul r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r17.xyz, r13.yzwy, -r15.xxxx
    exp r17.xyz, r17.xyzx
    mul r17.xyz, r16.xyzx, r17.xyzx
    mul r17.xyz, r17.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r16.xyz, r2.wwww, r16.xyzx, r17.xyzx
    mov r16.w, l(0.180000)
    mul r6.w, r15.w, l(0.080000)
    mad r7.z, r15.x, l(48.750000), l(1.250000)
    mul r8.y, r8.y, r8.y
    mul r8.z, r15.z, r15.z
    max r8.yz, r8.yyzy, l(0.000000, 0.001000, 0.001000, 0.000000)
    lt r9.w, l(0.000000), r1.y
    lt r10.w, r1.y, l(0.000000)
    iadd r9.w, -r9.w, r10.w
    itof r9.w, r9.w
    mad r10.w, r1.y, r1.y, l(-1.000000)
    mad r10.w, r10.w, l(0.666860044), l(1.000000)
    sqrt r10.w, r10.w
    mul r9.w, r9.w, r10.w
    mad r1.y, r1.y, l(0.666860044), -r9.w
    mul r15.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r15.xyz, r1.yyyy, r6.xyzx, -r15.xyzx
    add r17.xyz, -r15.xyzx, -cb2[2].xyzx
    mad r15.xyz, r8.yyyy, r17.xyzx, r15.xyzx
    dp3 r1.y, r15.xyzx, r15.xyzx
    rsq r1.y, r1.y
    mul r17.xyz, r1.yyyy, r15.xyzx
    dp3 r9.w, r10.xyzx, r6.xyzx
    lt r10.w, l(0.000000), r9.w
    lt r11.y, r9.w, l(0.000000)
    iadd r10.w, -r10.w, r11.y
    itof r10.w, r10.w
    mad r11.y, r9.w, r9.w, l(-1.000000)
    mad r11.y, r11.y, l(0.666860044), l(1.000000)
    sqrt r11.y, r11.y
    mul r10.w, r10.w, r11.y
    mad r10.w, r9.w, l(0.666860044), -r10.w
    mul r18.xyz, r10.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r18.xyz, r10.wwww, r6.xyzx, -r18.xyzx
    mad r19.xyz, -r9.xyzx, r8.wwww, -r18.xyzx
    mad r18.xyz, r8.yyyy, r19.xyzx, r18.xyzx
    dp3 r10.w, r18.xyzx, r18.xyzx
    rsq r10.w, r10.w
    mul r18.xyz, r10.wwww, r18.xyzx
    dp3 r10.w, r6.xyzx, r17.xyzx
    mad r10.w, -|r10.w|, |r10.w|, l(1.000000)
    mad r10.w, -r10.w, l(0.444702327), l(1.000000)
    add r7.z, r7.z, r7.z
    sqrt r10.w, r10.w
    div r7.z, r7.z, r10.w
    mov_sat r9.w, r9.w
    mad r19.xyz, r9.xyzx, r8.wwww, cb2[2].xyzx
    dp3 r10.w, r19.xyzx, r19.xyzx
    rsq r10.w, r10.w
    mul r19.xyz, r10.wwww, r19.xyzx
    dp3_sat r10.w, r6.xyzx, r19.xyzx
    mul r11.y, r8.y, r8.y
    mul r10.w, r10.w, r10.w
    mad r17.w, r8.y, r8.y, l(-1.000000)
    mad r10.w, r10.w, r17.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    mul r10.w, r10.w, l(3.14159274)
    div r10.w, r11.y, r10.w
    mad r8.y, r8.y, l(0.500000), l(0.500000)
    mul r11.y, r1.z, r1.z
    mul r8.y, r8.y, r8.y
    mad r17.w, -r1.z, r1.z, l(1.000000)
    mul r17.w, r8.y, r17.w
    max r11.y, r11.y, l(1.000000047E-034)
    div r11.y, r17.w, r11.y
    add r11.y, r11.y, l(1.000000)
    sqrt r11.y, r11.y
    add r11.y, r11.y, l(1.000000)
    div r11.y, l(2.000000), r11.y
    mul r17.w, r9.w, r9.w
    mad r9.w, -r9.w, r9.w, l(1.000000)
    mul r8.y, r8.y, r9.w
    max r9.w, r17.w, l(1.000000047E-034)
    div r8.y, r8.y, r9.w
    add r8.y, r8.y, l(1.000000)
    sqrt r8.y, r8.y
    add r8.y, r8.y, l(1.000000)
    div r8.y, l(2.000000), r8.y
    mul r8.y, r8.y, r11.y
    mad r19.xyz, r1.zzzz, r1.zzzz, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r19.xyz, r19.xyzx
    add r20.xyz, -r1.zzzz, r19.zyzz
    add r19.xyz, r1.zzzz, r19.xyzx
    mul r21.xyz, r20.zyzz, r20.zyzz
    mul r22.xyz, r19.zyzz, r19.zyzz
    add r22.xyz, r22.xyzx, r22.xyzx
    div r21.xyz, r21.xyzx, r22.xyzx
    mad r19.xyz, r1.zzzz, r19.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r20.xyz, r1.zzzz, r20.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r19.xyz, r19.xyzx, r20.xyzx
    mad r19.xyz, r19.xyzx, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r19.xyz, r19.xyzx, r21.xyzx
    mul r8.y, r8.y, r10.w
    mul r19.xyz, r19.xyzx, r8.yyyy
    mad r20.xyz, -r15.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
    mad r20.xyz, r8.xxxx, r20.xyzx, r6.wwww
    dp3_sat r6.w, r6.xyzx, -r18.xyzx
    mad r15.xyz, -r15.xyzx, r1.yyyy, -r18.xyzx
    dp3 r1.y, r15.xyzx, r15.xyzx
    rsq r1.y, r1.y
    mul r15.xyz, r1.yyyy, r15.xyzx
    dp3 r1.y, r15.xyzx, -r17.xyzx
    dp3_sat r8.x, r6.xyzx, -r17.xyzx
    dp3_sat r8.y, r6.xyzx, r15.xyzx
    mul r9.w, r8.z, r8.z
    mul r8.y, r8.y, r8.y
    mad r10.w, r8.z, r8.z, l(-1.000000)
    mad r8.y, r8.y, r10.w, l(1.000000)
    mul r8.y, r8.y, r8.y
    mul r8.y, r8.y, l(3.14159274)
    div r8.y, r9.w, r8.y
    mad r8.z, r8.z, l(0.500000), l(0.500000)
    mul r9.w, r8.x, r8.x
    mul r8.z, r8.z, r8.z
    mad r8.x, -r8.x, r8.x, l(1.000000)
    mul r8.x, r8.x, r8.z
    max r9.w, r9.w, l(1.000000047E-034)
    div r8.x, r8.x, r9.w
    add r8.x, r8.x, l(1.000000)
    sqrt r8.x, r8.x
    add r8.x, r8.x, l(1.000000)
    div r8.x, l(2.000000), r8.x
    mul r9.w, r6.w, r6.w
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r8.z
    max r8.z, r9.w, l(1.000000047E-034)
    div r6.w, r6.w, r8.z
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r6.w, r6.w, r8.x
    dp3 r8.x, r20.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r8.x, r8.x, l(50.000000)
    add r1.y, -r1.y, l(1.000000)
    mul r8.z, r1.y, r1.y
    mul r8.z, r8.z, r8.z
    add r15.xyz, -r20.xyzx, r8.xxxx
    mul r15.xyz, r8.zzzz, r15.xyzx
    mad r15.xyz, r15.xyzx, r1.yyyy, r20.xyzx
    mul r1.y, r6.w, r8.y
    mul r8.xyz, r15.xyzx, r1.yyyy
    mul r13.yzw, r7.zzzz, -r13.yyzw
    exp r13.yzw, r13.yyzw
    mad r13.yzw, r8.xxyz, r13.yyzw, r19.xxyz
    movc r15.xyz, r2.wwww, r8.xyzx, r13.yzwy
    dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r17.xyzw, l(0,0,0,0)
  else 
    if_nz r1.w
      mul r18.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r18.w, l(0.0572957806)
      add r1.y, -r5.w, l(1.000000)
      mul r16.xyzw, r1.yyyy, r18.xyzw
    else 
      ieq r1.y, r2.x, l(3)
      if_nz r1.y
        mad r8.xyz, r9.xyzx, r8.wwww, cb2[2].xyzx
        dp3 r1.y, r8.xyzx, r8.xyzx
        rsq r1.y, r1.y
        mul r8.xyz, r1.yyyy, r8.xyzx
        dp3_sat r1.y, r8.xyzx, r10.xyzx
        mul r2.w, r5.y, l(0.080000)
        add r1.y, -r1.y, l(1.000000)
        mul r6.w, r1.y, r1.y
        mul r6.w, r6.w, r6.w
        mad r7.z, -r5.y, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.z
        mad r1.y, r6.w, r1.y, r2.w
        add_sat r2.w, r5.x, r5.x
        mad r18.w, r2.w, -r1.y, l(1.000000)
        mul r18.xyz, r11.xzwx, r18.wwww
        mul r16.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r7.y
          add r8.xyz, -r12.xzwx, r3.xyzx
          mad r13.yzw, r8.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000), r12.xxzw
          dp3 r1.y, r13.yzwy, r13.yzwy
          rsq r1.y, r1.y
          mul r13.yzw, r1.yyyy, r13.yyzw
          mad r8.xyz, r8.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r12.xzwx
          dp3 r1.y, r8.xyzx, r8.xyzx
          rsq r1.y, r1.y
          mul r8.xyz, r1.yyyy, r8.xyzx
          dp3 r1.y, r12.xzwx, cb2[2].xyzx
          dp3 r2.w, r13.yzwy, cb2[2].xyzx
          dp3 r6.w, r8.xyzx, cb2[2].xyzx
          mad r18.z, r1.y, l(0.500000), l(0.500000)
          mov r18.w, r5.z
          mad r8.xy, r18.zwzz, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t0.xyzw, s0, l(0.000000)
          mad r18.y, r2.w, l(0.500000), l(0.500000)
          mad r13.yz, r18.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r8.y, r13.yzyy, t0.xyzw, s0, l(0.000000)
          mad r18.x, r6.w, l(0.500000), l(0.500000)
          mad r13.yz, r18.xxwx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r8.z, r13.yzyy, t0.xyzw, s0, l(0.000000)
          mul r18.xyz, r8.xyzx, r11.xzwx
          mov r18.w, l(0.0572957806)
          mul r16.xyzw, r18.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r1.y, r2.x, l(5)
          dp3 r2.w, r12.xzwx, cb2[2].xyzx
          mad r2.w, -r2.w, r2.w, l(1.000000)
          sqrt r2.w, r2.w
          mul r18.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r18.w, l(0.0572957806)
          add r6.w, -r5.w, l(1.000000)
          mul r18.xyzw, r6.wwww, r18.xyzw
          mul r19.xyzw, r2.wwww, r18.xyzw
          mul r19.xyzw, r19.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r2.w, -r12.y, l(1.000000)
          mul r19.xyzw, r2.wwww, r19.xyzw
          movc r16.xyzw, r1.yyyy, r19.xyzw, r18.xyzw
        endif 
      endif 
    endif 
    if_nz r1.w
      mul r1.y, r5.y, l(0.080000)
      mad r8.xyz, -r5.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
      mad r8.xyz, r5.wwww, r8.xyzx, r1.yyyy
      dp3_sat r1.y, r6.xyzx, r10.xyzx
      mad r13.yzw, r9.xxyz, r8.wwww, cb2[2].xxyz
      dp3 r2.w, r13.yzwy, r13.yzwy
      rsq r2.w, r2.w
      mul r13.yzw, r2.wwww, r13.yyzw
      dp3 r2.w, r13.yzwy, cb2[2].xyzx
      dp3_sat r6.w, r6.xyzx, r13.yzwy
      mul r7.z, r5.x, r5.x
      mul r6.w, r6.w, r6.w
      mad r9.w, r5.x, r5.x, l(-1.000000)
      mad r6.w, r6.w, r9.w, l(1.000000)
      mul r6.w, r6.w, r6.w
      mul r6.w, r6.w, l(3.14159274)
      div r6.w, r7.z, r6.w
      mad r7.z, r5.x, l(0.500000), l(0.500000)
      mul r9.w, r1.z, r1.z
      mul r7.z, r7.z, r7.z
      mad r10.w, -r1.z, r1.z, l(1.000000)
      mul r10.w, r7.z, r10.w
      max r9.w, r9.w, l(1.000000047E-034)
      div r9.w, r10.w, r9.w
      add r9.w, r9.w, l(1.000000)
      sqrt r9.w, r9.w
      add r9.w, r9.w, l(1.000000)
      div r9.w, l(2.000000), r9.w
      mul r10.w, r1.y, r1.y
      mad r1.y, -r1.y, r1.y, l(1.000000)
      mul r1.y, r1.y, r7.z
      max r7.z, r10.w, l(1.000000047E-034)
      div r1.y, r1.y, r7.z
      add r1.y, r1.y, l(1.000000)
      sqrt r1.y, r1.y
      add r1.y, r1.y, l(1.000000)
      div r1.y, l(2.000000), r1.y
      mul r1.y, r1.y, r9.w
      dp3 r7.z, r8.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r7.z, r7.z, l(50.000000)
      add r2.w, -r2.w, l(1.000000)
      mul r9.w, r2.w, r2.w
      mul r9.w, r9.w, r9.w
      add r13.yzw, -r8.xxyz, r7.zzzz
      mul r13.yzw, r9.wwww, r13.yyzw
      mad r8.xyz, r13.yzwy, r2.wwww, r8.xyzx
      mul r1.y, r1.y, r6.w
      mul r15.xyz, r8.xyzx, r1.yyyy
      dp3 r15.w, r15.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r1.y, r2.x, l(3)
      if_nz r1.y
        mad r8.xyz, r9.xyzx, r8.wwww, cb2[2].xyzx
        dp3 r1.y, r8.xyzx, r8.xyzx
        rsq r1.y, r1.y
        mul r8.xyz, r1.yyyy, r8.xyzx
        dp3_sat r1.y, r8.xyzx, r10.xyzx
        mul r2.w, r5.y, l(0.080000)
        add r1.y, -r1.y, l(1.000000)
        mul r6.w, r1.y, r1.y
        mul r6.w, r6.w, r6.w
        mad r7.z, -r5.y, l(0.080000), l(1.000000)
        mul r6.w, r6.w, r7.z
        mad r1.y, r6.w, r1.y, r2.w
        dp3_sat r2.w, r6.xyzx, r8.xyzx
        mul r6.w, r2.w, r2.w
        mad r8.xy, -r2.wwww, r2.wwww, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r6.w, r6.w, r8.x
        mul r7.z, r8.y, r8.y
        mul r8.x, r5.x, r5.x
        mad r8.yz, r5.xxxx, r5.xxxx, l(0.000000, 0.000001, 0.000002, 0.000000)
        mad r8.y, r8.y, l(4.000000), l(1.000000)
        mul r8.y, r8.y, l(3.14159274)
        div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.y
        div r6.w, -r6.w, r8.z
        mul r6.w, r6.w, l(1.442695)
        exp r6.w, r6.w
        mul r6.w, r6.w, l(4.000000)
        div r6.w, r6.w, r7.z
        add r6.w, r6.w, l(1.000000)
        mul r6.w, r6.w, r8.y
        dp3_sat r7.z, r6.xyzx, r10.xyzx
        add r8.y, r1.z, r7.z
        mad r7.z, -r1.z, r7.z, r8.y
        mul r7.z, r7.z, l(4.000000)
        div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
        mov_sat r7.z, r7.z
        div r8.x, l(2.000000), r8.x
        add r8.x, r8.x, l(-2.000000)
        max r8.x, r8.x, l(1.000000031E-022)
        log r2.w, r2.w
        mul r2.w, r2.w, r8.x
        exp r2.w, r2.w
        add r8.x, r8.x, l(8.000000)
        mul r2.w, r2.w, r8.x
        mul r2.w, r2.w, l(0.0397887342)
        min r2.w, r2.w, l(1.000000)
        add_sat r8.x, r5.x, r5.x
        mad r6.w, r6.w, r7.z, -r2.w
        mad r2.w, r8.x, r6.w, r2.w
        mul r18.xyz, r1.yyyy, r2.wwww
        dp3 r18.w, r18.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r19.xyz, r12.xzwx
        mov r19.w, l(1.000000)
        mul r15.xyzw, r18.xyzw, r19.xyzw
      else 
        if_nz r7.y
          mul r8.xy, r5.yxyy, l(0.080000, 0.400000, 0.000000, 0.000000)
          mad r13.yzw, -r5.yyyy, l(0.000000, 0.080000, 0.080000, 0.080000), r11.xxzw
          mad r13.yzw, r5.wwww, r13.yyzw, r8.xxxx
          dp3_sat r1.y, r6.xyzx, r10.xyzx
          mad r18.xyz, r9.xyzx, r8.wwww, cb2[2].xyzx
          dp3 r2.w, r18.xyzx, r18.xyzx
          rsq r2.w, r2.w
          mul r18.xyz, r2.wwww, r18.xyzx
          dp3 r2.w, r18.xyzx, cb2[2].xyzx
          dp3_sat r6.w, r6.xyzx, r18.xyzx
          mul r7.z, r5.x, r5.x
          mul r6.w, r6.w, r6.w
          mad r8.x, r5.x, r5.x, l(-1.000000)
          mad r8.x, r6.w, r8.x, l(1.000000)
          mul r8.x, r8.x, r8.x
          mul r8.x, r8.x, l(3.14159274)
          div r7.z, r7.z, r8.x
          mad r8.xz, r5.xxxx, l(0.500000, 0.000000, 0.200000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
          mul r9.w, r1.z, r1.z
          mul r8.xz, r8.xxzx, r8.xxzx
          mad r10.w, -r1.z, r1.z, l(1.000000)
          mul r18.xy, r8.xzxx, r10.wwww
          max r9.w, r9.w, l(1.000000047E-034)
          div r18.xy, r18.xyxx, r9.wwww
          add r18.xy, r18.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r18.xy, r18.xyxx
          add r18.xy, r18.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r18.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r18.xyxx
          mul r9.w, r1.y, r1.y
          mad r1.y, -r1.y, r1.y, l(1.000000)
          mul r8.xz, r1.yyyy, r8.xxzx
          max r1.y, r9.w, l(1.000000047E-034)
          div r8.xz, r8.xxzx, r1.yyyy
          add r8.xz, r8.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          sqrt r8.xz, r8.xxzx
          add r8.xz, r8.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
          div r8.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r8.xxzx
          mul r8.xz, r8.xxzx, r18.xxyx
          dp3 r1.y, r13.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r1.y, r1.y, l(50.000000)
          add r2.w, -r2.w, l(1.000000)
          mul r9.w, r2.w, r2.w
          mul r9.w, r9.w, r9.w
          add r18.xyz, -r13.yzwy, r1.yyyy
          mul r18.xyz, r9.wwww, r18.xyzx
          mad r13.yzw, r18.xxyz, r2.wwww, r13.yyzw
          mul r1.y, r7.z, r8.x
          mul r18.xyz, r13.yzwy, r1.yyyy
          dp3 r18.w, r18.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r1.y, r8.y, r8.y
          mad r2.w, r8.y, r8.y, l(-1.000000)
          mad r2.w, r6.w, r2.w, l(1.000000)
          mul r2.w, r2.w, r2.w
          mul r2.w, r2.w, l(3.14159274)
          div r1.y, r1.y, r2.w
          mul r1.y, r8.z, r1.y
          mul r19.xyz, r13.yzwy, r1.yyyy
          dp3 r19.w, r19.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r19.xyzw, r19.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r15.xyzw, r18.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r19.xyzw
        else 
          ieq r1.y, r2.x, l(5)
          dp3_sat r2.w, r11.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r2.w, r2.w, l(1.66666663), l(1.33333337)
          mul r8.xyz, r5.xxxx, r12.xzwx
          mad r8.xyz, r8.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r6.xyzx
          div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
          dp3 r6.w, -cb2[2].xyzx, r8.xyzx
          mul r7.z, r2.w, r2.w
          mad r9.w, -r6.w, r6.w, l(1.000000)
          mad r9.w, -r7.z, r9.w, l(1.000000)
          sqrt r10.w, r9.w
          mad r6.w, r2.w, r6.w, -r10.w
          mul r13.yzw, r8.xxyz, r6.wwww
          mad r13.yzw, r2.wwww, cb2[2].xxyz, r13.yyzw
          lt r6.w, l(0.000000), r9.w
          and r6.w, r6.w, l(0x3f800000)
          mul r18.xyz, r6.wwww, r13.yzwy
          dp3 r9.w, -r10.xyzx, r8.xyzx
          mad r10.w, -r9.w, r9.w, l(1.000000)
          mad r7.z, -r7.z, r10.w, l(1.000000)
          sqrt r10.w, r7.z
          mad r9.w, r2.w, r9.w, -r10.w
          mul r8.xyz, r8.xyzx, r9.wwww
          mad r8.xyz, r2.wwww, r10.xyzx, r8.xyzx
          lt r2.w, l(0.000000), r7.z
          and r2.w, r2.w, l(0x3f800000)
          mul r8.xyz, r2.wwww, r8.xyzx
          mad r9.xyz, r9.xyzx, r8.wwww, cb2[2].xyzx
          dp3 r2.w, r9.xyzx, r9.xyzx
          rsq r2.w, r2.w
          mul r9.xyz, r2.wwww, r9.xyzx
          dp3_sat r2.w, r6.xyzx, r10.xyzx
          dp3_sat r7.z, r6.xyzx, r9.xyzx
          dp3 r8.w, r9.xyzx, cb2[2].xyzx
          mov_sat r9.w, r8.w
          dp3 r10.w, r9.xyzx, r12.xzwx
          mul r19.xyz, r6.yzxy, r12.wxzw
          mad r19.xyz, r12.zwxz, r6.zxyz, -r19.xyzx
          dp3 r11.y, r19.xyzx, r19.xyzx
          rsq r11.y, r11.y
          mul r19.xyz, r11.yyyy, r19.xyzx
          dp3 r9.x, r9.xyzx, r19.xyzx
          mul r9.yz, r5.yyxy, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r20.xyz, -r5.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
          mad r20.xyz, r5.wwww, r20.xyzx, r9.yyyy
          dp3 r9.y, r20.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r9.y, r9.y, l(50.000000)
          add r9.w, -r9.w, l(1.000000)
          mul r11.y, r9.w, r9.w
          mul r11.y, r11.y, r11.y
          add r21.xyz, -r20.xyzx, r9.yyyy
          mul r22.xyz, r11.yyyy, r21.xyzx
          mad r22.xyz, r22.xyzx, r9.wwww, r20.xyzx
          mul r9.y, r5.x, r5.x
          mul r9.w, r7.z, r7.z
          mul r10.w, r10.w, r10.w
          div r10.w, r10.w, r9.y
          mad r9.x, r9.x, r9.x, r10.w
          mad r7.z, r7.z, r7.z, r9.x
          mul r7.z, r7.z, r7.z
          mul r7.z, r9.z, r7.z
          div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
          mul r9.x, r1.z, r1.z
          mad r10.w, -r1.z, r1.z, l(1.000000)
          mul r11.y, r9.y, r10.w
          max r9.x, r9.x, l(1.000000047E-034)
          div r11.y, r11.y, r9.x
          add r11.y, r11.y, l(1.000000)
          sqrt r11.y, r11.y
          add r11.y, r11.y, l(1.000000)
          div r11.y, l(2.000000), r11.y
          mul r18.w, r2.w, r2.w
          mad r2.w, -r2.w, r2.w, l(1.000000)
          mul r19.w, r2.w, r9.y
          max r18.w, r18.w, l(1.000000047E-034)
          div r19.w, r19.w, r18.w
          add r19.w, r19.w, l(1.000000)
          sqrt r19.w, r19.w
          add r19.w, r19.w, l(1.000000)
          div r19.w, l(2.000000), r19.w
          mul r11.y, r11.y, r19.w
          mul r7.z, r7.z, r11.y
          mul_sat r22.xyz, r22.xyzx, r7.zzzz
          mul r22.xyz, r5.zzzz, r22.xyzx
          mul r23.xyz, r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r13.yzw, -r13.yyzw, r6.wwww, -r8.xxyz
          dp3 r6.w, r13.yzwy, r13.yzwy
          rsq r6.w, r6.w
          mul r13.yzw, r6.wwww, r13.yyzw
          dp3_sat r6.w, r6.xyzx, -r18.xyzx
          dp3_sat r7.z, r6.xyzx, -r8.xyzx
          dp3_sat r8.x, r6.xyzx, r13.yzwy
          dp3_sat r8.y, r13.yzwy, -r18.xyzx
          dp3 r8.z, r13.yzwy, r12.xzwx
          dp3 r11.y, r13.yzwy, r19.xyzx
          add r8.y, -r8.y, l(1.000000)
          mul r13.y, r8.y, r8.y
          mul r13.y, r13.y, r13.y
          mul r13.yzw, r13.yyyy, r21.xxyz
          mad r13.yzw, r13.yyzw, r8.yyyy, r20.xxyz
          mul r8.y, r8.z, r8.z
          div r8.y, r8.y, r9.y
          mad r8.y, r11.y, r11.y, r8.y
          mad r8.x, r8.x, r8.x, r8.y
          mul r8.x, r8.x, r8.x
          mul r8.x, r9.z, r8.x
          div r8.x, l(1.000000, 1.000000, 1.000000, 1.000000), r8.x
          mul r8.y, r6.w, r6.w
          mad r6.w, -r6.w, r6.w, l(1.000000)
          mul r6.w, r6.w, r9.y
          max r8.y, r8.y, l(1.000000047E-034)
          div r6.w, r6.w, r8.y
          add r6.w, r6.w, l(1.000000)
          sqrt r6.w, r6.w
          add r6.w, r6.w, l(1.000000)
          div r6.w, l(2.000000), r6.w
          mul r8.y, r7.z, r7.z
          mad r7.z, -r7.z, r7.z, l(1.000000)
          mul r7.z, r7.z, r9.y
          max r8.y, r8.y, l(1.000000047E-034)
          div r7.z, r7.z, r8.y
          add r7.z, r7.z, l(1.000000)
          sqrt r7.z, r7.z
          add r7.z, r7.z, l(1.000000)
          div r7.z, l(2.000000), r7.z
          mul r6.w, r6.w, r7.z
          mul r6.w, r6.w, r8.x
          mul_sat r8.xyz, r13.yzwy, r6.wwww
          sqrt r13.yzw, r11.xxzw
          mad r8.xyz, -r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r8.xyzx
          mad r19.xyz, r13.yzwy, r8.xyzx, r23.xyzx
          dp3 r19.w, r19.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r6.w, r5.x, r5.x, l(-1.000000)
          mad r6.w, r9.w, r6.w, l(1.000000)
          mul r6.w, r6.w, r6.w
          mul r6.w, r6.w, l(3.14159274)
          div r6.w, r9.y, r6.w
          mad r7.z, r5.x, l(0.500000), l(0.500000)
          mul r7.z, r7.z, r7.z
          mul r8.x, r10.w, r7.z
          div r8.x, r8.x, r9.x
          add r8.x, r8.x, l(1.000000)
          sqrt r8.x, r8.x
          add r8.x, r8.x, l(1.000000)
          div r8.x, l(2.000000), r8.x
          mul r2.w, r2.w, r7.z
          div r2.w, r2.w, r18.w
          add r2.w, r2.w, l(1.000000)
          sqrt r2.w, r2.w
          add r2.w, r2.w, l(1.000000)
          div r2.w, l(2.000000), r2.w
          mul r2.w, r2.w, r8.x
          add r7.z, -r8.w, l(1.000000)
          mul r8.x, r7.z, r7.z
          mul r8.x, r8.x, r8.x
          mul r8.xyz, r8.xxxx, r21.xyzx
          mad r8.xyz, r8.xyzx, r7.zzzz, r20.xyzx
          mul r2.w, r2.w, r6.w
          mul r8.xyz, r8.xyzx, r2.wwww
          dp3 r8.w, r8.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r15.xyzw, r1.yyyy, r19.xyzw, r8.xyzw
        endif 
      endif 
    endif 
    if_nz r1.w
      mov r17.xyzw, l(0,0,0,0)
    else 
      ieq r1.y, r2.x, l(3)
      if_nz r1.y
        mov r17.xyzw, l(0,0,0,0)
      else 
        if_nz r7.y
          mov r17.xyzw, l(0,0,0,0)
        else 
          dp3 r1.y, r12.xzwx, cb2[2].xyzx
          mad r1.y, -r1.y, r1.y, l(1.000000)
          sqrt r1.y, r1.y
          mul r1.w, r12.y, l(-1.500000)
          dp3 r2.w, r3.xyzx, cb2[2].xyzx
          mad r6.w, -r12.y, l(-1.500000), r2.w
          div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r1.w
          mul_sat r1.w, r1.w, r6.w
          mad r6.w, r1.w, l(-2.000000), l(3.000000)
          mul r1.w, r1.w, r1.w
          mul r1.w, r1.w, r6.w
          mul r8.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r6.w, -r5.w, l(1.000000)
          mul r8.xyzw, r6.wwww, r8.xyzw
          mul r8.xyzw, r1.wwww, r8.xyzw
          mul r8.xyzw, r1.yyyy, r8.xyzw
          mul r8.xyzw, r12.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r1.yw, r2.xxxx, l(0, 5, 0, 8)
          max r7.z, |r2.w|, l(0.000001)
          rcp r7.z, r7.z
          mul r2.w, r2.w, r7.z
          dp3 r3.x, r3.xyzx, r10.xyzx
          max r3.y, |r3.x|, l(0.000001)
          rcp r3.y, r3.y
          mul r3.x, r3.y, r3.x
          eq r2.w, r2.w, r3.x
          movc r9.w, r2.w, l(0), l(1.000000)
          mul r3.xyz, r6.wwww, r12.xzwx
          mul r9.xyz, r9.wwww, r3.xyzx
          mul r9.xyzw, r9.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r18.xyz, r11.xzwx, r12.xxxx
          mov r18.w, r12.x
          mul r18.xyzw, r18.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r9.xyzw, r1.wwww, r9.xyzw, r18.xyzw
          movc r17.xyzw, r1.yyyy, r8.xyzw, r9.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r1.y, r7.y, l(1.000000), r2.z
  dp3 r1.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r2.z, r1.x, r12.x
  add r1.w, -r1.y, r1.w
  mad r1.w, r2.z, r1.w, r1.y
  movc r1.y, r2.x, r1.y, r1.w
  mul r8.xyzw, r1.zzzz, r15.xyzw
  mad r8.xyzw, r16.xyzw, r1.yyyy, r8.xyzw
  add r8.xyzw, r17.xyzw, r8.xyzw
  mul r1.xyzw, r1.xxxx, r8.xyzw
  mov r14.xyz, cb2[0].xyzx
  mul r1.xyzw, r1.xyzw, r14.xyzw
else 
  mov r1.xyzw, l(0,0,0,0)
endif 
dp3 r4.w, r4.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r7.y
  mul r4.xyz, r4.xyzx, r11.xzwx
  mul r8.xyzw, r4.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r7.x
    mov_sat r2.zw, r12.xxxy
    mov_sat r3.x, r5.w
    log r9.xyz, r11.xzwx
    mul r13.yzw, r2.wwww, r9.xxyz
    mul r13.yzw, r13.yyzw, l(0.000000, -12.780000, -12.780000, -12.780000)
    mad r9.xyz, r9.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r13.yzwy
    eq r2.w, r2.z, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    mul r3.xyz, r3.xxxx, r11.xzwx
    mul r3.xyz, r3.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r9.xyz, -r2.zzzz, r9.xyzx
    exp r9.xyz, r9.xyzx
    mul r9.xyz, r3.xyzx, r9.xyzx
    mul r9.xyz, r9.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r9.xyz, r2.wwww, r3.xyzx, r9.xyzx
    mov r9.w, l(0.180000)
  else 
    ieq r2.z, r2.x, l(2)
    if_nz r2.z
      mul r14.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r14.w, l(0.0572957806)
      add r2.z, -r5.w, l(1.000000)
      mul r9.xyzw, r2.zzzz, r14.xyzw
    else 
      ieq r2.z, r2.x, l(3)
      if_nz r2.z
        dp3 r2.z, r10.xyzx, r10.xyzx
        min r2.z, r2.z, l(1.000000)
        mul r2.w, r5.y, l(0.080000)
        add r2.z, -r2.z, l(1.000000)
        mul r3.x, r2.z, r2.z
        mul r3.x, r3.x, r3.x
        mad r3.y, -r5.y, l(0.080000), l(1.000000)
        mul r3.x, r3.x, r3.y
        mad r2.z, r3.x, r2.z, r2.w
        add_sat r2.w, r5.x, r5.x
        mad r14.w, r2.w, -r2.z, l(1.000000)
        mul r14.xyz, r11.xzwx, r14.wwww
        mul r9.xyzw, r14.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        mul r14.xyz, r11.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
        mov r14.w, l(0.0572957806)
        add r15.w, -r5.w, l(1.000000)
        mul r14.xyzw, r14.xyzw, r15.wwww
        mov r15.xyz, r14.xyzx
        mul r16.xyzw, r15.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
        add r2.z, -r12.y, l(1.000000)
        mul r17.xyzw, r12.yyyy, r14.xyzw
        mul r17.xyzw, r17.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
        mad r16.xyzw, r16.xyzw, r2.zzzz, r17.xyzw
        ieq r2.zw, r2.xxxx, l(0, 0, 5, 8)
        dp3 r3.x, r6.xyzx, r10.xyzx
        max r3.y, |r3.x|, l(0.000001)
        rcp r3.y, r3.y
        mul r3.x, r3.y, r3.x
        eq r3.x, r3.x, l(0.000000)
        movc r17.w, r3.x, l(0), l(1.000000)
        mul r3.xyz, r12.xzwx, r15.wwww
        mul r17.xyz, r17.wwww, r3.xyzx
        mad r15.xyzw, r17.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000), r14.xyzw
        mul r17.xyz, r11.xzwx, r12.xxxx
        mov r17.w, r12.x
        mad r14.xyzw, r17.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r14.xyzw
        movc r14.xyzw, r2.wwww, r15.xyzw, r14.xyzw
        movc r9.xyzw, r2.zzzz, r16.xyzw, r14.xyzw
      endif 
    endif 
  endif 
  mul r8.xyzw, r4.xyzw, r9.xyzw
endif 
add r1.xyzw, r1.xyzw, r8.xyzw
if_nz r7.x
  mov_sat r12.xyzw, r12.xyzw
  mov_sat r5.xyw, r5.xyxw
  mul r2.z, r5.x, r5.x
  max r3.y, r2.z, l(0.001000)
  mul r2.z, r12.z, r12.z
  max r2.z, r2.z, l(0.001000)
  dp3 r2.w, -r10.xyzx, r6.xyzx
  add r2.w, r2.w, r2.w
  mad r4.xyz, r6.xyzx, -r2.wwww, -r10.xyzx
  dp3 r2.w, r6.xyzx, r4.xyzx
  mad r2.w, -|r2.w|, |r2.w|, l(1.000000)
  mad r2.w, -r2.w, l(0.444702327), l(1.000000)
  add r4.w, r12.x, r12.x
  sqrt r2.w, r2.w
  div r2.w, r4.w, r2.w
  log r7.xyz, r11.xzwx
  mul r8.xyz, r12.yyyy, r7.xyzx
  mul r8.xyz, r8.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r7.xyz, r7.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r8.xyzx
  eq r4.w, r12.x, l(0.000000)
  mul r6.w, r3.y, r3.y
  div r6.w, l(2.000000), r6.w
  add r6.w, r6.w, l(-2.000000)
  max r6.w, r6.w, l(1.000000031E-022)
  sqrt r6.w, r6.w
  div r6.w, l(-10.000000), r6.w
  exp r6.w, r6.w
  add r6.w, r6.w, l(-0.000980)
  mul_sat r6.w, r6.w, l(1.00795019)
  add r6.w, -r6.w, l(1.000000)
  mul r8.x, r6.w, cb1[183].w
  mul r8.y, r6.w, cb1[174].w
  if_z r7.w
    ge r8.z, l(0.250000), r3.y
    if_nz r8.z
      ge r8.z, r6.z, l(0.250000)
      if_nz r8.z
        mov r0.w, l(1.000000)
        dp4 r9.x, r0.xyzw, cb1[51].xyzw
        dp4 r9.y, r0.xyzw, cb1[52].xyzw
        dp4 r9.z, r0.xyzw, cb1[53].xyzw
        dp3 r14.x, r6.xyzx, cb1[51].xyzx
        dp3 r14.y, r6.xyzx, cb1[52].xyzx
        dp3 r14.z, r6.xyzx, cb1[53].xyzx
        dp3 r13.y, r4.xyzx, cb1[51].xyzx
        dp3 r13.z, r4.xyzx, cb1[52].xyzx
        dp3 r13.w, r4.xyzx, cb1[53].xyzx
        dp3 r8.z, r13.yzwy, r13.yzwy
        rsq r8.z, r8.z
        mul r15.yzw, r8.zzzz, r13.yyzw
        dp2 r8.z, v0.xxxx, cb1[66].zzzz
        add r8.z, r8.z, l(-1.000000)
        log r8.z, |r8.z|
        mul r8.z, r8.z, l(10.000000)
        exp r8.z, r8.z
        mad r8.z, r8.z, l(0.100000), l(1.000000)
        div r15.x, r15.y, r8.z
        mul r8.z, r9.z, l(-0.010000)
        max r8.z, r8.z, l(0.001000)
        mad r9.xyz, r14.xyzx, r8.zzzz, r9.xyzx
        mad r14.xyz, r15.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r9.xyzx
        mov r9.w, l(1.000000)
        dp4 r15.y, r9.xyzw, cb5[4].xyzw
        dp4 r15.x, r9.xyzw, cb5[5].xyzw
        dp4 r8.z, r9.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r8.z, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r15.y, r24.w, l(0.5), r15.y

        mov r14.w, l(1.000000)
        dp4 r9.x, r14.xyzw, cb5[4].xyzw
        dp4 r9.y, r14.xyzw, cb5[5].xyzw
        dp4 r8.w, r14.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r8.w, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r9.x, r24.w, l(0.5), r9.x

        div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r8.z
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        mul r13.yz, r8.zzzz, r15.xxyx
        mul r14.xy, r8.wwww, r9.xyxx
        mul r9.w, r8.z, r9.z
        mul r10.w, r8.w, r14.z
        add r14.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r15.zw, r14.zzzw, r14.yyyx
        lt r16.xy, r14.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
        or r16.xy, r15.zwzz, r16.xyxx
        movc r14.zw, r15.zzzw, -r14.zzzw, l(0,0,-0.500000,-0.500000)
        mad r14.zw, r9.yyyx, r8.wwww, r14.zzzw
        mad r9.xy, r9.yxyy, r8.wwww, -r13.yzyy
        div r9.xy, r14.zwzz, r9.xyxx
        and r9.x, r9.x, r16.x
        max r9.y, r9.y, r9.x
        movc r9.x, r16.y, r9.y, r9.x
        mad r14.zw, r15.yyyx, r8.zzzz, -r14.xxxy
        mad r14.xy, r9.xxxx, r14.zwzz, r14.xyxx
        add r9.y, -r8.w, r8.z
        mad r8.w, r9.x, r9.y, r8.w
        mad r9.y, r9.z, r8.z, -r10.w
        mad r9.x, r9.x, r9.y, r10.w
        mad r14.zw, r15.yyyx, r8.zzzz, -r14.xxxy
        dp2 r9.y, r14.zwzz, r14.zwzz
        lt r9.y, r9.y, l(0.000100)
        mad r14.zw, r15.yyyx, r8.zzzz, l(0.000000, 0.000000, 0.010000, 0.010000)
        movc r14.xy, r9.yyyy, r14.zwzz, r14.xyxx
        mad r14.zw, -r15.yyyx, r8.zzzz, r14.xxxy
        lt r9.y, |r14.z|, |r14.w|
        movc r13.yz, r9.yyyy, r13.yyzy, r13.zzyz
        movc r14.xyz, r9.yyyy, r14.ywzy, r14.xzwx
        lt r10.w, l(0.000000), r14.y
        lt r11.y, r14.y, l(0.000000)
        iadd r10.w, -r10.w, r11.y
        itof r15.x, r10.w
        div r10.w, r15.x, r14.y
        mul r15.y, r14.z, r10.w
        mad r9.x, -r9.z, r8.z, r9.x
        mul r9.x, r10.w, r9.x
        add r8.w, -r8.z, r8.w
        mul r8.w, r10.w, r8.w
        mul r10.w, r14.x, r15.x
        ge r11.y, r9.z, l(99999.796875)
        ge r12.y, l(100000.000000), r9.z
        and r11.y, r11.y, r12.y
        mov r14.y, l(1.000000)
        mov r16.x, r9.w
        mov r16.y, r8.z
        mov r14.zw, l(0,0,-1.000000,-1.000000)
        mov r17.xy, r13.yzyy
        mov r12.y, l(0)
        mov r13.w, r11.y
        mov r18.y, r9.z
        mov r15.z, r11.y
        loop 
          mul r15.w, r15.x, r17.x
          ge r15.w, r10.w, r15.w
          ilt r17.z, r12.y, l(150)
          and r15.w, r15.w, r17.z
          not r17.z, r15.z
          and r15.w, r15.w, r17.z
          breakc_z r15.w
          mad r16.xz, r9.xxxx, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
          mad r16.yw, r8.wwww, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
          div r18.x, r16.z, r16.w
          lt r15.w, r18.x, r18.y
          movc r16.zw, r15.wwww, r18.xxxy, r18.yyyx
          movc r14.zw, r9.yyyy, r17.yyyx, r17.xxxy
          mul r17.zw, r14.zzzw, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r14.x, r17.zwzz, t8.xyzw, s1, l(0.000000)
          dp2 r15.w, r14.xyxx, cb1[11].zwzz
          dp2 r14.x, r14.xyxx, cb1[12].zwzz
          div r14.x, -r15.w, r14.x
          ge r15.w, -r14.x, r16.z
          add r14.x, -r14.x, l(-0.200000)
          ge r14.x, r16.w, r14.x
          and r15.z, r14.x, r15.w
          mad r17.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
          iadd r12.y, r12.y, l(1)
          mov r13.w, r15.z
          mov r18.y, r18.x
        endloop 
        if_nz r13.w
          if_z cb5[8].z
            ftoi r8.zw, r14.zzzw
            imax r8.zw, r8.zzzw, l(0, 0, 0, 0)
            ftoi r9.xy, cb1[66].xyxx
            iadd r9.xy, r9.xyxx, l(-1, -1, 0, 0)
            imin r9.xy, r8.zwzz, r9.xyxx
            mov r9.zw, l(0,0,0,0)
            ldms_indexable(texture2dms)(float,float,float,float) r13.yz, r9.xyzw, t10.wxyz, l(0)
            ne r8.zw, r13.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r8.z, r8.w, r8.z
            if_z r8.z
              itof r8.zw, r9.xxxy
              mul r9.xy, r8.zwzz, cb5[8].xxxx
              ftoi r9.xy, r9.xyxx
              mov r9.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r9.x, r9.xyzw, t8.xyzw
              mov r9.yw, l(0,1.000000,0,1.000000)
              dp2 r9.z, r9.xyxx, cb1[11].zwzz
              dp2 r9.x, r9.xyxx, cb1[12].zwzz
              div r9.x, -r9.z, r9.x
              mad r8.zw, r8.zzzw, cb1[66].zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
              mul r8.zw, r8.zzzw, cb1[0].xxxy
              mul r15.xy, r8.zwzz, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r8.z, r9.x, cb1[67].x
              mov r15.z, -cb1[67].x
              mul r9.xyz, r8.zzzz, r15.xyzx
              dp4 r14.x, r9.xyzw, cb1[24].xyzw
              dp4 r14.y, r9.xyzw, cb1[25].xyzw
              dp4 r8.z, r9.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r8.z, -r24.y
mad r14.x, r24.w, r24.x, r14.x

              dp4 r15.x, r9.xyzw, cb5[0].xyzw
              dp4 r15.y, r9.xyzw, cb5[1].xyzw
              dp4 r8.w, r9.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r8.w, -r24.y
mad r15.x, r24.w, r24.x, r15.x

              max r8.w, r8.w, l(0.000100)
              div r9.xy, r15.xyxx, r8.wwww
              div r8.zw, r14.xxxy, r8.zzzz
              add r8.zw, -r9.xxxy, r8.zzzw
              mul r13.yw, r8.zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
              mov r13.z, -r13.w
            endif 
          else 
            mov r13.yz, l(0,0,0,0)
          endif 
          mad r9.xy, r14.zwzz, cb1[66].zwzz, -r13.yzyy
          add r8.zw, -r14.zzzw, v0.xxxy
          dp2 r8.z, r8.zwzz, r8.zwzz
          sqrt r8.z, r8.z
          ge r8.w, r8.z, l(525.000000)
          add r8.z, r8.z, l(-525.000000)
          mad r8.z, -r8.z, l(0.00444444455), l(1.000000)
          movc r8.z, r8.w, r8.z, l(1.000000)
          add r9.z, -r9.y, l(1.000000)
          mul_sat r9.zw, r9.yyyz, l(0.000000, 0.000000, 10.000000, 10.000000)
          mul r8.w, r9.w, r9.z
          mul r8.z, r8.w, r8.z
          lt r8.w, l(0.137000), r3.y
          mad r9.z, -r3.y, l(4.000000), l(1.000000)
          max r9.z, r9.z, l(0.000000)
          mul r9.z, r8.z, r9.z
          movc r8.z, r8.w, r9.z, r8.z
        else 
          mov r9.xy, l(0,0,0,0)
          mov r8.z, l(0)
        endif 
        lt r8.w, l(0.000000), r8.z
        if_nz r8.w
          mul r6.w, r6.w, cb5[8].y
          sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t9.xyzw, s2, r6.w
        else 
          mov r9.xyz, l(0,0,0,0)
        endif 
      else 
        mov r9.xyz, l(0,0,0,0)
        mov r8.z, l(0)
      endif 
    else 
      mov r9.xyz, l(0,0,0,0)
      mov r8.z, l(0)
    endif 
  else 
    mov r9.xyz, l(0,0,0,0)
    mov r8.z, l(0)
  endif 
  lt r6.w, l(0.000000), r8.z
  if_nz r6.w
    div r9.xyz, r9.xyzx, cb1[176].wwww
    lt r6.w, r8.z, l(1.000000)
    if_nz r6.w
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r14.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
        mov r8.w, l(0)
        loop 
          uge r10.w, r8.w, l(15)
          breakc_nz r10.w
          imul null, r10.w, r8.w, l(7)
          dp4 r15.x, r0.xyzw, cb1[r10.w + 68].xyzw
          dp4 r15.y, r0.xyzw, cb1[r10.w + 69].xyzw
          dp4 r15.z, r0.xyzw, cb1[r10.w + 70].xyzw
          ge r13.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r13.yzw, r13.yyzw, cb1[r10.w + 72].xxyz, cb1[r10.w + 73].xxyz
          add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r13.yzw, r13.yyzw, r15.xxyz
          mul r11.y, r13.z, r13.y
          mul r11.y, r13.w, r11.y
          lt r12.y, l(0.000000), r11.y
          if_nz r12.y
            dp3 r15.x, r4.xyzx, cb1[r10.w + 68].xyzx
            dp3 r15.y, r4.xyzx, cb1[r10.w + 69].xyzx
            dp3 r15.z, r4.xyzx, cb1[r10.w + 70].xyzx
            mul r11.y, r11.y, cb1[r10.w + 73].w
            mov r15.w, cb1[r10.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r8.y
            mul r15.xyzw, r15.xyzw, cb1[r10.w + 74].xxxy
            min r10.w, r6.w, r11.y
            mad r15.xyzw, r15.xyzw, r10.wwww, r14.xyzw
            add r10.w, r6.w, -r10.w
            ge r11.y, l(0.000000), r10.w
            if_nz r11.y
              mov r14.xyzw, r15.xyzw
              mov r6.w, r10.w
              break 
            endif 
            mov r14.xyzw, r15.xyzw
            mov r6.w, r10.w
          endif 
          iadd r8.w, r8.w, l(1)
        endloop 
      else 
        mov r14.xyzw, l(0,0,0,0)
        mov r6.w, l(1.000000)
      endif 
      add r8.w, r6.w, r14.w
      mul r8.w, r3.w, r8.w
      lt r10.w, l(0.000000), r8.w
      if_nz r10.w
        add r10.w, -|r4.z|, r4.z
        mad r6.w, r6.w, r10.w, |r4.z|
        mad r6.w, r6.w, l(2.000000), l(2.000000)
        div r13.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r6.wwww
        mul r13.yz, r4.yyxy, r13.yyzy
        mad r13.yz, r13.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t3.wxyz, s2, r8.x
        mov_sat r15.xyz, r13.yzwy
        movc r13.yzw, cb1[184].zzzz, r15.xxyz, r13.yyzw
        div r13.yzw, r13.yyzw, cb1[176].wwww
        mad r14.xyz, r13.yzwy, r8.wwww, r14.xyzx
      endif 
      mov_sat r8.z, r8.z
      add r13.yzw, r9.xxyz, -r14.xxyz
      mad r9.xyz, r8.zzzz, r13.yzwy, r14.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r9.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
      mov r8.z, l(0)
      loop 
        uge r8.w, r8.z, l(15)
        breakc_nz r8.w
        imul null, r8.w, r8.z, l(7)
        dp4 r14.x, r0.xyzw, cb1[r8.w + 68].xyzw
        dp4 r14.y, r0.xyzw, cb1[r8.w + 69].xyzw
        dp4 r14.z, r0.xyzw, cb1[r8.w + 70].xyzw
        ge r13.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
        add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.yzw, r13.yyzw, r14.xxyz
        mul r10.w, r13.z, r13.y
        mul r10.w, r13.w, r10.w
        lt r11.y, l(0.000000), r10.w
        if_nz r11.y
          dp3 r14.x, r4.xyzx, cb1[r8.w + 68].xyzx
          dp3 r14.y, r4.xyzx, cb1[r8.w + 69].xyzx
          dp3 r14.z, r4.xyzx, cb1[r8.w + 70].xyzx
          mul r10.w, r10.w, cb1[r8.w + 73].w
          mov r14.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t4.xyzw, s3, r8.y
          mul r14.xyzw, r14.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r6.w, r10.w
          mad r14.xyzw, r14.xyzw, r8.wwww, r9.xyzw
          add r8.w, r6.w, -r8.w
          ge r10.w, l(0.000000), r8.w
          if_nz r10.w
            mov r9.xyzw, r14.xyzw
            mov r6.w, r8.w
            break 
          endif 
          mov r9.xyzw, r14.xyzw
          mov r6.w, r8.w
        endif 
        iadd r8.z, r8.z, l(1)
      endloop 
    else 
      mov r9.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
    endif 
    add r8.y, r6.w, r9.w
    mul r8.y, r3.w, r8.y
    lt r8.z, l(0.000000), r8.y
    if_nz r8.z
      add r8.z, -|r4.z|, r4.z
      mad r6.w, r6.w, r8.z, |r4.z|
      mad r6.w, r6.w, l(2.000000), l(2.000000)
      div r8.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r6.wwww
      mul r8.zw, r4.yyyx, r8.zzzw
      mad r8.zw, r8.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r8.xzw, r8.zwzz, t3.xwyz, s2, r8.x
      mov_sat r13.yzw, r8.xxzw
      movc r8.xzw, cb1[184].zzzz, r13.yyzw, r8.xxzw
      div r8.xzw, r8.xxzw, cb1[176].wwww
      mad r9.xyz, r8.xzwx, r8.yyyy, r9.xyzx
    endif 
  endif 
  mul r6.w, r5.y, l(0.080000)
  dp3 r8.x, r6.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r8.x, r8.x, l(50.000000)
  min r8.x, r8.x, l(1.000000)
  dp3_sat r3.x, r6.xyzx, r10.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r8.yz, r3.xyxx, t1.zxyw, s2, l(0.000000)
  mad r6.w, r6.w, r8.y, r8.z
  mul r6.w, r8.x, r6.w
  mul r8.xyz, r6.wwww, r9.xyzx
  mul r8.xyz, r2.yyyy, r8.xyzx
  add r2.z, r2.z, r3.y
  min r3.z, r2.z, l(1.000000)
  lt r2.z, l(0.900000), r5.w
  mul r3.y, r3.z, r3.z
  div r3.y, l(2.000000), r3.y
  add r3.y, r3.y, l(-2.000000)
  max r3.y, r3.y, l(1.000000031E-022)
  sqrt r3.y, r3.y
  div r3.y, l(-10.000000), r3.y
  exp r3.y, r3.y
  add r3.y, r3.y, l(-0.000980)
  mul r3.y, r3.y, l(1.00795019)
  max r3.y, r3.y, l(0.000000)
  add r3.y, -r3.y, l(1.000000)
  mul r6.w, r3.y, cb1[183].w
  mul r8.w, r3.y, cb1[174].w
  if_z r7.w
    ge r9.x, l(0.250000), r3.z
    if_nz r9.x
      ge r9.x, r6.z, l(0.250000)
      if_nz r9.x
        mov r0.w, l(1.000000)
        dp4 r9.x, r0.xyzw, cb1[51].xyzw
        dp4 r9.y, r0.xyzw, cb1[52].xyzw
        dp4 r9.z, r0.xyzw, cb1[53].xyzw
        dp3 r14.x, r6.xyzx, cb1[51].xyzx
        dp3 r14.y, r6.xyzx, cb1[52].xyzx
        dp3 r14.z, r6.xyzx, cb1[53].xyzx
        dp3 r13.y, r4.xyzx, cb1[51].xyzx
        dp3 r13.z, r4.xyzx, cb1[52].xyzx
        dp3 r13.w, r4.xyzx, cb1[53].xyzx
        dp3 r9.w, r13.yzwy, r13.yzwy
        rsq r9.w, r9.w
        mul r15.yzw, r9.wwww, r13.yyzw
        dp2 r9.w, v0.xxxx, cb1[66].zzzz
        add r9.w, r9.w, l(-1.000000)
        log r9.w, |r9.w|
        mul r9.w, r9.w, l(10.000000)
        exp r9.w, r9.w
        mad r9.w, r9.w, l(0.100000), l(1.000000)
        div r15.x, r15.y, r9.w
        mul r9.w, r9.z, l(-0.010000)
        max r9.w, r9.w, l(0.001000)
        mad r9.xyz, r14.xyzx, r9.wwww, r9.xyzx
        mad r14.xyz, r15.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r9.xyzx
        mov r9.w, l(1.000000)
        dp4 r15.y, r9.xyzw, cb5[4].xyzw
        dp4 r15.x, r9.xyzw, cb5[5].xyzw
        dp4 r9.x, r9.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r9.x, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r15.y, r24.w, l(0.5), r15.y

        mov r14.w, l(1.000000)
        dp4 r16.x, r14.xyzw, cb5[4].xyzw
        dp4 r16.y, r14.xyzw, cb5[5].xyzw
        dp4 r9.y, r14.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r9.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r16.x, r24.w, l(0.5), r16.x

        div r9.x, l(1.000000, 1.000000, 1.000000, 1.000000), r9.x
        div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r9.y
        mul r13.yz, r9.xxxx, r15.xxyx
        mul r14.xy, r9.yyyy, r16.xyxx
        mul r9.w, r9.x, r9.z
        mul r10.w, r9.y, r14.z
        add r14.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
        lt r15.zw, r14.zzzw, r14.yyyx
        lt r16.zw, r14.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
        or r16.zw, r15.zzzw, r16.zzzw
        movc r14.zw, r15.zzzw, -r14.zzzw, l(0,0,-0.500000,-0.500000)
        mad r14.zw, r16.yyyx, r9.yyyy, r14.zzzw
        mad r15.zw, r16.yyyx, r9.yyyy, -r13.yyyz
        div r14.zw, r14.zzzw, r15.zzzw
        and r11.y, r14.z, r16.z
        max r12.y, r14.w, r11.y
        movc r11.y, r16.w, r12.y, r11.y
        mad r14.zw, r15.yyyx, r9.xxxx, -r14.xxxy
        mad r14.xy, r11.yyyy, r14.zwzz, r14.xyxx
        add r12.y, -r9.y, r9.x
        mad r9.y, r11.y, r12.y, r9.y
        mad r12.y, r9.z, r9.x, -r10.w
        mad r10.w, r11.y, r12.y, r10.w
        mad r14.zw, r15.yyyx, r9.xxxx, -r14.xxxy
        dp2 r11.y, r14.zwzz, r14.zwzz
        lt r11.y, r11.y, l(0.000100)
        mad r14.zw, r15.yyyx, r9.xxxx, l(0.000000, 0.000000, 0.010000, 0.010000)
        movc r14.xy, r11.yyyy, r14.zwzz, r14.xyxx
        mad r14.zw, -r15.yyyx, r9.xxxx, r14.xxxy
        lt r11.y, |r14.z|, |r14.w|
        movc r13.yz, r11.yyyy, r13.yyzy, r13.zzyz
        movc r14.xyz, r11.yyyy, r14.ywzy, r14.xzwx
        lt r12.y, l(0.000000), r14.y
        lt r13.w, r14.y, l(0.000000)
        iadd r12.y, -r12.y, r13.w
        itof r15.x, r12.y
        div r12.y, r15.x, r14.y
        mul r15.y, r14.z, r12.y
        mad r10.w, -r9.z, r9.x, r10.w
        mul r10.w, r12.y, r10.w
        add r9.y, -r9.x, r9.y
        mul r9.y, r12.y, r9.y
        mul r12.y, r14.x, r15.x
        ge r13.w, r9.z, l(99999.796875)
        ge r14.x, l(100000.000000), r9.z
        and r13.w, r13.w, r14.x
        mov r14.y, l(1.000000)
        mov r16.xy, r9.wxww
        mov r14.zw, l(0,0,-1.000000,-1.000000)
        mov r15.z, l(0)
        mov r15.w, r13.w
        mov r18.y, r9.z
        mov r17.xyz, r13.yzwy
        loop 
          mul r17.w, r15.x, r17.x
          ge r17.w, r12.y, r17.w
          ilt r18.z, r15.z, l(150)
          and r17.w, r17.w, r18.z
          not r18.z, r17.z
          and r17.w, r17.w, r18.z
          breakc_z r17.w
          mad r16.xz, r10.wwww, l(5.000000, 0.000000, 2.500000, 0.000000), r16.xxxx
          mad r16.yw, r9.yyyy, l(0.000000, 5.000000, 0.000000, 2.500000), r16.yyyy
          div r18.x, r16.z, r16.w
          lt r16.z, r18.x, r18.y
          movc r16.zw, r16.zzzz, r18.xxxy, r18.yyyx
          movc r14.zw, r11.yyyy, r17.yyyx, r17.xxxy
          mul r18.zw, r14.zzzw, cb1[66].zzzw
          sample_l_indexable(texture2d)(float,float,float,float) r14.x, r18.zwzz, t8.xyzw, s1, l(0.000000)
          dp2 r17.w, r14.xyxx, cb1[11].zwzz
          dp2 r14.x, r14.xyxx, cb1[12].zwzz
          div r14.x, -r17.w, r14.x
          ge r16.z, -r14.x, r16.z
          add r14.x, -r14.x, l(-0.200000)
          ge r14.x, r16.w, r14.x
          and r17.z, r14.x, r16.z
          mad r17.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r17.xyxx
          iadd r15.z, r15.z, l(1)
          mov r15.w, r17.z
          mov r18.y, r18.x
        endloop 
        if_nz r15.w
          if_z cb5[8].z
            ftoi r9.xy, r14.zwzz
            imax r9.xy, r9.xyxx, l(0, 0, 0, 0)
            ftoi r9.zw, cb1[66].xxxy
            iadd r9.zw, r9.zzzw, l(0, 0, -1, -1)
            imin r9.xy, r9.zwzz, r9.xyxx
            mov r9.zw, l(0,0,0,0)
            ldms_indexable(texture2dms)(float,float,float,float) r13.yz, r9.xyzw, t10.wxyz, l(0)
            ne r9.zw, r13.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
            and r9.z, r9.w, r9.z
            if_z r9.z
              itof r9.xy, r9.xyxx
              mul r9.zw, r9.xxxy, cb5[8].xxxx
              ftoi r15.xy, r9.zwzz
              mov r15.zw, l(0,0,0,0)
              ld_indexable(texture2d)(float,float,float,float) r9.z, r15.xyzw, t8.zwxy
              mov r9.w, l(1.000000)
              dp2 r10.w, r9.zwzz, cb1[11].zwzz
              dp2 r9.z, r9.zwzz, cb1[12].zwzz
              div r9.z, -r10.w, r9.z
              mad r9.xy, r9.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
              mul r9.xy, r9.xyxx, cb1[0].xyxx
              mul r15.xy, r9.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
              div r9.x, r9.z, cb1[67].x
              mov r15.z, -cb1[67].x
              mul r9.xyz, r9.xxxx, r15.xyzx
              mov r9.w, l(1.000000)
              dp4 r14.x, r9.xyzw, cb1[24].xyzw
              dp4 r14.y, r9.xyzw, cb1[25].xyzw
              dp4 r10.w, r9.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r10.w, -r24.y
mad r14.x, r24.w, r24.x, r14.x

              dp4 r15.x, r9.xyzw, cb5[0].xyzw
              dp4 r15.y, r9.xyzw, cb5[1].xyzw
              dp4 r9.x, r9.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r9.x, -r24.y
mad r15.x, r24.w, r24.x, r15.x

              max r9.x, r9.x, l(0.000100)
              div r9.xy, r15.xyxx, r9.xxxx
              div r9.zw, r14.xxxy, r10.wwww
              add r9.xy, -r9.xyxx, r9.zwzz
              mul r13.yw, r9.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
              mov r13.z, -r13.w
            endif 
          else 
            mov r13.yz, l(0,0,0,0)
          endif 
          mad r9.xy, r14.zwzz, cb1[66].zwzz, -r13.yzyy
          add r13.yz, -r14.zzwz, v0.xxyx
          dp2 r9.w, r13.yzyy, r13.yzyy
          sqrt r9.w, r9.w
          ge r10.w, r9.w, l(525.000000)
          add r9.w, r9.w, l(-525.000000)
          mad r9.w, -r9.w, l(0.00444444455), l(1.000000)
          movc r9.w, r10.w, r9.w, l(1.000000)
          add r9.z, -r9.y, l(1.000000)
          mul_sat r13.yz, r9.yyzy, l(0.000000, 10.000000, 10.000000, 0.000000)
          mul r9.z, r13.z, r13.y
          mul r9.z, r9.z, r9.w
          lt r9.w, l(0.137000), r3.z
          mad r10.w, -r3.z, l(4.000000), l(1.000000)
          max r10.w, r10.w, l(0.000000)
          mul r10.w, r9.z, r10.w
          movc r9.z, r9.w, r10.w, r9.z
        else 
          mov r9.xyz, l(0,0,0,0)
        endif 
        lt r9.w, l(0.000000), r9.z
        if_nz r9.w
          mul r3.y, r3.y, cb5[8].y
          sample_l_indexable(texture2d)(float,float,float,float) r9.xyw, r9.xyxx, t9.xywz, s2, r3.y
        else 
          mov r9.xyw, l(0,0,0,0)
        endif 
      else 
        mov r9.xyzw, l(0,0,0,0)
      endif 
    else 
      mov r9.xyzw, l(0,0,0,0)
    endif 
  else 
    mov r9.xyzw, l(0,0,0,0)
  endif 
  lt r3.y, l(0.000000), r9.z
  if_nz r3.y
    div r14.xyz, r9.xywx, cb1[176].wwww
    lt r3.y, r9.z, l(1.000000)
    if_nz r3.y
      ine r3.y, cb1[184].z, l(0)
      if_z r3.y
        mov r0.w, l(1.000000)
        mov r15.xyzw, l(0,0,0,0)
        mov r9.xy, l(1.000000,0,0,0)
        loop 
          uge r9.w, r9.y, l(15)
          breakc_nz r9.w
          imul null, r9.w, r9.y, l(7)
          dp4 r16.x, r0.xyzw, cb1[r9.w + 68].xyzw
          dp4 r16.y, r0.xyzw, cb1[r9.w + 69].xyzw
          dp4 r16.z, r0.xyzw, cb1[r9.w + 70].xyzw
          ge r13.yzw, r16.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r13.yzw, r13.yyzw, cb1[r9.w + 72].xxyz, cb1[r9.w + 73].xxyz
          add r16.xyz, -|r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r13.yzw, r13.yyzw, r16.xxyz
          mul r10.w, r13.z, r13.y
          mul r10.w, r13.w, r10.w
          lt r11.y, l(0.000000), r10.w
          if_nz r11.y
            dp3 r16.x, r4.xyzx, cb1[r9.w + 68].xyzx
            dp3 r16.y, r4.xyzx, cb1[r9.w + 69].xyzx
            dp3 r16.z, r4.xyzx, cb1[r9.w + 70].xyzx
            mul r10.w, r10.w, cb1[r9.w + 73].w
            mov r16.w, cb1[r9.w + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r16.xyzw, t4.xyzw, s3, r8.w
            mul r16.xyzw, r16.xyzw, cb1[r9.w + 74].xxxy
            min r9.w, r9.x, r10.w
            mad r16.xyzw, r16.xyzw, r9.wwww, r15.xyzw
            add r9.w, -r9.w, r9.x
            ge r10.w, l(0.000000), r9.w
            if_nz r10.w
              mov r15.xyzw, r16.xyzw
              mov r9.x, r9.w
              break 
            endif 
            mov r15.xyzw, r16.xyzw
            mov r9.x, r9.w
          endif 
          iadd r9.y, r9.y, l(1)
        endloop 
      else 
        mov r15.xyzw, l(0,0,0,0)
        mov r9.x, l(1.000000)
      endif 
      add r9.y, r9.x, r15.w
      mul r9.y, r3.w, r9.y
      lt r9.w, l(0.000000), r9.y
      if_nz r9.w
        add r9.w, -|r4.z|, r4.z
        mad r9.x, r9.x, r9.w, |r4.z|
        mad r9.x, r9.x, l(2.000000), l(2.000000)
        div r9.xw, l(-1.000000, 0.000000, 0.000000, 1.000000), r9.xxxx
        mul r9.xw, r4.yyyx, r9.xxxw
        mad r9.xw, r9.xxxw, l(0.950000, 0.000000, 0.000000, 0.950000), l(0.500000, 0.000000, 0.000000, 0.500000)
        sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r9.xwxx, t3.wxyz, s2, r6.w
        not r9.x, r2.z
        and r3.y, r3.y, r9.x
        mov_sat r16.xyz, r13.yzwy
        movc r13.yzw, r3.yyyy, r16.xxyz, r13.yyzw
        div r13.yzw, r13.yyzw, cb1[176].wwww
        mad r15.xyz, r13.yzwy, r9.yyyy, r15.xyzx
      endif 
      mov_sat r9.z, r9.z
      add r9.xyw, r14.xyxz, -r15.xyxz
      mad r14.xyz, r9.zzzz, r9.xywx, r15.xyzx
    endif 
  else 
    if_z cb1[184].z
      mov r0.w, l(1.000000)
      mov r14.xyzw, l(0,0,0,0)
      mov r3.y, l(1.000000)
      mov r9.x, l(0)
      loop 
        uge r9.y, r9.x, l(15)
        breakc_nz r9.y
        imul null, r9.y, r9.x, l(7)
        dp4 r15.x, r0.xyzw, cb1[r9.y + 68].xyzw
        dp4 r15.y, r0.xyzw, cb1[r9.y + 69].xyzw
        dp4 r15.z, r0.xyzw, cb1[r9.y + 70].xyzw
        ge r13.yzw, r15.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r13.yzw, r13.yyzw, cb1[r9.y + 72].xxyz, cb1[r9.y + 73].xxyz
        add r15.xyz, -|r15.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r13.yzw, r13.yyzw, r15.xxyz
        mul r9.z, r13.z, r13.y
        mul r9.z, r13.w, r9.z
        lt r9.w, l(0.000000), r9.z
        if_nz r9.w
          dp3 r15.x, r4.xyzx, cb1[r9.y + 68].xyzx
          dp3 r15.y, r4.xyzx, cb1[r9.y + 69].xyzx
          dp3 r15.z, r4.xyzx, cb1[r9.y + 70].xyzx
          mul r9.z, r9.z, cb1[r9.y + 73].w
          mov r15.w, cb1[r9.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyzw, r15.xyzw, t4.xyzw, s3, r8.w
          mul r15.xyzw, r15.xyzw, cb1[r9.y + 74].xxxy
          min r9.y, r3.y, r9.z
          mad r15.xyzw, r15.xyzw, r9.yyyy, r14.xyzw
          add r9.y, r3.y, -r9.y
          ge r9.z, l(0.000000), r9.y
          if_nz r9.z
            mov r14.xyzw, r15.xyzw
            mov r3.y, r9.y
            break 
          endif 
          mov r14.xyzw, r15.xyzw
          mov r3.y, r9.y
        endif 
        iadd r9.x, r9.x, l(1)
      endloop 
    else 
      mov r14.xyzw, l(0,0,0,0)
      mov r3.y, l(1.000000)
    endif 
    add r8.w, r3.y, r14.w
    mul r8.w, r3.w, r8.w
    lt r9.x, l(0.000000), r8.w
    if_nz r9.x
      add r9.x, -|r4.z|, r4.z
      mad r3.y, r3.y, r9.x, |r4.z|
      mad r3.y, r3.y, l(2.000000), l(2.000000)
      div r9.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r3.yyyy
      mul r4.xy, r4.yxyy, r9.xyxx
      mad r4.xy, r4.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t3.xyzw, s2, r6.w
      ine r3.y, cb1[184].z, l(0)
      not r2.z, r2.z
      and r2.z, r2.z, r3.y
      mov_sat r9.xyz, r4.xyzx
      movc r4.xyz, r2.zzzz, r9.xyzx, r4.xyzx
      div r4.xyz, r4.xyzx, cb1[176].wwww
      mad r14.xyz, r4.xyzx, r8.wwww, r14.xyzx
    endif 
  endif 
  mul r2.z, r12.w, l(0.080000)
  mad r4.xyz, -r12.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
  mad r4.xyz, r5.wwww, r4.xyzx, r2.zzzz
  dp3 r2.z, r4.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r2.z, r2.z, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xzxx, t1.xyzw, s2, l(0.000000)
  mad r3.xyz, r4.xyzx, r3.xxxx, r3.yyyy
  mul r3.xyz, r2.zzzz, r3.xyzx
  mul r3.xyz, r3.xyzx, r14.xyzx
  mul r3.xyz, r2.yyyy, r3.xyzx
  mul r4.xyz, r2.wwww, -r7.xyzx
  exp r4.xyz, r4.xyzx
  mad r4.xyz, r3.xyzx, r4.xyzx, r8.xyzx
  movc r3.xyz, r4.wwww, r3.xyzx, r4.xyzx
  dp3 r2.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r2.x, r2.x, l(5)
  if_nz r2.x
    dp3 r2.x, -r10.xyzx, r6.xyzx
    add r2.x, r2.x, r2.x
    mad r4.xyz, r6.xyzx, -r2.xxxx, -r10.xyzx
    dp3 r2.x, r4.xyzx, r12.xzwx
    dp3 r2.w, r4.xyzx, r6.xyzx
    mul r4.xyz, r2.wwww, r6.xyzx
    mad r4.xyz, r12.xzwx, r2.xxxx, r4.xyzx
    dp3 r2.x, r12.xzwx, r10.xyzx
    mad r2.x, -r2.x, r2.x, l(1.000000)
    mul r2.w, r5.x, r5.x
    div r2.w, l(2.000000), r2.w
    add r2.w, r2.w, l(-2.000000)
    max r2.w, r2.w, l(1.000000031E-022)
    sqrt r2.xw, r2.xxxw
    div r2.w, l(-10.000000), r2.w
    exp r2.w, r2.w
    add r2.w, r2.w, l(-0.000980)
    mul_sat r2.w, r2.w, l(1.00795019)
    add r2.w, -r2.w, l(1.000000)
    if_z cb1[184].z
      mul r4.w, r2.w, cb1[174].w
      mov r0.w, l(1.000000)
      mov r8.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
      mov r7.x, l(0)
      loop 
        uge r7.y, r7.x, l(15)
        breakc_nz r7.y
        imul null, r7.y, r7.x, l(7)
        dp4 r9.x, r0.xyzw, cb1[r7.y + 68].xyzw
        dp4 r9.y, r0.xyzw, cb1[r7.y + 69].xyzw
        dp4 r9.z, r0.xyzw, cb1[r7.y + 70].xyzw
        ge r12.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r12.xyz, r12.xyzx, cb1[r7.y + 72].xyzx, cb1[r7.y + 73].xyzx
        add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r9.xyz, r12.xyzx, r9.xyzx
        mul r7.z, r9.y, r9.x
        mul r7.z, r9.z, r7.z
        lt r9.x, l(0.000000), r7.z
        if_nz r9.x
          dp3 r9.x, r4.xyzx, cb1[r7.y + 68].xyzx
          dp3 r9.y, r4.xyzx, cb1[r7.y + 69].xyzx
          dp3 r9.z, r4.xyzx, cb1[r7.y + 70].xyzx
          mul r7.z, r7.z, cb1[r7.y + 73].w
          mov r9.w, cb1[r7.y + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r9.xyzw, r9.xyzw, t4.xyzw, s3, r4.w
          mul r9.xyzw, r9.xyzw, cb1[r7.y + 74].xxxy
          min r7.y, r6.w, r7.z
          mad r9.xyzw, r9.xyzw, r7.yyyy, r8.xyzw
          add r7.y, r6.w, -r7.y
          ge r7.z, l(0.000000), r7.y
          if_nz r7.z
            mov r8.xyzw, r9.xyzw
            mov r6.w, r7.y
            break 
          endif 
          mov r8.xyzw, r9.xyzw
          mov r6.w, r7.y
        endif 
        iadd r7.x, r7.x, l(1)
      endloop 
    else 
      mov r8.xyzw, l(0,0,0,0)
      mov r6.w, l(1.000000)
    endif 
    add r4.w, r6.w, r8.w
    mul r4.w, r3.w, r4.w
    lt r7.x, l(0.000000), r4.w
    if_nz r7.x
      mul r2.w, r2.w, cb1[183].w
      add r7.x, -|r4.z|, r4.z
      mad r4.z, r6.w, r7.x, |r4.z|
      mad r4.z, r4.z, l(2.000000), l(2.000000)
      div r7.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r4.zzzz
      mul r4.xy, r4.yxyy, r7.xyxx
      mad r4.xy, r4.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t3.xyzw, s2, r2.w
      mov_sat r7.xyz, r4.xyzx
      movc r4.xyz, cb1[184].zzzz, r7.xyzx, r4.xyzx
      div r4.xyz, r4.xyzx, cb1[176].wwww
      mad r8.xyz, r4.xyzx, r4.wwww, r8.xyzx
    endif 
    sqrt r4.xyz, r11.xzwx
    dp3 r2.w, r11.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r2.yyyy
    mad r4.xyz, r2.wwww, r4.xyzx, r2.yyyy
    mul r4.xyz, r4.xyzx, r8.xyzx
    mul r2.w, r5.y, l(0.080000)
    mad r7.xyz, -r5.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xzwx
    mad r7.xyz, r5.wwww, r7.xyzx, r2.wwww
    dp3 r2.w, r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r2.w, r2.w, l(50.000000)
    dp3_sat r5.z, r6.xyzx, r10.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.xy, r5.zxzz, t1.xyzw, s2, l(0.000000)
    mad r7.xyz, r7.xyzx, r8.xxxx, r8.yyyy
    mul r7.xyz, r2.wwww, r7.xyzx
    mul r7.xyz, r2.xxxx, r7.xyzx
    mul r3.xyz, r4.xyzx, r7.xyzx
    dp3 r2.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r2.x, r5.x, r13.x
    lt r2.w, l(0.900000), r5.w
    dp3 r4.x, -r10.xyzx, r6.xyzx
    add r4.x, r4.x, r4.x
    mad r4.xyz, r6.xyzx, -r4.xxxx, -r10.xyzx
    mul r4.w, r2.x, r2.x
    div r4.w, l(2.000000), r4.w
    add r4.w, r4.w, l(-2.000000)
    max r4.w, r4.w, l(1.000000031E-022)
    sqrt r4.w, r4.w
    div r4.w, l(-10.000000), r4.w
    exp r4.w, r4.w
    add r4.w, r4.w, l(-0.000980)
    mul_sat r4.w, r4.w, l(1.00795019)
    add r4.w, -r4.w, l(1.000000)
    mul r6.w, r4.w, cb1[183].w
    mul r7.x, r4.w, cb1[174].w
    if_z r7.w
      ge r7.y, l(0.250000), r2.x
      if_nz r7.y
        ge r7.y, r6.z, l(0.250000)
        if_nz r7.y
          mov r0.w, l(1.000000)
          dp4 r8.x, r0.xyzw, cb1[51].xyzw
          dp4 r8.y, r0.xyzw, cb1[52].xyzw
          dp4 r8.z, r0.xyzw, cb1[53].xyzw
          dp3 r9.x, r6.xyzx, cb1[51].xyzx
          dp3 r9.y, r6.xyzx, cb1[52].xyzx
          dp3 r9.z, r6.xyzx, cb1[53].xyzx
          dp3 r7.y, r4.xyzx, cb1[51].xyzx
          dp3 r7.z, r4.xyzx, cb1[52].xyzx
          dp3 r7.w, r4.xyzx, cb1[53].xyzx
          dp3 r8.w, r7.yzwy, r7.yzwy
          rsq r8.w, r8.w
          mul r12.yzw, r7.yyzw, r8.wwww
          dp2 r7.y, v0.xxxx, cb1[66].zzzz
          add r7.y, r7.y, l(-1.000000)
          log r7.y, |r7.y|
          mul r7.y, r7.y, l(10.000000)
          exp r7.y, r7.y
          mad r7.y, r7.y, l(0.100000), l(1.000000)
          div r12.x, r12.y, r7.y
          mul r7.y, r8.z, l(-0.010000)
          max r7.y, r7.y, l(0.001000)
          mad r8.xyz, r9.xyzx, r7.yyyy, r8.xyzx
          mad r9.xyz, r12.xzwx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r8.xyzx
          mov r8.w, l(1.000000)
          dp4 r12.y, r8.xyzw, cb5[4].xyzw
          dp4 r12.x, r8.xyzw, cb5[5].xyzw
          dp4 r7.y, r8.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.y, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r12.y, r24.w, l(0.5), r12.y

          mov r9.w, l(1.000000)
          dp4 r8.x, r9.xyzw, cb5[4].xyzw
          dp4 r8.y, r9.xyzw, cb5[5].xyzw
          dp4 r7.z, r9.xyzw, cb5[7].xyzw

// ProjectToPixelMatrix - stereo correction * resolution / 2:
add r24.w, r7.z, -r24.y
mul r24.w, r24.w, r24.x
mul r24.w, r24.w, cb1[66].x
mad r8.x, r24.w, l(0.5), r8.x

          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
          div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
          mul r9.xy, r7.yyyy, r12.xyxx
          mul r12.zw, r7.zzzz, r8.xxxy
          mul r7.w, r7.y, r8.z
          mul r8.w, r7.z, r9.z
          add r9.zw, cb1[66].yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
          lt r13.xy, r9.zwzz, r12.wzww
          lt r13.zw, r12.wwwz, l(0.000000, 0.000000, 0.500000, 0.500000)
          or r13.zw, r13.zzzw, r13.xxxy
          movc r9.zw, r13.xxxy, -r9.zzzw, l(0,0,-0.500000,-0.500000)
          mad r9.zw, r8.yyyx, r7.zzzz, r9.zzzw
          mad r8.xy, r8.yxyy, r7.zzzz, -r9.xyxx
          div r8.xy, r9.zwzz, r8.xyxx
          and r8.x, r8.x, r13.z
          max r8.y, r8.y, r8.x
          movc r8.x, r13.w, r8.y, r8.x
          mad r9.zw, r12.yyyx, r7.yyyy, -r12.zzzw
          mad r9.zw, r8.xxxx, r9.zzzw, r12.zzzw
          add r8.y, -r7.z, r7.y
          mad r7.z, r8.x, r8.y, r7.z
          mad r8.y, r8.z, r7.y, -r8.w
          mad r8.x, r8.x, r8.y, r8.w
          mad r8.yw, r12.yyyx, r7.yyyy, -r9.zzzw
          dp2 r8.y, r8.ywyy, r8.ywyy
          lt r8.y, r8.y, l(0.000100)
          mad r12.zw, r12.yyyx, r7.yyyy, l(0.000000, 0.000000, 0.010000, 0.010000)
          movc r13.xy, r8.yyyy, r12.zwzz, r9.zwzz
          mad r13.zw, -r12.yyyx, r7.yyyy, r13.xxxy
          lt r8.y, |r13.z|, |r13.w|
          movc r9.xy, r8.yyyy, r9.xyxx, r9.yxyy
          movc r12.xyz, r8.yyyy, r13.ywzy, r13.xzwx
          lt r8.w, l(0.000000), r12.y
          lt r9.z, r12.y, l(0.000000)
          iadd r8.w, -r8.w, r9.z
          itof r13.x, r8.w
          div r8.w, r13.x, r12.y
          mul r13.y, r12.z, r8.w
          mad r8.x, -r8.z, r7.y, r8.x
          mul r8.x, r8.w, r8.x
          add r7.z, -r7.y, r7.z
          mul r7.z, r8.w, r7.z
          mul r8.w, r12.x, r13.x
          ge r9.z, r8.z, l(99999.796875)
          ge r9.w, l(100000.000000), r8.z
          and r9.z, r9.w, r9.z
          mov r12.y, l(1.000000)
          mov r14.xy, r7.wyww
          mov r12.zw, l(0,0,-1.000000,-1.000000)
          mov r15.xy, r9.xyxx
          mov r9.w, l(0)
          mov r10.w, r9.z
          mov r16.y, r8.z
          mov r11.y, r9.z
          loop 
            mul r13.z, r13.x, r15.x
            ge r13.z, r8.w, r13.z
            ilt r13.w, r9.w, l(150)
            and r13.z, r13.w, r13.z
            not r13.w, r11.y
            and r13.z, r13.w, r13.z
            breakc_z r13.z
            mad r14.xz, r8.xxxx, l(5.000000, 0.000000, 2.500000, 0.000000), r14.xxxx
            mad r14.yw, r7.zzzz, l(0.000000, 5.000000, 0.000000, 2.500000), r14.yyyy
            div r16.x, r14.z, r14.w
            lt r13.z, r16.x, r16.y
            movc r13.zw, r13.zzzz, r16.xxxy, r16.yyyx
            movc r12.zw, r8.yyyy, r15.yyyx, r15.xxxy
            mul r14.zw, r12.zzzw, cb1[66].zzzw
            sample_l_indexable(texture2d)(float,float,float,float) r12.x, r14.zwzz, t8.xyzw, s1, l(0.000000)
            dp2 r14.z, r12.xyxx, cb1[11].zwzz
            dp2 r12.x, r12.xyxx, cb1[12].zwzz
            div r12.x, -r14.z, r12.x
            ge r13.z, -r12.x, r13.z
            add r12.x, -r12.x, l(-0.200000)
            ge r12.x, r13.w, r12.x
            and r11.y, r12.x, r13.z
            mad r15.xy, r13.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r15.xyxx
            iadd r9.w, r9.w, l(1)
            mov r10.w, r11.y
            mov r16.y, r16.x
          endloop 
          if_nz r10.w
            if_z cb5[8].z
              ftoi r7.yz, r12.zzwz
              imax r7.yz, r7.yyzy, l(0, 0, 0, 0)
              ftoi r8.xy, cb1[66].xyxx
              iadd r8.xy, r8.xyxx, l(-1, -1, 0, 0)
              imin r8.xy, r7.yzyy, r8.xyxx
              mov r8.zw, l(0,0,0,0)
              ldms_indexable(texture2dms)(float,float,float,float) r7.yz, r8.xyzw, t10.wxyz, l(0)
              ne r8.zw, r7.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
              and r8.z, r8.w, r8.z
              if_z r8.z
                itof r8.xy, r8.xyxx
                mul r8.zw, r8.xxxy, cb5[8].xxxx
                ftoi r9.xy, r8.zwzz
                mov r9.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r8.z, r9.xyzw, t8.zwxy
                mov r8.w, l(1.000000)
                dp2 r9.x, r8.zwzz, cb1[11].zwzz
                dp2 r8.z, r8.zwzz, cb1[12].zwzz
                div r8.z, -r9.x, r8.z
                mad r8.xy, r8.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                mul r8.xy, r8.xyxx, cb1[0].xyxx
                mul r9.xy, r8.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                div r8.x, r8.z, cb1[67].x
                mov r9.z, -cb1[67].x
                mul r8.xyz, r8.xxxx, r9.xyzx
                mov r8.w, l(1.000000)
                dp4 r9.x, r8.xyzw, cb1[24].xyzw
                dp4 r9.y, r8.xyzw, cb1[25].xyzw
                dp4 r9.z, r8.xyzw, cb1[27].xyzw

// ProjectionMatrix - standard stereo correction:
add r24.w, r9.z, -r24.y
mad r9.x, r24.w, r24.x, r9.x

                dp4 r12.x, r8.xyzw, cb5[0].xyzw
                dp4 r12.y, r8.xyzw, cb5[1].xyzw
                dp4 r8.x, r8.xyzw, cb5[3].xyzw

// CameraSpaceToPreviousProjectedSpace - standard stereo correction:
add r24.w, r8.x, -r24.y
mad r12.x, r24.w, r24.x, r12.x

                max r8.x, r8.x, l(0.000100)
                div r8.xy, r12.xyxx, r8.xxxx
                div r8.zw, r9.xxxy, r9.zzzz
                add r8.xy, -r8.xyxx, r8.zwzz
                mul r7.yw, r8.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
                mov r7.z, -r7.w
              endif 
            else 
              mov r7.yz, l(0,0,0,0)
            endif 
            mad r7.yz, r12.zzwz, cb1[66].zzwz, -r7.yyzy
            add r8.xy, -r12.zwzz, v0.xyxx
            dp2 r8.x, r8.xyxx, r8.xyxx
            sqrt r8.x, r8.x
            ge r8.y, r8.x, l(525.000000)
            add r8.x, r8.x, l(-525.000000)
            mad r8.x, -r8.x, l(0.00444444455), l(1.000000)
            movc r8.x, r8.y, r8.x, l(1.000000)
            add r7.w, -r7.z, l(1.000000)
            mul_sat r8.yz, r7.zzwz, l(0.000000, 10.000000, 10.000000, 0.000000)
            mul r7.w, r8.z, r8.y
            mul r7.w, r7.w, r8.x
            lt r8.x, l(0.137000), r2.x
            mad r2.x, -r2.x, l(4.000000), l(1.000000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r7.w
            movc r2.x, r8.x, r2.x, r7.w
          else 
            mov r7.yz, l(0,0,0,0)
            mov r2.x, l(0)
          endif 
          lt r7.w, l(0.000000), r2.x
          if_nz r7.w
            mul r4.w, r4.w, cb5[8].y
            sample_l_indexable(texture2d)(float,float,float,float) r7.yzw, r7.yzyy, t9.wxyz, s2, r4.w
          else 
            mov r7.yzw, l(0,0,0,0)
          endif 
        else 
          mov r7.yzw, l(0,0,0,0)
          mov r2.x, l(0)
        endif 
      else 
        mov r7.yzw, l(0,0,0,0)
        mov r2.x, l(0)
      endif 
    else 
      mov r7.yzw, l(0,0,0,0)
      mov r2.x, l(0)
    endif 
    lt r4.w, l(0.000000), r2.x
    if_nz r4.w
      div r8.xyz, r7.yzwy, cb1[176].wwww
      lt r4.w, r2.x, l(1.000000)
      if_nz r4.w
        ine r4.w, cb1[184].z, l(0)
        if_z r4.w
          mov r0.w, l(1.000000)
          mov r9.xyzw, l(0,0,0,0)
          mov r7.yz, l(0,1.000000,0,0)
          loop 
            uge r7.w, r7.z, l(15)
            breakc_nz r7.w
            imul null, r7.w, r7.z, l(7)
            dp4 r12.x, r0.xyzw, cb1[r7.w + 68].xyzw
            dp4 r12.y, r0.xyzw, cb1[r7.w + 69].xyzw
            dp4 r12.z, r0.xyzw, cb1[r7.w + 70].xyzw
            ge r13.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            movc r13.xyz, r13.xyzx, cb1[r7.w + 72].xyzx, cb1[r7.w + 73].xyzx
            add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            mul_sat r12.xyz, r13.xyzx, r12.xyzx
            mul r10.w, r12.y, r12.x
            mul r10.w, r12.z, r10.w
            lt r11.y, l(0.000000), r10.w
            if_nz r11.y
              dp3 r12.x, r4.xyzx, cb1[r7.w + 68].xyzx
              dp3 r12.y, r4.xyzx, cb1[r7.w + 69].xyzx
              dp3 r12.z, r4.xyzx, cb1[r7.w + 70].xyzx
              mul r10.w, r10.w, cb1[r7.w + 73].w
              mov r12.w, cb1[r7.w + 72].w
              sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyzw, r12.xyzw, t4.xyzw, s3, r7.x
              mul r12.xyzw, r12.xyzw, cb1[r7.w + 74].xxxy
              min r7.w, r7.y, r10.w
              mad r12.xyzw, r12.xyzw, r7.wwww, r9.xyzw
              add r7.w, -r7.w, r7.y
              ge r10.w, l(0.000000), r7.w
              if_nz r10.w
                mov r9.xyzw, r12.xyzw
                mov r7.y, r7.w
                break 
              endif 
              mov r9.xyzw, r12.xyzw
              mov r7.y, r7.w
            endif 
            iadd r7.z, r7.z, l(1)
          endloop 
        else 
          mov r9.xyzw, l(0,0,0,0)
          mov r7.y, l(1.000000)
        endif 
        add r7.z, r7.y, r9.w
        mul r7.z, r3.w, r7.z
        lt r7.w, l(0.000000), r7.z
        if_nz r7.w
          add r7.w, -|r4.z|, r4.z
          mad r7.y, r7.y, r7.w, |r4.z|
          mad r7.y, r7.y, l(2.000000), l(2.000000)
          div r7.yw, l(0.000000, -1.000000, 0.000000, 1.000000), r7.yyyy
          mul r7.yw, r4.yyyx, r7.yyyw
          mad r7.yw, r7.yyyw, l(0.000000, 0.950000, 0.000000, 0.950000), l(0.000000, 0.500000, 0.000000, 0.500000)
          sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r7.ywyy, t3.xyzw, s2, r6.w
          not r7.y, r2.w
          and r4.w, r4.w, r7.y
          mov_sat r13.xyz, r12.xyzx
          movc r12.xyz, r4.wwww, r13.xyzx, r12.xyzx
          div r12.xyz, r12.xyzx, cb1[176].wwww
          mad r9.xyz, r12.xyzx, r7.zzzz, r9.xyzx
        endif 
        mov_sat r2.x, r2.x
        add r7.yzw, r8.xxyz, -r9.xxyz
        mad r8.xyz, r2.xxxx, r7.yzwy, r9.xyzx
      endif 
    else 
      if_z cb1[184].z
        mov r0.w, l(1.000000)
        mov r8.xyzw, l(0,0,0,0)
        mov r2.x, l(1.000000)
        mov r4.w, l(0)
        loop 
          uge r7.y, r4.w, l(15)
          breakc_nz r7.y
          imul null, r7.y, r4.w, l(7)
          dp4 r9.x, r0.xyzw, cb1[r7.y + 68].xyzw
          dp4 r9.y, r0.xyzw, cb1[r7.y + 69].xyzw
          dp4 r9.z, r0.xyzw, cb1[r7.y + 70].xyzw
          ge r12.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          movc r12.xyz, r12.xyzx, cb1[r7.y + 72].xyzx, cb1[r7.y + 73].xyzx
          add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          mul_sat r9.xyz, r12.xyzx, r9.xyzx
          mul r7.z, r9.y, r9.x
          mul r7.z, r9.z, r7.z
          lt r7.w, l(0.000000), r7.z
          if_nz r7.w
            dp3 r9.x, r4.xyzx, cb1[r7.y + 68].xyzx
            dp3 r9.y, r4.xyzx, cb1[r7.y + 69].xyzx
            dp3 r9.z, r4.xyzx, cb1[r7.y + 70].xyzx
            mul r7.z, r7.z, cb1[r7.y + 73].w
            mov r9.w, cb1[r7.y + 72].w
            sample_l_indexable(texturecubearray)(float,float,float,float) r9.xyzw, r9.xyzw, t4.xyzw, s3, r7.x
            mul r9.xyzw, r9.xyzw, cb1[r7.y + 74].xxxy
            min r7.y, r2.x, r7.z
            mad r9.xyzw, r9.xyzw, r7.yyyy, r8.xyzw
            add r7.y, r2.x, -r7.y
            ge r7.z, l(0.000000), r7.y
            if_nz r7.z
              mov r8.xyzw, r9.xyzw
              mov r2.x, r7.y
              break 
            endif 
            mov r8.xyzw, r9.xyzw
            mov r2.x, r7.y
          endif 
          iadd r4.w, r4.w, l(1)
        endloop 
      else 
        mov r8.xyzw, l(0,0,0,0)
        mov r2.x, l(1.000000)
      endif 
      add r0.x, r2.x, r8.w
      mul r0.x, r3.w, r0.x
      lt r0.y, l(0.000000), r0.x
      if_nz r0.y
        add r0.y, -|r4.z|, r4.z
        mad r0.y, r2.x, r0.y, |r4.z|
        mad r0.y, r0.y, l(2.000000), l(2.000000)
        div r0.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r0.yyyy
        mul r0.yz, r0.yyzy, r4.yyxy
        mad r0.yz, r0.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t3.wxyz, s2, r6.w
        ine r2.x, cb1[184].z, l(0)
        not r2.w, r2.w
        and r2.x, r2.w, r2.x
        mov_sat r4.xyz, r0.yzwy
        movc r0.yzw, r2.xxxx, r4.xxyz, r0.yyzw
        div r0.yzw, r0.yyzw, cb1[176].wwww
        mad r8.xyz, r0.yzwy, r0.xxxx, r8.xyzx
      endif 
    endif 
    mul r0.x, r5.y, l(0.080000)
    mad r0.yzw, -r5.yyyy, l(0.000000, 0.080000, 0.080000, 0.080000), r11.xxzw
    mad r0.xyz, r5.wwww, r0.yzwy, r0.xxxx
    dp3 r0.w, r0.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.w, r0.w, l(50.000000)
    dp3_sat r5.z, r6.xyzx, r10.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.xw, r5.zxzz, t1.xzwy, s2, l(0.000000)
    mad r0.xyz, r0.xyzx, r2.xxxx, r2.wwww
    mul r0.xyz, r0.wwww, r0.xyzx
    mul r0.xyz, r0.xyzx, r8.xyzx
    mul r3.xyz, r2.yyyy, r0.xyzx
    dp3 r2.z, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r1.w, r2.z
add r0.yzw, r1.xxyz, r3.xxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 2191 instruction slots used