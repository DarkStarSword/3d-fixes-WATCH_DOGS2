// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1b95bccb3455496e-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:56 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer TerrainGlobal
// {
//
//   float4 MaterialLODParams;          // Offset:    0 Size:    16
//   float ShadowZOffset;               // Offset:   16 Size:     4 [unused]
//
// }
//
// cbuffer TerrainSectorStatic
// {
//
//   float4 DiffuseAndNormalUVScaling[7];// Offset:    0 Size:   112
//   float4 MaskChannelsContent[7];     // Offset:  112 Size:   112
//   float4 MaskParameters[7];          // Offset:  224 Size:   112
//   float4 NormalIntensities[2];       // Offset:  336 Size:    32
//   float4 SectorGlobalUVRange;        // Offset:  368 Size:    16 [unused]
//   float4 SectorUVMin;                // Offset:  384 Size:    16 [unused]
//   float4 SectorUVTransform;          // Offset:  400 Size:    16 [unused]
//   float4 SurfaceMaskUVScaling[7];    // Offset:  416 Size:   112
//   float3 SectorColorMin;             // Offset:  528 Size:    12
//   float3 SectorColorRange;           // Offset:  544 Size:    12
//   uint WetSurfaceTypeIndices[7];     // Offset:  560 Size:   100
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TerrainSectorStatic__ColorSampler__SampObj__    sampler      NA          NA    0        1
// TerrainSectorStatic__DiffuseSampler__SampObj__    sampler      NA          NA    1        1
// TerrainSectorStatic__NormalSampler__SampObj__    sampler      NA          NA    2        1
// DetailDiffuseSampler              sampler      NA          NA    3        1
// DetailSurfaceMaskSampler          sampler      NA          NA    4        1
// DetailNormalSampler               sampler      NA          NA    5        1
// ColorWrap                         sampler      NA          NA    6        1
// Viewport__RaindropRippleTexture    texture  float4     2darray    0        1
// TerrainGlobal__RoadDepthTextureMS    texture  float4        2dMS    1        1
// TerrainSectorStatic__ColorSampler__TexObj__    texture  float4          2d    2        1
// TerrainSectorStatic__Detail0DiffuseSampler__TexObj__    texture  float4          2d    3        1
// TerrainSectorStatic__Detail0NormalSampler__TexObj__    texture  float4          2d    4        1
// TerrainSectorStatic__Detail0SurfaceMaskSampler__TexObj__    texture  float4          2d    5        1
// TerrainSectorStatic__DiffuseSampler__TexObj__    texture  float4          2d    6        1
// TerrainSectorStatic__NormalSampler__TexObj__    texture  float4          2d    7        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// TerrainGlobal                     cbuffer      NA          NA    2        1
// TerrainSectorStatic               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xy w
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// SV_Position              0   xyzw        3      POS   float   xy  
// SV_IsFrontFace           0   x           4    FFACE    uint       
// SV_SampleIndex           0    y          4   SAMPLE    uint    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[36], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2darray (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v1.xyw
dcl_input_ps linear centroid v2.xyz
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_input_ps_sgv v4.y, sampleIndex
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1b95bccb3455496e-ps.txt

mul r7.w, r7.x, r7.y
mul r9.x, r7.w, cb1[9].x
mul r9.y, r7.w, cb1[10].x
mul r9.z, r7.w, cb1[11].x
mul r9.w, r7.w, cb1[12].x
dp4 r10.x, r9.xyzw, cb1[17].xyzw
dp4 r10.y, r9.xyzw, cb1[18].xyzw
dp4 r10.z, r9.xyzw, cb1[19].xyzw
add r8.xyz, cb1[174].xyz, r10.xyz

ftoi r0.xy, v3.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.z, r0.xyzw, t1.yzxw, v4.y
lt r1.x, r0.z, l(1.000000)
mov r0.yw, l(0,1.000000,0,1.000000)
dp2 r1.y, r0.zwzz, cb1[11].zwzz
dp2 r0.z, r0.zwzz, cb1[12].zwzz
div r0.z, -r1.y, r0.z
div r0.x, v2.x, v2.y
dp2 r0.w, r0.xyxx, cb1[11].zwzz
dp2 r0.x, r0.xyxx, cb1[12].zwzz
div r0.x, -r0.w, r0.x
add r0.x, -r0.x, r0.z
add r0.x, r0.x, l(-4.000000)
lt r0.x, r0.x, l(0.000000)
and r0.x, r1.x, r0.x
discard_nz r0.x
mov o0.w, l(1.000000)
iadd r0.x, cb3[35].x, l(4)
iadd r0.y, -cb3[35].x, l(9)
ult r0.z, cb3[35].x, l(2)
movc r0.x, r0.z, r0.x, r0.y
add r0.yzw, l(0.000000, -1.000000, -1.000000, -1.000000), cb0[r0.x + 4].xxyz
mul r1.x, v1.w, cb0[3].x
mad r0.yzw, r1.xxxx, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v0.xyxx, t2.wxyz, s0
mad r1.yzw, r1.yyzw, cb3[34].xxyz, cb3[33].xxyz
add r1.yzw, r1.yyzw, r1.yyzw
mul r2.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xyzw, r2.xyxy, cb3[0].xyzw
mul r2.xy, r2.xyxx, cb3[26].xyxx
deriv_rtx_coarse r4.x, v1.x
mov r2.z, -v1.y
deriv_rtx_coarse r4.y, r2.z
deriv_rty_coarse r4.w, r2.z
mul r5.xyzw, r4.xyxy, cb3[0].xyzw
deriv_rty_coarse r4.z, v1.x
mul r6.xyzw, r4.zwzw, cb3[0].xyzw
mul r4.xyzw, r4.xyzw, cb3[26].xyxy
sample_d_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t5.xyzw, s4, r4.xyxx, r4.zwzz
sample_d_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t3.xyzw, s3, r5.xyxx, r6.xyxx
sample_d_indexable(texture2d)(float,float,float,float) r2.zw, r3.zwzz, t4.zwxy, s5, r5.zwzz, r6.zwzz
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.zwzz, t6.xyzw, s1
mad r1.yzw, r4.xxyz, r1.yyzw, -r3.xxyz
mad_sat r3.w, v2.z, cb2[0].x, cb2[0].y
mad r1.yzw, r3.wwww, r1.yyzw, r3.xxyz
mul o0.xyz, r0.yyyy, r1.yzwy
dp2 r0.y, r2.zwzz, r2.zwzz
mul r3.xy, r2.zwzz, cb3[21].xxxx
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
sqrt r3.z, r0.y
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v0.zwzz, t7.wxyz, s2
mad r4.xy, r1.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.y, r4.xyxx, r4.xyxx
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
sqrt r4.z, r0.y
mad r0.y, r0.y, l(2.000000), l(-1.000000)
max r0.y, r0.y, l(0.000000)
mul r0.y, r1.x, r0.y
mul r1.xyz, r4.yzxy, l(1.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyz, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), -r1.xyzx
dp2 r2.z, r1.xzxx, r1.xzxx
rsq r2.z, r2.z
mul r1.xyz, r1.yxzy, r2.zzzz
mul r5.xyz, r4.yzxy, r1.yxzy
mad r5.xyz, r1.zyxz, r4.zxyz, -r5.xyzx
dp3 r2.z, r5.xyzx, r5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, r5.xyzx
mov r6.x, r5.y
mov r6.y, r1.z
mov r6.z, r4.y
dp3 r6.y, r3.xyzx, r6.xyzx
mov r1.x, r5.z
mov r1.z, r4.z
dp3 r6.z, r3.xyzx, r1.xyzx
mov r5.w, r4.x
dp2 r6.x, r3.xzxx, r5.xwxx
dp3 r1.x, r6.xyzx, r6.xyzx
rsq r1.x, r1.x
mad r3.xyz, r6.xyzx, r1.xxxx, -r4.xyzx
mul r1.xyz, r1.xxxx, r6.xyzx
mad r3.xyz, r3.wwww, r3.xyzx, r4.xyzx
lt r2.z, r3.w, l(1.000000)
movc r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
add r1.xyz, -r4.xyzx, r1.xyzx
mad r1.xyz, r0.wwww, r1.xyzx, r4.xyzx
mul r3.xy, v1.xyxx, cb1[180].wwww
mov r3.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r3.xy, r3.xyzx, t0.xyzw, s6
mul r0.yw, r0.yyyy, r3.xxxy
mad o1.xy, r0.ywyy, cb0[r0.x + 4].wwww, r1.xyxx
mov o1.z, r1.z
mov o1.w, l(0.0000152587891)
eq r0.xy, cb3[7].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xy, r0.xyxx, cb3[14].xyxx, r2.xyxx
mad r0.w, -r1.w, l(0.200000), r0.x
mul r1.x, r1.w, l(0.200000)
mad r1.y, r1.w, l(-0.149999976), l(1.000000)
mad r2.x, r3.w, r0.w, r1.x
add r0.w, r0.y, -r1.y
mad r2.y, r3.w, r0.w, r1.y
movc r1.xy, r2.zzzz, r2.xyxx, r0.xyxx
mul r1.z, r0.z, r1.y
mov r1.w, l(0)
mov o2.xyzw, r1.xzww
ret 
// Approximately 110 instruction slots used