// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 484f6e884dcfb30a-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Sun Jun 25 04:49:15 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global__PreIntegratedSkinDiffuseTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// LongRangeShadowSampler          sampler_c      NA          NA    4        1
// Global__PreIntegratedSkinDiffuseTexture__TexObj__    texture  float4          2d    0        1
// Global__IBLBRDFTexture            texture  float2          2d    1        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    2        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    3        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    4        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    5        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    6        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    7        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    8        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    9        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS   10        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[55], dynamicIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecubearray (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2dms(0) (float,float,float,float) t7
dcl_resource_texture2dms(0) (float,float,float,float) t8
dcl_resource_texture2dms(0) (float,float,float,float) t9
dcl_resource_texture2dms(0) (float,float,float,float) t10
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 27
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r23.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 484f6e884dcfb30a-ps.txt

mul r23.w, r23.x, r23.y
mul r25.x, r23.w, cb1[9].x
mul r25.y, r23.w, cb1[10].x
mul r25.z, r23.w, cb1[11].x
mul r25.w, r23.w, cb1[12].x
dp4 r26.x, r25.xyzw, cb1[17].xyzw
dp4 r26.y, r25.xyzw, cb1[18].xyzw
dp4 r26.z, r25.xyzw, cb1[19].xyzw
add r24.xyz, cb1[174].xyz, r26.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.z, r0.xyww, t8.yzxw, l(0)
mad r2.xy, v0.xyxx, cb1[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[9].xyzw
dp4 r2.y, r1.xyzw, cb1[10].xyzw
dp4 r2.z, r1.xyzw, cb1[11].xyzw
dp4 r2.w, r1.xyzw, cb1[12].xyzw
div r1.xyzw, r2.xyzw, r2.wwww

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 484f6e884dcfb30a-ps.txt

add r23.w, -r1.z, -r23.y
mul r23.w, r23.w, r23.x
mad r1.x, -r23.w, cb1[9].x, r1.x

dp4 r2.x, r1.xyzw, cb1[17].xyzw
dp4 r2.y, r1.xyzw, cb1[18].xyzw
dp4 r2.z, r1.xyzw, cb1[19].xyzw
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r0.xyww, t7.wxyz, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r0.xyww, t9.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r4.xyzw, r0.xyzw, t10.zyxw, l(0)
mad r0.z, r4.w, l(255.000000), l(0.500000)
round_ni r0.z, r0.z
ftou r0.z, r0.z
ushr r0.z, r0.z, l(5)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r3.xyzx
ieq r6.xyz, r0.zzzz, l(1, 4, 0, 0)
ge r0.w, r1.x, l(0.750000)
add r5.w, r1.x, l(-0.750000)
mad r5.w, r5.w, l(-0.599999905), l(1.000000)
movc r0.w, r0.w, r5.w, l(1.000000)
movc r0.w, r6.y, r0.w, r1.x
movc r0.w, r6.x, l(1.000000), r0.w
add r7.xyz, -r2.xyzx, r24.xyzx
dp3 r5.w, r7.xyzx, r7.xyzx
rsq r5.w, r5.w
mul r8.xyz, r5.wwww, r7.xyzx
mul r9.yzw, r0.wwww, r1.yyzw
if_nz r6.x
  mad r1.w, r3.w, l(0.500000), l(0.500000)
  mad r1.w, r1.w, l(65535.000000), l(0.500000)
  ftou r1.w, r1.w
  and r10.xy, r1.wwww, l(255, 0x0000ff00, 0, 0)
  utof r10.xy, r10.xyxx
  mul r10.xz, r10.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r1.w, r1.x, l(255.000000)
  ftou r1.w, r1.w
  and r11.xy, r1.wwww, l(15, 240, 0, 0)
  utof r11.xy, r11.xyxx
  mul r10.yw, r11.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r11.w, l(0)
  mov r9.x, r9.y
  mov r12.x, l(0)
else 
  mul r1.w, r4.y, r4.y
  max r4.y, r1.w, l(0.001000)
  ieq r1.w, r0.z, l(2)
  if_nz r1.w
    mad r1.w, r3.w, l(0.500000), l(0.500000)
    mad r1.w, r1.w, l(65535.000000), l(0.500000)
    ftou r1.w, r1.w
    and r13.xy, r1.wwww, l(255, 0x0000ff00, 0, 0)
    utof r13.xy, r13.xyxx
    mov r13.z, r4.z
    mad r13.xyz, r13.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r1.w, -r1.x, l(1.000000)
    mul r1.w, r1.w, r9.y
    mad r9.x, r1.w, l(0.500000), r9.y
    dp3 r1.w, r13.xyzx, r13.xyzx
    rsq r1.w, r1.w
    mul r10.xzw, r1.wwww, r13.xxyz
    mov r10.y, l(0)
    mov r4.z, l(0.500000)
    mov r11.w, l(0)
    mov r12.x, l(0)
  else 
    ieq r1.w, r0.z, l(3)
    if_nz r1.w
      mad r1.w, r3.w, l(0.500000), l(0.500000)
      mad r1.w, r1.w, l(65535.000000), l(0.500000)
      ftou r1.w, r1.w
      and r13.xyzw, r1.wwww, l(0x0000f800, 2016, 31, 31)
      utof r13.xyzw, r13.xyzw
      ge r14.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r13.wyxw
      mul r1.w, r13.w, l(0.00249675405)
      mad r15.xyz, r13.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r15.xyz, r15.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r15.xyz, r15.xyzx
      movc r10.x, r14.x, r1.w, r15.x
      mul r13.xy, r13.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r10.zw, r14.yyyz, r13.xxxy, r15.yyyz
      mov r10.y, l(0)
      mov r11.w, l(0)
      mov r12.x, l(0)
    else 
      if_nz r6.y
        mad r1.w, r3.w, l(32767.000000), l(32767.000000)
        ftou r1.w, r1.w
        and r6.w, r1.w, l(255)
        utof r6.w, r6.w
        mul r6.w, r6.w, l(0.0123199718)
        ubfe r1.w, l(8), l(8), r1.w
        utof r1.w, r1.w
        mad r1.w, r1.w, l(0.0246399436), l(-3.14159274)
        sincos r13.x, r14.x, r6.w
        sincos r15.x, r16.x, r1.w
        mul r16.x, r13.x, r16.x
        mul r16.y, r13.x, r15.x
        mov r16.z, r14.x
        dp3 r1.w, r16.xyzx, r16.xyzx
        rsq r1.w, r1.w
        mul r10.xzw, r1.wwww, r16.xxyz
        mul_sat r11.w, r1.x, l(0.250000)
        mov r10.y, l(0)
        mov r12.x, l(0)
      else 
        ieq r1.w, r0.z, l(5)
        lt r6.w, r3.z, l(0.900000)
        movc r13.xyz, r6.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
        mul r14.xyz, r3.zxyz, r13.xyzx
        mad r13.xyz, r3.yzxy, r13.yzxy, -r14.xyzx
        dp3 r6.w, r13.xyzx, r13.xyzx
        rsq r6.w, r6.w
        mul r13.xyz, r6.wwww, r13.xyzx
        mul r14.xyz, r3.zxyz, r13.yzxy
        mad r3.xyz, r3.yzxy, r13.zxyz, -r14.xyzx
        dp3 r6.w, r3.xyzx, r3.xyzx
        rsq r6.w, r6.w
        mul r3.xyz, r3.xyzx, r6.wwww
        mad r6.w, r3.w, l(2.000000), l(-1.000000)
        mul r6.w, r6.w, l(3.14159274)
        sincos r14.x, r15.x, r6.w
        mul r13.xyz, r13.xyzx, r14.xxxx
        mad r13.xyz, r3.xyzx, r15.xxxx, r13.xyzx
        mad r3.x, r3.w, l(0.500000), l(0.500000)
        mad r3.x, r3.x, l(65535.000000), l(0.500000)
        ftou r3.x, r3.x
        and r3.xy, r3.xxxx, l(255, 0x0000ff00, 0, 0)
        utof r3.xy, r3.xyxx
        mul r3.x, r3.x, l(0.00392156886)
        mad r3.z, r3.y, l(0.0000306372567), l(-1.000000)
        movc r3.xy, r0.zzzz, l(0,0,0,0), r3.xzxx
        mov r13.w, r4.x
        mov r3.z, l(0)
        movc r10.xyzw, r1.wwww, r13.xwyz, r3.xzzz
        mov r1.yz, l(0,0,0,0)
        mov r3.w, r13.w
        movc r12.xyz, r1.wwww, r1.zxyz, r3.yzwy
        mov r11.w, r12.y
        mov r4.x, r12.z
      endif 
    endif 
    mov r9.x, r9.y
  endif 
endif 
mov r1.xyzw, l(0,0,0,3)
mov r3.zw, l(0,0,0,0)
loop 
  uge r6.w, r3.w, l(4)
  breakc_nz r6.w
  ishl r6.w, r3.w, l(2)
  mul r12.yzw, r2.yyyy, cb3[r6.w + 1].xxyz
  mad r12.yzw, cb3[r6.w + 0].xxyz, r2.xxxx, r12.yyzw
  mad r12.yzw, cb3[r6.w + 2].xxyz, r2.zzzz, r12.yyzw
  add r12.yzw, r12.yyzw, cb3[r6.w + 3].xxyz
  max r6.w, |r12.z|, |r12.y|
  add r6.w, r6.w, cb3[16].x
  ult r7.w, r3.w, l(3)
  if_nz r7.w
    lt r7.w, r6.w, l(1.000000)
    if_nz r7.w
      mov r1.xy, r12.yzyy
      mov r3.z, r12.w
      mov r1.z, r6.w
      mov r1.w, r3.w
      break 
    endif 
  endif 
  iadd r3.w, r3.w, l(1)
  mov r1.xy, r12.yzyy
  mov r3.z, r12.w
  mov r1.z, r6.w
  mov r1.w, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r13.x, x0[r1.w + 0].z
mov r13.yzw, l(0,0.500000,0,0)
mad r3.xy, r1.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r13.xyxx
dp4 r1.x, cb3[17].xyzw, icb[r1.w + 0].xyzw
ieq r1.y, r1.w, l(3)
mad_sat r1.z, r1.z, cb3[16].z, cb3[16].w
and r1.y, r1.z, r1.y
and r13.xy, r0.xyxx, l(63, 63, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r0.xy, r13.xyzw, t2.xyzw
mad r0.xy, r0.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, r0.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r13.xy, r0.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r1.zwzz
dp2 r13.z, r0.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r1.xz, r1.xxxx, cb3[38].zzwz
mul r14.xy, r1.xzxx, r13.xzxx
mov r14.z, l(0)
add r12.yzw, r3.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r12.yzyy, t5.xxxx, s3, r12.w
dp2 r13.w, r0.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r13.xy, r1.xzxx, r13.ywyy
mov r13.z, l(0)
add r12.yzw, r3.xxyz, r13.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r12.yzyy, t5.xxxx, s3, r12.w
add r1.w, r1.w, r3.w
mul r12.yz, r0.xxxx, l(0.000000, -0.602610528, 0.987966299, 0.000000)
mad r13.xy, r0.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r12.yzyy
dp2 r13.z, r0.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r14.xy, r1.xzxx, r13.xzxx
mov r14.z, l(0)
add r12.yzw, r3.xxyz, r14.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r12.yzyy, t5.xxxx, s3, r12.w
add r1.w, r1.w, r3.w
dp2 r13.w, r0.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r13.xy, r1.xzxx, r13.ywyy
mov r13.z, l(0)
add r3.xyz, r3.xyzx, r13.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.x, r3.xyxx, t5.xxxx, s3, r3.z
add r0.x, r0.x, r1.w
mul r0.y, r0.x, l(0.250000)
mad r1.xz, r5.xxyx, cb4[0].xxyx, r2.xxyx
mad r1.w, r2.z, cb4[0].z, cb4[0].w
mad r1.xz, r1.xxzx, cb4[1].xxyx, cb4[1].zzwz
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t6.xxxx, s4, r1.w
mad r0.x, -r0.x, l(0.250000), r1.x
mad r0.x, r1.y, r0.x, r0.y
dp3 r0.y, r2.xyzx, cb0[1].xyzx
add_sat r0.y, r0.y, cb0[1].w
mul r0.x, r0.y, r0.x
mad r0.x, r0.x, cb3[37].x, cb3[37].y
lt r0.y, l(0.000000), r0.x
lt r1.x, l(0.000000), r10.x
and r1.x, r1.x, r6.z
or r0.y, r0.y, r1.x
if_nz r0.y
  dp3 r1.w, cb2[0].xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  dp3 r0.y, r5.xyzx, cb2[2].xyzx
  mov_sat r3.x, r0.y
  ieq r3.y, r0.z, l(2)
  dp3 r3.z, r10.xzwx, r10.xzwx
  rsq r3.z, r3.z
  mul r12.yzw, r3.zzzz, r10.xxzw
  dp3 r3.z, r12.yzwy, cb2[2].xyzx
  add r3.z, r3.z, l(1.000000)
  mul_sat r3.z, r3.z, l(0.500000)
  mul r3.w, r3.z, r3.z
  mul r3.z, r3.w, r3.z
  movc r12.yzw, r3.yyyy, r10.xxzw, r5.xxyz
  movc r3.z, r3.y, r3.z, r3.x
  if_nz r6.x
    mov_sat r13.xyzw, r10.xyzw
    mov_sat r6.zw, r4.xxxy
    log r14.xyz, r9.xzwx
    mul r15.xyz, r13.yyyy, r14.xyzx
    mul r15.xyz, r15.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r14.xyz, r14.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r15.xyzx
    eq r3.w, r13.x, l(0.000000)
    add r7.w, -r6.z, l(1.000000)
    mul r15.xyz, r7.wwww, r9.xzwx
    mul r15.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r16.xyz, -r13.xxxx, r14.xyzx
    exp r16.xyz, r16.xyzx
    mul r16.xyz, r15.xyzx, r16.xyzx
    mul r16.xyz, r16.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r15.xyz, r3.wwww, r15.xyzx, r16.xyzx
    mov r15.w, l(0.180000)
    mul r7.w, r13.w, l(0.080000)
    mad r8.w, r13.x, l(48.750000), l(1.250000)
    mul r6.w, r6.w, r6.w
    max r6.w, r6.w, l(0.001000)
    mul r9.y, r13.z, r13.z
    max r9.y, r9.y, l(0.001000)
    lt r13.x, l(0.000000), r0.y
    lt r13.y, r0.y, l(0.000000)
    iadd r13.x, -r13.x, r13.y
    itof r13.x, r13.x
    mad r13.y, r0.y, r0.y, l(-1.000000)
    mad r13.y, r13.y, l(0.666860044), l(1.000000)
    sqrt r13.y, r13.y
    mul r13.x, r13.y, r13.x
    mad r0.y, r0.y, l(0.666860044), -r13.x
    mul r13.xyz, cb2[2].xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r13.xyz, r0.yyyy, r5.xyzx, -r13.xyzx
    add r16.xyz, -r13.xyzx, -cb2[2].xyzx
    mad r13.xyz, r6.wwww, r16.xyzx, r13.xyzx
    dp3 r0.y, r13.xyzx, r13.xyzx
    rsq r0.y, r0.y
    mul r16.xyz, r0.yyyy, r13.xyzx
    dp3 r14.w, r8.xyzx, r5.xyzx
    lt r16.w, l(0.000000), r14.w
    lt r17.x, r14.w, l(0.000000)
    iadd r16.w, -r16.w, r17.x
    itof r16.w, r16.w
    mad r17.x, r14.w, r14.w, l(-1.000000)
    mad r17.x, r17.x, l(0.666860044), l(1.000000)
    sqrt r17.x, r17.x
    mul r16.w, r16.w, r17.x
    mad r16.w, r14.w, l(0.666860044), -r16.w
    mul r17.xyz, r8.xyzx, l(0.666860044, 0.666860044, 0.666860044, 0.000000)
    mad r17.xyz, r16.wwww, r5.xyzx, -r17.xyzx
    mad r18.xyz, -r7.xyzx, r5.wwww, -r17.xyzx
    mad r17.xyz, r6.wwww, r18.xyzx, r17.xyzx
    dp3 r16.w, r17.xyzx, r17.xyzx
    rsq r16.w, r16.w
    mul r17.xyz, r16.wwww, r17.xyzx
    dp3 r16.w, r5.xyzx, r16.xyzx
    mad r16.w, -|r16.w|, |r16.w|, l(1.000000)
    mad r16.w, -r16.w, l(0.444702327), l(1.000000)
    add r8.w, r8.w, r8.w
    sqrt r16.w, r16.w
    div r8.w, r8.w, r16.w
    mov_sat r14.w, r14.w
    mad r18.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
    dp3 r16.w, r18.xyzx, r18.xyzx
    rsq r16.w, r16.w
    mul r18.xyz, r16.wwww, r18.xyzx
    dp3_sat r16.w, r5.xyzx, r18.xyzx
    mul r17.w, r6.w, r6.w
    mul r16.w, r16.w, r16.w
    mad r18.x, r6.w, r6.w, l(-1.000000)
    mad r16.w, r16.w, r18.x, l(1.000000)
    mul r16.w, r16.w, r16.w
    mul r16.w, r16.w, l(3.14159274)
    div r16.w, r17.w, r16.w
    mad r6.w, r6.w, l(0.500000), l(0.500000)
    mul r17.w, r3.x, r3.x
    mul r6.w, r6.w, r6.w
    mad r18.x, -r3.x, r3.x, l(1.000000)
    mul r18.x, r6.w, r18.x
    max r17.w, r17.w, l(1.000000047E-034)
    div r17.w, r18.x, r17.w
    add r17.w, r17.w, l(1.000000)
    sqrt r17.w, r17.w
    add r17.w, r17.w, l(1.000000)
    div r17.w, l(2.000000), r17.w
    mul r18.x, r14.w, r14.w
    mad r14.w, -r14.w, r14.w, l(1.000000)
    mul r6.w, r6.w, r14.w
    max r14.w, r18.x, l(1.000000047E-034)
    div r6.w, r6.w, r14.w
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    div r6.w, l(2.000000), r6.w
    mul r6.w, r6.w, r17.w
    mad r18.xyz, r3.xxxx, r3.xxxx, l(1.24869561, 1.24878526, 1.24869561, 0.000000)
    sqrt r18.xyz, r18.xyzx
    add r19.xyz, -r3.xxxx, r18.zyzz
    add r18.xyz, r3.xxxx, r18.xyzx
    mul r20.xyz, r19.zyzz, r19.zyzz
    mul r21.xyz, r18.zyzz, r18.zyzz
    add r21.xyz, r21.xyzx, r21.xyzx
    div r20.xyz, r20.xyzx, r21.xyzx
    mad r18.xyz, r3.xxxx, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r19.xyz, r3.xxxx, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r18.xyz, r18.xyzx, r19.xyzx
    mad r18.xyz, r18.xyzx, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r18.xyz, r18.xyzx, r20.xyzx
    mul r6.w, r6.w, r16.w
    mul r18.xyz, r18.xyzx, r6.wwww
    mad r19.xyz, -r13.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
    mad r19.xyz, r6.zzzz, r19.xyzx, r7.wwww
    dp3_sat r6.z, r5.xyzx, -r17.xyzx
    mad r13.xyz, -r13.xyzx, r0.yyyy, -r17.xyzx
    dp3 r0.y, r13.xyzx, r13.xyzx
    rsq r0.y, r0.y
    mul r13.xyz, r0.yyyy, r13.xyzx
    dp3 r0.y, r13.xyzx, -r16.xyzx
    dp3_sat r6.w, r5.xyzx, -r16.xyzx
    dp3_sat r7.w, r5.xyzx, r13.xyzx
    mul r13.x, r9.y, r9.y
    mul r7.w, r7.w, r7.w
    mad r13.y, r9.y, r9.y, l(-1.000000)
    mad r7.w, r7.w, r13.y, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r13.x, r7.w
    mad r9.y, r9.y, l(0.500000), l(0.500000)
    mul r13.x, r6.w, r6.w
    mul r9.y, r9.y, r9.y
    mad r6.w, -r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r9.y
    max r13.x, r13.x, l(1.000000047E-034)
    div r6.w, r6.w, r13.x
    add r6.w, r6.w, l(1.000000)
    sqrt r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    mul r13.x, r6.z, r6.z
    mad r6.z, -r6.z, r6.z, l(1.000000)
    mul r6.z, r6.z, r9.y
    max r9.y, r13.x, l(1.000000047E-034)
    div r6.z, r6.z, r9.y
    add r6.z, r6.z, l(1.000000)
    sqrt r6.z, r6.z
    add r6.z, r6.z, l(1.000000)
    div r6.zw, l(0.000000, 0.000000, 2.000000, 2.000000), r6.zzzw
    mul r6.z, r6.z, r6.w
    dp3 r6.w, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r6.w, r6.w, l(50.000000)
    add r0.y, -r0.y, l(1.000000)
    mul r9.y, r0.y, r0.y
    mul r9.y, r9.y, r9.y
    add r13.xyz, -r19.xyzx, r6.wwww
    mul r13.xyz, r9.yyyy, r13.xyzx
    mad r13.xyz, r13.xyzx, r0.yyyy, r19.xyzx
    mul r0.y, r6.z, r7.w
    mul r13.xyz, r13.xyzx, r0.yyyy
    mul r14.xyz, r8.wwww, -r14.xyzx
    exp r14.xyz, r14.xyzx
    mad r14.xyz, r13.xyzx, r14.xyzx, r18.xyzx
    movc r13.xyz, r3.wwww, r13.xyzx, r14.xyzx
    dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mov r14.xyzw, l(0,0,0,0)
  else 
    if_nz r3.y
      mul r16.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r16.w, l(0.0572957806)
      add r0.y, -r4.x, l(1.000000)
      mul r15.xyzw, r0.yyyy, r16.xyzw
    else 
      ieq r0.y, r0.z, l(3)
      if_nz r0.y
        mad r16.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
        dp3 r0.y, r16.xyzx, r16.xyzx
        rsq r0.y, r0.y
        mul r16.xyz, r0.yyyy, r16.xyzx
        dp3_sat r0.y, r16.xyzx, r8.xyzx
        mul r3.w, r4.z, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r6.z, r0.y, r0.y
        mul r6.z, r6.z, r6.z
        mad r6.w, -r4.z, l(0.080000), l(1.000000)
        mul r6.z, r6.z, r6.w
        mad r0.y, r6.z, r0.y, r3.w
        add_sat r3.w, r4.y, r4.y
        mad r16.w, r3.w, -r0.y, l(1.000000)
        mul r16.xyz, r9.xzwx, r16.wwww
        mul r15.xyzw, r16.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        if_nz r6.y
          add r16.xyz, -r10.xzwx, r12.yzwy
          mad r17.xyz, r16.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r10.xzwx
          dp3 r0.y, r17.xyzx, r17.xyzx
          rsq r0.y, r0.y
          mul r17.xyz, r0.yyyy, r17.xyzx
          mad r16.xyz, r16.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r10.xzwx
          dp3 r0.y, r16.xyzx, r16.xyzx
          rsq r0.y, r0.y
          mul r16.xyz, r0.yyyy, r16.xyzx
          dp3 r0.y, r10.xzwx, cb2[2].xyzx
          dp3 r3.w, r17.xyzx, cb2[2].xyzx
          dp3 r6.z, r16.xyzx, cb2[2].xyzx
          mad r11.z, r0.y, l(0.500000), l(0.500000)
          mad r16.xy, r11.zwzz, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250000, 0.00781250000, 0.000000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.x, r16.xyxx, t0.xyzw, s0, l(0.000000)
          mad r11.y, r3.w, l(0.500000), l(0.500000)
          mad r11.yz, r11.yywy, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250000, 0.00781250000, 0.000000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.y, r11.yzyy, t0.xyzw, s0, l(0.000000)
          mad r11.x, r6.z, l(0.500000), l(0.500000)
          mad r6.zw, r11.xxxw, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250000, 0.00781250000)
          sample_l_indexable(texture2d)(float,float,float,float) r16.z, r6.zwzz, t0.xyzw, s0, l(0.000000)
          mul r16.xyz, r9.xzwx, r16.xyzx
          mov r16.w, l(0.0572957806)
          mul r15.xyzw, r16.xyzw, l(0.318309873, 0.318309873, 0.318309873, 1.000000)
        else 
          ieq r0.y, r0.z, l(5)
          dp3 r3.w, r10.xzwx, cb2[2].xyzx
          mad r3.w, -r3.w, r3.w, l(1.000000)
          sqrt r3.w, r3.w
          mul r16.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r16.w, l(0.0572957806)
          add r6.z, -r4.x, l(1.000000)
          mul r16.xyzw, r6.zzzz, r16.xyzw
          mul r17.xyzw, r3.wwww, r16.xyzw
          mul r17.xyzw, r17.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
          add r3.w, -r10.y, l(1.000000)
          mul r17.xyzw, r3.wwww, r17.xyzw
          movc r15.xyzw, r0.yyyy, r17.xyzw, r16.xyzw
        endif 
      endif 
    endif 
    if_nz r3.y
      mul r0.y, r4.z, l(0.080000)
      mad r11.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
      mad r11.xyz, r4.xxxx, r11.xyzx, r0.yyyy
      dp3_sat r0.y, r5.xyzx, r8.xyzx
      mad r16.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
      dp3 r3.w, r16.xyzx, r16.xyzx
      rsq r3.w, r3.w
      mul r16.xyz, r3.wwww, r16.xyzx
      dp3 r3.w, r16.xyzx, cb2[2].xyzx
      dp3_sat r6.z, r5.xyzx, r16.xyzx
      mul r6.w, r4.y, r4.y
      mul r6.z, r6.z, r6.z
      mad r7.w, r4.y, r4.y, l(-1.000000)
      mad r6.z, r6.z, r7.w, l(1.000000)
      mul r6.z, r6.z, r6.z
      mul r6.z, r6.z, l(3.14159274)
      div r6.z, r6.w, r6.z
      mad r6.w, r4.y, l(0.500000), l(0.500000)
      mul r7.w, r3.x, r3.x
      mul r6.w, r6.w, r6.w
      mad r8.w, -r3.x, r3.x, l(1.000000)
      mul r8.w, r6.w, r8.w
      max r7.w, r7.w, l(1.000000047E-034)
      div r7.w, r8.w, r7.w
      add r7.w, r7.w, l(1.000000)
      sqrt r7.w, r7.w
      add r7.w, r7.w, l(1.000000)
      div r7.w, l(2.000000), r7.w
      mul r8.w, r0.y, r0.y
      mad r0.y, -r0.y, r0.y, l(1.000000)
      mul r0.y, r0.y, r6.w
      max r6.w, r8.w, l(1.000000047E-034)
      div r0.y, r0.y, r6.w
      add r0.y, r0.y, l(1.000000)
      sqrt r0.y, r0.y
      add r0.y, r0.y, l(1.000000)
      div r0.y, l(2.000000), r0.y
      mul r0.y, r0.y, r7.w
      dp3 r6.w, r11.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r6.w, r6.w, l(50.000000)
      add r3.w, -r3.w, l(1.000000)
      mul r7.w, r3.w, r3.w
      mul r7.w, r7.w, r7.w
      add r16.xyz, -r11.xyzx, r6.wwww
      mul r16.xyz, r7.wwww, r16.xyzx
      mad r11.xyz, r16.xyzx, r3.wwww, r11.xyzx
      mul r0.y, r0.y, r6.z
      mul r13.xyz, r11.xyzx, r0.yyyy
      dp3 r13.w, r13.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    else 
      ieq r0.y, r0.z, l(3)
      if_nz r0.y
        mad r11.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
        dp3 r0.y, r11.xyzx, r11.xyzx
        rsq r0.y, r0.y
        mul r11.xyz, r0.yyyy, r11.xyzx
        dp3_sat r0.y, r11.xyzx, r8.xyzx
        mul r3.w, r4.z, l(0.080000)
        add r0.y, -r0.y, l(1.000000)
        mul r6.z, r0.y, r0.y
        mul r6.z, r6.z, r6.z
        mad r6.w, -r4.z, l(0.080000), l(1.000000)
        mul r6.z, r6.z, r6.w
        mad r0.y, r6.z, r0.y, r3.w
        dp3_sat r3.w, r5.xyzx, r11.xyzx
        mul r6.z, r3.w, r3.w
        mad r11.xy, -r3.wwww, r3.wwww, l(1.000001, 1.000000, 0.000000, 0.000000)
        div r6.z, r6.z, r11.x
        mul r6.w, r11.y, r11.y
        mul r7.w, r4.y, r4.y
        mad r11.xy, r4.yyyy, r4.yyyy, l(0.000001, 0.000002, 0.000000, 0.000000)
        mad r8.w, r11.x, l(4.000000), l(1.000000)
        mul r8.w, r8.w, l(3.14159274)
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        div r6.z, -r6.z, r11.y
        mul r6.z, r6.z, l(1.442695)
        exp r6.z, r6.z
        mul r6.z, r6.z, l(4.000000)
        div r6.z, r6.z, r6.w
        add r6.z, r6.z, l(1.000000)
        mul r6.z, r6.z, r8.w
        dp3_sat r6.w, r5.xyzx, r8.xyzx
        add r8.w, r3.x, r6.w
        mad r6.w, -r3.x, r6.w, r8.w
        mul r6.w, r6.w, l(4.000000)
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        mov_sat r6.w, r6.w
        div r7.w, l(2.000000), r7.w
        add r7.w, r7.w, l(-2.000000)
        max r7.w, r7.w, l(1.000000031E-022)
        log r3.w, r3.w
        mul r3.w, r3.w, r7.w
        exp r3.w, r3.w
        add r7.w, r7.w, l(8.000000)
        mul r3.w, r3.w, r7.w
        mul r3.w, r3.w, l(0.0397887342)
        min r3.w, r3.w, l(1.000000)
        add_sat r7.w, r4.y, r4.y
        mad r6.z, r6.z, r6.w, -r3.w
        mad r3.w, r7.w, r6.z, r3.w
        mul r16.xyz, r0.yyyy, r3.wwww
        dp3 r16.w, r16.zzzz, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
        mov r17.xyz, r10.xzwx
        mov r17.w, l(1.000000)
        mul r13.xyzw, r16.xyzw, r17.xyzw
      else 
        if_nz r6.y
          mul r6.zw, r4.zzzy, l(0.000000, 0.000000, 0.080000, 0.400000)
          mad r11.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r11.xyz, r4.xxxx, r11.xyzx, r6.zzzz
          dp3_sat r0.y, r5.xyzx, r8.xyzx
          mad r16.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
          dp3 r3.w, r16.xyzx, r16.xyzx
          rsq r3.w, r3.w
          mul r16.xyz, r3.wwww, r16.xyzx
          dp3 r3.w, r16.xyzx, cb2[2].xyzx
          dp3_sat r6.z, r5.xyzx, r16.xyzx
          mul r7.w, r4.y, r4.y
          mul r6.z, r6.z, r6.z
          mad r8.w, r4.y, r4.y, l(-1.000000)
          mad r8.w, r6.z, r8.w, l(1.000000)
          mul r8.w, r8.w, r8.w
          mul r8.w, r8.w, l(3.14159274)
          div r7.w, r7.w, r8.w
          mad r16.xy, r4.yyyy, l(0.500000, 0.200000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mul r8.w, r3.x, r3.x
          mul r16.xy, r16.xyxx, r16.xyxx
          mad r9.y, -r3.x, r3.x, l(1.000000)
          mul r16.zw, r9.yyyy, r16.xxxy
          max r8.w, r8.w, l(1.000000047E-034)
          div r16.zw, r16.zzzw, r8.wwww
          add r16.zw, r16.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          sqrt r16.zw, r16.zzzw
          add r16.zw, r16.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
          mul r8.w, r0.y, r0.y
          mad r0.y, -r0.y, r0.y, l(1.000000)
          mul r16.xy, r0.yyyy, r16.xyxx
          max r0.y, r8.w, l(1.000000047E-034)
          div r16.xy, r16.xyxx, r0.yyyy
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          sqrt r16.xy, r16.xyxx
          add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          div r16.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r16.xyzw
          mul r16.xy, r16.xyxx, r16.zwzz
          dp3 r0.y, r11.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r0.y, r0.y, l(50.000000)
          add r3.w, -r3.w, l(1.000000)
          mul r8.w, r3.w, r3.w
          mul r8.w, r8.w, r8.w
          add r17.xyz, -r11.xyzx, r0.yyyy
          mul r17.xyz, r8.wwww, r17.xyzx
          mad r11.xyz, r17.xyzx, r3.wwww, r11.xyzx
          mul r0.y, r7.w, r16.x
          mul r17.xyz, r11.xyzx, r0.yyyy
          dp3 r17.w, r17.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r0.y, r6.w, r6.w
          mad r3.w, r6.w, r6.w, l(-1.000000)
          mad r3.w, r6.z, r3.w, l(1.000000)
          mul r3.w, r3.w, r3.w
          mul r3.w, r3.w, l(3.14159274)
          div r0.y, r0.y, r3.w
          mul r0.y, r16.y, r0.y
          mul r16.xyz, r11.xyzx, r0.yyyy
          dp3 r16.w, r16.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mul r16.xyzw, r16.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
          mad r13.xyzw, r17.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r16.xyzw
        else 
          ieq r0.y, r0.z, l(5)
          dp3_sat r3.w, r9.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r3.w, r3.w, l(1.66666663), l(1.33333337)
          mul r11.xyz, r4.yyyy, r10.xzwx
          mad r11.xyz, r11.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r5.xyzx
          div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
          dp3 r6.z, -cb2[2].xyzx, r11.xyzx
          mul r6.w, r3.w, r3.w
          mad r7.w, -r6.z, r6.z, l(1.000000)
          mad r7.w, -r6.w, r7.w, l(1.000000)
          sqrt r8.w, r7.w
          mad r6.z, r3.w, r6.z, -r8.w
          mul r16.xyz, r11.xyzx, r6.zzzz
          mad r16.xyz, r3.wwww, cb2[2].xyzx, r16.xyzx
          lt r6.z, l(0.000000), r7.w
          and r6.z, r6.z, l(0x3f800000)
          mul r17.xyz, r6.zzzz, r16.xyzx
          dp3 r7.w, -r8.xyzx, r11.xyzx
          mad r8.w, -r7.w, r7.w, l(1.000000)
          mad r6.w, -r6.w, r8.w, l(1.000000)
          sqrt r8.w, r6.w
          mad r7.w, r3.w, r7.w, -r8.w
          mul r11.xyz, r11.xyzx, r7.wwww
          mad r11.xyz, r3.wwww, r8.xyzx, r11.xyzx
          lt r3.w, l(0.000000), r6.w
          and r3.w, r3.w, l(0x3f800000)
          mul r11.xyz, r3.wwww, r11.xyzx
          mad r7.xyz, r7.xyzx, r5.wwww, cb2[2].xyzx
          dp3 r3.w, r7.xyzx, r7.xyzx
          rsq r3.w, r3.w
          mul r7.xyz, r3.wwww, r7.xyzx
          dp3_sat r3.w, r5.xyzx, r8.xyzx
          dp3_sat r5.w, r5.xyzx, r7.xyzx
          dp3 r6.w, r7.xyzx, cb2[2].xyzx
          mov_sat r7.w, r6.w
          dp3 r8.w, r7.xyzx, r10.xzwx
          mul r18.xyz, r5.yzxy, r10.wxzw
          mad r18.xyz, r10.zwxz, r5.zxyz, -r18.xyzx
          dp3 r9.y, r18.xyzx, r18.xyzx
          rsq r9.y, r9.y
          mul r18.xyz, r9.yyyy, r18.xyzx
          dp3 r7.x, r7.xyzx, r18.xyzx
          mul r7.yz, r4.zzyz, l(0.000000, 0.080000, 3.14159274, 0.000000)
          mad r19.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
          mad r19.xyz, r4.xxxx, r19.xyzx, r7.yyyy
          dp3 r7.y, r19.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
          mul_sat r7.y, r7.y, l(50.000000)
          add r7.w, -r7.w, l(1.000000)
          mul r9.y, r7.w, r7.w
          mul r9.y, r9.y, r9.y
          add r20.xyz, -r19.xyzx, r7.yyyy
          mul r21.xyz, r9.yyyy, r20.xyzx
          mad r21.xyz, r21.xyzx, r7.wwww, r19.xyzx
          mul r7.y, r4.y, r4.y
          mul r7.w, r5.w, r5.w
          mul r8.w, r8.w, r8.w
          div r8.w, r8.w, r7.y
          mad r7.x, r7.x, r7.x, r8.w
          mad r5.w, r5.w, r5.w, r7.x
          mul r5.w, r5.w, r5.w
          mul r5.w, r7.z, r5.w
          div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
          mul r7.x, r3.x, r3.x
          mad r8.w, -r3.x, r3.x, l(1.000000)
          mul r9.y, r7.y, r8.w
          max r7.x, r7.x, l(1.000000047E-034)
          div r9.y, r9.y, r7.x
          add r9.y, r9.y, l(1.000000)
          sqrt r9.y, r9.y
          add r9.y, r9.y, l(1.000000)
          div r9.y, l(2.000000), r9.y
          mul r16.w, r3.w, r3.w
          mad r3.w, -r3.w, r3.w, l(1.000000)
          mul r17.w, r3.w, r7.y
          max r16.w, r16.w, l(1.000000047E-034)
          div r17.w, r17.w, r16.w
          add r17.w, r17.w, l(1.000000)
          sqrt r17.w, r17.w
          add r17.w, r17.w, l(1.000000)
          div r17.w, l(2.000000), r17.w
          mul r9.y, r9.y, r17.w
          mul r5.w, r5.w, r9.y
          mul_sat r21.xyz, r21.xyzx, r5.wwww
          mul r21.xyz, r11.wwww, r21.xyzx
          mul r22.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r16.xyz, -r16.xyzx, r6.zzzz, -r11.xyzx
          dp3 r5.w, r16.xyzx, r16.xyzx
          rsq r5.w, r5.w
          mul r16.xyz, r5.wwww, r16.xyzx
          dp3_sat r5.w, r5.xyzx, -r17.xyzx
          dp3_sat r6.z, r5.xyzx, -r11.xyzx
          dp3_sat r9.y, r5.xyzx, r16.xyzx
          dp3_sat r11.x, r16.xyzx, -r17.xyzx
          dp3 r11.y, r16.xyzx, r10.xzwx
          dp3 r11.z, r16.xyzx, r18.xyzx
          add r11.x, -r11.x, l(1.000000)
          mul r11.w, r11.x, r11.x
          mul r11.w, r11.w, r11.w
          mul r16.xyz, r11.wwww, r20.xyzx
          mad r16.xyz, r16.xyzx, r11.xxxx, r19.xyzx
          mul r11.x, r11.y, r11.y
          div r11.x, r11.x, r7.y
          mad r11.x, r11.z, r11.z, r11.x
          mad r9.y, r9.y, r9.y, r11.x
          mul r9.y, r9.y, r9.y
          mul r7.z, r7.z, r9.y
          div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
          mul r9.y, r5.w, r5.w
          mad r5.w, -r5.w, r5.w, l(1.000000)
          mul r5.w, r5.w, r7.y
          max r9.y, r9.y, l(1.000000047E-034)
          div r5.w, r5.w, r9.y
          add r5.w, r5.w, l(1.000000)
          sqrt r5.w, r5.w
          add r5.w, r5.w, l(1.000000)
          div r5.w, l(2.000000), r5.w
          mul r9.y, r6.z, r6.z
          mad r6.z, -r6.z, r6.z, l(1.000000)
          mul r6.z, r6.z, r7.y
          max r9.y, r9.y, l(1.000000047E-034)
          div r6.z, r6.z, r9.y
          add r6.z, r6.z, l(1.000000)
          sqrt r6.z, r6.z
          add r6.z, r6.z, l(1.000000)
          div r6.z, l(2.000000), r6.z
          mul r5.w, r5.w, r6.z
          mul r5.w, r5.w, r7.z
          mul_sat r11.xyz, r16.xyzx, r5.wwww
          sqrt r16.xyz, r9.xzwx
          mad r11.xyz, -r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r11.xyzx
          mad r11.xyz, r16.xyzx, r11.xyzx, r22.xyzx
          dp3 r11.w, r11.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          mad r5.w, r4.y, r4.y, l(-1.000000)
          mad r5.w, r7.w, r5.w, l(1.000000)
          mul r5.w, r5.w, r5.w
          mul r5.w, r5.w, l(3.14159274)
          div r5.w, r7.y, r5.w
          mad r6.z, r4.y, l(0.500000), l(0.500000)
          mul r6.z, r6.z, r6.z
          mul r7.y, r8.w, r6.z
          div r7.x, r7.y, r7.x
          add r7.x, r7.x, l(1.000000)
          sqrt r7.x, r7.x
          add r7.x, r7.x, l(1.000000)
          div r7.x, l(2.000000), r7.x
          mul r3.w, r3.w, r6.z
          div r3.w, r3.w, r16.w
          add r3.w, r3.w, l(1.000000)
          sqrt r3.w, r3.w
          add r3.w, r3.w, l(1.000000)
          div r3.w, l(2.000000), r3.w
          mul r3.w, r3.w, r7.x
          add r6.z, -r6.w, l(1.000000)
          mul r6.w, r6.z, r6.z
          mul r6.w, r6.w, r6.w
          mul r7.xyz, r6.wwww, r20.xyzx
          mad r7.xyz, r7.xyzx, r6.zzzz, r19.xyzx
          mul r3.w, r3.w, r5.w
          mul r7.xyz, r7.xyzx, r3.wwww
          dp3 r7.w, r7.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
          movc r13.xyzw, r0.yyyy, r11.xyzw, r7.xyzw
        endif 
      endif 
    endif 
    if_nz r3.y
      mov r14.xyzw, l(0,0,0,0)
    else 
      ieq r0.y, r0.z, l(3)
      if_nz r0.y
        mov r14.xyzw, l(0,0,0,0)
      else 
        if_nz r6.y
          mov r14.xyzw, l(0,0,0,0)
        else 
          dp3 r0.y, r10.xzwx, cb2[2].xyzx
          mad r0.y, -r0.y, r0.y, l(1.000000)
          sqrt r0.y, r0.y
          mul r3.y, r10.y, l(-1.500000)
          dp3 r3.w, r12.yzwy, cb2[2].xyzx
          mad r5.w, -r10.y, l(-1.500000), r3.w
          div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), -r3.y
          mul_sat r3.y, r3.y, r5.w
          mad r5.w, r3.y, l(-2.000000), l(3.000000)
          mul r3.y, r3.y, r3.y
          mul r3.y, r3.y, r5.w
          mul r7.xyz, r9.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r7.w, l(0.0572957806)
          add r5.w, -r4.x, l(1.000000)
          mul r7.xyzw, r5.wwww, r7.xyzw
          mul r7.xyzw, r3.yyyy, r7.xyzw
          mul r7.xyzw, r0.yyyy, r7.xyzw
          mul r7.xyzw, r10.yyyy, r7.xyzw
          mul r7.xyzw, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          ieq r6.zw, r0.zzzz, l(0, 0, 5, 8)
          max r0.y, |r3.w|, l(0.000001)
          rcp r0.y, r0.y
          mul r0.y, r0.y, r3.w
          dp3 r3.y, r12.yzwy, r8.xyzx
          max r3.w, |r3.y|, l(0.000001)
          rcp r3.w, r3.w
          mul r3.y, r3.w, r3.y
          eq r0.y, r0.y, r3.y
          movc r11.w, r0.y, l(0), l(1.000000)
          mul r12.yzw, r5.wwww, r10.xxzw
          mul r11.xyz, r11.wwww, r12.yzwy
          mul r11.xyzw, r11.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.180000)
          mul r16.xyz, r9.xzwx, r10.xxxx
          mov r16.w, r10.x
          mul r16.xyzw, r16.xyzw, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452)
          movc r11.xyzw, r6.wwww, r11.xyzw, r16.xyzw
          movc r14.xyzw, r6.zzzz, r7.xyzw, r11.xyzw
        endif 
      endif 
    endif 
  endif 
  movc r0.y, r6.y, l(1.000000), r3.z
  dp3 r3.y, r14.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul r3.z, r0.x, r10.x
  add r3.y, -r0.y, r3.y
  mad r3.y, r3.z, r3.y, r0.y
  movc r0.y, r0.z, r0.y, r3.y
  mul r3.xyzw, r3.xxxx, r13.xyzw
  mad r3.xyzw, r15.xyzw, r0.yyyy, r3.xyzw
  add r3.xyzw, r14.xyzw, r3.xyzw
  mul r3.xyzw, r0.xxxx, r3.xyzw
  mov r1.xyz, cb2[0].xyzx
  mul r1.xyzw, r1.xyzw, r3.xyzw
else 
  mov r1.xyzw, l(0,0,0,0)
endif 
if_nz r6.x
  mov_sat r10.xyzw, r10.xyzw
  mov_sat r4.xyz, r4.xyzx
  mul r0.x, r4.y, r4.y
  max r3.y, r0.x, l(0.001000)
  mul r0.x, r10.z, r10.z
  max r0.x, r0.x, l(0.001000)
  dp3 r0.y, -r8.xyzx, r5.xyzx
  add r0.y, r0.y, r0.y
  mad r6.xyz, r5.xyzx, -r0.yyyy, -r8.xyzx
  dp3 r0.y, r5.xyzx, r6.xyzx
  mad r0.y, -|r0.y|, |r0.y|, l(1.000000)
  mad r0.y, -r0.y, l(0.444702327), l(1.000000)
  add r3.w, r10.x, r10.x
  sqrt r0.y, r0.y
  div r0.y, r3.w, r0.y
  log r7.xyz, r9.xzwx
  mul r11.xyz, r10.yyyy, r7.xyzx
  mul r11.xyz, r11.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
  mad r7.xyz, r7.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r11.xyzx
  eq r3.w, r10.x, l(0.000000)
  mul r5.w, r3.y, r3.y
  div r5.w, l(2.000000), r5.w
  add r5.w, r5.w, l(-2.000000)
  max r5.w, r5.w, l(1.000000031E-022)
  sqrt r5.w, r5.w
  div r5.w, l(-10.000000), r5.w
  exp r5.w, r5.w
  add r5.w, r5.w, l(-0.000980)
  mul_sat r5.w, r5.w, l(1.00795019)
  add r5.w, -r5.w, l(1.000000)
  ine r6.w, cb1[184].z, l(0)
  if_z r6.w
    mul r7.w, r5.w, cb1[174].w
    mov r2.w, l(1.000000)
    mov r11.xyzw, l(0,0,0,0)
    mov r8.w, l(1.000000)
    mov r9.y, l(0)
    loop 
      uge r10.y, r9.y, l(15)
      breakc_nz r10.y
      imul null, r10.y, r9.y, l(7)
      dp4 r13.x, r2.xyzw, cb1[r10.y + 68].xyzw
      dp4 r13.y, r2.xyzw, cb1[r10.y + 69].xyzw
      dp4 r13.z, r2.xyzw, cb1[r10.y + 70].xyzw
      ge r12.yzw, r13.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r12.yzw, r12.yyzw, cb1[r10.y + 72].xxyz, cb1[r10.y + 73].xxyz
      add r13.xyz, -|r13.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r12.yzw, r12.yyzw, r13.xxyz
      mul r12.y, r12.z, r12.y
      mul r12.y, r12.w, r12.y
      lt r12.z, l(0.000000), r12.y
      if_nz r12.z
        dp3 r13.x, r6.xyzx, cb1[r10.y + 68].xyzx
        dp3 r13.y, r6.xyzx, cb1[r10.y + 69].xyzx
        dp3 r13.z, r6.xyzx, cb1[r10.y + 70].xyzx
        mul r12.y, r12.y, cb1[r10.y + 73].w
        mov r13.w, cb1[r10.y + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r13.xyzw, t4.xyzw, s2, r7.w
        mul r13.xyzw, r13.xyzw, cb1[r10.y + 74].xxxy
        min r10.y, r8.w, r12.y
        mad r13.xyzw, r13.xyzw, r10.yyyy, r11.xyzw
        add r10.y, r8.w, -r10.y
        ge r12.y, l(0.000000), r10.y
        if_nz r12.y
          mov r11.xyzw, r13.xyzw
          mov r8.w, r10.y
          break 
        endif 
        mov r11.xyzw, r13.xyzw
        mov r8.w, r10.y
      endif 
      iadd r9.y, r9.y, l(1)
    endloop 
  else 
    mov r11.xyzw, l(0,0,0,0)
    mov r8.w, l(1.000000)
  endif 
  add r7.w, r8.w, r11.w
  lt r9.y, l(0.000000), r7.w
  if_nz r9.y
    mul r5.w, r5.w, cb1[183].w
    add r9.y, -|r6.z|, r6.z
    mad r8.w, r8.w, r9.y, |r6.z|
    mad r8.w, r8.w, l(2.000000), l(2.000000)
    div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r8.wwww
    mul r12.yz, r6.yyxy, r12.yyzy
    mad r12.yz, r12.yyzy, l(0.000000, 0.950000, 0.950000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r12.yzw, r12.yzyy, t3.wxyz, s1, r5.w
    mov_sat r13.xyz, r12.yzwy
    movc r12.yzw, cb1[184].zzzz, r13.xxyz, r12.yyzw
    div r12.yzw, r12.yyzw, cb1[176].wwww
    mad r11.xyz, r12.yzwy, r7.wwww, r11.xyzx
  endif 
  mul r5.w, r4.z, l(0.080000)
  dp3 r7.w, r5.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul r7.w, r7.w, l(50.000000)
  min r7.w, r7.w, l(1.000000)
  dp3_sat r3.x, r5.xyzx, r8.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r12.yz, r3.xyxx, t1.zxyw, s1, l(0.000000)
  mad r5.w, r5.w, r12.y, r12.z
  mul r5.w, r7.w, r5.w
  mul r11.xyz, r5.wwww, r11.xyzx
  mul r11.xyz, r0.wwww, r11.xyzx
  add r0.x, r0.x, r3.y
  min r3.z, r0.x, l(1.000000)
  mul r0.x, r3.z, r3.z
  div r0.x, l(2.000000), r0.x
  add r0.x, r0.x, l(-2.000000)
  max r0.x, r0.x, l(1.000000031E-022)
  sqrt r0.x, r0.x
  div r0.x, l(-10.000000), r0.x
  exp r0.x, r0.x
  add r0.x, r0.x, l(-0.000980)
  mul r0.x, r0.x, l(1.00795019)
  max r0.x, r0.x, l(0.000000)
  add r0.x, -r0.x, l(1.000000)
  if_z r6.w
    mul r3.y, r0.x, cb1[174].w
    mov r2.w, l(1.000000)
    mov r13.xyzw, l(0,0,0,0)
    mov r5.w, l(1.000000)
    mov r7.w, l(0)
    loop 
      uge r8.w, r7.w, l(15)
      breakc_nz r8.w
      imul null, r8.w, r7.w, l(7)
      dp4 r14.x, r2.xyzw, cb1[r8.w + 68].xyzw
      dp4 r14.y, r2.xyzw, cb1[r8.w + 69].xyzw
      dp4 r14.z, r2.xyzw, cb1[r8.w + 70].xyzw
      ge r12.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r12.yzw, r12.yyzw, cb1[r8.w + 72].xxyz, cb1[r8.w + 73].xxyz
      add r14.xyz, -|r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul_sat r12.yzw, r12.yyzw, r14.xxyz
      mul r9.y, r12.z, r12.y
      mul r9.y, r12.w, r9.y
      lt r10.y, l(0.000000), r9.y
      if_nz r10.y
        dp3 r14.x, r6.xyzx, cb1[r8.w + 68].xyzx
        dp3 r14.y, r6.xyzx, cb1[r8.w + 69].xyzx
        dp3 r14.z, r6.xyzx, cb1[r8.w + 70].xyzx
        mul r9.y, r9.y, cb1[r8.w + 73].w
        mov r14.w, cb1[r8.w + 72].w
        sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r14.xyzw, t4.xyzw, s2, r3.y
        mul r14.xyzw, r14.xyzw, cb1[r8.w + 74].xxxy
        min r8.w, r5.w, r9.y
        mad r14.xyzw, r14.xyzw, r8.wwww, r13.xyzw
        add r8.w, r5.w, -r8.w
        ge r9.y, l(0.000000), r8.w
        if_nz r9.y
          mov r13.xyzw, r14.xyzw
          mov r5.w, r8.w
          break 
        endif 
        mov r13.xyzw, r14.xyzw
        mov r5.w, r8.w
      endif 
      iadd r7.w, r7.w, l(1)
    endloop 
  else 
    mov r13.xyzw, l(0,0,0,0)
    mov r5.w, l(1.000000)
  endif 
  add r3.y, r5.w, r13.w
  lt r7.w, l(0.000000), r3.y
  if_nz r7.w
    mul r0.x, r0.x, cb1[183].w
    add r7.w, -|r6.z|, r6.z
    mad r5.w, r5.w, r7.w, |r6.z|
    mad r5.w, r5.w, l(2.000000), l(2.000000)
    div r12.yz, l(0.000000, -1.000000, 1.000000, 0.000000), r5.wwww
    mul r6.xy, r6.yxyy, r12.yzyy
    mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xyzw, s1, r0.x
    ge r0.x, l(0.900000), r4.x
    and r0.x, r0.x, r6.w
    mov_sat r12.yzw, r6.xxyz
    movc r6.xyz, r0.xxxx, r12.yzwy, r6.xyzx
    div r6.xyz, r6.xyzx, cb1[176].wwww
    mad r13.xyz, r6.xyzx, r3.yyyy, r13.xyzx
  endif 
  mul r0.x, r10.w, l(0.080000)
  mad r6.xyz, -r10.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
  mad r6.xyz, r4.xxxx, r6.xyzx, r0.xxxx
  dp3 r0.x, r6.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r0.x, r0.x, l(50.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xzxx, t1.xyzw, s1, l(0.000000)
  mad r3.xyz, r6.xyzx, r3.xxxx, r3.yyyy
  mul r3.xyz, r0.xxxx, r3.xyzx
  mul r3.xyz, r3.xyzx, r13.xyzx
  mul r3.xyz, r0.wwww, r3.xyzx
  mul r6.xyz, r0.yyyy, -r7.xyzx
  exp r6.xyz, r6.xyzx
  mad r6.xyz, r3.xyzx, r6.xyzx, r11.xyzx
  movc r3.xyz, r3.wwww, r3.xyzx, r6.xyzx
  dp3 r0.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
else 
  ieq r0.y, r0.z, l(5)
  if_nz r0.y
    dp3 r0.y, -r8.xyzx, r5.xyzx
    add r0.y, r0.y, r0.y
    mad r6.xyz, r5.xyzx, -r0.yyyy, -r8.xyzx
    dp3 r0.y, r6.xyzx, r10.xzwx
    dp3 r0.z, r6.xyzx, r5.xyzx
    mul r6.xyz, r0.zzzz, r5.xyzx
    mad r6.xyz, r10.xzwx, r0.yyyy, r6.xyzx
    dp3 r0.y, r10.xzwx, r8.xyzx
    mad r0.y, -r0.y, r0.y, l(1.000000)
    mul r0.z, r4.y, r4.y
    div r0.z, l(2.000000), r0.z
    add r0.z, r0.z, l(-2.000000)
    max r0.z, r0.z, l(1.000000031E-022)
    sqrt r0.yz, r0.yyzy
    div r0.z, l(-10.000000), r0.z
    exp r0.z, r0.z
    add r0.z, r0.z, l(-0.000980)
    mul_sat r0.z, r0.z, l(1.00795019)
    add r0.z, -r0.z, l(1.000000)
    if_z cb1[184].z
      mul r3.w, r0.z, cb1[174].w
      mov r2.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r5.w, l(1.000000)
      mov r6.w, l(0)
      loop 
        uge r8.w, r6.w, l(15)
        breakc_nz r8.w
        imul null, r8.w, r6.w, l(7)
        dp4 r10.x, r2.xyzw, cb1[r8.w + 68].xyzw
        dp4 r10.y, r2.xyzw, cb1[r8.w + 69].xyzw
        dp4 r10.z, r2.xyzw, cb1[r8.w + 70].xyzw
        ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r11.xyz, r11.xyzx, cb1[r8.w + 72].xyzx, cb1[r8.w + 73].xyzx
        add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r10.xyz, r11.xyzx, r10.xyzx
        mul r9.y, r10.y, r10.x
        mul r9.y, r10.z, r9.y
        lt r10.x, l(0.000000), r9.y
        if_nz r10.x
          dp3 r10.x, r6.xyzx, cb1[r8.w + 68].xyzx
          dp3 r10.y, r6.xyzx, cb1[r8.w + 69].xyzx
          dp3 r10.z, r6.xyzx, cb1[r8.w + 70].xyzx
          mul r9.y, r9.y, cb1[r8.w + 73].w
          mov r10.w, cb1[r8.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t4.xyzw, s2, r3.w
          mul r10.xyzw, r10.xyzw, cb1[r8.w + 74].xxxy
          min r8.w, r5.w, r9.y
          mad r10.xyzw, r10.xyzw, r8.wwww, r7.xyzw
          add r8.w, r5.w, -r8.w
          ge r9.y, l(0.000000), r8.w
          if_nz r9.y
            mov r7.xyzw, r10.xyzw
            mov r5.w, r8.w
            break 
          endif 
          mov r7.xyzw, r10.xyzw
          mov r5.w, r8.w
        endif 
        iadd r6.w, r6.w, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r5.w, l(1.000000)
    endif 
    add r3.w, r5.w, r7.w
    lt r6.w, l(0.000000), r3.w
    if_nz r6.w
      mul r0.z, r0.z, cb1[183].w
      add r6.w, -|r6.z|, r6.z
      mad r5.w, r5.w, r6.w, |r6.z|
      mad r5.w, r5.w, l(2.000000), l(2.000000)
      div r6.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r5.wwww
      mul r6.xy, r6.zwzz, r6.yxyy
      mad r6.xy, r6.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xyzw, s1, r0.z
      mov_sat r10.xyz, r6.xyzx
      movc r6.xyz, cb1[184].zzzz, r10.xyzx, r6.xyzx
      div r6.xyz, r6.xyzx, cb1[176].wwww
      mad r7.xyz, r6.xyzx, r3.wwww, r7.xyzx
    endif 
    sqrt r6.xyz, r9.xzwx
    dp3 r0.z, r9.xzwx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
    mad r6.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r0.wwww
    mad r6.xyz, r0.zzzz, r6.xyzx, r0.wwww
    mul r6.xyz, r6.xyzx, r7.xyzx
    mul r0.z, r4.z, l(0.080000)
    mad r7.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
    mad r7.xyz, r4.xxxx, r7.xyzx, r0.zzzz
    dp3 r0.z, r7.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.z, r0.z, l(50.000000)
    dp3_sat r4.w, r5.xyzx, r8.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r4.wyww, t1.xyzw, s1, l(0.000000)
    mad r7.xyz, r7.xyzx, r10.xxxx, r10.yyyy
    mul r7.xyz, r0.zzzz, r7.xyzx
    mul r7.xyz, r0.yyyy, r7.xyzx
    mul r3.xyz, r6.xyzx, r7.xyzx
    dp3 r0.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  else 
    add_sat r0.y, r4.y, r12.x
    dp3 r0.z, -r8.xyzx, r5.xyzx
    add r0.z, r0.z, r0.z
    mad r6.xyz, r5.xyzx, -r0.zzzz, -r8.xyzx
    mul r0.y, r0.y, r0.y
    div r0.y, l(2.000000), r0.y
    add r0.y, r0.y, l(-2.000000)
    max r0.y, r0.y, l(1.000000031E-022)
    sqrt r0.y, r0.y
    div r0.y, l(-10.000000), r0.y
    exp r0.y, r0.y
    add r0.y, r0.y, l(-0.000980)
    mul_sat r0.y, r0.y, l(1.00795019)
    add r0.y, -r0.y, l(1.000000)
    if_z cb1[184].z
      mul r0.z, r0.y, cb1[174].w
      mov r2.w, l(1.000000)
      mov r7.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
      mov r5.w, l(0)
      loop 
        uge r6.w, r5.w, l(15)
        breakc_nz r6.w
        imul null, r6.w, r5.w, l(7)
        dp4 r10.x, r2.xyzw, cb1[r6.w + 68].xyzw
        dp4 r10.y, r2.xyzw, cb1[r6.w + 69].xyzw
        dp4 r10.z, r2.xyzw, cb1[r6.w + 70].xyzw
        ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r11.xyz, r11.xyzx, cb1[r6.w + 72].xyzx, cb1[r6.w + 73].xyzx
        add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
        mul_sat r10.xyz, r11.xyzx, r10.xyzx
        mul r8.w, r10.y, r10.x
        mul r8.w, r10.z, r8.w
        lt r9.y, l(0.000000), r8.w
        if_nz r9.y
          dp3 r10.x, r6.xyzx, cb1[r6.w + 68].xyzx
          dp3 r10.y, r6.xyzx, cb1[r6.w + 69].xyzx
          dp3 r10.z, r6.xyzx, cb1[r6.w + 70].xyzx
          mul r8.w, r8.w, cb1[r6.w + 73].w
          mov r10.w, cb1[r6.w + 72].w
          sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t4.xyzw, s2, r0.z
          mul r10.xyzw, r10.xyzw, cb1[r6.w + 74].xxxy
          min r6.w, r3.w, r8.w
          mad r10.xyzw, r10.xyzw, r6.wwww, r7.xyzw
          add r6.w, r3.w, -r6.w
          ge r8.w, l(0.000000), r6.w
          if_nz r8.w
            mov r7.xyzw, r10.xyzw
            mov r3.w, r6.w
            break 
          endif 
          mov r7.xyzw, r10.xyzw
          mov r3.w, r6.w
        endif 
        iadd r5.w, r5.w, l(1)
      endloop 
    else 
      mov r7.xyzw, l(0,0,0,0)
      mov r3.w, l(1.000000)
    endif 
    add r0.z, r3.w, r7.w
    lt r2.x, l(0.000000), r0.z
    if_nz r2.x
      mul r0.y, r0.y, cb1[183].w
      add r2.x, -|r6.z|, r6.z
      mad r2.x, r3.w, r2.x, |r6.z|
      mad r2.x, r2.x, l(2.000000), l(2.000000)
      div r2.xy, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.xxxx
      mul r2.xy, r2.xyxx, r6.yxyy
      mad r2.xy, r2.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t3.xyzw, s1, r0.y
      ine r0.y, cb1[184].z, l(0)
      ge r2.w, l(0.900000), r4.x
      and r0.y, r0.y, r2.w
      mov_sat r6.xyz, r2.xyzx
      movc r2.xyz, r0.yyyy, r6.xyzx, r2.xyzx
      div r2.xyz, r2.xyzx, cb1[176].wwww
      mad r7.xyz, r2.xyzx, r0.zzzz, r7.xyzx
    endif 
    mul r0.y, r4.z, l(0.080000)
    mad r2.xyz, -r4.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r9.xzwx
    mad r2.xyz, r4.xxxx, r2.xyzx, r0.yyyy
    dp3 r0.y, r2.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r0.y, r0.y, l(50.000000)
    dp3_sat r4.w, r5.xyzx, r8.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.wyww, t1.xyzw, s1, l(0.000000)
    mad r2.xyz, r2.xyzx, r4.xxxx, r4.yyyy
    mul r2.xyz, r0.yyyy, r2.xyzx
    mul r2.xyz, r2.xyzx, r7.xyzx
    mul r3.xyz, r0.wwww, r2.xyzx
    dp3 r0.x, r3.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  endif 
endif 
add r0.x, r0.x, r1.w
add r0.yzw, r1.xxyz, r3.xxyz
mul r0.xyzw, r0.xyzw, cb1[176].wwww
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyzw, r0.yzwx, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
ret 
// Approximately 1283 instruction slots used