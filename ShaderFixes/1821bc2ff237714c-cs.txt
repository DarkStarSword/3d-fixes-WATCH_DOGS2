// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed 1821bc2ff237714c-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:53 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer ScreenSpacePlanarReflectionForWater
// {
//
//   float4 SSPRWHomogenousToFinalCoords;// Offset:    0 Size:    16
//   float4x4 SSPRWInvViewMatrix;       // Offset:   16 Size:    64
//   float4x4 SSPRWMirrorViewProjMatrix;// Offset:   80 Size:    64 [unused]
//   float4 SSPRWParams0;               // Offset:  144 Size:    16
//   float4 SSPRWParams1;               // Offset:  160 Size:    16 [unused]
//   float4 SSPRWResolution;            // Offset:  176 Size:    16
//   float4x4 SSPRWViewProjMatrix;      // Offset:  192 Size:    64 [unused]
//   uint4 VisibilityGridParams;        // Offset:  256 Size:    16 [unused]
//   float2 ClearScale;                 // Offset:  272 Size:     8 [unused]
//   float2 ReflectionFallOffMulAdd;    // Offset:  280 Size:     8
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ScreenSpacePlanarReflectionForWater__ColorTextureMS    texture  float4        2dMS    0        1
// ScreenSpacePlanarReflectionForWater__DepthTextureMS    texture  float4        2dMS    1        1
// ScreenSpacePlanarReflectionForWater__OutputTexture        UAV  float4          2d    0        1
// ScreenSpacePlanarReflectionForWater__SSPRWDepthTexture        UAV    uint          2d    1        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// ScreenSpacePlanarReflectionForWater    cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[18], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_resource_texture2dms(0) (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (uint,uint,uint,uint) u1
dcl_input vThreadID.xyz
dcl_temps 15
dcl_thread_group 16, 16, 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix (Compute Shader variant) inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed 1821bc2ff237714c-cs.txt

// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed 1821bc2ff237714c-cs.txt

mul r11.w, r11.x, r11.y
mul r13.x, r11.w, cb0[9].x
mul r13.y, r11.w, cb0[10].x
mul r13.z, r11.w, cb0[11].x
mul r13.w, r11.w, cb0[12].x
dp4 r14.x, r13.xyzw, cb0[17].xyzw
dp4 r14.y, r13.xyzw, cb0[18].xyzw
dp4 r14.z, r13.xyzw, cb0[19].xyzw
add r12.xyz, cb0[174].xyz, r14.xyz

itof r0.x, vThreadID.y
ge r0.y, r0.x, cb2[11].y
if_nz r0.y
  ret 
endif 
itof r0.y, vThreadID.x
lt r0.y, cb2[11].x, r0.y
lt r0.x, cb2[11].y, r0.x
or r0.x, r0.x, r0.y
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u1.xyzw
and r0.y, r0.x, l(2047)
utof r0.y, r0.y
mul r0.y, r0.y, cb0[66].x
mul r0.y, r0.y, l(0.000488519785)
ubfe r0.x, l(10), l(11), r0.x
utof r0.x, r0.x
mul r0.x, r0.x, cb0[66].y
mul r0.x, r0.x, l(0.000977517106)
ftou r1.xy, r0.yxyy
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r1.xyww, t1.xyzw, vThreadID.z
mov r0.y, l(1.000000)
dp2 r0.z, r0.xyxx, cb0[11].zwzz
dp2 r0.x, r0.xyxx, cb0[12].zwzz
div r0.x, -r0.z, r0.x
add r0.y, cb2[0].z, l(-100.000000)
lt r0.y, r0.x, r0.y
if_nz r0.y
  itof r0.yz, r1.xxyx
  add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  mul r0.yz, r0.yyzy, cb2[11].zzwz
  mad r0.yz, cb2[9].xxyx, r0.yyzy, cb2[9].zzwz
  mul r2.xy, r0.xxxx, r0.yzyy

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed 1821bc2ff237714c-cs.txt

add r11.w, r0.x, -r11.y
mul r11.w, r11.w, r11.x
mad r2.x, -r11.w, cb0[9].x, r2.x

  utof r0.y, r1.y
  mul r0.y, r0.y, cb2[11].w
  ldms_indexable(texture2dms)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw, vThreadID.z
  mov r2.z, -r0.x
  mov r2.w, l(1.000000)
  dp4 r3.x, r2.xyzw, cb2[1].xyzw
  dp4 r3.y, r2.xyzw, cb2[2].xyzw
  dp4 r3.z, r2.xyzw, cb2[3].xyzw
  add r2.xyzw, r3.xyzx, -r12.xyzx
  dp3 r0.z, r2.yzwy, r2.yzwy
  rsq r0.w, r0.z
  mul r3.xyzw, r0.wwww, r2.xyzw
  mul r2.xyw, r3.yzyw, l(-0.488603, 0.488603, 0.000000, -0.488603)
  mul r4.xyz, r2.xxxx, cb1[23].xyzx
  mad r4.xyz, cb1[22].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r4.xyzx
  mad r4.xyz, r2.yyyy, cb1[24].xyzx, r4.xyzx
  mad r4.xyz, r2.wwww, cb1[25].xyzx, r4.xyzx
  mul r5.xyzw, r3.xyzw, r3.yzzz
  mul r5.xyw, r5.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
  mad r4.xyz, r5.xxxx, cb1[26].xyzx, r4.xyzx
  mad r4.xyz, r5.yyyy, cb1[27].xyzx, r4.xyzx
  mad r0.w, r5.z, l(3.000000), l(-1.000000)
  mul r0.yw, r0.yyyw, l(0.000000, -33.333336, 0.000000, 0.315392)
  mad r4.xyz, r0.wwww, cb1[28].xyzx, r4.xyzx
  mad r4.xyz, r5.wwww, cb1[29].xyzx, r4.xyzx
  mul r1.w, r3.y, r3.y
  mad r1.w, r3.w, r3.w, -r1.w
  mul r1.w, r1.w, l(0.546274)
  mad r3.xyw, r1.wwww, cb1[30].xyxz, r4.xyxz
  mul r3.xyw, r3.xyxw, cb3[35].wwww
  mul r4.x, r12.z, -cb3[37].x
  mul r4.x, r4.x, l(1.442695)
  exp r4.x, r4.x
  sqrt r0.z, r0.z
  mul r0.z, r4.x, r0.z
  lt r4.x, l(0.010000), |r2.z|
  mul r2.z, r2.z, cb3[37].x
  mul r4.y, r2.z, l(-1.442695)
  exp r4.y, r4.y
  add r4.y, -r4.y, l(1.000000)
  div r2.z, r4.y, r2.z
  mul r2.z, r0.z, r2.z
  movc r0.z, r4.x, r2.z, r0.z
  mul r0.z, r0.z, cb3[36].w
  mul r0.z, r0.z, l(0.100000)
  min r0.z, r0.z, l(200.000000)
  mul r2.z, r0.z, cb3[6].x
  mad r0.z, cb3[7].x, r0.z, r2.z
  mul r0.z, r0.z, l(-4.328085)
  exp r0.z, r0.z
  mul r4.xyz, r3.xywx, r2.zzzz
  iadd r2.z, cb3[28].z, l(-1)
  utof r2.z, r2.z
  mul r2.z, r2.z, l(0.031250)
  exp r2.z, r2.z
  mad r2.z, r2.z, cb3[1].z, cb3[1].w
  add r4.w, cb3[4].y, cb3[4].x
  add r4.w, r4.w, -r12.z
  div r4.w, r4.w, r3.z
  max r4.w, r2.z, r4.w
  min r4.w, r0.x, r4.w
  mad r5.z, r3.z, r4.w, r12.z
  add r5.z, r5.z, -cb3[34].y
  add r6.x, -cb3[34].y, cb3[34].x
  div_sat r5.z, r5.z, r6.x
  add r5.z, -r5.z, l(1.000000)
  mul r5.z, r5.z, cb3[34].z
  log r5.z, |r5.z|
  mul r5.z, r5.z, l(1.300000)
  exp r5.z, r5.z
  mul r6.y, r5.z, cb3[8].z
  add r6.z, -r12.z, cb3[4].x
  div r6.z, r6.z, r3.z
  max r6.z, r2.z, r6.z
  min r6.z, r0.x, r6.z
  mad r6.w, r3.z, r6.z, r12.z
  add r6.w, r6.w, -cb3[34].y
  div_sat r6.w, r6.w, r6.x
  add r6.w, -r6.w, l(1.000000)
  mul r6.w, r6.w, cb3[34].z
  log r6.w, |r6.w|
  mul r6.w, r6.w, l(1.300000)
  exp r6.w, r6.w
  add r7.y, -r12.z, l(-100000.000000)
  div r7.y, r7.y, r3.z
  max r2.z, r2.z, r7.y
  min r2.z, r0.x, r2.z
  mad r7.y, r3.z, r2.z, r12.z
  add r7.y, r7.y, -cb3[34].y
  div_sat r6.x, r7.y, r6.x
  add r6.x, -r6.x, l(1.000000)
  mul r6.x, r6.x, cb3[34].z
  log r6.x, |r6.x|
  mul r6.x, r6.x, l(1.300000)
  exp r6.x, r6.x
  mul r7.xy, r6.wxww, cb3[8].zzzz
  mul r3.xyw, r3.xyxw, cb3[7].yzyw
  mul r3.xyw, r3.xyxw, cb3[6].xxxx
  add r7.z, cb3[6].x, cb3[7].x
  lt r7.w, r3.z, l(0.000000)
  if_nz r7.w
    add r7.w, -r4.w, r6.z
    lt r8.x, l(0.000000), r7.w
    mad r8.y, r6.w, cb3[8].z, -r6.y
    add r8.z, r7.w, l(0.000001)
    div r8.y, r8.y, r8.z
    mul r8.z, r7.w, r7.z
    mul r7.w, r7.w, r8.y
    mad r8.y, r7.w, l(0.500000), r6.y
    mul r9.w, r8.y, r8.z
    mad r6.y, r6.y, l(2.000000), r7.w
    mul r6.y, r6.y, r8.z
    mul r6.y, r6.y, l(-0.721347511)
    exp r6.y, r6.y
    add r6.y, -r6.y, l(1.000000)
    mul r8.yzw, r3.xxyw, r6.yyyy
    div r9.xyz, r8.yzwy, r7.zzzz
    and r8.xyzw, r8.xxxx, r9.xyzw
    add r6.y, -r6.z, r2.z
    lt r7.w, l(0.000000), r6.y
    mad r6.x, r6.x, cb3[8].z, -r7.x
    add r9.x, r6.y, l(0.000001)
    div r6.x, r6.x, r9.x
    mul r9.x, r6.y, r7.z
    mul r6.x, r6.y, r6.x
    mad r6.y, r6.x, l(0.500000), r7.x
    mad r10.w, r9.x, r6.y, r8.w
    mad r6.x, r7.x, l(2.000000), r6.x
    mul r6.x, r6.x, r9.x
    mul r6.x, r6.x, l(-0.721347511)
    exp r6.x, r6.x
    add r6.x, -r6.x, l(1.000000)
    mul r9.xyz, r3.xywx, r6.xxxx
    mul r6.x, r8.w, l(1.442695)
    exp r6.x, r6.x
    mul r6.x, r7.z, r6.x
    div r9.xyz, r9.xyzx, r6.xxxx
    add r10.xyz, r8.xyzx, r9.xyzx
    movc r8.xyzw, r7.wwww, r10.xyzw, r8.xyzw
  else 
    add r2.z, -r2.z, r6.z
    lt r6.x, l(0.000000), r2.z
    mad r6.y, r6.w, cb3[8].z, -r7.y
    add r6.w, r2.z, l(0.000001)
    div r6.y, r6.y, r6.w
    mul r6.w, r2.z, r7.z
    mul r2.z, r2.z, r6.y
    mad r6.y, r2.z, l(0.500000), r7.y
    mul r9.w, r6.y, r6.w
    mad r2.z, r7.y, l(2.000000), r2.z
    mul r2.z, r2.z, r6.w
    mul r2.z, r2.z, l(-0.721347511)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    mul r10.xyz, r3.xywx, r2.zzzz
    div r9.xyz, r10.xyzx, r7.zzzz
    and r9.xyzw, r6.xxxx, r9.xyzw
    add r2.z, r4.w, -r6.z
    lt r4.w, l(0.000000), r2.z
    mad r5.z, r5.z, cb3[8].z, -r7.x
    add r6.x, r2.z, l(0.000001)
    div r5.z, r5.z, r6.x
    mul r6.x, r2.z, r7.z
    mul r2.z, r2.z, r5.z
    mad r5.z, r2.z, l(0.500000), r7.x
    mad r10.w, r6.x, r5.z, r9.w
    mad r2.z, r7.x, l(2.000000), r2.z
    mul r2.z, r2.z, r6.x
    mul r2.z, r2.z, l(-0.721347511)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    mul r3.xyw, r3.xyxw, r2.zzzz
    mul r2.z, r9.w, l(1.442695)
    exp r2.z, r2.z
    mul r2.z, r7.z, r2.z
    div r3.xyw, r3.xyxw, r2.zzzz
    add r10.xyz, r3.xywx, r9.xyzx
    movc r8.xyzw, r4.wwww, r10.xyzw, r9.xyzw
  endif 
  mul r2.z, r8.w, l(-1.442695)
  exp r2.z, r2.z
  mad r3.xyw, r4.xyxz, r2.zzzz, r8.xyxz
  mul r0.z, r0.z, r2.z
  div r2.z, cb3[31].w, |r3.z|
  min r2.z, r0.x, r2.z
  mul r3.z, r2.z, cb3[29].w
  min r3.z, r3.z, l(1.000000)
  add r2.z, r2.z, -cb3[33].w
  mul_sat r2.z, r2.z, cb3[32].w
  mul r2.z, r2.z, r3.z
  mul r3.z, r2.z, cb3[34].w
  mul r2.z, r2.z, cb3[30].w
  mul r2.z, r2.z, l(-1.442695)
  exp r2.z, r2.z
  mul r4.xyz, r2.xxxx, cb1[32].xyzx
  mad r4.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r4.xyzx
  mad r4.xyz, r2.yyyy, cb1[33].xyzx, r4.xyzx
  mad r2.xyw, r2.wwww, cb1[34].xyxz, r4.xyxz
  mad r2.xyw, r5.xxxx, cb1[35].xyxz, r2.xyxw
  mad r2.xyw, r5.yyyy, cb1[36].xyxz, r2.xyxw
  mad r2.xyw, r0.wwww, cb1[37].xyxz, r2.xyxw
  mad r2.xyw, r5.wwww, cb1[38].xyxz, r2.xyxw
  mad r2.xyw, r1.wwww, cb1[39].xyxz, r2.xyxw
  mul r2.xyw, r2.xyxw, r3.zzzz
  mul r2.xyw, r2.xyxw, cb3[29].xyxz
  mul r2.xyw, r2.xyxw, cb3[35].wwww
  mad r2.xyw, r2.xyxw, r0.zzzz, r3.xyxw
  mul r0.z, r0.z, r2.z
  mul r2.xyz, r2.xywx, cb0[176].wwww
  max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r2.xyz, r2.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
  mad_sat r0.x, r0.x, cb2[17].z, cb2[17].w
  add r0.x, -r0.x, l(1.000000)
  exp r0.y, r0.y
  add r0.y, -r0.y, l(1.000000)
  mul r3.w, r0.y, r0.x
  mad r0.xyz, r1.xyzx, r0.zzzz, r2.xyzx
  mul r3.xyz, r3.wwww, r0.xyzx
  store_uav_typed u0.xyzw, vThreadID.xyyy, r3.xyzw
endif 
ret 
// Approximately 257 instruction slots used