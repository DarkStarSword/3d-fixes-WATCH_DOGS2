// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e4a10804867a9cc8-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:02 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48 [unused]
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer MaterialWD2Cloth
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 DetailUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 DetailUVTiling2;            // Offset:   32 Size:    16 [unused]
//   float4 DetailUVTiling3;            // Offset:   48 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   64 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   80 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  112 Size:    12
//   float DetailIntensity1;            // Offset:  124 Size:     4
//   float3 DiffuseColor2;              // Offset:  128 Size:    12
//   float DetailIntensity2;            // Offset:  140 Size:     4
//   float3 DiffuseColor3;              // Offset:  144 Size:    12
//   float DetailIntensity3;            // Offset:  156 Size:     4
//   float3 DiffuseColor4;              // Offset:  160 Size:    12
//   float GlobalReflectance;           // Offset:  172 Size:     4
//   float3 ModulationColor;            // Offset:  176 Size:    12
//   float Metalness;                   // Offset:  188 Size:     4
//   float3 PatternColor;               // Offset:  192 Size:    12 [unused]
//   float ModulationRoughness;         // Offset:  204 Size:     4
//   float3 VelvetColor1;               // Offset:  208 Size:    12
//   float NormalIntensity;             // Offset:  220 Size:     4
//   float3 VelvetColor2;               // Offset:  224 Size:    12
//   float Reflectance;                 // Offset:  236 Size:     4
//   float3 VelvetColor3;               // Offset:  240 Size:    12
//   float Roughness;                   // Offset:  252 Size:     4
//   float2 DiffuseTexture1Offset;      // Offset:  256 Size:     8
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DetailColorType;               // Offset:  268 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  272 Size:     4
//   bool CinematicMode;                // Offset:  276 Size:     4
//   bool ModulationColorInvert;        // Offset:  280 Size:     4
//   bool ModulationRoughInvert;        // Offset:  284 Size:     4
//   bool isVelvet1;                    // Offset:  288 Size:     4
//   bool isVelvet2;                    // Offset:  292 Size:     4
//   bool isVelvet3;                    // Offset:  296 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Cloth__DetailTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Cloth__DetailTexture2__SampObj__    sampler      NA          NA    1        1
// MaterialWD2Cloth__DetailTexture3__SampObj__    sampler      NA          NA    2        1
// MaterialWD2Cloth__DiffuseTexture1__SampObj__    sampler      NA          NA    3        1
// MaterialWD2Cloth__MaskTexture1__SampObj__    sampler      NA          NA    4        1
// MaterialWD2Cloth__NormalTexture1__SampObj__    sampler      NA          NA    5        1
// MaterialWD2Cloth__DetailTexture1__TexObj__    texture  float4          2d    0        1
// MaterialWD2Cloth__DetailTexture2__TexObj__    texture  float4          2d    1        1
// MaterialWD2Cloth__DetailTexture3__TexObj__    texture  float4          2d    2        1
// MaterialWD2Cloth__DiffuseTexture1__TexObj__    texture  float4          2d    3        1
// MaterialWD2Cloth__MaskTexture1__TexObj__    texture  float4          2d    4        1
// MaterialWD2Cloth__NormalTexture1__TexObj__    texture  float4          2d    5        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    2        1
// MaterialWD2Cloth                  cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float       
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xy          4   TARGET   float   xy  
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear sample v0.xyz
dcl_input_ps linear sample v1.xyz
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyz
dcl_input_ps linear sample v4.xyz
dcl_input_ps linear sample v5.xyzw
dcl_input_ps linear sample v6.xyzw
dcl_input_ps linear sample v7.xyzw
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed e4a10804867a9cc8-ps.txt

mul r10.w, r10.x, r10.y
mul r12.x, r10.w, cb1[9].x
mul r12.y, r10.w, cb1[10].x
mul r12.z, r10.w, cb1[11].x
mul r12.w, r10.w, cb1[12].x
dp4 r13.x, r12.xyzw, cb1[17].xyzw
dp4 r13.y, r12.xyzw, cb1[18].xyzw
dp4 r13.z, r12.xyzw, cb1[19].xyzw
add r11.xyz, cb1[174].xyz, r13.xyz

add_sat r0.x, cb0[3].w, cb2[5].z
add r0.y, cb0[3].x, -cb2[5].x
mad r0.x, r0.x, r0.y, cb2[5].x
dp3 r0.y, v0.xyzx, v0.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, v0.xxyz
movc r0.yzw, v9.xxxx, r0.yyzw, -r0.yyzw
add r1.xy, v5.zwzz, cb3[16].xyxx
sample_b_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t3.xyzw, s3, cb1[180].x
sample_b_indexable(texture2d)(float,float,float,float) r2.xyzw, v5.xyxx, t4.xzyw, s4, cb1[180].x
sample_b_indexable(texture2d)(float,float,float,float) r3.xyzw, v6.zwzz, t0.xyzw, s0, cb1[180].x
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.z, r3.xyzx, r3.xyzx
rsq r3.z, r3.z
mul r3.xy, r3.zzzz, r3.xyxx
mul r3.xy, r3.xyxx, cb3[7].wwww
sample_b_indexable(texture2d)(float,float,float,float) r4.xyzw, v7.xyxx, t1.xyzw, s1, cb1[180].x
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.z, r4.xyzx, r4.xyzx
rsq r3.z, r3.z
mul r4.xy, r3.zzzz, r4.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r5.xyzw, v7.zwzz, t2.xyzw, s2, cb1[180].x
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.z, r5.xyzx, r5.xyzx
rsq r3.z, r3.z
mul r5.xy, r3.zzzz, r5.xyxx
add r3.z, r2.x, r2.x
mov_sat r3.z, r3.z
mad_sat r4.z, r2.x, l(2.000000), l(-1.000000)
mad r4.xy, cb3[8].wwww, r4.xyxx, -r3.xyxx
mad r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
lt r4.x, l(0.500000), r3.z
ine r6.xyz, cb3[18].xyzx, l(0, 0, 0, 0)
movc r4.x, r4.x, r6.y, r6.x
add r6.xyw, -cb3[13].xyxz, cb3[14].xyxz
mad r6.xyw, r3.zzzz, r6.xyxw, cb3[13].xyxz
movc r6.xyw, cb3[18].yyyy, r6.xyxw, cb3[13].xyxz
mad r5.xy, cb3[9].wwww, r5.xyxx, -r3.xyxx
mad r5.xy, r4.zzzz, r5.xyxx, r3.xyxx
lt r3.x, l(0.500000), r4.z
movc r5.z, r3.x, r6.z, r4.x
add r7.xyz, -r6.xywx, cb3[15].xyzx
mad r7.xyz, r4.zzzz, r7.xyzx, r6.xywx
movc r6.xyz, cb3[18].zzzz, r7.xyzx, r6.xywx
if_nz cb3[17].y
  add r3.x, r1.w, l(-0.501960814)
  lt r3.x, r3.x, l(0.000000)
  discard_nz r3.x
  lt r3.x, r2.y, l(0.150000)
  and r7.x, r5.z, r3.x
  mov r2.x, cb3[10].w
else 
  add r3.x, -r3.w, r4.w
  mad r3.x, r3.z, r3.x, r3.w
  add r3.y, -r3.x, r5.w
  mad r3.x, r4.z, r3.y, r3.x
  add r4.xyw, r1.xyxz, -cb3[7].xyxz
  mad r4.xyw, r1.wwww, r4.xyxw, cb3[7].xyxz
  add r8.xyz, -r4.xywx, cb3[8].xyzx
  mad r3.yzw, r3.zzzz, r8.xxyz, r4.xxyw
  add r4.xyw, -r3.yzyw, cb3[9].xyxz
  mad r3.yzw, r4.zzzz, r4.xxyw, r3.yyzw
  add r1.w, -r2.z, l(1.000000)
  movc r4.xy, cb3[17].zwzz, r1.wwww, r2.zzzz
  mad r8.xyz, r3.yzwy, cb3[11].xyzx, -r3.yzwy
  mad r3.yzw, r4.xxxx, r8.xxyz, r3.yyzw
  mad_sat r1.w, cb3[12].w, r4.y, r3.x
  lt r3.x, l(0.500000), r2.y
  mul r4.x, r2.y, cb3[11].w
  movc r1.xyz, r3.xxxx, cb3[10].xyzx, r3.yzwy
  mov r3.y, cb3[10].w
  movc r2.x, r3.x, cb3[14].w, r3.y
  movc r2.z, r3.x, cb3[15].w, r1.w
  and r2.y, r3.x, r4.x
  movc r7.xyz, r3.xxxx, l(0,0,0,0), r5.zxyz
  mov r5.xy, r7.yzyy
endif 
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v1.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.yz, v6.xyxx, t5.zxyw, s5, cb1[180].x
mad r7.yz, r7.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r1.w, r7.yzyy, r7.yzyy
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r8.z, r1.w
mul r8.xy, r7.yzyy, cb3[13].wwww
iadd r7.yz, cb3[17].xxxx, l(0, 1, 8, 0)
ult r1.w, r7.y, l(1)
movc r1.w, r1.w, l(0), r7.z
add r7.yzw, l(0.000000, -1.000000, -1.000000, -1.000000), cb0[r1.w + 4].zzxy
mad r7.yzw, r0.xxxx, r7.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mov r5.z, l(0)
mad r5.xyz, r7.yyyy, r5.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r9.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
dp3 r0.x, r8.xyzx, r9.xyzx
mul r8.xyw, r0.xxxx, r8.xyxz
div r8.xyz, r8.xywx, r8.zzzz
mad r5.xyz, -r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r8.xyzx
mul r4.xyz, r4.xyzx, r5.yyyy
mad r3.xyz, r5.xxxx, r3.xyzx, r4.xyzx
mad o1.xyz, r5.zzzz, r0.yzwy, r3.xyzx
add r0.x, r2.w, l(-0.501960814)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
ge r0.xyz, l(0.00313080009, 0.00313080009, 0.00313080009, 0.000000), r6.xyzx
mul r3.xyz, r6.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
log r4.xyz, |r6.xyzx|
mul r4.xyz, r4.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r4.xyz, r4.xyzx
mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
movc r0.xyz, r0.xyzx, r3.xyzx, r4.xyzx
mul r0.xyz, r0.xyzx, l(31.000000, 63.000000, 31.000000, 0.000000)
round_ne r0.xyz, r0.xyzx
mad r0.x, r0.y, l(32.000000), r0.x
mad r0.x, r0.z, l(2048.000000), r0.x
mad r0.x, r0.x, l(0.0000305180438), l(-1.000000)
movc o1.w, r7.x, r0.x, l(0.0000152587891)
mul o0.xyz, r1.xyzx, r7.zzzz
mul r2.z, r2.z, r7.w
bfi r0.x, l(2), l(5), r7.x, l(0)
utof r0.x, r0.x
mul r2.w, r0.x, l(0.00392156886)
div r0.xy, v3.xyxx, v3.zzzz
div r0.zw, v4.xxxy, v4.zzzz
add o4.xy, -r0.zwzz, r0.xyxx
mov o0.w, l(1.000000)
mov o2.xyzw, r2.xzyw
mov o3.xyzw, l(0,0,0,0)
ret 
// Approximately 134 instruction slots used