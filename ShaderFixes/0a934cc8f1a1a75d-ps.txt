// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 0a934cc8f1a1a75d-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:45 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48 [unused]
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer MaterialWD2Skin
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 CurvatureUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 DiffuseUVTiling2;           // Offset:   48 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   64 Size:    16 [unused]
//   float4 MaskUVTiling2;              // Offset:   80 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float4 NormalUVTiling2;            // Offset:  112 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  128 Size:    12
//   float DiffuseNormalIntensity1;     // Offset:  140 Size:     4
//   float3 DiffuseColor2;              // Offset:  144 Size:    12
//   float FaceBlendDisplaceStrength;   // Offset:  156 Size:     4 [unused]
//   float3 FaceBlendZoneSelection;     // Offset:  160 Size:    12 [unused]
//   float FaceBlendFadeDistance;       // Offset:  172 Size:     4 [unused]
//   float3 TightsColor;                // Offset:  176 Size:    12 [unused]
//   float MaskReflectanceOffset;       // Offset:  188 Size:     4
//   float2 CurvatureTextureOffset;     // Offset:  192 Size:     8 [unused]
//   float MaskRoughnessOffset;         // Offset:  200 Size:     4
//   float Metalness;                   // Offset:  204 Size:     4
//   float2 DiffuseTextureOffset2;      // Offset:  208 Size:     8 [unused]
//   float NormalDynamicWrinklesIntensity;// Offset:  216 Size:     4
//   float NormalIntensity1;            // Offset:  220 Size:     4
//   float2 FaceBlendDisplaceRange;     // Offset:  224 Size:     8 [unused]
//   float NormalIntensity2;            // Offset:  232 Size:     4 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4
//   float2 MaskTextureOffset2;         // Offset:  240 Size:     8 [unused]
//   float Roughness;                   // Offset:  248 Size:     4
//   float SSSStrength;                 // Offset:  252 Size:     4
//   float TightsStrenght;              // Offset:  256 Size:     4 [unused]
//   float TightsThickness;             // Offset:  260 Size:     4 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4
//   int DiffuseBlendMode;              // Offset:  268 Size:     4
//   int FaceBlendDisplaceTextureArrayUV;// Offset:  272 Size:     4 [unused]
//   int Mask2ColorChannel;             // Offset:  276 Size:     4
//   int MaskChannelUsageAlpha;         // Offset:  280 Size:     4 [unused]
//   int MaskChannelUsageBlue;          // Offset:  284 Size:     4
//   int MaskChannelUsageGreen;         // Offset:  288 Size:     4
//   int MaskChannelUsageRed;           // Offset:  292 Size:     4
//   int WetSurfaceTypeIndex;           // Offset:  296 Size:     4
//   bool DynamicWrinkles;              // Offset:  300 Size:     4 [unused]
//   bool RoughnessInDiffuse1Alpha;     // Offset:  304 Size:     4
//   bool UseFaceBlend;                 // Offset:  308 Size:     4 [unused]
//   bool UseTights;                    // Offset:  312 Size:     4 [unused]
//
// }
//
// cbuffer Wrinkle
// {
//
//   float4 TexCoordScaleBias;          // Offset:    0 Size:    16 [unused]
//   float4 WrinkleMaskWeights[14];     // Offset:   16 Size:   224 [unused]
//   float WrinkleIntensity;            // Offset:  240 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Skin__DiffuseTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Skin__DiffuseTexture2__SampObj__    sampler      NA          NA    1        1
// MaterialWD2Skin__MaskTexture1__SampObj__    sampler      NA          NA    2        1
// MaterialWD2Skin__MaskTexture2__SampObj__    sampler      NA          NA    3        1
// MaterialWD2Skin__NormalTexture2__SampObj__    sampler      NA          NA    4        1
// MaterialWD2Skin__NormalTexture1__SampObj__    sampler      NA          NA    5        1
// Wrinkle__WrinkleWeightTexture__SampObj__    sampler      NA          NA    6        1
// NormalDynamicWrinklesSampler      sampler      NA          NA    7        1
// MaterialWD2Skin__DiffuseTexture1__TexObj__    texture  float4          2d    0        1
// MaterialWD2Skin__DiffuseTexture2__TexObj__    texture  float4          2d    1        1
// MaterialWD2Skin__MaskTexture1__TexObj__    texture  float4          2d    2        1
// MaterialWD2Skin__MaskTexture2__TexObj__    texture  float4          2d    3        1
// MaterialWD2Skin__NormalDynamicWrinklesTexture1A__TexObj__    texture  float4          2d    4        1
// MaterialWD2Skin__NormalDynamicWrinklesTexture1B__TexObj__    texture  float4          2d    5        1
// MaterialWD2Skin__NormalTexture2__TexObj__    texture  float4          2d    6        1
// MaterialWD2Skin__NormalTexture1__TexObj__    texture  float4     2darray    7        1
// Wrinkle__WrinkleWeightTexture__TexObj__    texture  float4          2d    8        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    2        1
// MaterialWD2Skin                   cbuffer      NA          NA    3        1
// Wrinkle                           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xy          4   TARGET   float   xy  
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[16], dynamicIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear sample v0.xyzw
dcl_input_ps linear sample v1.xyz
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyz
dcl_input_ps linear sample v4.xyz
dcl_input_ps linear sample v5.xyzw
dcl_input_ps linear sample v6.xyzw
dcl_input_ps linear sample v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 13

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 0a934cc8f1a1a75d-ps.txt

mul r9.w, r9.x, r9.y
mul r11.x, r9.w, cb1[9].x
mul r11.y, r9.w, cb1[10].x
mul r11.z, r9.w, cb1[11].x
mul r11.w, r9.w, cb1[12].x
dp4 r12.x, r11.xyzw, cb1[17].xyzw
dp4 r12.y, r11.xyzw, cb1[18].xyzw
dp4 r12.z, r11.xyzw, cb1[19].xyzw
add r10.xyz, cb1[174].xyz, r12.xyz

sample_b_indexable(texture2d)(float,float,float,float) r0.xyz, v7.xyxx, t2.xyzw, s2, cb1[180].x
sample_b_indexable(texture2d)(float,float,float,float) r1.xyzw, v7.zwzz, t3.xyzw, s3, cb1[180].x
ilt r0.w, cb3[17].y, l(2)
movc r1.x, cb3[17].y, r1.y, r1.x
ieq r2.xyz, cb3[17].ywwy, l(2, 1, 2, 0)
movc r1.y, r2.x, r1.z, r1.w
movc r0.w, r0.w, r1.x, r1.y
ieq r1.xy, cb3[18].yxyy, l(1, 1, 0, 0)
movc r0.x, r1.x, r0.x, cb3[14].w
movc r0.y, r1.y, r0.y, cb3[15].z
movc o2.z, r2.y, r0.z, cb3[12].w
sample_b_indexable(texture2d)(float,float,float,float) r1.xyzw, v5.xyxx, t0.xyzw, s0, cb1[180].x
movc r0.y, cb3[19].x, r1.w, r0.y
mov r3.xy, v6.xyxx
mov r3.z, l(0)
sample_b_indexable(texture2darray)(float,float,float,float) r2.xyw, r3.xyzx, t7.xywz, s5, cb1[180].x
mad r3.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mul r1.w, cb3[13].w, cb3[13].w
mul r1.w, r1.w, r2.w
mul r0.y, r0.y, r0.y
mad r0.y, r0.y, r0.y, r1.w
log r0.y, |r0.y|
mul r0.y, r0.y, l(0.250000)
exp r0.y, r0.y
mov r4.x, cb3[13].w
mov r4.z, l(1.000000)
mul r1.xyz, r1.xyzx, cb3[8].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r5.xyzw, v5.zwzz, t1.xyzw, s1, cb1[180].x
add r0.w, -r0.w, l(1.000000)
mul r5.xyzw, r0.wwww, r5.xyzw
mul r2.xyw, r5.xyxz, cb3[9].xyxz
mul r6.xyz, r1.xyzx, r2.xywx
dp3 r0.w, r5.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r6.w, -r0.w, l(1.000000)
mad r2.xyw, r5.xyxz, cb3[9].xyxz, -r1.xyxz
mad r7.xyz, r5.wwww, r2.xywx, r1.xyzx
ilt r0.w, cb3[16].z, l(2)
movc r1.w, cb3[16].z, r5.y, r5.x
ieq r2.xy, cb3[16].wzww, l(1, 2, 0, 0)
movc r2.y, r2.y, r5.z, r5.w
movc r8.w, r0.w, r1.w, r2.y
add r5.xyz, cb3[9].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, r8.wwww, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.xyz, r1.xyzx, r5.xyzx
mov r7.w, r5.w
movc r1.xyzw, r2.xxxx, r7.xyzw, r8.xyzw
movc r1.xyzw, cb3[16].wwww, r1.xyzw, r6.xyzw
mad_sat r0.y, cb3[12].z, r1.w, r0.y
mad_sat o2.x, cb3[11].w, r1.w, r0.x
dp3 r0.x, v0.xyzx, v0.xyzx
rsq r0.x, r0.x
mul r2.xyw, r0.xxxx, v0.xyxz
sample_b_indexable(texture2d)(float,float,float,float) r5.xyz, v6.zwzz, t6.xyzw, s4, cb1[180].x
mad r0.xw, r5.xxxy, l(2.000000, 0.000000, 0.000000, 2.000000), l(-1.000000, 0.000000, 0.000000, -1.000000)
dp2 r1.w, r0.xwxx, r0.xwxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
mul r1.w, v0.w, v0.w
mul r1.w, r1.w, r5.z
mul r0.y, r0.y, r0.y
mad r0.y, r0.y, r0.y, r1.w
log r0.y, |r0.y|
mul r0.y, r0.y, l(0.250000)
exp r0.y, r0.y
mul r6.xy, r0.xwxx, v0.wwww
mad r4.xyz, r3.xyzx, r4.xxzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r5.xyz, r6.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
dp3 r0.x, r4.xyzx, r5.xyzx
mul r4.xyw, r0.xxxx, r4.xyxz
div r4.xyz, r4.xywx, r4.zzzz
mad r4.xyz, -r6.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r4.xyzx
mul r0.x, cb3[13].z, cb4[15].x
sample_b_indexable(texture2d)(float,float,float,float) r0.w, v6.xyxx, t8.yzwx, s6, cb1[180].x
mad r0.w, r0.w, l(2.000000), l(-1.000000)
lt r1.w, l(0.000000), r0.w
if_nz r1.w
  sample_b_indexable(texture2d)(float,float,float,float) r5.xy, v6.xyxx, t4.xyzw, s7, cb1[180].x
else 
  sample_b_indexable(texture2d)(float,float,float,float) r5.xy, v6.xyxx, t5.xyzw, s7, cb1[180].x
endif 
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
sqrt r0.w, |r0.w|
mul r5.xy, r0.wwww, r5.xyxx
mul r0.xw, r0.xxxx, r5.xxxy
max r0.xw, r0.xxxw, l(-1.000000, 0.000000, 0.000000, -1.000000)
min r5.xy, r0.xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
dp2 r0.x, r5.xyxx, r5.xyxx
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
sqrt r5.z, r0.x
add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r6.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
dp3 r0.x, r4.xyzx, r6.xyzx
mul r4.xyw, r0.xxxx, r4.xyxz
div r4.xyz, r4.xywx, r4.zzzz
mad r4.xyz, -r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r4.xyzx
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, v2.zyxz
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r6.xyz, r0.xxxx, v1.zyxz
mul r7.xyz, r4.yyyy, r6.zyxz
mad r4.xyw, r4.xxxx, r5.zyzx, r7.xyxz
mad r4.xyz, r4.zzzz, r2.xywx, r4.xywx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r7.xyz, r0.xxxx, r4.xyzx
dp3 r0.w, r2.xywx, r7.xyzx
min r0.w, |r0.w|, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(-0.500000)
max r0.w, -r0.w, l(0.000000)
mad r0.y, r0.w, r0.w, r0.y
movc r0.z, r2.z, r0.z, l(1.000000)
mul o0.w, r0.z, cb3[15].w
mov r7.x, cb3[8].w
mov r7.z, l(1.000000)
mul r3.xyz, r3.xyzx, r7.xxzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
mul r6.xyz, r6.xyzx, r3.yyyy
mad r3.xyw, r3.xxxx, r5.xyxz, r6.xyxz
mad r3.xyz, r3.zzzz, r2.wyxw, r3.xywx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
add r0.z, -|r3.x|, l(1.000000)
sqrt r0.z, r0.z
mad r0.w, |r3.x|, l(-0.0187292993), l(0.074261)
mad r0.w, r0.w, |r3.x|, l(-0.212114394)
mad r0.w, r0.w, |r3.x|, l(1.57072878)
mul r1.w, r0.z, r0.w
mad r1.w, r1.w, l(-2.000000), l(3.14159274)
lt r3.xw, r3.xxxz, -r3.xxxz
and r1.w, r1.w, r3.x
mad r0.z, r0.w, r0.z, r1.w
add r0.z, r0.z, l(-1.57079637)
min r0.w, |r3.z|, |r3.y|
max r1.w, |r3.z|, |r3.y|
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, r0.w
mad r2.z, r1.w, l(0.0208350997), l(-0.085133)
mad r2.z, r1.w, r2.z, l(0.180141)
mad r2.z, r1.w, r2.z, l(-0.330299497)
mad r1.w, r1.w, r2.z, l(0.999866)
mul r2.z, r0.w, r1.w
lt r3.x, |r3.z|, |r3.y|
mad r2.z, r2.z, l(-2.000000), l(1.57079637)
and r2.z, r3.x, r2.z
mad r0.w, r0.w, r1.w, r2.z
and r1.w, r3.w, l(0xc0490fdb)
add r0.w, r0.w, r1.w
min r1.w, r3.z, r3.y
max r2.z, r3.z, r3.y
lt r1.w, r1.w, -r1.w
ge r2.z, r2.z, -r2.z
and r1.w, r1.w, r2.z
movc r0.w, r1.w, -r0.w, r0.w
min r0.yz, r0.yyzy, l(0.000000, 1.000000, 1.57079637, 0.000000)
add r0.z, r0.z, l(1.57079637)
mul r0.z, r0.z, l(81.169014)
round_ne r0.z, r0.z
max r0.w, r0.w, l(-3.14159274)
min r0.w, r0.w, l(3.14159274)
add r0.w, r0.w, l(3.14159274)
mul r0.w, r0.w, l(40.584507)
round_ne r0.w, r0.w
ftou r0.zw, r0.zzzw
imad r0.z, r0.w, l(256), r0.z
utof r0.z, r0.z
add r0.z, r0.z, l(-32767.000000)
mul o1.w, r0.z, l(0.0000305185094)
add_sat r0.z, cb0[3].w, cb2[5].z
add r0.w, cb0[3].x, -cb2[5].x
mad r0.z, r0.z, r0.w, cb2[5].x
iadd r0.w, cb3[18].z, l(1)
ult r0.w, r0.w, l(1)
movc r0.w, r0.w, l(0), l(11)
add r3.xyz, l(-1.000000, -1.000000, -1.000000, 0.000000), cb0[r0.w + 4].xyzx
mad r3.xyz, r0.zzzz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul o0.xyz, r1.xyzx, r3.xxxx
mul o2.y, r0.y, r3.y
mad r0.xyz, r4.xyzx, r0.xxxx, -r2.xywx
mad o1.xyz, r3.zzzz, r0.xyzx, r2.xywx
div r0.xy, v3.xyxx, v3.zzzz
div r0.zw, v4.xxxy, v4.zzzz
add o4.xy, -r0.zwzz, r0.xyxx
mov o2.w, l(0.501960814)
mov o3.xyzw, l(0,0,0,0)
ret 
// Approximately 201 instruction slots used