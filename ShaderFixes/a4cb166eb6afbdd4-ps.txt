// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a4cb166eb6afbdd4-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 08:39:01 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorWrap                         sampler      NA          NA    1        1
// LongRangeShadowSampler          sampler_c      NA          NA    2        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    1        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    2        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    3        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    4        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    5        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    6        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
// LongRangeShadow                   cbuffer      NA          NA    4        1
// GBufferMini                       cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecubearray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 12

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a4cb166eb6afbdd4-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb1[9].x
mul r10.y, r8.w, cb1[10].x
mul r10.z, r8.w, cb1[11].x
mul r10.w, r8.w, cb1[12].x
dp4 r11.x, r10.xyzw, cb1[17].xyzw
dp4 r11.y, r10.xyzw, cb1[18].xyzw
dp4 r11.z, r10.xyzw, cb1[19].xyzw
add r9.xyz, cb1[174].xyz, r11.xyz

mad r0.xy, v0.xyxx, cb1[50].zwzz, cb1[49].zwzz
mad r0.z, cb5[0].y, cb1[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t4.yzxw
mad r0.z, r0.z, cb1[67].z, cb1[67].x
mov r2.z, -r0.z
mul r0.zw, r0.xxxy, r2.zzzz
movc r2.xy, cb5[0].zzzz, r0.xyxx, r0.zwzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb1[17].xyzw
dp4 r0.y, r2.xyzw, cb1[18].xyzw
dp4 r0.z, r2.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t5.xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t6.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r3.xyz, -r0.xyzx, r9.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r3.xyzx
mad r5.xy, r1.xyxx, cb4[0].xyxx, r0.xyxx
mad r3.w, r0.z, cb4[0].z, cb4[0].w
mad r5.xy, r5.xyxx, cb4[1].xyxx, cb4[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t3.xxxx, s2, r3.w
dp3 r4.w, r0.xyzx, cb0[1].xyzx
add_sat r4.w, r4.w, cb0[1].w
mul r3.w, r3.w, r4.w
mad r3.w, r3.w, cb3[37].x, cb3[37].y
lt r4.w, l(0.000000), r3.w
if_nz r4.w
  dp3_sat r4.w, r1.xyzx, cb2[2].xyzx
  mul r2.xyz, r2.xyzx, r4.wwww
  dp3_sat r5.x, r1.xyzx, r4.xyzx
  mad r3.xyz, r3.xyzx, r1.wwww, cb2[2].xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx
  dp3 r1.w, r3.xyzx, cb2[2].xyzx
  dp3_sat r3.x, r1.xyzx, r3.xyzx
  mul r3.x, r3.x, r3.x
  mad r3.x, r3.x, l(-0.937500), l(1.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, l(3.14159274)
  mul r3.y, r4.w, r4.w
  mad r3.z, -r4.w, r4.w, l(1.000000)
  mul r3.z, r3.z, l(0.390625)
  max r3.y, r3.y, l(1.000000047E-034)
  div r3.y, r3.z, r3.y
  add r3.y, r3.y, l(1.000000)
  sqrt r3.y, r3.y
  add r3.y, r3.y, l(1.000000)
  mul r3.z, r5.x, r5.x
  mad r5.x, -r5.x, r5.x, l(1.000000)
  mul r5.x, r5.x, l(0.390625)
  max r3.z, r3.z, l(1.000000047E-034)
  div r3.z, r5.x, r3.z
  add r3.z, r3.z, l(1.000000)
  sqrt r3.z, r3.z
  add r3.z, r3.z, l(1.000000)
  div r3.xyz, l(0.062500, 2.000000, 2.000000, 0.000000), r3.xyzx
  mul r3.y, r3.z, r3.y
  add r1.w, -r1.w, l(1.000000)
  mul r3.z, r1.w, r1.w
  mul r3.xz, r3.yyzy, r3.xxzx
  mul r1.w, r1.w, r3.z
  mad r1.w, r1.w, l(0.156800), l(0.003200)
  mul r1.w, r1.w, r3.x
  mul r1.w, r4.w, r1.w
  mad r2.xyz, r2.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r1.wwww
  mul r2.xyz, r3.wwww, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[0].xyzx
else 
  mov r2.xyz, l(0,0,0,0)
endif 
dp3 r1.w, -r4.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r1.xyzx, -r1.wwww, -r4.xyzx
if_z cb1[184].z
  mul r1.w, cb1[174].w, l(0.722615957)
  mov r0.w, l(1.000000)
  mov r5.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
  mov r4.w, l(0)
  loop 
    uge r6.x, r4.w, l(15)
    breakc_nz r6.x
    imul null, r6.x, r4.w, l(7)
    dp4 r7.x, r0.xyzw, cb1[r6.x + 68].xyzw
    dp4 r7.y, r0.xyzw, cb1[r6.x + 69].xyzw
    dp4 r7.z, r0.xyzw, cb1[r6.x + 70].xyzw
    ge r6.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r6.yzw, r6.yyzw, cb1[r6.x + 72].xxyz, cb1[r6.x + 73].xxyz
    add r7.xyz, -|r7.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r6.yzw, r6.yyzw, r7.xxyz
    mul r6.y, r6.z, r6.y
    mul r6.y, r6.w, r6.y
    lt r6.z, l(0.000000), r6.y
    if_nz r6.z
      dp3 r7.x, r3.xyzx, cb1[r6.x + 68].xyzx
      dp3 r7.y, r3.xyzx, cb1[r6.x + 69].xyzx
      dp3 r7.z, r3.xyzx, cb1[r6.x + 70].xyzx
      mul r6.y, r6.y, cb1[r6.x + 73].w
      mov r7.w, cb1[r6.x + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyzw, r7.xyzw, t2.xyzw, s1, r1.w
      mul r7.xyzw, r7.xyzw, cb1[r6.x + 74].xxxy
      min r6.x, r3.w, r6.y
      mad r7.xyzw, r7.xyzw, r6.xxxx, r5.xyzw
      add r6.x, r3.w, -r6.x
      ge r6.y, l(0.000000), r6.x
      if_nz r6.y
        mov r5.xyzw, r7.xyzw
        mov r3.w, r6.x
        break 
      endif 
      mov r5.xyzw, r7.xyzw
      mov r3.w, r6.x
    endif 
    iadd r4.w, r4.w, l(1)
  endloop 
else 
  mov r5.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
endif 
add r0.x, r3.w, r5.w
lt r0.y, l(0.000000), r0.x
if_nz r0.y
  mul r0.y, cb1[183].w, l(0.722615957)
  add r0.z, -|r3.z|, r3.z
  mad r0.z, r3.w, r0.z, |r3.z|
  mad r0.z, r0.z, l(2.000000), l(2.000000)
  div r0.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r0.zzzz
  mul r0.zw, r0.zzzw, r3.yyyx
  mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t1.wxyz, s0, r0.y
  mov_sat r3.xyz, r0.yzwy
  movc r0.yzw, cb1[184].zzzz, r3.xxyz, r0.yyzw
  div r0.yzw, r0.yyzw, cb1[176].wwww
  mad r5.xyz, r0.yzwy, r0.xxxx, r5.xyzx
endif 
dp3_sat r0.x, r1.xyzx, r4.xyzx
mov r0.y, l(0.250000)
sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.x, r0.x, l(0.003200), r0.y
mul r0.x, r0.x, l(0.160000)
mad r0.xyz, r5.xyzx, r0.xxxx, r2.xyzx
mul r0.xyz, r0.xyzx, cb1[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r2.wwww, r0.xyzx
add r0.x, -r2.w, l(1.000000)
mul o0.w, r0.x, cb5[0].x
ret 
// Approximately 156 instruction slots used