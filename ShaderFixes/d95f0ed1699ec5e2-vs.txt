// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed d95f0ed1699ec5e2-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 10:30:57 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12
//
// }
//
// cbuffer MaterialWD2Building
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 ColorizeParams;             // Offset:   16 Size:    16 [unused]
//   float4 FakeInteriorTextureSize;    // Offset:   32 Size:    16
//   float4 LightIntensityCurveSel;     // Offset:   48 Size:    16
//   float4 WindowLightMaskTexture1Size;// Offset:   64 Size:    16
//   float3 DiffuseColor1;              // Offset:   80 Size:    12 [unused]
//   float AmountOfUnlitWindows;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12 [unused]
//   float FakeInteriorPerBuildingRandom;// Offset:  108 Size:     4
//   float3 DiffuseColor3;              // Offset:  112 Size:    12 [unused]
//   float FakeInteriorRandomUvOffset;  // Offset:  124 Size:     4
//   float3 DiffuseColorWindow;         // Offset:  128 Size:    12 [unused]
//   float FakeInteriorRotationAngle;   // Offset:  140 Size:     4
//   float3 FakeCeilingIntensity;       // Offset:  144 Size:    12 [unused]
//   float FakeInteriorTiling;          // Offset:  156 Size:     4 [unused]
//   float3 FakeCeilingLightIntensity;  // Offset:  160 Size:    12 [unused]
//   float GrungeOpacity;               // Offset:  172 Size:     4 [unused]
//   float3 FakeFloorIntensity;         // Offset:  176 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  188 Size:     4 [unused]
//   float3 FakeInteriorHeightParams;   // Offset:  192 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  204 Size:     4 [unused]
//   float3 RoundedCornersParameters;   // Offset:  208 Size:    12 [unused]
//   float MaskChannelUsageGreen;       // Offset:  220 Size:     4 [unused]
//   float3 WindowLightIntensity;       // Offset:  224 Size:    12 [unused]
//   float MaskChannelUsageRed;         // Offset:  236 Size:     4 [unused]
//   float2 DiffuseTextureTiling2;      // Offset:  240 Size:     8 [unused]
//   float Metalness;                   // Offset:  248 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  252 Size:     4 [unused]
//   float2 FakeCeilingFadeDistance;    // Offset:  256 Size:     8 [unused]
//   float Reflectance;                 // Offset:  264 Size:     4 [unused]
//   float ReflectionRoughnessBias;     // Offset:  268 Size:     4 [unused]
//   float2 FakeFloorFadeDistance;      // Offset:  272 Size:     8 [unused]
//   float Roughness;                   // Offset:  280 Size:     4 [unused]
//   float WindowMetalness;             // Offset:  284 Size:     4 [unused]
//   float2 FakeInteriorSpacing;        // Offset:  288 Size:     8
//   int DiffuseTexture2ArrayIndex;     // Offset:  296 Size:     4 [unused]
//   int FakeInteriorTextureIndex;      // Offset:  300 Size:     4
//   float2 GrungeTiling;               // Offset:  304 Size:     8 [unused]
//   int GrungeTextureArrayIndex;       // Offset:  312 Size:     4 [unused]
//   int WindowLightMaskTextureArrayIndex;// Offset:  316 Size:     4 [unused]
//   float2 ManualOffsetUV;             // Offset:  320 Size:     8 [unused]
//   bool Colorize;                     // Offset:  328 Size:     4 [unused]
//   bool FakeInteriorUseRandomRotation;// Offset:  332 Size:     4
//   float2 WindowLightMaskWindowsCount;// Offset:  336 Size:     8 [unused]
//   bool FakeInteriorUseRandomTexture; // Offset:  344 Size:     4
//   bool GrungeNewMode;                // Offset:  348 Size:     4 [unused]
//   bool StaticMeshWindowLightSpecialMode;// Offset:  352 Size:     4 [unused]
//   bool WindowDressingParallax;       // Offset:  356 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Building__WindowLightVariationTexture__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Building__WindowLightVariationTexture__TexObj__    texture  float4          2d    0        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// MaterialWD2Building               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xy          1     NONE     int   xy  
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    1   xyzw        3     NONE   float       
// texcoord                 1   xyzw        4     NONE   float      w
// texcoord                 0   xyzw        5     NONE   float      w
// texcoord                 4   xyz         6     NONE   float   xyz 
// texcoord                 5   xy          7     NONE   float   xy  
// texcoord                 8   xyzw        8     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
// TEXCOORD                 9   x           9     NONE   float   x   
// SV_Position              0   xyzw       10      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v4.w
dcl_input v5.w
dcl_input v6.xyz
dcl_input v7.xy
dcl_input v8.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_output o9.x
dcl_output_siv o10.xyzw, position
dcl_temps 12

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed d95f0ed1699ec5e2-vs.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb1[9].x
mul r10.y, r8.w, cb1[10].x
mul r10.z, r8.w, cb1[11].x
mul r10.w, r8.w, cb1[12].x
dp4 r11.x, r10.xyzw, cb1[17].xyzw
dp4 r11.y, r10.xyzw, cb1[18].xyzw
dp4 r11.z, r10.xyzw, cb1[19].xyzw
add r9.xyz, cb1[174].xyz, r11.xyz

mad r0.z, v2.x, l(2.000000), l(-1.000000)
add r0.w, |r0.z|, l(0.200000)
min r0.w, r0.w, l(1.000000)
mov r1.y, v6.z
itof r2.xyz, v0.xyzx
mad r2.xyz, r2.xyzx, cb2[3].yyyy, cb2[3].xxxx
mov r1.x, r2.z
dp2 r1.z, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r3.xy, v7.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r3.z, v6.x
mov r2.w, l(1.000000)
dp3 r1.x, r2.xywx, r3.xyzx
mov r3.xy, v7.xyxx
mov r3.z, v6.y
dp3 r1.y, r2.xywx, r3.xyzx
add r3.xyz, r1.xyzx, -cb1[174].xyzx
dp3 r2.y, r3.xyzx, r3.xyzx
sqrt r2.y, r2.y
mul r2.y, r2.y, l(0.020000)
min r2.y, r2.y, l(1.000000)
add r2.y, -r2.y, l(1.000000)
mul r2.y, r2.y, l(4.000000)
mul o0.w, r0.w, r2.y
mul r2.yw, v7.yyyx, l(0.000000, 1.000000, 0.000000, -1.000000)
mad r4.xy, v2.zyzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r4.xyxx, r2.ywyy
dp2 r0.y, r4.xyxx, v7.xyxx
mov o0.xyz, r0.xyzx
add r2.xy, r2.xzxx, -cb2[5].xzxx
mul r4.xy, v8.wyww, l(255.000000, 63.750000, 0.000000, 0.000000)
mad r0.w, r2.y, cb2[1].y, r4.x
round_ni r2.w, r4.y
mad r4.xy, v8.xwxx, l(255.000000, 255.000000, 0.000000, 0.000000), r2.wwww
mad r2.xy, r2.xyxx, cb2[1].xyxx, r4.xyxx
add r2.xy, r2.xyxx, l(0.001000, 0.001000, 0.000000, 0.000000)
div o7.zw, r2.xxxy, cb3[4].xxxy
mul r0.w, r0.w, l(0.062500)
round_ni r0.w, r0.w
min r0.w, r0.w, l(6.000000)
mad r0.w, v8.z, l(7.000000), -r0.w
mul_sat o1.w, r0.w, l(4.000000)
mad r4.xyz, r0.xyzx, l(0.300000, 0.300000, 0.220000, 0.000000), r1.xyzx
mov r4.w, l(1.000000)
dp4 o1.x, r4.xyzw, cb1[29].xyzw
dp4 o1.y, r4.xyzw, cb1[30].xyzw
dp4 o1.z, r4.xyzw, cb1[31].xyzw
mov r2.x, cb2[5].z
mov r2.y, cb2[4].z
dp2 r0.w, cb3[12].yzyy, r2.xyxx
add r0.w, r0.w, cb3[12].x
add r2.x, -r0.w, r2.z
mul r2.x, r2.x, cb3[18].y
round_pi r2.x, r2.x
mad r0.w, r2.x, cb3[18].x, r0.w
add r0.w, r0.w, v6.z
round_pi r2.x, r0.w
add r4.z, r0.w, -r9.z
mad r0.w, v8.y, cb3[6].w, r2.x
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.546875)
frc r0.w, r0.w
add r2.x, r0.w, l(-0.500000)
mul r2.x, r2.x, cb3[7].w
mul r2.y, r0.w, l(4.000000)
mul r0.w, r0.w, cb3[2].z
round_ni r0.w, r0.w
round_ni r2.y, r2.y
mul r2.y, r2.y, l(0.250000)
movc r2.y, cb3[20].w, r2.y, cb3[8].w
mad r2.y, v8.y, cb3[6].w, r2.y
mul r2.y, r2.y, l(6.28318548)
sincos r5.x, r6.x, r2.y
mov r7.x, -r6.x
mov r7.y, r5.x
mov r7.z, r6.x
dp2 r2.y, r1.yxyy, r7.xyxx
mad r5.x, r2.x, l(0.890000), r2.y
dp2 r2.y, r1.yxyy, r7.yzyy
mad r5.y, r2.x, l(1.120000), r2.y
mov o2.xy, r5.xyxx
dp4 o2.w, cb0[2].xyzw, cb3[3].xyzw
mov o2.z, r1.z
dp2 r2.y, r9.yxyy, r7.xyxx
dp2 r6.x, -r0.yxyy, r7.xyxx
mad o3.x, r2.x, l(0.890000), r2.y
dp2 r2.y, r9.yxyy, r7.yzyy
dp2 r6.y, -r0.yxyy, r7.yzyy
mad o3.y, r2.x, l(1.120000), r2.y
add r2.xyz, -r1.xyzx, r9.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r3.w, r2.w
sqrt r2.w, r2.w
add r2.w, r2.w, l(-115.000000)
mul_sat r2.w, r2.w, l(0.040000)
add r2.w, -r2.w, l(1.000000)
mul r2.xyz, r2.xyzx, r3.wwww
dp3 r2.x, r0.xyzx, r2.xyzx
lt r7.xyzw, |r0.yzxz|, |r0.xxyy|
and r0.xy, r7.ywyy, r7.xzxx
mad r0.z, r2.x, r2.x, l(-1.000000)
mad o3.w, r2.w, r0.z, l(1.000000)
mov o3.z, r9.z
mov o4.xy, r6.xyxx
dp2 r0.z, r5.xyxx, r6.xyxx
mov o4.z, -r0.z
dp3 r0.z, v6.xyzx, l(0.005000, 0.005900, 0.003100, 0.000000)
mul r0.z, r0.z, l(13.000000)
frc r0.z, r0.z
mad r2.x, cb0[34].x, l(0.010000), r0.z
mad r3.w, r0.z, l(0.100000), r2.x
lt r0.z, l(0.700000), r0.z
frc r3.w, r3.w
lt r3.w, l(0.800000), r3.w
movc r2.w, r3.w, l(0), l(1.000000)
mov r5.y, l(1.000000)
mov r2.yz, l(0,0.500000,1.000000,0)
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r2.xyxx, t0.xyzw, s0, l(0.000000)
movc r4.xy, r0.zzzz, r2.zwzz, r5.xyxx
mov o4.w, r4.x
itof r2.xy, v1.xyxx
mad o5.xy, r2.xyxx, cb2[2].zwzz, cb2[2].xyxx
mov o5.zw, l(0,0,0,0)
movc r1.w, r0.y, r1.z, r1.y
movc r0.xy, r0.xxxx, r1.yzyy, r1.xwxx
mul o7.xy, r1.xyxx, cb1[180].wwww
mul r0.z, cb1[66].x, l(0.062500)
mul o6.zw, r0.zzzz, r0.xxxy
mov o6.x, v4.w
add o6.y, -v5.w, l(1.000000)
mad_sat r0.x, |r4.z|, l(-0.010000), l(1.500000)
add r0.yz, v6.xxyx, -r9.xxyx
dp2 r0.y, r0.yzyy, r0.yzyy
mad_sat r0.y, r0.y, l(-0.000080), l(1.800000)
min r4.w, r0.y, r0.x
mov o8.xyz, r4.yzwy
itof r0.x, cb3[18].w
movc o9.x, cb3[21].z, r0.w, r0.x
mul r0.x, r3.y, cb1[58].y
mul r0.y, r3.y, cb1[59].y
mul r0.z, r3.y, cb1[60].y
mul r0.w, r3.y, cb1[61].y
mad r1.x, r3.z, cb1[58].z, cb1[58].w
mad r1.y, r3.z, cb1[59].z, cb1[59].w
mad r1.z, r3.z, cb1[60].z, cb1[60].w
mad r1.w, r3.z, cb1[61].z, cb1[61].w
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.x, r3.x, cb1[58].x
mul r1.y, r3.x, cb1[59].x
mul r1.z, r3.x, cb1[60].x
mul r1.w, r3.x, cb1[61].x
add o10.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 152 instruction slots used