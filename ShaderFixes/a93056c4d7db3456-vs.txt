// asmtool.py --auto-fix-vertex-halo -i --only-autofixed a93056c4d7db3456-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:00:01 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4 [unused]
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer EmitterOld
// {
//
//   float4 ParticleLightColors[4];     // Offset:    0 Size:    64
//   float4 ParticleLightDirections[4]; // Offset:   64 Size:    64
//   float4 ParticleLightPositions[4];  // Offset:  128 Size:    64
//   float4 ParticleSpotParams[4];      // Offset:  192 Size:    64
//   float4x4 ParticleSpotProjMatrix;   // Offset:  256 Size:    64 [unused]
//   float4 ParticleSpotShadowTextureSize;// Offset:  320 Size:    16 [unused]
//   float4 ParticleSpotVideoUnpack[8]; // Offset:  336 Size:   128 [unused]
//   float4 RainColor;                  // Offset:  464 Size:    16 [unused]
//   float4x4 ShadowOcclusionProjMatrix;// Offset:  480 Size:    64 [unused]
//   float4 SoftClipPlane;              // Offset:  544 Size:    16 [unused]
//   float4 UniformFog;                 // Offset:  560 Size:    16 [unused]
//   float3 TweakedLightDirection;      // Offset:  576 Size:    12 [unused]
//   float OneOverSoftRange;            // Offset:  588 Size:     4 [unused]
//   float2 AlphaScaleOffset;           // Offset:  592 Size:     8
//   float ParticleZOffset;             // Offset:  600 Size:     4
//   float QuadTessellationFactor;      // Offset:  604 Size:     4 [unused]
//   float2 FarSoftDistanceRange;       // Offset:  608 Size:     8 [unused]
//   int ParticleLightCount;            // Offset:  616 Size:     4
//   uint FogParticleCount;             // Offset:  620 Size:     4 [unused]
//   float ParticleLightAttenuations[4];// Offset:  624 Size:    52
//
// }
//
// cbuffer SceneParticleAttributes
// {
//
//   float4 DistortionSpeedTiling;      // Offset:    0 Size:    16 [unused]
//   float4 OpacityCompensationKeyFrames[5];// Offset:   16 Size:    80 [unused]
//   float AlphaTestValue;              // Offset:   96 Size:     4 [unused]
//   float DiffuseLightingPowerExponent;// Offset:  100 Size:     4 [unused]
//   float DistortionStrength;          // Offset:  104 Size:     4 [unused]
//   float HDRMul;                      // Offset:  108 Size:     4
//   float Translucency;                // Offset:  112 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    3        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// EmitterOld                        cbuffer      NA          NA    3        1
// SceneParticleAttributes           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyzw
// color                    1   xyzw        1     NONE   float   xyzw
// texcoord                 4   xyzw        2     NONE   float   xyz 
// texcoord                 5   xyzw        3     NONE   float   xyz 
// texcoord                 6   xyzw        4     NONE   float   xyzw
// texcoord                 7   xyzw        5     NONE   float   xyzw
// texcoord                 8   xyzw        6     NONE   float   xyz 
// texcoord                 3   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   x           5     NONE   float   x   
// SV_Position              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[43], dynamicIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.x
dcl_output_siv o6.xyzw, position
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v0.yyyy, v3.xyzx
mad r0.xyz, v0.xxxx, v2.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, v4.xyzx
add r1.x, -r0.x, cb0[17].w
add r1.y, -r0.y, cb0[18].w
add r1.z, -r0.z, cb0[19].w
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb3[37].zzzz, r0.xyzx
sincos r1.x, r2.x, v4.w
mov r3.x, -r1.x
add r1.yz, v0.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r3.y, r2.x
dp2 r2.z, r1.zyzz, r3.xyxx
mov r3.z, r1.x
dp2 r2.w, r1.zyzz, r3.yzyy
add r1.xy, r2.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mad o4.xy, r1.xyxx, v5.zwzz, v5.xyxx
mad o4.zw, r1.xxxy, v5.zzzw, v6.xxxy
mad o0.w, v1.w, cb3[37].x, cb3[37].y
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[54].xyzw
dp4 r1.y, r0.xyzw, cb0[55].xyzw
dp4 r1.z, r0.xyzw, cb0[56].xyzw
dp4 r1.w, r0.xyzw, cb0[57].xyzw
add r2.xyz, -r0.xyzx, cb0[174].xyzx
mul r3.xyz, v1.zyxz, v1.zyxz
add r4.xyz, r0.xyzx, -v4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
sqrt r2.w, r2.w
div r4.xyz, r4.xyzx, r2.wwww
mov r5.xyzw, l(0,0,0,0)
mov r3.w, l(0)
loop 
  ige r4.w, r3.w, cb3[38].z
  breakc_nz r4.w
  add r6.xyz, -v4.xyzx, cb3[r3.w + 8].xyzx
  dp3 r4.w, r6.xyzx, r6.xyzx
  sqrt r4.w, r4.w
  div r6.xyz, r6.xyzx, r4.wwww
  add r7.xyz, -r0.xyzx, cb3[r3.w + 8].xyzx
  dp3 r6.w, r7.xyzx, r7.xyzx
  rsq r7.w, r6.w
  mul r7.xyz, r7.wwww, r7.xyzx
  div r4.w, r4.w, r2.w
  min r4.w, r4.w, l(1.000000)
  add r4.w, -r4.w, l(1.000000)
  dp3 r6.x, r6.xyzx, r4.xyzx
  mad_sat r6.x, r6.x, l(0.585800), l(0.585800)
  div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r6.z, r6.w, cb3[r3.w + 39].x
  mad r6.z, -r6.z, r6.z, l(1.000000)
  max r6.z, r6.z, l(0.000000)
  mul r6.z, r6.z, r6.z
  mul r6.y, r6.z, r6.y
  min r6.y, r6.y, l(1000000.000000)
  dp3 r6.z, -r7.xyzx, cb3[r3.w + 4].xyzx
  mad_sat r6.w, r6.z, cb3[r3.w + 12].x, cb3[r3.w + 12].y
  lt r6.z, r6.z, cb3[r3.w + 4].w
  mul r6.x, r6.y, r6.x
  mul r6.x, r6.w, r6.x
  movc r6.x, r6.z, l(0), r6.x
  mad r4.w, cb3[r3.w + 0].w, r4.w, r6.x
  mad r5.xyzw, icb[r3.w + 0].xyzw, r4.wwww, r5.xyzw
  iadd r3.w, r3.w, l(1)
endloop 
mov o1.xyzw, r5.xyzw
dp4 r4.x, r0.xyzw, cb2[12].xyzw
dp4 r4.y, r0.xyzw, cb2[13].xyzw
dp4_sat r0.w, r0.xyzw, cb2[14].xyzw
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r5.xyz, cb2[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r4.zw, r5.xxxy, cb2[16].xxxy
div r5.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), cb2[16].xyxz
mad r4.xy, r4.xyxx, r4.zwzz, r5.xyxx
lt r2.w, l(0.000000), cb2[17].y
div_sat r3.w, r0.w, cb2[17].y
mul r3.w, r3.w, cb2[17].x
and r2.w, r2.w, r3.w
lt r3.w, cb2[17].y, l(1.000000)
add_sat r0.w, r0.w, -cb2[17].y
add r5.x, -cb2[17].y, l(1.000000)
div r0.w, r0.w, r5.x
log r0.w, |r0.w|
mul r0.w, r0.w, cb2[16].w
exp r0.w, r0.w
add r5.x, r5.z, -cb2[17].x
mul r0.w, r0.w, r5.x
and r0.w, r0.w, r3.w
add r0.w, r0.w, r2.w
div r2.w, r0.w, cb2[16].z
round_ni r3.w, r0.w
div r3.w, r3.w, cb2[16].z
round_pi r0.w, r0.w
div r0.w, r0.w, cb2[16].z
mov_sat r5.x, r4.y
div r5.x, r5.x, cb2[16].z
add r4.z, r3.w, r5.x
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r4.xzxx, t0.xyzw, s0, l(0.000000)
add r6.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r4.z, r6.y, l(0.250000), r5.y
min r4.z, r4.z, r6.x
div r5.x, r5.x, cb2[16].z
add r5.x, r3.w, r5.x
add r2.w, r2.w, -r5.x
mul r2.w, r2.w, cb2[16].z
div_sat r2.w, r2.w, r4.z
add r0.w, -r3.w, r0.w
mad r0.w, r2.w, r0.w, r3.w
add r4.w, r5.w, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xywx, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r4.xywx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r4.xywx, t1.xyzw, s0, l(0.000000)
log r5.xyzw, |r5.xyzw|
mul r5.xyzw, r5.xyzw, cb2[22].xxxx
exp r5.xyzw, r5.xyzw
log r6.xyzw, |r6.xyzw|
mul r6.xyzw, r6.xyzw, cb2[22].xxxx
exp r6.xyzw, r6.xyzw
log r4.xyzw, |r4.xyzw|
mul r4.xyzw, r4.xyzw, cb2[22].xxxx
exp r4.xyzw, r4.xyzw
add r0.w, cb2[19].z, cb2[20].z
add r0.w, -r0.z, r0.w
mul_sat r0.w, r0.w, l(0.0333333351)
add r0.w, -r0.w, l(1.000000)
add r7.xyzw, -r5.xyzw, cb1[9].xyzw
mad r5.xyzw, r0.wwww, r7.xyzw, r5.xyzw
add r7.xyzw, -r6.xyzw, cb1[10].xyzw
mad r6.xyzw, r0.wwww, r7.xyzw, r6.xyzw
add r7.xyzw, -r4.xyzw, cb1[11].xyzw
mad r4.xyzw, r0.wwww, r7.xywz, r4.xywz
add r5.xyz, r5.xyzx, r6.xyzx
add r5.xyz, r4.xywx, r5.xyzx
mov r4.x, r5.w
mov r4.y, r6.w
add r4.xyz, r4.xyzx, r5.xyzx
mul o3.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
dp3 r0.w, r2.xyzx, -cb0[173].xyzx
add r0.w, r0.w, -cb0[67].x
add o2.w, r0.w, r0.w
mul_sat o0.xyz, r3.xyzx, cb4[6].wwww

// Relocated to here with asmtool.py
mov o6.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed a93056c4d7db3456-vs.txt
ne r8.w, r1.w, l(1.0)
if_nz r8.w
  add r8.w, r1.w, -r8.y
  mad r1.x, r8.w, r8.x, r1.x
endif

dp4 o2.x, r1.xyzw, cb0[1].xyzw
dp4 o2.y, r1.xyzw, cb0[2].xyzw
dp4 o2.z, r1.xyzw, cb0[4].xyzw
add r0.xyz, r0.xyzx, -cb0[174].xyzx
dp3 r0.x, cb0[173].xyzx, r0.xyzx
mul o3.w, r0.x, cb0[67].w

// mov o6.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o5.x, v6.z
ret 
// Approximately 152 instruction slots used