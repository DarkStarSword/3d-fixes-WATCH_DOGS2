// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 96180e1cccf14162-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:13 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Building
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 ColorizeParams;             // Offset:   16 Size:    16 [unused]
//   float4 FakeInteriorTextureSize;    // Offset:   32 Size:    16 [unused]
//   float4 LightIntensityCurveSel;     // Offset:   48 Size:    16 [unused]
//   float4 WindowLightMaskTexture1Size;// Offset:   64 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   80 Size:    12 [unused]
//   float AmountOfUnlitWindows;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12 [unused]
//   float FakeInteriorPerBuildingRandom;// Offset:  108 Size:     4 [unused]
//   float3 DiffuseColor3;              // Offset:  112 Size:    12 [unused]
//   float FakeInteriorRandomUvOffset;  // Offset:  124 Size:     4 [unused]
//   float3 DiffuseColorWindow;         // Offset:  128 Size:    12 [unused]
//   float FakeInteriorRotationAngle;   // Offset:  140 Size:     4 [unused]
//   float3 FakeCeilingIntensity;       // Offset:  144 Size:    12 [unused]
//   float FakeInteriorTiling;          // Offset:  156 Size:     4 [unused]
//   float3 FakeCeilingLightIntensity;  // Offset:  160 Size:    12 [unused]
//   float GrungeOpacity;               // Offset:  172 Size:     4 [unused]
//   float3 FakeFloorIntensity;         // Offset:  176 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  188 Size:     4 [unused]
//   float3 FakeInteriorHeightParams;   // Offset:  192 Size:    12 [unused]
//   float MaskChannelUsageBlue;        // Offset:  204 Size:     4 [unused]
//   float3 RoundedCornersParameters;   // Offset:  208 Size:    12 [unused]
//   float MaskChannelUsageGreen;       // Offset:  220 Size:     4 [unused]
//   float3 WindowLightIntensity;       // Offset:  224 Size:    12 [unused]
//   float MaskChannelUsageRed;         // Offset:  236 Size:     4 [unused]
//   float2 DiffuseTextureTiling2;      // Offset:  240 Size:     8 [unused]
//   float Metalness;                   // Offset:  248 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  252 Size:     4
//   float2 FakeCeilingFadeDistance;    // Offset:  256 Size:     8 [unused]
//   float Reflectance;                 // Offset:  264 Size:     4 [unused]
//   float ReflectionRoughnessBias;     // Offset:  268 Size:     4 [unused]
//   float2 FakeFloorFadeDistance;      // Offset:  272 Size:     8 [unused]
//   float Roughness;                   // Offset:  280 Size:     4 [unused]
//   float WindowMetalness;             // Offset:  284 Size:     4 [unused]
//   float2 FakeInteriorSpacing;        // Offset:  288 Size:     8 [unused]
//   int DiffuseTexture2ArrayIndex;     // Offset:  296 Size:     4 [unused]
//   int FakeInteriorTextureIndex;      // Offset:  300 Size:     4 [unused]
//   float2 GrungeTiling;               // Offset:  304 Size:     8 [unused]
//   int GrungeTextureArrayIndex;       // Offset:  312 Size:     4 [unused]
//   int WindowLightMaskTextureArrayIndex;// Offset:  316 Size:     4 [unused]
//   float2 ManualOffsetUV;             // Offset:  320 Size:     8 [unused]
//   bool Colorize;                     // Offset:  328 Size:     4 [unused]
//   bool FakeInteriorUseRandomRotation;// Offset:  332 Size:     4 [unused]
//   float2 WindowLightMaskWindowsCount;// Offset:  336 Size:     8 [unused]
//   bool FakeInteriorUseRandomTexture; // Offset:  344 Size:     4 [unused]
//   bool GrungeNewMode;                // Offset:  348 Size:     4 [unused]
//   bool StaticMeshWindowLightSpecialMode;// Offset:  352 Size:     4
//   bool WindowDressingParallax;       // Offset:  356 Size:     4 [unused]
//
// }
//
// cbuffer BuildingAtlasWindowDescs
// {
//
//   uint4 WindowSetups[512];           // Offset:    0 Size:  8192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Building__ColorizeTexture1__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Building__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// MaterialWD2Building__MaskTexture1__SampObj__    sampler      NA          NA    2        1
// MaterialWD2Building__NormalTexture1__SampObj__    sampler      NA          NA    3        1
// MaterialWD2Building__DiffuseTexture2__SampObj__    sampler      NA          NA    4        1
// MaterialWD2Building__WindowLightMaskTexture1__SampObj__    sampler      NA          NA    5        1
// ColorWrap                         sampler      NA          NA    6        1
// ShadowRealSampler               sampler_c      NA          NA    7        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    0        1
// Viewport__RainOcclusionShadowMap__TexObj__    texture  float4          2d    1        1
// Viewport__RaindropRippleTexture    texture  float4     2darray    2        1
// MaterialWD2Building__ColorizeTexture1__TexObj__    texture  float4          2d    3        1
// MaterialWD2Building__DiffuseTexture1__TexObj__    texture  float4          2d    4        1
// MaterialWD2Building__MaskTexture1__TexObj__    texture  float4          2d    5        1
// MaterialWD2Building__NormalTexture1__TexObj__    texture  float4          2d    6        1
// MaterialWD2Building__DiffuseTexture2__TexObj__    texture  float4     2darray    7        1
// MaterialWD2Building__WindowLightMaskTexture1__TexObj__    texture  float4     2darray    8        1
// BuildingAtlasMaterials__Materials    texture   uint4         buf    9        1
// BuildingAtlasWindowDescs__WindowDescs    texture  float4         buf   10        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialWD2Building               cbuffer      NA          NA    2        1
// BuildingAtlasWindowDescs          cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xy          7     NONE    uint   xy  
// SV_Position              0   xyzw        8      POS   float       
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[512], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2darray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_resource_texture2darray (float,float,float,float) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (float,float,float,float) t10
dcl_input_ps linear sample v0.xyzw
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyzw
dcl_input_ps linear sample v3.xyzw
dcl_input_ps linear sample v4.xyzw
dcl_input_ps linear sample v5.xyzw
dcl_input_ps linear sample v6.xyz
dcl_input_ps constant v7.xy
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 21

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 96180e1cccf14162-ps.txt

mul r17.w, r17.x, r17.y
mul r19.x, r17.w, cb1[9].x
mul r19.y, r17.w, cb1[10].x
mul r19.z, r17.w, cb1[11].x
mul r19.w, r17.w, cb1[12].x
dp4 r20.x, r19.xyzw, cb1[17].xyzw
dp4 r20.y, r19.xyzw, cb1[18].xyzw
dp4 r20.z, r19.xyzw, cb1[19].xyzw
add r18.xyz, cb1[174].xyz, r20.xyz

sample_b_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t4.xyzw, s1, cb1[180].x
sample_b_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t5.xyzw, s2, cb1[180].x
sample_b_indexable(texture2d)(float,float,float,float) r2.xyz, v4.xyxx, t6.xyzw, s3, cb1[180].x
ishl r1.w, v7.x, l(2)
bfi r3.xyz, l(30, 30, 30, 0), l(2, 2, 2, 0), v7.xxxx, l(2, 3, 1, 0)
ld_indexable(buffer)(uint,uint,uint,uint) r2.w, r3.xxxx, t9.yzwx
and r3.x, r2.w, l(1)
ubfe r3.w, l(4), l(24), r2.w
ld_indexable(buffer)(uint,uint,uint,uint) r3.y, r3.yyyy, t9.xzyw
ubfe r4.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r3.yyyy
utof r4.xy, r4.xyxx
mul r3.y, r4.x, l(0.00392156886)
mad r4.y, r4.y, l(0.00784313772), l(-1.000000)
add r4.z, -r0.w, l(1.000000)
mul r4.y, r4.z, r4.y
sample_b_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t3.xyzw, s0, cb1[180].x
swapc r6.x, r7.x, r3.x, l(0), r1.y
dp3 r1.y, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.y, -r1.y, l(1.000000)
mov r8.x, r1.z
mov r8.y, r2.z
mov r8.z, r6.x
dp3 r4.w, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add_sat r8.w, r1.y, -r4.w
mov r6.x, r8.w
mov r6.y, l(0)
movc r6.xy, r3.xxxx, r8.zwzz, r6.xyxx
ld_indexable(buffer)(uint,uint,uint,uint) r8.xyzw, r1.wwww, t9.xyzw
ld_indexable(buffer)(uint,uint,uint,uint) r9.xyzw, r3.zzzz, t9.xyzw
ubfe r10.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r8.yyxx
utof r10.xyzw, r10.zwxy
and r11.xyzw, r8.yxzw, l(255, 255, 255, 255)
utof r11.xyzw, r11.xyzw
ushr r1.yw, r8.yyyw, l(0, 24, 0, 24)
utof r1.yw, r1.yyyw
mad r1.yw, r1.yyyw, l(0.000000, 0.00784313772, 0.000000, 0.00784313772), l(0.000000, -1.000000, 0.000000, -1.000000)
mov r12.xy, r10.zwzz
mov r12.z, r11.x
ge r13.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r10.zwxy
mul r14.xyzw, r10.zwxy, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
mad r7.yzw, r12.xxyz, l(0.000000, 0.00392156886, 0.00392156886, 0.00392156886), l(0.000000, 0.055000, 0.055000, 0.055000)
mul r7.yzw, r7.yyzw, l(0.000000, 0.947867334, 0.947867334, 0.947867334)
log r7.yzw, r7.yyzw
mul r7.yzw, r7.yyzw, l(0.000000, 2.400000, 2.400000, 2.400000)
exp r7.yzw, r7.yyzw
movc r12.xy, r13.xyxx, r14.xyxx, r7.yzyy
ge r15.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r11.xyzw
mul r16.xyzw, r11.xyzw, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
movc r12.z, r15.x, r16.x, r7.w
mov r10.z, r11.y
mad r7.yzw, r10.xxyz, l(0.000000, 0.00392156886, 0.00392156886, 0.00392156886), l(0.000000, 0.055000, 0.055000, 0.055000)
mul r7.yzw, r7.yyzw, l(0.000000, 0.947867334, 0.947867334, 0.947867334)
log r7.yzw, r7.yyzw
mul r7.yzw, r7.yyzw, l(0.000000, 2.400000, 2.400000, 2.400000)
exp r7.yzw, r7.yyzw
movc r10.xy, r13.zwzz, r14.zwzz, r7.yzyy
movc r10.z, r15.y, r16.y, r7.w
mul r10.xyz, r5.xxxx, r10.xyzx
mov r12.w, r1.y
mov r10.w, l(0)
mad r10.xyzw, r5.yyyy, r12.xyzw, r10.xyzw
ubfe r8.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r8.zzww
utof r8.xyzw, r8.xyzw
mov r11.xy, r8.xyxx
ge r12.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r8.xyzw
mul r13.xyzw, r8.xyzw, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
mad r5.xyw, r11.xyxz, l(0.00392156886, 0.00392156886, 0.000000, 0.00392156886), l(0.055000, 0.055000, 0.000000, 0.055000)
mul r5.xyw, r5.xyxw, l(0.947867334, 0.947867334, 0.000000, 0.947867334)
log r5.xyw, r5.xyxw
mul r5.xyw, r5.xyxw, l(2.400000, 2.400000, 0.000000, 2.400000)
exp r5.xyw, r5.xyxw
movc r14.xy, r12.xyxx, r13.xyxx, r5.xyxx
movc r14.z, r15.z, r16.z, r5.w
mad r10.xyz, r5.zzzz, r14.xyzx, r10.xyzx
mov r11.xy, r8.zwzz
mad r5.xyz, r11.xywx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r5.xyz, r5.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r5.xyz, r5.xyzx
movc r8.xy, r12.zwzz, r13.zwzz, r5.xyxx
movc r8.z, r15.w, r16.w, r5.z
mov r8.w, r1.w
mad r5.xyzw, r1.zzzz, r8.xyzw, r10.xyzw
ubfe r8.xyzw, l(8, 8, 8, 8), l(16, 8, 16, 8), r9.xxyy
utof r8.xyzw, r8.zwxy
and r7.yzw, r9.xxyw, l(0, 255, 255, 255)
utof r7.yzw, r7.yyzw
mov r10.xy, r8.zwzz
mov r10.z, r7.y
ge r11.xyzw, l(10.314749, 10.314749, 10.314749, 10.314749), r8.zwxy
mul r12.xyzw, r8.zwxy, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000303526991)
mad r10.xyz, r10.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r10.xyz, r10.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r10.xyz, r10.xyzx
mul r10.xyz, r10.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r10.xyz, r10.xyzx
movc r13.xy, r11.xyxx, r12.xyxx, r10.xyxx
ge r10.xyw, l(10.314749, 10.314749, 0.000000, 10.314749), r7.yzyw
mul r14.xyz, r7.yzwy, l(0.000303526991, 0.000303526991, 0.000303526991, 0.000000)
movc r13.z, r10.x, r14.x, r10.z
mad r5.xyz, r2.zzzz, r13.xyzx, r5.xyzx
ushr r1.z, r9.y, l(24)
utof r1.z, r1.z
mad r13.w, r1.z, l(0.00784313772), l(-1.000000)
mov r8.z, r7.z
mad r8.xyz, r8.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r8.xyz, r8.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r8.xyz, r8.xyzx
movc r13.xy, r11.zwzz, r12.zwzz, r8.xyxx
movc r13.z, r10.y, r14.y, r8.z
mad r5.xyzw, r6.xxxx, r13.xyzw, r5.xyzw
if_nz r3.x
  ubfe r1.zw, l(0, 0, 8, 8), l(0, 0, 16, 8), r9.zzzz
  utof r8.xy, r1.zwzz
  and r1.z, r9.z, l(255)
  utof r8.z, r1.z
  mul r1.z, r8.z, l(0.000303526991)
  ge r6.xzw, l(10.314749, 0.000000, 10.314749, 10.314749), r8.xxyz
  mul r3.xz, r8.xxyx, l(0.000303526991, 0.000000, 0.000303526991, 0.000000)
  mad r8.xyz, r8.xyzx, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
  log r8.xyz, r8.xyzx
  mul r8.xyz, r8.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r8.xyz, r8.xyzx
  movc r9.xy, r6.xzxx, r3.xzxx, r8.xyxx
  movc r9.z, r6.w, r1.z, r8.z
  mad r5.xyz, r6.yyyy, r9.xyzx, r5.xyzx
  mad r5.w, r6.y, r1.y, r5.w
endif 
add_sat r1.x, r1.x, r5.w
ubfe r1.yz, l(0, 8, 8, 0), l(0, 16, 8, 0), r9.wwww
utof r7.yz, r1.yyzy
ge r1.yz, l(0.000000, 10.314749, 10.314749, 0.000000), r7.yyzy
mul r3.xz, r7.yyzy, l(0.000303526991, 0.000000, 0.000303526991, 0.000000)
mad r6.xyz, r7.yzwy, l(0.00392156886, 0.00392156886, 0.00392156886, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r6.xyz, r6.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
log r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r6.xyz, r6.xyzx
movc r8.xy, r1.yzyy, r3.xzxx, r6.xyxx
movc r8.z, r10.w, r14.z, r6.z
lt r1.y, r0.w, l(0.500000)
if_nz r1.y
  ubfe r1.y, l(4), l(20), r2.w
  deriv_rtx_coarse r6.xyz, v4.xyxx
  deriv_rty_coarse r7.yzw, v4.xxyx
  and r1.z, v7.y, l(3)
  ushr r1.w, v7.y, l(2)
  ineg r2.z, r1.z
  ult r9.xyz, r1.zzzz, l(1, 2, 3, 0)
  and r10.y, r2.z, r9.y
  iadd r1.z, r1.z, l(-3)
  movc r10.z, r9.y, l(0), r1.z
  ieq r10.w, r9.z, l(0)
  mov r10.x, r9.x
  and r9.xyzw, r10.xyzw, cb3[r1.w + 0].xyzw
  or r1.zw, r9.yyyw, r9.xxxz
  or r1.z, r1.w, r1.z
  and r1.w, r1.z, l(0x0000ffff)
  umin r1.w, r1.w, l(8)
  ushr r1.z, r1.z, l(16)
  mov r9.xyzw, l(0,0,0,0)
  mov r2.z, l(0)
  loop 
    uge r3.x, r2.z, r1.w
    breakc_nz r3.x
    ishl r3.x, r2.z, l(1)
    iadd r3.x, r1.z, r3.x
    ld_indexable(buffer)(float,float,float,float) r10.xyzw, r3.xxxx, t10.xyzw
    ge r10.xy, v4.xyxx, r10.xyxx
    ge r10.zw, r10.zzzw, v4.xxxy
    and r3.z, r10.z, r10.x
    and r3.z, r10.y, r3.z
    and r3.z, r10.w, r3.z
    if_nz r3.z
      iadd r3.x, r3.x, l(1)
      ld_indexable(buffer)(float,float,float,float) r9.xyzw, r3.xxxx, t10.zwxy
      break 
    endif 
    iadd r2.z, r2.z, l(1)
    mov r9.xyzw, l(0,0,0,0)
  endloop 
  mad r1.zw, v4.xxxy, r9.zzzw, r9.xxxy
  add r10.xy, r1.zwzz, v4.zwzz
  utof r10.z, r1.y
  mul r1.yzw, r6.xxyz, r9.zzzz
  mul r1.yzw, r1.yyzw, cb1[180].yyyy
  mul r6.xyz, r7.yzwy, r9.wwww
  mul r6.xyz, r6.xyzx, cb1[180].yyyy
  sample_d_indexable(texture2darray)(float,float,float,float) r6.xyzw, r10.xyzx, t7.wxyz, s4, r1.yzwy, r6.xyzx
  mul r1.yzw, r4.zzzz, r6.yyzw
  mul r1.yzw, r8.xxyz, r1.yyzw
  mov r2.z, r0.w
else 
  mov r1.yzw, l(0,0,0,0)
  mov r2.z, l(1.000000)
  mov r10.x, l(0)
  mov r6.x, l(0)
endif 
mad r0.xyz, r0.xyzx, r5.xyzx, r1.yzwy
utof r5.z, r3.w
mov r5.xy, v6.xyxx
sample_b_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t8.xyzw, s5, cb1[180].x
mul r1.yzw, r5.xxyz, v6.zzzz
mul r1.yzw, r1.yyzw, r4.zzzz
mul r1.yzw, r8.xxyz, r1.yyzw
lt r3.x, l(0.200000), r5.w
lt r3.z, r5.w, l(0.700000)
and r3.x, r3.z, r3.x
add r3.z, r5.w, cb0[36].z
add r3.z, r3.z, l(-0.500000)
mul r3.z, r3.z, l(4.000000)
frc r3.z, r3.z
mad r3.z, r3.z, l(2.000000), l(-1.000000)
add r3.z, |r3.z|, l(-0.200000)
mul_sat r3.z, r3.z, l(999.997986)
mad r3.w, r3.z, l(-2.000000), l(3.000000)
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, r3.w
mul r5.xyz, r1.yzwy, r3.zzzz
movc r1.yzw, r3.xxxx, r5.xxyz, r1.yyzw
frc r3.x, r5.w
add r3.x, r3.x, v3.w
add r3.x, -r3.x, v2.w
add r3.x, r3.x, l(-0.001000)
mul_sat r3.x, r3.x, l(20.408163)
mad r3.z, r3.x, l(-2.000000), l(3.000000)
mul r3.x, r3.x, r3.x
mul r3.x, r3.x, r3.z
mul r1.yzw, r1.yyzw, r3.xxxx
mul r1.yzw, r6.xxxx, r1.yyzw
mul r1.yzw, r1.yyzw, v1.wwww
dp3 r3.x, v0.xyzx, v0.xyzx
rsq r3.x, r3.x
mul r3.xzw, r3.xxxx, v0.xxyz
movc r4.z, v9.x, l(1.000000), l(-1.000000)
mul r5.xyz, r3.wxzw, r4.zzzz
dp3 r4.w, v2.xyzx, v2.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v2.xyzx
dp3 r4.w, v1.xyzx, v1.xyzx
rsq r4.w, r4.w
mul r7.yzw, r4.wwww, v1.xxyz
mad r8.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.x, r8.xyxx, r8.xyxx
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r8.z, r2.x
lt r2.x, r2.z, l(0.500000)
movc r8.xyz, r2.xxxx, l(0,0,1.000000,0), r8.xyzx
mul r2.yz, r8.xxyx, cb2[15].wwww
mul r7.yzw, r7.yyzw, r2.zzzz
mad r6.xyz, r2.yyyy, r6.xyzx, r7.yzwy
mad r6.xyz, r8.zzzz, r5.yzxy, r6.xyzx
ushr r2.y, r2.w, l(28)
utof r2.y, r2.y
mul r2.y, r2.y, r10.x
round_ni r2.y, r2.y
add r2.z, r2.y, v4.z
mad r8.x, r2.z, l(0.020000), r6.x
add r2.z, r2.y, r2.y
ge r2.z, r2.z, -r2.z
movc r2.zw, r2.zzzz, l(0,0,2.000000,0.500000), l(0,0,-2.000000,-0.500000)
mul r2.y, r2.w, r2.y
frc r2.y, r2.y
mad r2.y, r2.z, r2.y, v4.z
mad r8.y, r2.y, l(0.020000), r6.y
movc r6.xy, r2.xxxx, r8.xyxx, r6.xyxx
mad r2.x, -r4.x, l(0.00392156886), r7.x
mad r0.w, r0.w, r2.x, r3.y
movc o2.z, cb2[22].x, r7.x, r0.w
mad r0.w, r4.y, l(0.500000), l(0.500000)
mul r0.w, r0.w, l(255.000000)
round_ne r0.w, r0.w
mad o1.w, r0.w, l(0.00781261921), l(-1.000000)
ftoi r2.xy, v5.xyxx
and r2.xy, r2.xyxx, l(63, 63, 0, 0)
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t0.xyzw
mad r2.xy, r2.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, r2.xxxx, l(0.000000, 0.000000, -0.0620006211, 0.194514)
mad r7.xy, r2.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r2.zwzz
dp2 r7.z, r2.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r2.zw, v0.wwww, cb1[33].zzzw
mul r8.xy, r2.zwzz, r7.xzxx
mov r8.z, l(0)
add r4.xyw, r8.xyxz, v3.xyxz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s7, r4.w
dp2 r7.w, r2.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r7.xy, r2.zwzz, r7.ywyy
mov r7.z, l(0)
add r4.xyw, r7.xyxz, v3.xyxz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.y, r4.xyxx, t1.xxxx, s7, r4.w
add r0.w, r0.w, r3.y
mul r4.xy, r2.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r7.xy, r2.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r4.xyxx
dp2 r7.z, r2.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r8.xy, r2.zwzz, r7.xzxx
mov r8.z, l(0)
add r4.xyw, r8.xyxz, v3.xyxz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.y, r4.xyxx, t1.xxxx, s7, r4.w
add r0.w, r0.w, r3.y
dp2 r7.w, r2.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r2.xy, r2.zwzz, r7.ywyy
mov r2.z, l(0)
add r2.xyz, r2.xyzx, v3.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xxxx, s7, r2.z
add r0.w, r0.w, r2.x
add r2.xy, v3.xyxx, -cb1[28].xyxx
add r2.xy, -|r2.xyxx|, cb1[28].zwzz
mul r2.xy, r2.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
min_sat r2.x, r2.y, r2.x
mad r0.w, r0.w, l(0.250000), l(-1.000000)
mad r0.w, r2.x, r0.w, l(1.000000)
mad_sat r2.x, r5.x, l(0.500000), l(0.500000)
mul r0.w, r0.w, r2.x
mul r0.w, r0.w, cb0[3].x
add r2.xyz, cb0[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul o0.xyz, r0.xyzx, r2.xxxx
mul o2.y, r1.x, r2.y
mad r0.xyz, -r3.xzwx, r4.zzzz, r6.xyzx
mad r0.xyz, r2.zzzz, r0.xyzx, r5.yzxy
mov r2.xy, v5.zwzz
mov r2.z, l(0)
sample_b_indexable(texture2darray)(float,float,float,float) r2.xy, r2.xyzx, t2.xyzw, s6, cb1[180].x
mov_sat r5.x, r5.x
dp2 r1.x, r5.xxxx, r5.xxxx
add r1.x, r1.x, l(-1.000000)
max r1.x, r1.x, l(0.000000)
mul r0.w, r0.w, r1.x
mul r2.xy, r0.wwww, r2.xyxx
mad o1.xy, r2.xyxx, cb0[16].wwww, r0.xyxx
mul r0.xyw, r1.yzyw, cb1[176].wwww
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyw, r0.xyxw, l(64512.000000, 64512.000000, 0.000000, 64512.000000)
dp3 o3.w, r0.xywx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mov o0.w, l(1.000000)
mov o1.z, r0.z
mov o2.xw, l(0.400000,0,0,0)
mov o3.xyz, r0.xywx
ret 
// Approximately 345 instruction slots used