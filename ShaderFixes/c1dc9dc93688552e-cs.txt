//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:40 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer FillVolumeTexture
// {
//
//   float4 VFFogNoiseFadeParams;       // Offset:    0 Size:    16 [unused]
//   float4 VFFogTendril;               // Offset:   16 Size:    16 [unused]
//   float4 VFFogTurbulence;            // Offset:   32 Size:    16 [unused]
//   float4 VFLightPollutionParams;     // Offset:   48 Size:    16
//   float4 VFWorldTextureUVGen;        // Offset:   64 Size:    16
//   float3 VFFog3DNoiseParams;         // Offset:   80 Size:    12 [unused]
//   float VFFogBaseIntensity;          // Offset:   92 Size:     4 [unused]
//   float3 VFFog3DNoiseScrolling;      // Offset:   96 Size:    12 [unused]
//   float VFFogHeightIntensityBoost;   // Offset:  108 Size:     4 [unused]
//   float3 VFFogOutOfRangeParams;      // Offset:  112 Size:    12 [unused]
//   float VFFogLayeredIntensity;       // Offset:  124 Size:     4 [unused]
//   float3 VFFogTendrilMask01;         // Offset:  128 Size:    12 [unused]
//   float VFFogOpacityIntensityBoost;  // Offset:  140 Size:     4 [unused]
//   float3 VFFogTurbulenceMask01;      // Offset:  144 Size:    12 [unused]
//   float VFFogRegionHeightMax;        // Offset:  156 Size:     4 [unused]
//   float2 VFFogFadeOutMulAdd;         // Offset:  160 Size:     8 [unused]
//   float VFFogRegionIntensity;        // Offset:  168 Size:     4 [unused]
//   bool VFSunVisibilitySamplingValid; // Offset:  172 Size:     4
//   float2 VFFogNoiseScale;            // Offset:  176 Size:     8 [unused]
//   float2 VFSunVisibilitySamplingUV;  // Offset:  184 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorPointClamp                   sampler      NA          NA    0        1
// VolumetricFog__VFLightVolumeTexture__SampObj__    sampler      NA          NA    1        1
// FillVolumeTexture__VFLightPollutionTexture__SampObj__    sampler      NA          NA    2        1
// VolumetricFog__VFLightVolumeTexture__TexObj__    texture  float4          3d    0        1
// VolumetricFog__VFShadowVolumeTexture__TexObj__    texture  float4          3d    1        1
// FillVolumeTexture__VFLightPollutionTexture__TexObj__    texture  float4          2d    2        1
// FillVolumeTexture__VFSunVisibilitySamplingTexture__TexObj__    texture  float4          2d    3        1
// FillVolumeTexture__VFDensityVolumeTexture__TexObj__    texture  float4          3d    4        1
// FillVolumeTexture__VFOutputBuffer4        UAV  float4          3d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// VolumetricFog                     cbuffer      NA          NA    2        1
// FillVolumeTexture                 cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[36], immediateIndexed
dcl_constantbuffer cb3[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 4
dcl_thread_group 8, 8, 4
ult r0.xy, vThreadID.xyxx, cb2[28].xyxx
and r0.x, r0.y, r0.x
if_nz r0.x
  utof r0.xyz, vThreadID.xyzx
  add r1.xyz, r0.xyzx, l(0.500000, 0.500000, 1.000000, 0.000000)
  utof r2.xy, cb2[28].xyxx
  div r1.xy, r1.xyxx, r2.xyxx
  mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r0.w, r1.y, cb2[27].y
  mul r1.x, r1.x, cb2[27].x
  mul r0.w, r0.w, l(-1.000000)
  mul r2.xyz, r0.wwww, cb2[32].xyzx
  mad r1.xyw, r1.xxxx, cb2[31].xyxz, r2.xyxz
  add r1.xyw, r1.xyxw, cb2[33].xyxz
  dp3 r0.w, r1.xywx, r1.xywx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r1.xywx
  mul r0.w, r1.z, l(0.031250)
  exp r0.w, r0.w
  mad r0.w, r0.w, cb2[1].z, cb2[1].w
  mul r1.z, r0.z, l(0.031250)
  exp r1.z, r1.z
  mad r1.z, r1.z, cb2[1].z, cb2[1].w
  add r0.w, r0.w, r1.z
  mul r1.xyz, r0.wwww, r1.xywx
  mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb0[174].xyzx
  add r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  utof r3.xyz, cb2[28].xyzx
  div r0.xyz, r0.xyzx, r3.xyzx
  mov r3.xyz, vThreadID.xyzx
  mov r3.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r3.xyzw, t4.yzwx
  mul r1.w, r0.w, cb2[6].x
  ld_indexable(texture3d)(float,float,float,float) r2.w, r3.xyzw, t1.yzwx
  add r3.xyz, cb1[2].xyzx, cb2[35].xyzx
  mad r3.xyz, cb1[2].wwww, r3.xyzx, -cb2[35].xyzx
  dp3_sat r3.x, r3.xyzx, cb1[2].xyzx
  log r3.x, r3.x
  mul r3.x, r3.x, l(200.000000)
  exp r3.x, r3.x
  if_nz cb3[10].w
    sample_l_indexable(texture2d)(float,float,float,float) r3.y, cb3[11].zwzz, t3.yxzw, s0, l(0.000000)
  else 
    mov r3.y, l(1.000000)
  endif 
  add r3.z, -r3.y, l(1.000000)
  mad r3.x, r3.x, r3.z, r3.y
  mul r3.yzw, r2.wwww, cb1[0].xxyz
  dp3 r2.x, cb1[2].xyzx, r2.xyzx
  mad r2.y, -cb2[6].y, cb2[6].y, l(1.000000)
  mad r2.z, cb2[6].y, cb2[6].y, l(1.000000)
  dp2 r2.x, r2.xxxx, cb2[6].yyyy
  add r2.x, -r2.x, r2.z
  log r2.x, |r2.x|
  mul r2.xy, r2.xyxx, l(1.500000, 0.0795774683, 0.000000, 0.000000)
  exp r2.x, r2.x
  div r2.x, r2.y, r2.x
  mul r2.xyz, r2.xxxx, r3.yzwy
  mul r2.xyz, r3.xxxx, r2.xyzx
  mad r1.xy, r1.xyxx, cb3[4].xyxx, -cb3[4].zwzz
  mov r3.xy, |r1.xyxx|
  add r3.z, -r3.y, l(1.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xzxx, t2.xyzw, s2, l(0.000000)
  dp3 r1.x, r3.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  mad r1.x, cb3[3].y, r1.x, l(1.000000)
  div_sat r1.x, r1.z, r1.x
  add r1.x, -r1.x, l(1.000000)
  mul r1.x, r1.x, r1.x
  mul r1.xyz, r1.xxxx, r3.xyzx
  mul r1.xyz, r1.xyzx, cb3[3].xxxx
  mad r1.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
  mul r1.xyz, r1.xyzx, cb0[176].wwww
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.xyz, r1.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.xyz, r0.xyzx, t0.xyzw, s1, l(0.000000)
  add r0.xyz, r0.xyzx, r1.xyzx
  mul r0.xyz, r0.xyzx, cb2[7].yzwy
  mul r2.xyz, r1.wwww, r0.xyzx
  mad r2.w, cb2[7].x, r0.w, r1.w
  store_uav_typed u0.xyzw, vThreadID.xyzz, r2.xyzw
endif 
ret 
// Approximately 82 instruction slots used
