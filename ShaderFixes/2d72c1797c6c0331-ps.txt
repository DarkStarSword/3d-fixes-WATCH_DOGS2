// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 2d72c1797c6c0331-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 04:10:02 2017
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorWrap                         sampler      NA          NA    1        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    1        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    2        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    3        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    4        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    5        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// VolumetricFog                     cbuffer      NA          NA    2        1
// GBufferMini                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[185], dynamicIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[38], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecubearray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 15

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 2d72c1797c6c0331-ps.txt

mul r11.w, r11.x, r11.y
mul r13.x, r11.w, cb0[9].x
mul r13.y, r11.w, cb0[10].x
mul r13.z, r11.w, cb0[11].x
mul r13.w, r11.w, cb0[12].x
dp4 r14.x, r13.xyzw, cb0[17].xyzw
dp4 r14.y, r13.xyzw, cb0[18].xyzw
dp4 r14.z, r13.xyzw, cb0[19].xyzw
add r12.xyz, cb0[174].xyz, r14.xyz

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
mad r0.z, cb3[0].y, cb0[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t3.yzxw
mad r0.z, r0.z, cb0[67].z, cb0[67].x
mov r2.z, -r0.z
mul r0.zw, r0.xxxy, r2.zzzz
movc r2.xy, cb3[0].zzzz, r0.xyxx, r0.zwzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[17].xyzw
dp4 r0.y, r2.xyzw, cb0[18].xyzw
dp4 r0.z, r2.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r2.x, r1.xyww, t4.wxyz
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t5.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.yzw, -r0.xxyz, r12.xxyz
dp3 r1.w, r2.yzwy, r2.yzwy
rsq r1.w, r1.w
mul r2.yzw, r1.wwww, r2.yyzw
dp3 r1.w, -r2.yzwy, r1.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r1.xyzx, -r1.wwww, -r2.yzwy
if_z cb0[184].z
  mul r1.w, cb0[174].w, l(0.722615957)
  mov r0.w, l(1.000000)
  mov r4.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
  mov r5.x, l(0)
  loop 
    uge r5.y, r5.x, l(15)
    breakc_nz r5.y
    imul null, r5.y, r5.x, l(7)
    dp4 r6.x, r0.xyzw, cb0[r5.y + 68].xyzw
    dp4 r6.y, r0.xyzw, cb0[r5.y + 69].xyzw
    dp4 r6.z, r0.xyzw, cb0[r5.y + 70].xyzw
    ge r7.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r7.xyz, r7.xyzx, cb0[r5.y + 72].xyzx, cb0[r5.y + 73].xyzx
    add r6.xyz, -|r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r6.xyz, r7.xyzx, r6.xyzx
    mul r5.z, r6.y, r6.x
    mul r5.z, r6.z, r5.z
    lt r5.w, l(0.000000), r5.z
    if_nz r5.w
      dp3 r6.x, r3.xyzx, cb0[r5.y + 68].xyzx
      dp3 r6.y, r3.xyzx, cb0[r5.y + 69].xyzx
      dp3 r6.z, r3.xyzx, cb0[r5.y + 70].xyzx
      mul r5.z, r5.z, cb0[r5.y + 73].w
      mov r6.w, cb0[r5.y + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyzw, r6.xyzw, t2.xyzw, s1, r1.w
      mul r6.xyzw, r6.xyzw, cb0[r5.y + 74].xxxy
      min r5.y, r3.w, r5.z
      mad r6.xyzw, r6.xyzw, r5.yyyy, r4.xyzw
      add r5.y, r3.w, -r5.y
      ge r5.z, l(0.000000), r5.y
      if_nz r5.z
        mov r4.xyzw, r6.xyzw
        mov r3.w, r5.y
        break 
      endif 
      mov r4.xyzw, r6.xyzw
      mov r3.w, r5.y
    endif 
    iadd r5.x, r5.x, l(1)
  endloop 
else 
  mov r4.xyzw, l(0,0,0,0)
  mov r3.w, l(1.000000)
endif 
add r0.w, r3.w, r4.w
lt r1.w, l(0.000000), r0.w
if_nz r1.w
  mul r1.w, cb0[183].w, l(0.722615957)
  add r4.w, -|r3.z|, r3.z
  mad r3.z, r3.w, r4.w, |r3.z|
  mad r3.z, r3.z, l(2.000000), l(2.000000)
  div r3.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r3.zzzz
  mul r3.xy, r3.zwzz, r3.yxyy
  mad r3.xy, r3.xyxx, l(0.950000, 0.950000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t1.xyzw, s0, r1.w
  mov_sat r5.xyz, r3.xyzx
  movc r3.xyz, cb0[184].zzzz, r5.xyzx, r3.xyzx
  div r3.xyz, r3.xyzx, cb0[176].wwww
  mad r4.xyz, r3.xyzx, r0.wwww, r4.xyzx
endif 
dp3_sat r1.x, r1.xyzx, r2.yzwy
mov r1.y, l(0.250000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.w, r1.x, l(0.003200), r1.y
mul r0.w, r0.w, l(0.160000)
mul r1.xyz, r0.wwww, r4.xyzx
add r0.xyzw, r0.xyzx, -r12.xyzx
dp3 r1.w, r0.yzwy, r0.yzwy
sqrt r1.w, r1.w
div r3.xyzw, r0.xyzw, r1.wwww
mul r0.xyw, r3.yzyw, l(-0.488603, 0.488603, 0.000000, -0.488603)
mul r2.yzw, r0.xxxx, cb1[23].xxyz
mad r2.yzw, cb1[22].xxyz, l(0.000000, 0.282095, 0.282095, 0.282095), r2.yyzw
mad r2.yzw, r0.yyyy, cb1[24].xxyz, r2.yyzw
mad r2.yzw, r0.wwww, cb1[25].xxyz, r2.yyzw
mul r4.xyzw, r3.xyzw, r3.yzzz
mul r4.xyw, r4.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r2.yzw, r4.xxxx, cb1[26].xxyz, r2.yyzw
mad r2.yzw, r4.yyyy, cb1[27].xxyz, r2.yyzw
mad r3.x, r4.z, l(3.000000), l(-1.000000)
mul r3.x, r3.x, l(0.315392)
mad r2.yzw, r3.xxxx, cb1[28].xxyz, r2.yyzw
mad r2.yzw, r4.wwww, cb1[29].xxyz, r2.yyzw
mul r3.y, r3.y, r3.y
mad r3.y, r3.w, r3.w, -r3.y
mul r3.y, r3.y, l(0.546274)
mad r2.yzw, r3.yyyy, cb1[30].xxyz, r2.yyzw
mul r2.yzw, r2.yyzw, cb2[35].wwww
mul r3.w, r12.z, -cb2[37].x
mul r3.w, r3.w, l(1.442695)
exp r3.w, r3.w
mul r3.w, r1.w, r3.w
lt r4.z, l(0.010000), |r0.z|
mul r0.z, r0.z, cb2[37].x
mul r5.x, r0.z, l(-1.442695)
exp r5.x, r5.x
add r5.x, -r5.x, l(1.000000)
div r0.z, r5.x, r0.z
mul r0.z, r0.z, r3.w
movc r0.z, r4.z, r0.z, r3.w
mul r0.z, r0.z, cb2[36].w
mul r0.z, r0.z, l(0.300000)
min r0.z, r0.z, l(200.000000)
mul r3.w, r0.z, cb2[6].x
mad r0.z, cb2[7].x, r0.z, r3.w
mul r0.z, r0.z, l(-4.328085)
exp r0.z, r0.z
mul r5.xyz, r2.yzwy, r3.wwww
iadd r3.w, cb2[28].z, l(-1)
utof r3.w, r3.w
mul r3.w, r3.w, l(0.031250)
exp r3.w, r3.w
mad r3.w, r3.w, cb2[1].z, cb2[1].w
add r4.z, cb2[4].y, cb2[4].x
add r4.z, r4.z, -r12.z
div r4.z, r4.z, r3.z
max r4.z, r3.w, r4.z
min r4.z, r1.w, r4.z
mad r5.w, r3.z, r4.z, r12.z
add r5.w, r5.w, -cb2[34].y
add r6.x, -cb2[34].y, cb2[34].x
div_sat r5.w, r5.w, r6.x
add r5.w, -r5.w, l(1.000000)
mul r5.w, r5.w, cb2[34].z
log r5.w, |r5.w|
mul r5.w, r5.w, l(1.300000)
exp r5.w, r5.w
mul r6.y, r5.w, cb2[8].z
add r6.z, -r12.z, cb2[4].x
div r6.z, r6.z, r3.z
max r6.z, r3.w, r6.z
min r6.z, r1.w, r6.z
mad r6.w, r3.z, r6.z, r12.z
add r6.w, r6.w, -cb2[34].y
div_sat r6.w, r6.w, r6.x
add r6.w, -r6.w, l(1.000000)
mul r6.w, r6.w, cb2[34].z
log r6.w, |r6.w|
mul r6.w, r6.w, l(1.300000)
exp r6.w, r6.w
add r7.y, -r12.z, l(-100000.000000)
div r7.y, r7.y, r3.z
max r3.w, r3.w, r7.y
min r3.w, r1.w, r3.w
mad r7.y, r3.z, r3.w, r12.z
add r7.y, r7.y, -cb2[34].y
div_sat r6.x, r7.y, r6.x
add r6.x, -r6.x, l(1.000000)
mul r6.x, r6.x, cb2[34].z
log r6.x, |r6.x|
mul r6.x, r6.x, l(1.300000)
exp r6.x, r6.x
mul r7.xy, r6.wxww, cb2[8].zzzz
mul r2.yzw, r2.yyzw, cb2[7].yyzw
mul r2.yzw, r2.yyzw, cb2[6].xxxx
add r7.z, cb2[6].x, cb2[7].x
lt r7.w, r3.z, l(0.000000)
if_nz r7.w
  add r7.w, -r4.z, r6.z
  lt r8.x, l(0.000000), r7.w
  mad r8.y, r6.w, cb2[8].z, -r6.y
  add r8.z, r7.w, l(0.000001)
  div r8.y, r8.y, r8.z
  mul r8.z, r7.w, r7.z
  mul r7.w, r7.w, r8.y
  mad r8.y, r7.w, l(0.500000), r6.y
  mul r9.w, r8.y, r8.z
  mad r6.y, r6.y, l(2.000000), r7.w
  mul r6.y, r6.y, r8.z
  mul r6.y, r6.y, l(-0.721347511)
  exp r6.y, r6.y
  add r6.y, -r6.y, l(1.000000)
  mul r8.yzw, r2.yyzw, r6.yyyy
  div r9.xyz, r8.yzwy, r7.zzzz
  and r8.xyzw, r8.xxxx, r9.xyzw
  add r6.y, -r6.z, r3.w
  lt r7.w, l(0.000000), r6.y
  mad r6.x, r6.x, cb2[8].z, -r7.x
  add r9.x, r6.y, l(0.000001)
  div r6.x, r6.x, r9.x
  mul r9.x, r6.y, r7.z
  mul r6.x, r6.y, r6.x
  mad r6.y, r6.x, l(0.500000), r7.x
  mad r10.w, r9.x, r6.y, r8.w
  mad r6.x, r7.x, l(2.000000), r6.x
  mul r6.x, r6.x, r9.x
  mul r6.x, r6.x, l(-0.721347511)
  exp r6.x, r6.x
  add r6.x, -r6.x, l(1.000000)
  mul r9.xyz, r2.yzwy, r6.xxxx
  mul r6.x, r8.w, l(1.442695)
  exp r6.x, r6.x
  mul r6.x, r7.z, r6.x
  div r9.xyz, r9.xyzx, r6.xxxx
  add r10.xyz, r8.xyzx, r9.xyzx
  movc r8.xyzw, r7.wwww, r10.xyzw, r8.xyzw
else 
  add r3.w, -r3.w, r6.z
  lt r6.x, l(0.000000), r3.w
  mad r6.y, r6.w, cb2[8].z, -r7.y
  add r6.w, r3.w, l(0.000001)
  div r6.y, r6.y, r6.w
  mul r6.w, r3.w, r7.z
  mul r3.w, r3.w, r6.y
  mad r6.y, r3.w, l(0.500000), r7.y
  mul r9.w, r6.y, r6.w
  mad r3.w, r7.y, l(2.000000), r3.w
  mul r3.w, r3.w, r6.w
  mul r3.w, r3.w, l(-0.721347511)
  exp r3.w, r3.w
  add r3.w, -r3.w, l(1.000000)
  mul r10.xyz, r2.yzwy, r3.wwww
  div r9.xyz, r10.xyzx, r7.zzzz
  and r9.xyzw, r6.xxxx, r9.xyzw
  add r3.w, r4.z, -r6.z
  lt r4.z, l(0.000000), r3.w
  mad r5.w, r5.w, cb2[8].z, -r7.x
  add r6.x, r3.w, l(0.000001)
  div r5.w, r5.w, r6.x
  mul r6.x, r3.w, r7.z
  mul r3.w, r3.w, r5.w
  mad r5.w, r3.w, l(0.500000), r7.x
  mad r10.w, r6.x, r5.w, r9.w
  mad r3.w, r7.x, l(2.000000), r3.w
  mul r3.w, r3.w, r6.x
  mul r3.w, r3.w, l(-0.721347511)
  exp r3.w, r3.w
  add r3.w, -r3.w, l(1.000000)
  mul r2.yzw, r2.yyzw, r3.wwww
  mul r3.w, r9.w, l(1.442695)
  exp r3.w, r3.w
  mul r3.w, r7.z, r3.w
  div r2.yzw, r2.yyzw, r3.wwww
  add r10.xyz, r2.yzwy, r9.xyzx
  movc r8.xyzw, r4.zzzz, r10.xyzw, r9.xyzw
endif 
mul r2.y, r8.w, l(-1.442695)
exp r2.y, r2.y
mad r5.xyz, r5.xyzx, r2.yyyy, r8.xyzx
mul r0.z, r0.z, r2.y
div r2.y, cb2[31].w, |r3.z|
min r1.w, r1.w, r2.y
mul r2.y, r1.w, cb2[29].w
min r2.y, r2.y, l(1.000000)
add r1.w, r1.w, -cb2[33].w
mul_sat r1.w, r1.w, cb2[32].w
mul r1.w, r1.w, r2.y
mul r2.y, r1.w, cb2[34].w
mul r1.w, r1.w, cb2[30].w
mul r1.w, r1.w, l(-1.442695)
exp r1.w, r1.w
mul r6.xyz, r0.xxxx, cb1[32].xyzx
mad r6.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r6.xyzx
mad r6.xyz, r0.yyyy, cb1[33].xyzx, r6.xyzx
mad r0.xyw, r0.wwww, cb1[34].xyxz, r6.xyxz
mad r0.xyw, r4.xxxx, cb1[35].xyxz, r0.xyxw
mad r0.xyw, r4.yyyy, cb1[36].xyxz, r0.xyxw
mad r0.xyw, r3.xxxx, cb1[37].xyxz, r0.xyxw
mad r0.xyw, r4.wwww, cb1[38].xyxz, r0.xyxw
mad r0.xyw, r3.yyyy, cb1[39].xyxz, r0.xyxw
mul r0.xyw, r0.xyxw, r2.yyyy
mul r0.xyw, r0.xyxw, cb2[29].xyxz
mul r0.xyw, r0.xyxw, cb2[35].wwww
mad r0.xyw, r0.xyxw, r0.zzzz, r5.xyxz
mul r0.z, r0.z, r1.w
mad r0.xyz, r1.xyzx, r0.zzzz, r0.xywx
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r2.xxxx, r0.xyzx
add r0.x, -r2.x, l(1.000000)
mul o0.w, r0.x, cb3[0].x
ret 
// Approximately 302 instruction slots used