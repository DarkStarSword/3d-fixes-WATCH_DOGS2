// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed dbca0928edcf48c7-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:56:33 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12
//   float3 VolumeDimensions;           // Offset:  320 Size:    12
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer LightProbesAOVoxels
// {
//
//   float3 NumAOBlocksXYZ;             // Offset:    0 Size:    12
//   float3 NumAOVoxelsPerProbeXYZ;     // Offset:   16 Size:    12
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4 MinAmbient;                 // Offset:    0 Size:    16
//   float4x4 ViewProjectionMatrixWithZBias;// Offset:   16 Size:    64 [unused]
//   float4 WorldEdgeFadeParams;        // Offset:   80 Size:    16 [unused]
//   float2 LightProbesGlobal_GIGenerationSunInterlacePixelsXY;// Offset:   96 Size:     8 [unused]
//   float DrawDistance;                // Offset:  104 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// LightProbesAOVoxels__AOTexture__SampObj__    sampler      NA          NA    1        1
// LongRangeShadowSampler          sampler_c      NA          NA    2        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    1        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    4        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d    5        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d    6        1
// LightProbesAOVoxels__AOTexture__TexObj__    texture  float4          2d    7        1
// LightProbesAOVoxels__AOIndirectionTexture    texture  float4          2d    8        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    9        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d   10        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d   11        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightProbes                       cbuffer      NA          NA    2        1
// LightProbesAOVoxels               cbuffer      NA          NA    3        1
// LightProbesGlobal                 cbuffer      NA          NA    4        1
// LightData                         cbuffer      NA          NA    5        1
// LongRangeShadow                   cbuffer      NA          NA    6        1
// GBufferMini                       cbuffer      NA          NA    7        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[55], dynamicIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 19

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed dbca0928edcf48c7-ps.txt

mul r15.w, r15.x, r15.y
mul r17.x, r15.w, cb0[9].x
mul r17.y, r15.w, cb0[10].x
mul r17.z, r15.w, cb0[11].x
mul r17.w, r15.w, cb0[12].x
dp4 r18.x, r17.xyzw, cb0[17].xyzw
dp4 r18.y, r17.xyzw, cb0[18].xyzw
dp4 r18.z, r17.xyzw, cb0[19].xyzw
add r16.xyz, cb0[174].xyz, r18.xyz

mad r0.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
mad r0.z, cb7[0].y, cb0[66].x, v0.x
ftoi r1.x, r0.z
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t10.yzxw
mad r0.z, r0.z, cb0[67].z, cb0[67].x
mov r2.z, -r0.z
mul r3.xy, r0.xyxx, r2.zzzz
movc r2.xy, cb7[0].zzzz, r0.xyxx, r3.xyxx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[17].xyzw
dp4 r3.y, r2.xyzw, cb0[18].xyzw
dp4 r3.z, r2.xyzw, cb0[19].xyzw
mov r3.w, l(1.000000)
dp4 r0.x, r3.xyzw, cb2[12].xyzw
dp4 r0.y, r3.xyzw, cb2[13].xyzw
dp4 r2.z, r3.xyzw, cb2[14].xyzw
add r2.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r4.xyzw, r0.xyxy, l(1.000000, 1.000000, -1.000000, -1.000000), l(0.500050, 0.500050, 0.500049949, 0.500049949)
lt r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
or r4.xy, r4.zwzz, r4.xyxx
or r0.w, r4.y, r4.x
discard_nz r0.w
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t11.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
movc r0.w, cb2[18].w, l(0), l(1.000000)
add r0.xy, -|r0.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul_sat r0.xy, r0.xyxx, l(500.000000, 500.000000, 0.000000, 0.000000)
add r4.xyzw, cb2[16].xyxy, l(-1.000000, -1.000000, -1.000000, -1.000000)
div r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyxy
mul r5.xyzw, r1.xyxy, r5.xyzw
mul r5.xyzw, r0.xyxy, r5.xyzw
mad_sat r5.xyzw, r5.xyzw, l(0.300000, 0.300000, 0.900000, 0.900000), r2.xyxy
div r4.xy, r4.zwzz, cb2[16].xyxx
div r6.xyzw, l(0.500000, 0.500000, 0.200000, 0.600000), cb2[16].xyzz
mov_sat r1.w, r2.z
add r7.xyzw, cb2[16].zxyz, l(-1.000000, -1.001000, -1.001000, -1.001000)
lt r2.w, l(0.000000), cb2[17].y
div_sat r3.w, r1.w, cb2[17].y
mul r3.w, r3.w, cb2[17].x
and r3.w, r2.w, r3.w
lt r4.z, cb2[17].y, l(1.000000)
add_sat r1.w, r1.w, -cb2[17].y
add r4.w, -cb2[17].y, l(1.000000)
div r1.w, r1.w, r4.w
log r1.w, |r1.w|
mul r1.w, r1.w, cb2[16].w
exp r1.w, r1.w
add r7.x, r7.x, -cb2[17].x
mul r1.w, r1.w, r7.x
and r1.w, r1.w, r4.z
add r1.w, r1.w, r3.w
div r1.w, r1.w, cb2[16].z
mad r5.xyzw, r5.xyzw, r4.xyxy, r6.xyxy
mad r8.xy, r1.zzzz, r6.zwzz, r1.wwww
mul r1.w, r8.x, cb2[16].z
round_ni r3.w, r1.w
div r3.w, r3.w, cb2[16].z
round_pi r1.w, r1.w
div r1.w, r1.w, cb2[16].z
mov_sat r6.w, r5.y
div r6.w, r6.w, cb2[16].z
add r9.y, r3.w, r6.w
mov r9.x, r5.x
sample_l_indexable(texture2d)(float,float,float,float) r8.zw, r9.xyxx, t1.zwxy, s0, l(0.000000)
add r9.xy, -r8.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r6.w, r9.y, l(0.250000), r8.w
min r6.w, r6.w, r9.x
div r8.z, r8.z, cb2[16].z
add r8.z, r3.w, r8.z
add r8.xy, -r8.zzzz, r8.xyxx
mul r8.xy, r8.xyxx, cb2[16].zzzz
div_sat r8.xy, r8.xyxx, r6.wwww
add r1.w, -r3.w, r1.w
mad r8.xy, r8.xyxx, r1.wwww, r3.wwww
div r1.w, l(0.500000), cb2[16].z
add r8.xz, r1.wwww, r8.xxyx
mov r8.yw, r5.xxxy
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r8.ywxy, t4.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r8.ywxy, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r8.ywxy, t2.xyzw, s0, l(0.000000)
mov r8.xy, r5.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r8.xyzx, t5.xyzw, s0, l(0.000000)
log r9.xyzw, |r9.xyzw|
mul r9.xyzw, r9.xyzw, cb2[22].xxxx
exp r9.xyzw, r9.xyzw
log r10.xyzw, |r10.xyzw|
mul r10.xyzw, r10.xyzw, cb2[22].xxxx
exp r10.xyzw, r10.xyzw
log r11.xyzw, |r11.xyzw|
mul r11.xyzw, r11.xyzw, cb2[22].xxxx
exp r11.xyzw, r11.xyzw
add r1.w, cb2[19].z, cb2[20].z
add r1.w, -r3.z, r1.w
mul_sat r1.w, r1.w, l(0.0333333351)
add r1.w, -r1.w, l(1.000000)
add r12.xyzw, -r9.xyzw, cb1[9].xyzw
mad r9.xyzw, r1.wwww, r12.xyzw, r9.xyzw
add r12.xyzw, -r10.xyzw, cb1[10].xyzw
mad r10.xyzw, r1.wwww, r12.xyzw, r10.xyzw
add r12.xyzw, -r11.xyzw, cb1[11].xyzw
mad r11.xyzw, r1.wwww, r12.xyzw, r11.xyzw
add r12.xyzw, r0.wwww, -r5.xyzw
mad r5.xyzw, r1.wwww, r12.xyzw, r5.xyzw
mul r12.xyzw, cb1[12].xyzw, cb4[0].xxxw
mul r13.xyzw, cb1[13].xyzw, cb4[0].yyyw
mul r14.xyzw, cb1[14].xyzw, cb4[0].zzzw
max r9.xyzw, r9.xyzw, r12.xyzw
max r10.xyzw, r10.xyzw, r13.xyzw
max r11.xyzw, r11.xywz, r14.xywz
dp3 r12.x, r1.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r12.y, r1.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r12.z, r1.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r3.w, -r1.z, l(0.500000)
mul r12.w, r3.w, l(0.666666687)
max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r10.xyz, r10.xyzx, r12.yyyy
mad r9.xyz, r12.xxxx, r9.xyzx, r10.xyzx
mad r9.xyz, r12.zzzz, r11.xywx, r9.xyzx
mov r11.x, r9.w
mov r11.y, r10.w
mad r9.xyz, r12.wwww, r11.xyzx, r9.xyzx
add r3.w, r12.y, r12.x
add r3.w, r12.z, r3.w
add r3.w, r12.w, r3.w
div r9.xyz, r9.xyzx, r3.wwww
add r10.xyz, -r3.xyzx, r16.xyzx
dp3 r3.w, r10.xyzx, r10.xyzx
rsq r3.w, r3.w
mul r10.xyz, r3.wwww, r10.xyzx
dp3 r3.w, -r10.xyzx, r1.xyzx
add r3.w, r3.w, r3.w
mad r10.xyz, r1.xyzx, -r3.wwww, -r10.xyzx
dp3 r3.w, r10.xyzx, r10.xyzx
rsq r3.w, r3.w
mul r10.xyw, r3.wwww, r10.xyxz
if_nz cb2[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r8.xyzx, t6.xyzw, s0, l(0.000000)
  add r11.xyzw, r0.wwww, -r8.xyzw
  mad r8.xyzw, r1.wwww, r11.xyzw, r8.xyzw
  dp2 r0.w, r10.xyxx, r10.xyxx
  rsq r0.w, r0.w
  mul r11.xy, r0.wwww, r10.xyxx
  dp2 r0.w, r11.xyxx, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r0.w, r0.w, l(-0.707106769)
  mul_sat r0.w, r0.w, l(3.41421342)
  dp2 r1.w, r11.xyxx, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r1.w, r1.w, l(-0.707106769)
  mul_sat r1.w, r1.w, l(3.41421342)
  add r6.w, r0.w, r1.w
  dp2 r11.z, r11.xyxx, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r11.z, r11.z, l(-0.707106769)
  mul_sat r11.z, r11.z, l(3.41421342)
  add r6.w, r6.w, r11.z
  dp2 r11.w, r11.xyxx, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r11.w, r11.w, l(-0.707106769)
  mul_sat r11.w, r11.w, l(3.41421342)
  add r6.w, r6.w, r11.w
  dp2 r12.x, r11.xyxx, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r12.x, r12.x, l(-0.707106769)
  mul_sat r12.x, r12.x, l(3.41421342)
  add r6.w, r6.w, r12.x
  dp2 r12.y, r11.xyxx, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r12.y, r12.y, l(-0.707106769)
  mul_sat r12.y, r12.y, l(3.41421342)
  add r6.w, r6.w, r12.y
  dp2 r12.z, r11.xyxx, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r12.z, r12.z, l(-0.707106769)
  mul_sat r12.z, r12.z, l(3.41421342)
  add r6.w, r6.w, r12.z
  dp2 r11.x, r11.xyxx, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r11.x, r11.x, l(-0.707106769)
  mul_sat r11.x, r11.x, l(3.41421342)
  add r6.w, r6.w, r11.x
  div r0.w, r0.w, r6.w
  div r1.w, r1.w, r6.w
  div r11.y, r11.z, r6.w
  div r11.z, r11.w, r6.w
  div r11.w, r12.x, r6.w
  div r12.x, r12.y, r6.w
  div r12.y, r12.z, r6.w
  div r6.w, r11.x, r6.w
  mul r1.w, r1.w, r5.y
  mad r0.w, r5.x, r0.w, r1.w
  mad r0.w, r5.z, r11.y, r0.w
  mad r0.w, r5.w, r11.z, r0.w
  mad r0.w, r8.x, r11.w, r0.w
  mad r0.w, r8.y, r12.x, r0.w
  mad r0.w, r8.z, r12.y, r0.w
  mad r8.y, r8.w, r6.w, r0.w
  mad r0.w, -r10.w, r10.w, l(1.000000)
  sqrt r0.w, r0.w
  mul r1.w, r10.w, l(0.545521200)
  mul r8.zw, r0.wwww, l(0.000000, 0.000000, 0.545521200, 0.838097036)
  mad r11.w, r10.w, l(0.838097036), -r8.z
  mad r11.yz, r10.wwww, l(0.000000, 0.838097036, 0.545521200, 0.000000), r8.zzwz
  mad r11.x, r0.w, l(0.838097036), -r1.w
  lt r8.zw, r11.zzzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r11.xyzw, r8.zzww, l(0,-1.000000,0,1.000000), r11.zwxy
  ge r0.w, r11.y, r8.y
  ge r1.w, r8.y, r11.w
  mul r6.w, r8.y, r8.y
  mad r8.z, -r8.y, r8.y, l(1.000000)
  sqrt r8.x, r8.z
  lt r8.z, r11.y, l(0.000000)
  add r12.xy, r11.zwzz, l(-1.000000, -0.000000, 0.000000, 0.000000)
  dp2 r8.w, r12.xyxx, r12.xyxx
  sqrt r8.w, r8.w
  mul r8.w, r8.w, l(0.500000)
  mul r8.w, r8.w, r8.w
  add r11.xy, -r11.zwzz, r11.xyxx
  dp2 r11.x, r11.xyxx, r11.xyxx
  sqrt r11.x, r11.x
  mul r11.x, r11.x, l(0.500000)
  mul r11.x, r11.x, r11.x
  movc r8.z, r8.z, r8.w, r11.x
  add r8.xy, r8.xyxx, -r11.zwzz
  dp2 r8.x, r8.xyxx, r8.xyxx
  sqrt r8.x, r8.x
  mul r8.x, r8.x, l(0.500000)
  mul r8.x, r8.x, r8.x
  div r8.x, r8.x, r8.z
  movc r1.w, r1.w, l(0), r8.x
  movc r0.w, r0.w, l(1.000000), r1.w
  mad r1.w, r6.w, l(-0.080000), l(0.080000)
  max r9.w, r0.w, r1.w
else 
  dp3 r8.x, r10.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r8.y, r10.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r8.z, r10.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r0.w, -r10.z, r3.w, l(0.500000)
  mul r8.w, r0.w, l(0.666666687)
  max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r0.w, r8.xyzw, r5.xyzw
  add r1.w, r8.y, r8.x
  add r1.w, r8.z, r1.w
  add r1.w, r8.w, r1.w
  div r9.w, r0.w, r1.w
endif 
div r5.xyz, l(0.433000, 0.433000, 0.433000, 0.000000), cb2[20].xyzx
mul r5.xyz, r1.xyzx, r5.xyzx
mul r5.xy, r0.xyxx, r5.xyxx
add r0.xyw, r2.zxzy, r5.zxzy
mad r2.xy, r0.ywyy, r4.xyxx, r6.xyxx
mov_sat r0.x, r0.x
div_sat r0.y, r0.x, cb2[17].y
mul r0.y, r0.y, cb2[17].x
and r0.y, r0.y, r2.w
add_sat r0.x, r0.x, -cb2[17].y
div r0.x, r0.x, r4.w
log r0.x, |r0.x|
mul r0.x, r0.x, cb2[16].w
exp r0.x, r0.x
mul r0.x, r7.x, r0.x
and r0.x, r0.x, r4.z
add r0.x, r0.x, r0.y
div r2.z, r0.x, cb2[16].z
mov r6.z, l(0)
add r0.xyw, r2.xyxz, -r6.xyxz
div r2.xyz, r7.yzwy, cb2[16].xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xyz, r2.xyzx, r0.xywx
mov_sat r0.x, r2.y
div r0.x, r0.x, cb2[16].z
mul r4.xyzw, r2.zxyz, cb2[16].zxyz
round_ni r0.y, r4.x
div r0.y, r0.y, cb2[16].z
add r2.w, r0.y, r0.x
mul r0.x, cb2[16].z, cb2[16].y
round_z r5.x, cb2[16].x
round_z r5.y, r0.x
mul r0.xy, r2.xwxx, r5.xyxx
ftoi r2.xy, r0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyw, r2.xyzw, t8.xyzw
mul r0.xy, r0.xyxx, l(255.000000, 255.000000, 0.000000, 0.000000)
div r0.xy, r0.xyxx, cb3[0].xyxx
frc r2.xyz, r4.yzwy
add r4.xyz, cb3[1].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r4.xyz, r4.xyzx, cb3[1].xyzx
div r5.xyz, l(0.500000, 0.500000, 0.000000, 0.000000), cb3[1].xyzx
mad r2.xyz, r2.xyzx, r4.xyzx, r5.xyzx
div r2.yzw, r2.xxyz, cb3[0].xxyz
mul r1.z, cb3[0].x, cb3[1].z
div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul r1.z, r2.w, cb3[1].z
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
round_ni r2.w, r1.z
mul r2.w, r4.x, r2.w
mad r2.x, r2.y, r1.w, r2.w
add r0.xy, r0.xyxx, r2.xzxx
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r0.xyxx, t7.yzwx, s1, l(0.000000)
mov r4.yw, l(0,0,0,2)
add r0.xy, r0.xyxx, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t7.xyzw, s1, l(0.000000)
frc r0.y, r1.z
add r0.x, -r1.w, r0.x
mad r0.x, r0.y, r0.x, r1.w
ne r0.y, r0.w, l(0.000000)
max r0.x, r0.x, l(0.250000)
mul r2.xyzw, r0.xxxx, r9.xyzw
movc r2.xyzw, r0.yyyy, r2.xyzw, r9.xyzw
ftou r0.xy, v0.xyxx
and r5.xy, r0.xyxx, l(127, 127, 0, 0)
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r5.xyzw, t0.xyzw
mov r0.yw, l(0,2,0,0)
mov r1.z, l(0)
loop 
  uge r1.w, r0.w, l(3)
  breakc_nz r1.w
  ishl r1.w, r0.w, l(2)
  mul r4.xy, r3.yyyy, cb5[r1.w + 1].xyxx
  mad r4.xy, cb5[r1.w + 0].xyxx, r3.xxxx, r4.xyxx
  mad r4.xy, cb5[r1.w + 2].xyxx, r3.zzzz, r4.xyxx
  add r4.xy, r4.xyxx, cb5[r1.w + 3].xyxx
  max r1.w, |r4.y|, |r4.x|
  add r1.z, r1.w, cb5[16].x
  ult r1.w, r0.w, l(2)
  if_nz r1.w
    mad r1.w, cb5[16].y, r0.x, r1.z
    lt r3.w, r1.w, l(1.000000)
    if_nz r3.w
      mov r1.z, r1.w
      mov r0.y, r0.w
      break 
    endif 
    mov r1.z, r1.w
  endif 
  iadd r4.z, r0.w, l(1)
  mov r0.yw, r4.wwwz
endloop 
ieq r0.x, r0.y, l(2)
mad_sat r0.y, r1.z, cb5[16].z, cb5[16].w
and r0.x, r0.y, r0.x
mad r0.yw, r1.xxxy, cb6[0].xxxy, r3.xxxy
mad r1.x, r3.z, cb6[0].z, cb6[0].w
mad r0.yw, r0.yyyw, cb6[1].xxxy, cb6[1].zzzw
sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.ywyy, t9.xxxx, s2, r1.x
add r0.y, r0.y, l(-1.000000)
mad r0.x, r0.x, r0.y, l(1.000000)
mad r0.x, r0.x, l(255.000000), l(0.500000)
round_ni r0.x, r0.x
sqrt r0.y, r2.w
min r0.y, r0.y, l(1.000000)
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.xy, r0.xyxx
imad o1.x, r0.y, l(256), r0.x
mul_sat r0.x, r0.z, l(0.001000)
mad r0.x, r0.x, l(65535.000000), l(0.500000)
round_ni r0.x, r0.x
ftou o1.y, r0.x
mul r0.xyz, r2.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r0.xyzx, cb7[0].xxxx
mov o0.w, r2.w
ret 
// Approximately 360 instruction slots used