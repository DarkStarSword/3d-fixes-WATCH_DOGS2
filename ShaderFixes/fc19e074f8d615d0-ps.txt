// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed fc19e074f8d615d0-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:19:16 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer LongRangeShadow
// {
//
//   float4 LongRangeShadowVolumePosScaleBias;// Offset:    0 Size:    16
//   float4 LongRangeShadowVolumeUvScaleBias;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ShadowRealSampler               sampler_c      NA          NA    0        1
// LongRangeShadowSampler          sampler_c      NA          NA    1        1
// Global__GlobalNoiseSampler2D__TexObj__    texture  float4          2d    0        1
// Global__GlobalRandomVectorTexture2D    texture  float4          2d    1        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    2        1
// Viewport__GBufferNormalTexture__TexObj__    texture  float4          2d    3        1
// Viewport__GBufferParamsTexture__TexObj__    texture  float4          2d    4        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    5        1
// LongRangeShadow__LongRangeShadowVolumeTexture__TexObj__    texture  float4          2d    6        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// LongRangeShadow                   cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xy          1   TARGET    uint   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[55], dynamicIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 12
dcl_indexableTemp x0[4], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed fc19e074f8d615d0-ps.txt

mul r8.w, r8.x, r8.y
mul r10.x, r8.w, cb0[9].x
mul r10.y, r8.w, cb0[10].x
mul r10.z, r8.w, cb0[11].x
mul r10.w, r8.w, cb0[12].x
dp4 r11.x, r10.xyzw, cb0[17].xyzw
dp4 r11.y, r10.xyzw, cb0[18].xyzw
dp4 r11.z, r10.xyzw, cb0[19].xyzw
add r9.xyz, cb0[174].xyz, r11.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t2.yzxw
mov r1.w, l(1.000000)
dp2 r2.x, r1.zwzz, cb0[11].zwzz
dp2 r2.y, r1.zwzz, cb0[12].zwzz
div r2.x, -r2.x, r2.y
mad r2.yz, v0.xxyx, cb0[66].zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.xy, r2.yzyy, l(2.000000, -2.000000, 0.000000, 0.000000)
dp4 r3.x, r1.xyzw, cb0[9].xyzw
dp4 r3.y, r1.xyzw, cb0[10].xyzw
dp4 r3.z, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r1.xyzw, cb0[12].xyzw
div r1.xyz, r3.xyzx, r1.xxxx
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[17].xyzw
dp4 r3.y, r1.xyzw, cb0[18].xyzw
dp4 r3.z, r1.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyww, t3.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzw, t4.xzyw
max r4.xyzw, cb1[9].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r5.xyzw, cb1[10].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r6.xyzw, cb1[11].xywz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r7.x, r1.xyzx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r7.y, r1.xyzx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r7.z, r1.xzxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r0.w, -r1.z, l(0.500000)
mul r7.w, r0.w, l(0.666666687)
max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r5.xxyz, r7.yyyy
mad r2.yzw, r7.xxxx, r4.xxyz, r2.yyzw
mad r2.yzw, r7.zzzz, r6.xxyw, r2.yyzw
mov r6.x, r4.w
mov r6.y, r5.w
mad r2.yzw, r7.wwww, r6.xxyz, r2.yyzw
add r0.w, r7.y, r7.x
add r0.w, r7.z, r0.w
add r0.w, r7.w, r0.w
div r2.yzw, r2.yyzw, r0.wwww
add r4.xyz, -r3.xyzx, r9.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, -r4.xyzx, r1.xyzx
add r0.w, r0.w, r0.w
mad r5.xyz, r1.xyzx, -r0.wwww, -r4.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r0.w, r0.w, r5.z
ge r1.w, l(0.565600), r0.z
mad r3.w, -r0.z, l(0.0968105793), l(1.05046380)
mad r3.w, r3.w, r0.z, l(-0.601145864)
add r0.z, r0.z, l(-0.619457066)
div r0.z, r3.w, r0.z
movc r0.z, r1.w, r0.z, l(0.705081284)
mad r1.w, -r0.w, r0.w, l(1.000000)
sqrt r1.w, r1.w
mad r3.w, -r0.z, r0.z, l(1.000000)
sqrt r3.w, r3.w
mul r4.w, r1.w, r3.w
mad r5.y, r0.w, r0.z, -r4.w
mad r6.y, r0.w, r0.z, r4.w
mul r0.w, r0.w, r3.w
mad r5.x, r1.w, r0.z, r0.w
mad r6.x, r1.w, r0.z, -r0.w
lt r0.z, r5.x, l(0.000000)
movc r0.zw, r0.zzzz, l(0,0,0,-1.000000), r5.xxxy
lt r1.w, r6.x, l(0.000000)
movc r5.xy, r1.wwww, l(0,1.000000,0,0), r6.xyxx
ge r1.w, r0.w, l(0.000000)
ge r3.w, l(0.000000), r5.y
lt r4.w, r0.w, l(0.000000)
add r5.zw, r5.xxxy, l(0.000000, 0.000000, -1.000000, -0.000000)
dp2 r5.z, r5.zwzz, r5.zwzz
sqrt r5.z, r5.z
mul r5.z, r5.z, l(0.500000)
mul r5.z, r5.z, r5.z
add r0.zw, r0.zzzw, -r5.xxxy
dp2 r0.z, r0.zwzz, r0.zwzz
sqrt r0.z, r0.z
mul r0.z, r0.z, l(0.500000)
mul r0.z, r0.z, r0.z
movc r0.z, r4.w, r5.z, r0.z
add r5.xy, -r5.xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
sqrt r0.w, r0.w
mul r0.w, r0.w, l(0.500000)
mul r0.w, r0.w, r0.w
div r0.z, r0.w, r0.z
max r0.z, r0.z, l(0.080000)
movc r0.z, r3.w, l(0.080000), r0.z
movc r0.z, r1.w, l(1.000000), r0.z
ftou r5.xy, v0.xyxx
and r5.xy, r5.xyxx, l(127, 127, 0, 0)
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r5.xyzw, t0.yzwx
mov r5.xy, l(0,0,0,0)
mov r6.z, l(0)
mov r1.w, l(0)
mov r3.w, l(3)
mov r4.w, l(0)
loop 
  uge r5.z, r4.w, l(4)
  breakc_nz r5.z
  ishl r5.z, r4.w, l(2)
  mul r7.xyz, r3.yyyy, cb2[r5.z + 1].xyzx
  mad r7.xyz, cb2[r5.z + 0].xyzx, r3.xxxx, r7.xyzx
  mad r7.xyz, cb2[r5.z + 2].xyzx, r3.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb2[r5.z + 3].xyzx
  max r5.z, |r7.y|, |r7.x|
  add r1.w, r5.z, cb2[16].x
  ult r5.z, r4.w, l(3)
  if_nz r5.z
    mad r5.z, cb2[16].y, r0.w, r1.w
    lt r5.w, r5.z, l(1.000000)
    if_nz r5.w
      mov r5.xy, r7.xyxx
      mov r6.z, r7.z
      mov r1.w, r5.z
      mov r3.w, r4.w
      break 
    endif 
    mov r1.w, r5.z
  endif 
  iadd r4.w, r4.w, l(1)
  mov r5.xy, r7.xyxx
  mov r6.z, r7.z
  mov r3.w, l(3)
endloop 
mov x0[0].z, l(0.125000)
mov x0[1].z, l(0.375000)
mov x0[2].z, l(0.625000)
mov x0[3].z, l(0.875000)
mov r7.x, x0[r3.w + 0].z
mov r7.yz, l(0,0.500000,0,0)
mad r6.xy, r5.xyxx, l(0.125000, -0.500000, 0.000000, 0.000000), r7.xyxx
dp4 r0.w, cb2[17].xyzw, icb[r3.w + 0].xyzw
dp3 r1.z, r4.xyzx, r1.xyzx
mul_sat r1.z, r1.z, cb2[54].w
dp4 r4.x, cb2[18].xyzw, icb[r3.w + 0].xyzw
add r0.w, r0.w, -r4.x
mad r0.w, r1.z, r0.w, r4.x
ieq r1.z, r3.w, l(3)
mad_sat r1.w, r1.w, cb2[16].z, cb2[16].w
and r1.z, r1.w, r1.z
and r4.xy, r0.xyxx, l(63, 63, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xy, r4.xyzw, t1.xyzw
mad r0.xy, r0.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r0.xxxx, l(-0.0620006211, 0.194514, 0.000000, 0.000000)
mad r4.xy, r0.yyyy, l(0.649557710, -0.252099097, 0.000000, 0.000000), -r4.xyxx
dp2 r4.z, r0.xyxx, l(0.649557710, -0.0620006211, 0.000000, 0.000000)
mul r5.xy, r0.wwww, cb2[38].zwzz
mul r7.xy, r4.xzxx, r5.xyxx
add r7.xyz, r6.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.w, r7.xyxx, t5.xxxx, s0, r7.z
dp2 r4.w, r0.xyxx, l(-0.252099097, 0.194514, 0.000000, 0.000000)
mul r4.xy, r4.ywyy, r5.xyxx
mov r4.z, l(0)
add r4.xyz, r4.xyzx, r6.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t5.xxxx, s0, r4.z
add r0.w, r0.w, r1.w
mul r4.xy, r0.xxxx, l(-0.602610528, 0.987966299, 0.000000, 0.000000)
mad r4.xy, r0.yyyy, l(-0.167516, 0.0800626874, 0.000000, 0.000000), -r4.xyxx
dp2 r4.z, r0.xyxx, l(-0.167516, -0.602610528, 0.000000, 0.000000)
mul r7.xy, r5.xyxx, r4.xzxx
mov r7.z, l(0)
add r7.xyz, r6.xyzx, r7.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r7.xyxx, t5.xxxx, s0, r7.z
add r0.w, r0.w, r1.w
dp2 r4.w, r0.xyxx, l(0.0800626874, 0.987966299, 0.000000, 0.000000)
mul r4.xy, r5.xyxx, r4.ywyy
mov r4.z, l(0)
add r4.xyz, r4.xyzx, r6.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.x, r4.xyxx, t5.xxxx, s0, r4.z
add r0.x, r0.x, r0.w
mul r0.y, r0.x, l(0.250000)
mad r1.xy, r1.xyxx, cb3[0].xyxx, r3.xyxx
mad r0.w, r3.z, cb3[0].z, cb3[0].w
mad r1.xy, r1.xyxx, cb3[1].xyxx, cb3[1].zwzz
sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t6.xxxx, s1, r0.w
mad r0.x, -r0.x, l(0.250000), r0.w
mad r0.x, r1.z, r0.x, r0.y
mad r0.x, r0.x, l(255.000000), l(0.500000)
round_ni r0.x, r0.x
sqrt r0.y, r0.z
min r0.y, r0.y, l(1.000000)
mad r0.y, r0.y, l(255.000000), l(0.500000)
round_ni r0.y, r0.y
ftou r0.xy, r0.xyxx
ishl r0.y, r0.y, l(8)
or o1.x, r0.y, r0.x
mul_sat r0.x, r2.x, l(0.001000)
mad r0.x, r0.x, l(65535.000000), l(0.500000)
round_ni r0.x, r0.x
ftou o1.y, r0.x
mul r0.xyw, r2.yzyw, cb0[176].wwww
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xywx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r0.z
ret 
// Approximately 201 instruction slots used