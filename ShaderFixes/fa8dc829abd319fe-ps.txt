// asmtool.py --fix-wd2-camera-pos --fix-wd2-camera-z-axis=-1 -i -f --only-autofixed fa8dc829abd319fe-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 11:40:19 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer FogVolumeRaymarch
// {
//
//   float4 FVCamDepthScaleOffset;      // Offset:    0 Size:    16
//   float4 FVDownscaledDepthParams;    // Offset:   16 Size:    16
//   float4 FVRayMarchFullSize;         // Offset:   32 Size:    16
//   float4 FVRayMarchTextureSize;      // Offset:   48 Size:    16 [unused]
//   float4 FVViewDirReconstruction;    // Offset:   64 Size:    16
//   float3 FVCameraXAxis;              // Offset:   80 Size:    12
//   uint FVFrameCounter;               // Offset:   92 Size:     4
//   float3 FVCameraYAxis;              // Offset:   96 Size:    12
//   float3 FVCameraZAxis;              // Offset:  112 Size:    12
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer FogVolumeShape
// {
//
//   float4 FVNoiseTextureSize;         // Offset:    0 Size:    16
//   float4 FVSunCameraPlane;           // Offset:   16 Size:    16
//   float4 FVSunDepthScaleOffset;      // Offset:   32 Size:    16
//   float4x4 FVSunDepthViewProjMatrix; // Offset:   48 Size:    64
//   float4 FVTopDepthScaleOffset;      // Offset:  112 Size:    16
//   float4 FVWorldPosToTopDepthUV;     // Offset:  128 Size:    16
//   float3 FVFogAlbedo;                // Offset:  144 Size:    12
//   float FVFogDensity;                // Offset:  156 Size:     4
//   float3 FVFogFlowVector;            // Offset:  160 Size:    12
//   float FVFogDensityEdgeFadeFactor;  // Offset:  172 Size:     4
//   float3 FVFogNoiseFreqs;            // Offset:  176 Size:    12
//   float FVFogDensityFadeDistance;    // Offset:  188 Size:     4
//   float3 FVFogNoiseWeights;          // Offset:  192 Size:    12
//   float FVFogNoiseScale;             // Offset:  204 Size:     4
//   float FVFogScattering;             // Offset:  208 Size:     4
//   float FVFogSunExtinction;          // Offset:  212 Size:     4
//   uint FVNoiseTextureMipCount;       // Offset:  216 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FogVolumeRaymarch__FVColorAndDensityTexture__SampObj__    sampler      NA          NA    0        1
// FogVolumeRaymarch__FVDensityVolumeTexture__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorClamp2D                      sampler      NA          NA    3        1
// ColorWrap                         sampler      NA          NA    4        1
// FogVolumeRaymarch__FVCamDepthRangesTexture__TexObj__    texture  float4          2d    0        1
// FogVolumeRaymarch__FVDownscaledDepthTexture__TexObj__    texture  float4          2d    1        1
// FogVolumeRaymarch__FVColorAndDensityTexture__TexObj__    texture  float4          3d    2        1
// FogVolumeRaymarch__FVDensityVolumeTexture__TexObj__    texture  float4          3d    3        1
// VolumetricFog__VFLightVolumeTexture__TexObj__    texture  float4          3d    4        1
// FogVolumeShape__FVNoiseTexture__TexObj__    texture  float4          2d    5        1
// FogVolumeShape__FVSunDepthTexture__TexObj__    texture  float4          2d    6        1
// FogVolumeShape__FVTopDepthTexture__TexObj__    texture  float4          2d    7        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// FogVolumeRaymarch                 cbuffer      NA          NA    3        1
// VolumetricFog                     cbuffer      NA          NA    4        1
// FogVolumeShape                    cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   x           2   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[31], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[35], immediateIndexed
dcl_constantbuffer cb5[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.x
dcl_temps 26
dcl_indexableTemp x0[2], 4
dcl_indexableTemp x1[2], 4
dcl_indexableTemp x2[3], 4
dcl_indexableTemp x3[2], 4
dcl_indexableTemp x4[2], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 FVCameraZAxis adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos --fix-wd2-camera-z-axis=-1 -i -f --only-autofixed fa8dc829abd319fe-ps.txt

mul r21.x, r19.x, cb1[9].x
mul r21.y, r19.x, cb1[10].x
mul r21.z, r19.x, cb1[11].x
mul r21.w, r19.x, cb1[12].x
dp4 r22.x, r21.xyzw, cb1[17].xyzw
dp4 r22.y, r21.xyzw, cb1[18].xyzw
dp4 r22.z, r21.xyzw, cb1[19].xyzw
add r20.xyz, cb3[7].xyz, -r22.xyz


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos --fix-wd2-camera-z-axis=-1 -i -f --only-autofixed fa8dc829abd319fe-ps.txt

mul r19.w, r19.x, r19.y
mul r24.x, r19.w, cb1[9].x
mul r24.y, r19.w, cb1[10].x
mul r24.z, r19.w, cb1[11].x
mul r24.w, r19.w, cb1[12].x
dp4 r25.x, r24.xyzw, cb1[17].xyzw
dp4 r25.y, r24.xyzw, cb1[18].xyzw
dp4 r25.z, r24.xyzw, cb1[19].xyzw
add r23.xyz, cb1[174].xyz, r25.xyz

frc r0.x, v0.x
round_ni r0.yz, v0.xxyx
ftou r0.z, r0.z
iadd r0.z, r0.z, cb3[5].w
and r0.z, r0.z, l(1)
ieq r0.z, r0.z, l(1)
and r0.z, r0.z, l(0x3f800000)
mad r0.x, r0.y, l(2.000000), r0.x
add r0.x, r0.z, r0.x
ftoi r1.x, r0.x
ftoi r1.y, v0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
mov r2.x, l(1.000000)
mov r2.w, cb3[0].x
mul r1.xyzw, r1.xyzw, r2.xxxw
mov r2.x, cb3[0].x
mov r2.w, l(-1.000000)
mad r1.xyzw, r1.xyzw, r2.xxxw, cb3[0].yyyy
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.zw, r2.xyzw, t1.zwxy
add r0.zw, r0.wwwz, -cb3[1].xxxx
div r0.zw, cb3[1].yyyy, r0.zzzw
utof r2.x, cb4[28].z
mul r2.y, r2.x, l(0.031250)
exp r2.y, r2.y
mul r2.z, r2.y, cb4[1].z
mad r3.z, r2.y, cb4[1].z, cb4[1].w
mov r0.y, v0.y
mul r4.xy, r0.xyxx, cb3[2].zwzz
mad r0.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r5.x, r0.x, l(1.000000), cb1[24].z
mad r5.y, r0.y, l(-1.000000), cb1[25].z
mul r0.xy, r5.xyxx, cb3[4].xyxx
mul r5.xyzw, r0.yyyy, cb3[6].xyzx
mad r5.xyzw, r0.xxxx, cb3[5].xyzx, r5.xyzw
add r5.xyzw, r5.xyzw, r20.xyzx
dp3 r0.x, r5.yzwy, r5.yzwy
sqrt r0.x, r0.x
div r6.xyz, r5.wyzw, r0.xxxx
lt r0.x, r5.z, l(0.000000)
add r0.y, -cb0[33].w, r23.z
div r0.y, r0.y, -r5.z
min r7.xyzw, r0.yyyy, r1.xyzw
min r2.yw, r0.yyyy, r0.zzzw
movc r0.yw, r0.xxxx, r2.yyyw, r0.zzzw
mov x0[1].x, r0.y
mov x0[0].x, r0.w
movc r1.xyzw, r0.xxxx, r7.xyzw, r1.xyzw
dp3 r0.x, cb2[2].xyzx, r6.xyzx
mad r2.y, -cb4[6].y, cb4[6].y, l(1.000000)
mad r2.w, cb4[6].y, cb4[6].y, l(1.000000)
dp2 r3.w, r0.xxxx, cb4[6].yyyy
add r2.w, r2.w, -r3.w
log r2.w, |r2.w|
mul r2.yw, r2.yyyw, l(0.000000, 0.0795774683, 0.000000, 1.500000)
exp r2.w, r2.w
div r2.y, r2.y, r2.w
mul r6.xyw, r2.yyyy, cb2[0].xyxz
mad r6.xyw, r6.xyxw, l(0.100000, 0.100000, 0.000000, 0.100000), cb2[8].xyxz
mul r6.xyw, r6.xyxw, cb1[176].wwww
max r6.xyw, r6.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r6.xyw, r6.xyxw, l(64512.000000, 64512.000000, 0.000000, 64512.000000)
min r1.x, r1.x, r3.z
min r7.x, r0.z, r1.x
mov x3[0].xyzw, l(0,0,0,1.000000)
mov x3[1].xyzw, l(0,0,0,1.000000)
mov x1[0].x, r0.w
mov x1[1].x, r0.y
div r1.x, -cb4[1].w, cb4[1].z
log r1.x, r1.x
mul r1.x, r1.x, l(32.000000)
add r2.y, r7.x, -cb4[1].w
div r2.y, r2.y, cb4[1].z
log r2.y, r2.y
mul r7.z, r2.y, l(32.000000)
mul r6.xyw, r6.xyxw, cb4[7].yzyw
mov r7.y, l(0)
mov r8.xyzw, l(0,0,0,0)
mov r2.yw, l(0,0,0,0)
mov r3.w, r1.x
loop 
  lt r7.w, r2.w, r7.x
  ult r9.x, r2.y, l(2)
  and r7.w, r7.w, r9.x
  breakc_z r7.w
  mov r9.z, x1[r2.y + 0].x
  add r7.w, r3.w, l(1.000000)
  round_ni r10.y, r7.w
  mul r7.w, r10.y, l(0.031250)
  exp r7.w, r7.w
  mad r10.z, r7.w, cb4[1].z, cb4[1].w
  lt r7.w, r7.x, r10.z
  lt r11.x, r9.z, r10.z
  add r9.x, r9.z, -cb4[1].w
  div r9.x, r9.x, cb4[1].z
  log r9.x, r9.x
  mul r9.y, r9.x, l(32.000000)
  movc r11.yz, r11.xxxx, r9.yyzy, r10.yyzy
  movc r9.xyz, r7.wwww, r7.yzxy, r11.xyzx
  add r7.w, -r2.w, r9.z
  eq r9.w, r7.w, l(0.000000)
  if_nz r9.w
    break 
  endif 
  lt r9.w, r2.w, r3.z
  if_nz r9.w
    div r4.z, r3.w, r2.x
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r4.xyzx, t2.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r9.w, r4.xyzx, t3.xzwy, s1, l(0.000000)
    ne r9.w, l(0.000000, 0.000000, 0.000000, 0.000000), r9.w
  else 
    mad r11.x, r5.z, r2.w, r23.z
    add r11.y, r11.x, -cb4[4].x
    div_sat r11.y, r11.y, cb4[4].y
    add r11.y, -r11.y, l(1.000000)
    add r11.x, r11.x, -cb4[5].x
    div_sat r11.x, r11.x, -cb4[5].y
    add r11.x, -r11.x, l(1.000000)
    mul r11.xy, r11.xyxx, cb4[8].zzzz
    mul r11.x, r11.x, cb4[5].z
    mad r11.x, r11.y, cb4[4].z, r11.x
    mul r11.y, r11.x, cb4[6].x
    mul r10.xyz, r6.xywx, r11.yyyy
    mad r10.w, cb4[7].x, r11.x, r11.y
    mov r9.w, l(0)
  endif 
  mul r10.xyz, r7.wwww, r10.xyzx
  mul r11.x, r8.w, l(-1.442695)
  exp r11.x, r11.x
  min r11.x, r11.x, l(1.000000)
  mad r11.xyz, r10.xyzx, r11.xxxx, r8.xyzx
  mad r11.w, r10.w, r7.w, r8.w
  movc r8.xyzw, r9.wwww, r8.xyzw, r11.xyzw
  if_nz r9.x
    iadd r7.w, r2.y, l(1)
    mul r9.x, r8.w, l(-1.442695)
    exp r9.x, r9.x
    min r10.w, r9.x, l(1.000000)
    mov r10.xyz, r8.xyzx
    mov x3[r2.y + 0].xyzw, r10.xyzw
    mov r2.y, r7.w
  endif 
  mov r2.w, r9.z
  mov r3.w, r9.y
endloop 
min r1.x, r0.z, r1.w
lt r1.x, r7.x, r1.x
if_nz r1.x
  mul r9.xyz, cb2[0].xyzx, cb5[9].xyzx
  mad r1.x, -cb5[13].x, cb5[13].x, l(1.000000)
  mul r1.x, r1.x, l(0.0795774683)
  mad r2.w, cb5[13].x, cb5[13].x, l(1.000000)
  dp2 r0.x, r0.xxxx, cb5[13].xxxx
  add r0.x, -r0.x, r2.w
  log r0.x, |r0.x|
  mul r0.x, r0.x, l(1.500000)
  exp r0.x, r0.x
  div r0.x, r1.x, r0.x
  mul r9.xyz, r0.xxxx, r9.xyzx
  mul r9.xyz, r9.xyzx, l(12.566371, 12.566371, 12.566371, 0.000000)
  mov x2[2].x, r1.w
  min r0.x, r1.w, r1.z
  mov x2[1].x, r0.x
  min r0.x, r0.x, r1.y
  mov x2[0].x, r0.x
  round_ni r0.x, r7.z
  mad_sat r1.x, -r23.z, l(0.005000), l(1.000000)
  mad r1.x, r1.x, l(35.000000), l(5.000000)
  mul r1.y, cb5[9].w, cb5[13].y
  iadd r1.z, cb4[28].z, l(-1)
  utof r1.z, r1.z
  div r1.w, l(0.500000), r2.x
  mov r10.w, l(1.000000)
  mov r11.x, l(0)
  mov r7.yzw, r8.xxyz
  mov r2.w, l(100000.000000)
  mov r3.w, r2.y
  mov r9.w, r8.w
  mov r12.x, r7.x
  mov r13.xy, l(0,0,0,0)
  mov r14.x, r0.x
  mov r14.y, r7.x
  loop 
    ult r12.y, r3.w, l(2)
    ult r12.z, r13.y, l(3)
    and r12.y, r12.z, r12.y
    breakc_z r12.y
    mad r10.xyz, r5.wyzw, r12.xxxx, r23.xyzx
    add r12.y, r12.x, l(-50.000000)
    mul_sat r12.y, r12.y, l(0.001250)
    mul_sat r12.z, r13.x, l(0.002500)
    mul r12.y, r12.z, r12.y
    mad r14.z, r12.y, r1.x, l(2.000000)
    dp4 r15.x, r10.xyzw, cb5[3].xyzw
    dp4 r15.y, r10.xyzw, cb5[4].xyzw
    mad r15.xy, r15.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    dp4 r12.y, r10.xyzw, cb5[1].xyzw
    add r15.z, -r15.y, l(1.000000)
    sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r12.z, r15.xzxx, t6.yzxw, s3, l(0.000000)
    mad r12.z, r12.z, cb5[2].x, cb5[2].y
    add r12.z, -r12.z, r12.y
    max r12.z, r12.z, l(0.000000)
    sample_l_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r12.w, r15.xzxx, t6.yzwx, s3, l(0.000000)
    mad r12.w, r12.w, cb5[2].x, cb5[2].y
    add r12.w, -r12.w, r12.y
    max r12.w, r12.w, l(0.000000)
    mul r12.w, r1.y, r12.w
    mad r12.z, r1.y, r12.z, r12.w
    sample_l_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r12.w, r15.xzxx, t6.yzwx, s3, l(0.000000)
    mad r12.w, r12.w, cb5[2].x, cb5[2].y
    add r12.w, -r12.w, r12.y
    max r12.w, r12.w, l(0.000000)
    mad r12.z, r1.y, r12.w, r12.z
    sample_l_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r12.w, r15.xzxx, t6.yzwx, s3, l(0.000000)
    mad r12.w, r12.w, cb5[2].x, cb5[2].y
    add r12.y, -r12.w, r12.y
    max r12.y, r12.y, l(0.000000)
    mad r12.y, r1.y, r12.y, r12.z
    mul r12.y, r12.y, l(-0.360673755)
    exp r12.y, r12.y
    min r12.y, r12.y, l(1.000000)
    max r12.y, r12.y, l(0.010000)
    mad r12.zw, r10.xxxy, cb5[8].xxxy, cb5[8].zzzw
    mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t7.zwxy, s3, l(0.000000)
    mad r12.z, r12.z, cb5[7].y, cb5[7].w
    add r12.z, -r10.z, r12.z
    add r12.z, r12.z, l(0.500000)
    mul_sat r12.z, r12.z, cb5[10].w
    div_sat r14.w, r12.x, cb5[11].w
    add r14.w, -r14.w, l(1.000000)
    mul r15.x, r12.x, l(0.000333333330)
    max r15.x, r15.x, l(0.000000)
    min r15.y, r15.x, l(1.000000)
    add r15.x, r15.x, r15.x
    min r15.x, r15.x, l(1.000000)
    add r15.xy, -r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mad r10.xyz, cb5[10].xyzx, cb0[34].xxxx, r10.xyzx
    mul r10.xyz, r10.xyzx, cb5[12].wwww
    mul r16.xyz, r10.xyzx, cb5[11].xxxx
    round_ni r17.xyz, r16.xyzx
    frc r16.xyz, r16.xyzx
    mul r18.xyz, r16.xyzx, r16.xyzx
    mad r16.xyz, -r16.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mul r15.z, r16.z, r18.z
    mad r16.zw, r17.zzzz, l(0.000000, 0.000000, 37.000000, 17.000000), r17.xxxy
    mad r16.xy, r18.xyxx, r16.xyxx, r16.zwzz
    add r16.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    mul r16.xy, r16.xyxx, cb5[0].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r16.xy, r16.xyxx, t5.xyzw, s4, l(0.000000)
    add r15.w, -r16.y, r16.x
    mad r15.z, r15.z, r15.w, r16.y
    mul r15.xy, r15.xyxx, cb5[12].zyzz
    mul r16.xyz, r10.xyzx, cb5[11].yyyy
    round_ni r17.xyz, r16.xyzx
    frc r16.xyz, r16.xyzx
    mul r18.xyz, r16.xyzx, r16.xyzx
    mad r16.xyz, -r16.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mul r15.w, r16.z, r18.z
    mad r16.zw, r17.zzzz, l(0.000000, 0.000000, 37.000000, 17.000000), r17.xxxy
    mad r16.xy, r18.xyxx, r16.xyxx, r16.zwzz
    add r16.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    mul r16.xy, r16.xyxx, cb5[0].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r16.xy, r16.xyxx, t5.xyzw, s4, l(0.000000)
    add r16.x, -r16.y, r16.x
    mad r15.w, r15.w, r16.x, r16.y
    mul r15.y, r15.w, r15.y
    mad r15.y, cb5[12].x, r15.z, r15.y
    mul r10.xyz, r10.xyzx, cb5[11].zzzz
    round_ni r16.xyz, r10.xyzx
    frc r10.xyz, r10.xyzx
    mul r17.xyz, r10.xyzx, r10.xyzx
    mad r10.xyz, -r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mul r10.z, r10.z, r17.z
    mad r15.zw, r16.zzzz, l(0.000000, 0.000000, 37.000000, 17.000000), r16.xxxy
    mad r10.xy, r17.xyxx, r10.xyxx, r15.zwzz
    add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    mul r10.xy, r10.xyxx, cb5[0].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t5.xyzw, s4, l(0.000000)
    add r10.x, -r10.y, r10.x
    mad r10.x, r10.z, r10.x, r10.y
    mad_sat r10.x, r15.x, r10.x, r15.y
    mul r10.y, r10.x, r10.x
    mad r10.x, -r10.y, r10.x, l(1.000000)
    dp2 r10.y, r12.zzzz, r14.wwww
    add r10.x, r10.x, r10.y
    add r10.x, r10.x, l(-1.050000)
    max r10.x, r10.x, l(0.000000)
    mul r10.x, r12.w, r10.x
    mul r10.x, r10.x, cb5[9].w
    lt r10.y, r14.y, r3.z
    if_nz r10.y
      div r4.w, r14.x, r2.x
      sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r4.xywx, t2.xyzw, s0, l(0.000000)
      sample_l_indexable(texture3d)(float,float,float,float) r4.w, r4.xywx, t3.xzwy, s1, l(0.000000)
      ne r4.w, l(0.000000, 0.000000, 0.000000, 0.000000), r4.w
    else 
      mad r10.y, r5.z, r14.y, r23.z
      add r10.z, r10.y, -cb4[4].x
      div_sat r10.z, r10.z, cb4[4].y
      add r10.z, -r10.z, l(1.000000)
      add r10.y, r10.y, -cb4[5].x
      div_sat r10.y, r10.y, -cb4[5].y
      add r10.y, -r10.y, l(1.000000)
      mul r10.yz, r10.yyzy, cb4[8].zzzz
      mul r10.y, r10.y, cb4[5].z
      mad r10.y, r10.z, cb4[4].z, r10.y
      mul r10.z, r10.y, cb4[6].x
      mul r15.xyz, r6.xywx, r10.zzzz
      mad r15.w, cb4[7].x, r10.y, r10.z
      mov r4.w, l(0)
    endif 
    movc r4.w, r4.w, l(0), l(1.000000)
    add r16.x, r14.x, l(1.000000)
    mul r10.y, r16.x, l(0.031250)
    exp r10.y, r10.y
    mad r16.y, r10.y, cb4[1].z, cb4[1].w
    add r10.y, r12.x, r14.z
    lt r10.y, r16.y, r10.y
    add r16.z, -r12.x, r16.y
    movc r14.xyz, r10.yyyy, r16.xyzx, r14.xyzx
    add r13.w, r12.x, r14.z
    mov r16.w, x0[r3.w + 0].x
    mov r11.w, x2[r13.y + 0].x
    lt r10.y, r16.w, r13.w
    add r10.z, -r12.x, r16.w
    max r16.z, r10.z, l(0.000000)
    lt r10.z, r11.w, r13.w
    add r12.z, -r12.x, r11.w
    max r11.z, r12.z, l(0.000000)
    iadd r11.y, r13.y, l(1)
    mov r13.z, r14.z
    movc r17.xyzw, r10.zzzz, r11.xyzw, r13.xyzw
    mov r16.xy, r13.xyxx
    movc r13.xyzw, r10.yyyy, r16.xyzw, r17.xyzw
    mul r10.x, r10.x, r13.z
    mad r10.z, r10.x, r4.w, r9.w
    lt r11.yz, l(0.000000, 5.000000, 8.000000, 0.000000), r10.zzzz
    eq r10.z, r2.w, l(100000.000000)
    and r10.z, r10.z, r11.y
    movc r2.w, r10.z, r12.x, r2.w
    or r10.y, r10.y, r11.z
    add r10.z, r12.x, -cb4[1].w
    div r10.z, r10.z, cb4[1].z
    log r10.z, r10.z
    mul r10.z, r10.z, l(32.000000)
    div r10.z, r10.z, r1.z
    add r4.z, r1.w, r10.z
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r4.xyzx, t4.wxyz, s2, l(0.000000)
    sample_l_aoffimmi_indexable(1,0,0)(texture3d)(float,float,float,float) r16.xyz, r4.xyzx, t4.xyzw, s2, l(0.000000)
    add r11.yzw, r11.yyzw, r16.xxyz
    sample_l_aoffimmi_indexable(1,1,0)(texture3d)(float,float,float,float) r16.xyz, r4.xyzx, t4.xyzw, s2, l(0.000000)
    add r11.yzw, r11.yyzw, r16.xxyz
    sample_l_aoffimmi_indexable(0,1,0)(texture3d)(float,float,float,float) r16.xyz, r4.xyzx, t4.xyzw, s2, l(0.000000)
    add r11.yzw, r11.yyzw, r16.xxyz
    mul r12.yzw, r9.xxyz, r12.yyyy
    mul r12.yzw, r12.yyzw, cb1[176].wwww
    max r12.yzw, r12.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r12.yzw, r12.yyzw, l(0.000000, 64512.000000, 64512.000000, 64512.000000)
    mad r11.yzw, r11.yyzw, l(0.000000, 0.0397887342, 0.0397887342, 0.0397887342), r12.yyzw
    mul r12.yzw, r13.zzzz, r15.xxyz
    mad r11.yzw, r11.yyzw, r10.xxxx, r12.yyzw
    mad r10.x, r15.w, r13.z, r10.x
    mul r10.z, r9.w, l(-1.442695)
    exp r10.z, r10.z
    min r10.z, r10.z, l(1.000000)
    mul r11.yzw, r10.zzzz, r11.yyzw
    mad r15.xyz, r11.yzwy, r4.wwww, r7.yzwy
    mad r4.w, r10.x, r4.w, r9.w
    if_nz r10.y
      iadd r10.x, r3.w, l(1)
      mul r10.y, r4.w, l(-1.442695)
      exp r10.y, r10.y
      min r15.w, r10.y, l(1.000000)
      mov x3[r3.w + 0].xyzw, r15.xyzw
      mov r3.w, r10.x
    else 
      add r10.x, -r12.x, r13.w
      add r13.x, r10.x, r13.x
      mov r7.yzw, r15.xxyz
      mov r9.w, r4.w
      mov r12.x, r13.w
    endif 
  endloop 
  mov r8.xyz, r7.yzwy
  mov o2.x, r2.w
  mov r2.y, r3.w
  mov r8.w, r9.w
  mov r7.x, r12.x
else 
  mov o2.x, l(100000.000000)
endif 
mov x4[0].x, r0.w
mov x4[1].x, r0.y
add r0.x, r7.x, -cb4[1].w
div r0.x, r0.x, cb4[1].z
log r0.x, r0.x
mul r0.x, r0.x, l(32.000000)
div r0.y, r2.z, cb4[1].z
log r0.y, r0.y
mul r3.y, r0.y, l(32.000000)
mov r3.x, l(0)
mov r1.xyzw, r8.xyzw
mov r0.y, r2.y
mov r0.w, r7.x
mov r2.z, r0.x
loop 
  lt r2.w, r0.w, r3.z
  ult r3.w, r0.y, l(2)
  and r3.w, r2.w, r3.w
  breakc_z r3.w
  mov r7.z, x4[r0.y + 0].x
  add r3.w, r2.z, l(1.000000)
  round_ni r9.y, r3.w
  mul r3.w, r9.y, l(0.031250)
  exp r3.w, r3.w
  mad r9.z, r3.w, cb4[1].z, cb4[1].w
  lt r3.w, r3.z, r9.z
  lt r10.x, r7.z, r9.z
  add r4.w, r7.z, -cb4[1].w
  div r4.w, r4.w, cb4[1].z
  log r4.w, r4.w
  mul r7.y, r4.w, l(32.000000)
  movc r10.yz, r10.xxxx, r7.yyzy, r9.yyzy
  movc r7.yzw, r3.wwww, r3.xxyz, r10.xxyz
  add r3.w, -r0.w, r7.w
  eq r4.w, r3.w, l(0.000000)
  if_nz r4.w
    break 
  endif 
  if_nz r2.w
    div r4.z, r2.z, r2.x
    sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r4.xyzx, t2.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r2.w, r4.xyzx, t3.xzwy, s1, l(0.000000)
    ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), r2.w
  else 
    mad r4.z, r5.z, r0.w, r23.z
    add r4.w, r4.z, -cb4[4].x
    div_sat r4.w, r4.w, cb4[4].y
    add r4.w, -r4.w, l(1.000000)
    add r4.z, r4.z, -cb4[5].x
    div_sat r4.z, r4.z, -cb4[5].y
    add r4.z, -r4.z, l(1.000000)
    mul r4.zw, r4.zzzw, cb4[8].zzzz
    mul r4.z, r4.z, cb4[5].z
    mad r4.z, r4.w, cb4[4].z, r4.z
    mul r4.w, r4.z, cb4[6].x
    mul r9.xyz, r4.wwww, r6.xywx
    mad r9.w, cb4[7].x, r4.z, r4.w
    mov r2.w, l(0)
  endif 
  mul r9.xyz, r3.wwww, r9.xyzx
  mul r4.z, r1.w, l(-1.442695)
  exp r4.z, r4.z
  min r4.z, r4.z, l(1.000000)
  mad r10.xyz, r9.xyzx, r4.zzzz, r1.xyzx
  mad r10.w, r9.w, r3.w, r1.w
  movc r1.xyzw, r2.wwww, r1.xyzw, r10.xyzw
  if_nz r7.y
    iadd r2.w, r0.y, l(1)
    mul r3.w, r1.w, l(-1.442695)
    exp r3.w, r3.w
    min r9.w, r3.w, l(1.000000)
    mov r9.xyz, r1.xyzx
    mov x3[r0.y + 0].xyzw, r9.xyzw
    mov r0.y, r2.w
  endif 
  mov r0.w, r7.w
  mov r2.z, r7.z
endloop 
mov r2.xyzw, x3[0].xyzw
mov r4.xyzw, x3[1].xyzw
max r0.x, r3.z, r7.x
mul r3.xyz, r5.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r6.xyw, r3.xxxx, cb2[23].xyxz
mad r6.xyw, cb2[22].xyxz, l(0.282095, 0.282095, 0.000000, 0.282095), r6.xyxw
mad r3.xyw, r3.yyyy, cb2[24].xyxz, r6.xyxw
mad r3.xyz, r3.zzzz, cb2[25].xyzx, r3.xywx
mul r7.xyzw, r5.xyzw, r5.yzzz
mul r6.xyw, r7.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r3.xyz, r6.xxxx, cb2[26].xyzx, r3.xyzx
mad r3.xyz, r6.yyyy, cb2[27].xyzx, r3.xyzx
mad r0.w, r7.z, l(3.000000), l(-1.000000)
mul r0.w, r0.w, l(0.315392)
mad r3.xyz, r0.wwww, cb2[28].xyzx, r3.xyzx
mad r3.xyz, r6.wwww, cb2[29].xyzx, r3.xyzx
mul r0.w, r5.y, r5.y
mad r0.w, r5.w, r5.w, -r0.w
mul r0.w, r0.w, l(0.546274)
mad r3.xyz, r0.wwww, cb2[30].xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, cb1[176].wwww
add r3.xyz, r3.xyzx, r3.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xyz, r3.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mad r0.w, r5.z, r0.x, r23.z
add r3.w, cb4[4].y, cb4[4].x
add r3.w, -r0.w, r3.w
div r3.w, r3.w, r6.z
max r3.w, r0.x, r3.w
min r3.w, r0.z, r3.w
mad r5.x, r6.z, r3.w, r0.w
add r5.x, r5.x, -cb4[34].y
add r5.y, -cb4[34].y, cb4[34].x
div_sat r5.x, r5.x, r5.y
add r5.x, -r5.x, l(1.000000)
mul r5.x, r5.x, cb4[34].z
log r5.x, |r5.x|
mul r5.x, r5.x, l(1.300000)
exp r5.x, r5.x
mul r5.z, r5.x, cb4[8].z
add r5.w, -r0.w, cb4[4].x
div r5.w, r5.w, r6.z
max r5.w, r0.x, r5.w
min r5.w, r0.z, r5.w
mad r6.x, r6.z, r5.w, r0.w
add r6.x, r6.x, -cb4[34].y
div_sat r6.x, r6.x, r5.y
add r6.x, -r6.x, l(1.000000)
mul r6.x, r6.x, cb4[34].z
log r6.x, |r6.x|
mul r6.x, r6.x, l(1.300000)
exp r6.x, r6.x
mul r6.y, r6.x, cb4[8].z
add r6.w, -r0.w, l(-100000.000000)
div r6.w, r6.w, r6.z
max r0.x, r0.x, r6.w
min r0.x, r0.z, r0.x
mad r0.z, r6.z, r0.x, r0.w
add r0.z, r0.z, -cb4[34].y
div_sat r0.z, r0.z, r5.y
add r0.z, -r0.z, l(1.000000)
mul r0.z, r0.z, cb4[34].z
log r0.z, |r0.z|
mul r0.z, r0.z, l(1.300000)
exp r0.z, r0.z
mul r0.w, r0.z, cb4[8].z
mul r3.xyz, r3.xyzx, cb4[7].yzwy
mul r3.xyz, r3.xyzx, cb4[6].xxxx
add r5.y, cb4[6].x, cb4[7].x
lt r6.z, r6.z, l(0.000000)
if_nz r6.z
  add r6.z, -r3.w, r5.w
  lt r6.w, l(0.000000), r6.z
  mad r7.x, r6.x, cb4[8].z, -r5.z
  add r7.y, r6.z, l(0.000001)
  div r7.x, r7.x, r7.y
  mul r7.y, r5.y, r6.z
  mul r6.z, r6.z, r7.x
  mad r7.x, r6.z, l(0.500000), r5.z
  mad r8.w, r7.y, r7.x, r1.w
  mad r5.z, r5.z, l(2.000000), r6.z
  mul r5.z, r5.z, r7.y
  mul r5.z, r5.z, l(-0.721347511)
  exp r5.z, r5.z
  add r5.z, -r5.z, l(1.000000)
  mul r7.xyz, r3.xyzx, r5.zzzz
  mul r5.z, r1.w, l(1.442695)
  exp r5.z, r5.z
  mul r5.z, r5.y, r5.z
  div r7.xyz, r7.xyzx, r5.zzzz
  add r8.xyz, r1.xyzx, r7.xyzx
  movc r7.xyzw, r6.wwww, r8.xyzw, r1.xyzw
  add r5.z, -r5.w, r0.x
  lt r6.z, l(0.000000), r5.z
  mad r0.z, r0.z, cb4[8].z, -r6.y
  add r6.w, r5.z, l(0.000001)
  div r0.z, r0.z, r6.w
  mul r6.w, r5.z, r5.y
  mul r0.z, r5.z, r0.z
  mad r5.z, r0.z, l(0.500000), r6.y
  mad r8.w, r6.w, r5.z, r7.w
  mad r0.z, r6.y, l(2.000000), r0.z
  mul r0.z, r0.z, r6.w
  mul r0.z, r0.z, l(-0.721347511)
  exp r0.z, r0.z
  add r0.z, -r0.z, l(1.000000)
  mul r9.xyz, r3.xyzx, r0.zzzz
  mul r0.z, r7.w, l(1.442695)
  exp r0.z, r0.z
  mul r0.z, r5.y, r0.z
  div r9.xyz, r9.xyzx, r0.zzzz
  add r8.xyz, r7.xyzx, r9.xyzx
  movc r7.xyzw, r6.zzzz, r8.xyzw, r7.xyzw
else 
  add r0.x, -r0.x, r5.w
  lt r0.z, l(0.000000), r0.x
  mad r5.z, r6.x, cb4[8].z, -r0.w
  add r6.x, r0.x, l(0.000001)
  div r5.z, r5.z, r6.x
  mul r6.x, r0.x, r5.y
  mul r0.x, r0.x, r5.z
  mad r5.z, r0.x, l(0.500000), r0.w
  mad r8.w, r6.x, r5.z, r1.w
  mad r0.x, r0.w, l(2.000000), r0.x
  mul r0.x, r0.x, r6.x
  mul r0.x, r0.x, l(-0.721347511)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mul r6.xzw, r3.xxyz, r0.xxxx
  mul r0.x, r1.w, l(1.442695)
  exp r0.x, r0.x
  mul r0.x, r5.y, r0.x
  div r6.xzw, r6.xxzw, r0.xxxx
  add r8.xyz, r1.xyzx, r6.xzwx
  movc r1.xyzw, r0.zzzz, r8.xyzw, r1.xyzw
  add r0.x, r3.w, -r5.w
  lt r0.z, l(0.000000), r0.x
  mad r0.w, r5.x, cb4[8].z, -r6.y
  add r3.w, r0.x, l(0.000001)
  div r0.w, r0.w, r3.w
  mul r3.w, r0.x, r5.y
  mul r0.x, r0.x, r0.w
  mad r0.w, r0.x, l(0.500000), r6.y
  mad r8.w, r3.w, r0.w, r1.w
  mad r0.x, r6.y, l(2.000000), r0.x
  mul r0.x, r0.x, r3.w
  mul r0.x, r0.x, l(-0.721347511)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mul r3.xyz, r3.xyzx, r0.xxxx
  mul r0.x, r1.w, l(1.442695)
  exp r0.x, r0.x
  mul r0.x, r5.y, r0.x
  div r3.xyz, r3.xyzx, r0.xxxx
  add r8.xyz, r1.xyzx, r3.xyzx
  movc r7.xyzw, r0.zzzz, r8.xyzw, r1.xyzw
endif 
ult r0.xy, r0.yyyy, l(1, 2, 0, 0)
mul r0.z, r7.w, l(-1.442695)
exp r0.z, r0.z
min r7.w, r0.z, l(1.000000)
movc o0.xyzw, r0.xxxx, r7.xyzw, r2.xyzw
movc o1.xyzw, r0.yyyy, r7.xyzw, r4.xyzw
ret 
// Approximately 636 instruction slots used