// asmtool.py --fix-wd2-volumetric-fog -i -f 870a71254aac748b-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:52:09 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer FogVolumeRaymarch
// {
//
//   float4 FVCamDepthScaleOffset;      // Offset:    0 Size:    16
//   float4 FVDownscaledDepthParams;    // Offset:   16 Size:    16
//   float4 FVRayMarchFullSize;         // Offset:   32 Size:    16
//   float4 FVRayMarchTextureSize;      // Offset:   48 Size:    16 [unused]
//   float4 FVViewDirReconstruction;    // Offset:   64 Size:    16
//   float3 FVCameraXAxis;              // Offset:   80 Size:    12
//   uint FVFrameCounter;               // Offset:   92 Size:     4 [unused]
//   float3 FVCameraYAxis;              // Offset:   96 Size:    12
//   float3 FVCameraZAxis;              // Offset:  112 Size:    12
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer FogVolumeShape
// {
//
//   float4 FVNoiseTextureSize;         // Offset:    0 Size:    16
//   float4 FVSunCameraPlane;           // Offset:   16 Size:    16
//   float4 FVSunDepthScaleOffset;      // Offset:   32 Size:    16
//   float4x4 FVSunDepthViewProjMatrix; // Offset:   48 Size:    64
//   float4 FVTopDepthScaleOffset;      // Offset:  112 Size:    16
//   float4 FVWorldPosToTopDepthUV;     // Offset:  128 Size:    16
//   float3 FVFogAlbedo;                // Offset:  144 Size:    12
//   float FVFogDensity;                // Offset:  156 Size:     4
//   float3 FVFogFlowVector;            // Offset:  160 Size:    12
//   float FVFogDensityEdgeFadeFactor;  // Offset:  172 Size:     4
//   float3 FVFogNoiseFreqs;            // Offset:  176 Size:    12
//   float FVFogDensityFadeDistance;    // Offset:  188 Size:     4
//   float3 FVFogNoiseWeights;          // Offset:  192 Size:    12
//   float FVFogNoiseScale;             // Offset:  204 Size:     4
//   float FVFogScattering;             // Offset:  208 Size:     4
//   float FVFogSunExtinction;          // Offset:  212 Size:     4
//   uint FVNoiseTextureMipCount;       // Offset:  216 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FogVolumeRaymarch__FVColorAndDensityTexture__SampObj__    sampler      NA          NA    0        1
// FogVolumeRaymarch__FVDensityVolumeTexture__SampObj__    sampler      NA          NA    1        1
// ColorClamp                        sampler      NA          NA    2        1
// ColorClamp2D                      sampler      NA          NA    3        1
// ColorWrap                         sampler      NA          NA    4        1
// VolumetricFog__VFShadowVolumeTexture__SampObj__    sampler      NA          NA    5        1
// FogVolumeRaymarch__FVCamDepthRangesTexture__TexObj__    texture  float4          2d    0        1
// FogVolumeRaymarch__FVDownscaledDepthTexture__TexObj__    texture  float4          2d    1        1
// FogVolumeRaymarch__FVColorAndDensityTexture__TexObj__    texture  float4          3d    2        1
// FogVolumeRaymarch__FVDensityVolumeTexture__TexObj__    texture  float4          3d    3        1
// VolumetricFog__VFLightVolumeTexture__TexObj__    texture  float4          3d    4        1
// VolumetricFog__VFShadowVolumeTexture__TexObj__    texture  float4          3d    5        1
// FogVolumeShape__FVNoiseTexture__TexObj__    texture  float4          2d    6        1
// FogVolumeShape__FVSunDepthTexture__TexObj__    texture  float4          2d    7        1
// FogVolumeShape__FVTopDepthTexture__TexObj__    texture  float4          2d    8        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// FogVolumeRaymarch                 cbuffer      NA          NA    3        1
// VolumetricFog                     cbuffer      NA          NA    4        1
// FogVolumeShape                    cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   x           2   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[31], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[35], immediateIndexed
dcl_constantbuffer cb5[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.x
dcl_temps 29
dcl_indexableTemp x0[2], 4
dcl_indexableTemp x1[2], 4
dcl_indexableTemp x2[3], 4
dcl_indexableTemp x3[2], 4
dcl_indexableTemp x4[2], 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r26.xyzw, l(0, 0, 0, 0), t125.xyzw

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t0.xyzw
mov r2.x, l(1.000000)
mov r2.w, cb3[0].x
mul r1.xyzw, r1.xyzw, r2.xxxw
mov r2.x, cb3[0].x
mov r2.w, l(-1.000000)
mad r1.xyzw, r1.xyzw, r2.xxxw, cb3[0].yyyy
ld_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyzw, t1.xyzw
add r0.xy, r0.yxyy, -cb3[1].xxxx
div r0.xy, cb3[1].yyyy, r0.xyxx
utof r0.z, cb4[28].z
mul r0.w, r0.z, l(0.031250)
exp r0.w, r0.w
mul r2.x, r0.w, cb4[1].z
mad r3.z, r0.w, cb4[1].z, cb4[1].w
mul r4.yz, v0.xxyx, cb3[2].zzwz
mad r2.yz, r4.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r0.w, r2.z, cb3[4].y
mul r2.y, r2.y, cb3[4].x
mul r0.w, r0.w, l(-1.000000)
mul r5.xyzw, r0.wwww, cb3[6].xyzx
mad r5.xyzw, r2.yyyy, cb3[5].xyzx, r5.xyzw
add r5.xyzw, r5.xyzw, cb3[7].xyzx
dp3 r0.w, r5.yzwy, r5.yzwy
sqrt r0.w, r0.w
div r2.yzw, r5.wwyz, r0.wwww
lt r0.w, r5.z, l(0.000000)
add r3.w, -cb0[33].w, cb1[174].z
div r3.w, r3.w, -r5.z
min r6.xyzw, r1.xyzw, r3.wwww
min r7.xy, r0.xyxx, r3.wwww
movc r7.xy, r0.wwww, r7.xyxx, r0.xyxx
mov x0[1].x, r7.x
mov x0[0].x, r7.y
movc r1.xyzw, r0.wwww, r6.xyzw, r1.xyzw
dp3 r0.y, cb2[2].xyzx, r2.yzwy
mad r0.w, -cb4[6].y, cb4[6].y, l(1.000000)
mul r0.w, r0.w, l(0.0795774683)
mad r2.y, cb4[6].y, cb4[6].y, l(1.000000)
dp2 r2.z, r0.yyyy, cb4[6].yyyy
add r2.y, -r2.z, r2.y
log r2.y, |r2.y|
mul r2.y, r2.y, l(1.500000)
exp r2.y, r2.y
div r0.w, r0.w, r2.y
mul r6.xyz, r0.wwww, cb2[0].xyzx
mad r6.xyz, r6.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), cb2[8].xyzx
mul r6.xyz, r6.xyzx, cb1[176].wwww
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r6.xyz, r6.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
min r0.w, r1.x, r3.z
min r8.x, r0.w, r0.x
mov x3[0].xyzw, l(0,0,0,1.000000)
mov x3[1].xyzw, l(0,0,0,1.000000)
mov x1[0].x, r7.y
mov x1[1].x, r7.x
div r0.w, -cb4[1].w, cb4[1].z
log r0.w, r0.w
mul r0.w, r0.w, l(32.000000)
add r1.x, r8.x, -cb4[1].w
div r1.x, r1.x, cb4[1].z
log r1.x, r1.x
mul r8.z, r1.x, l(32.000000)
mul r6.xyz, r6.xyzx, cb4[7].yzwy
mov r8.y, l(0)
mov r9.xyzw, l(0,0,0,0)
mov r1.x, l(0)
mov r2.y, l(0)
mov r2.z, r0.w
loop 
  lt r3.w, r2.y, r8.x
  ult r6.w, r1.x, l(2)
  and r3.w, r3.w, r6.w
  breakc_z r3.w
  mov r10.z, x1[r1.x + 0].x
  add r3.w, r2.z, l(1.000000)
  round_ni r11.y, r3.w
  mul r3.w, r11.y, l(0.031250)
  exp r3.w, r3.w
  mad r11.z, r3.w, cb4[1].z, cb4[1].w
  lt r3.w, r8.x, r11.z
  lt r12.x, r10.z, r11.z
  add r6.w, r10.z, -cb4[1].w
  div r6.w, r6.w, cb4[1].z
  log r6.w, r6.w
  mul r10.y, r6.w, l(32.000000)
  movc r12.yz, r12.xxxx, r10.yyzy, r11.yyzy
  movc r10.xyz, r3.wwww, r8.yzxy, r12.xyzx
  add r3.w, -r2.y, r10.z
  eq r6.w, r3.w, l(0.000000)
  if_nz r6.w
    break 
  endif 
  lt r6.w, r2.y, r3.z
  if_nz r6.w
    div r4.x, r2.z, r0.z
    sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r4.yzxy, t2.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r6.w, r4.yzxy, t3.xzwy, s1, l(0.000000)
    ne r6.w, l(0.000000, 0.000000, 0.000000, 0.000000), r6.w
  else 
    mad r7.z, r5.z, r2.y, cb1[174].z
    add r7.w, r7.z, -cb4[4].x
    div_sat r7.w, r7.w, cb4[4].y
    add r7.w, -r7.w, l(1.000000)
    add r7.z, r7.z, -cb4[5].x
    div_sat r7.z, r7.z, -cb4[5].y
    add r7.z, -r7.z, l(1.000000)
    mul r7.zw, r7.zzzw, cb4[8].zzzz
    mul r7.z, r7.z, cb4[5].z
    mad r7.z, r7.w, cb4[4].z, r7.z
    mul r7.w, r7.z, cb4[6].x
    mul r11.xyz, r6.xyzx, r7.wwww
    mad r11.w, cb4[7].x, r7.z, r7.w
    mov r6.w, l(0)
  endif 
  mul r11.xyz, r3.wwww, r11.xyzx
  mul r7.z, r9.w, l(-1.442695)
  exp r7.z, r7.z
  min r7.z, r7.z, l(1.000000)
  mad r12.xyz, r11.xyzx, r7.zzzz, r9.xyzx
  mad r12.w, r11.w, r3.w, r9.w
  movc r9.xyzw, r6.wwww, r9.xyzw, r12.xyzw
  if_nz r10.x
    iadd r3.w, r1.x, l(1)
    mul r6.w, r9.w, l(-1.442695)
    exp r6.w, r6.w
    min r11.w, r6.w, l(1.000000)
    mov r11.xyz, r9.xyzx
    mov x3[r1.x + 0].xyzw, r11.xyzw
    mov r1.x, r3.w
  endif 
  mov r2.yz, r10.zzyz
endloop 
min r0.w, r0.x, r1.w
lt r0.w, r8.x, r0.w
if_nz r0.w
  mul r10.xyz, cb2[0].xyzx, cb5[9].xyzx
  mad r0.w, -cb5[13].x, cb5[13].x, l(1.000000)
  mad r2.y, cb5[13].x, cb5[13].x, l(1.000000)
  dp2 r0.y, r0.yyyy, cb5[13].xxxx
  add r0.y, -r0.y, r2.y
  log r0.y, |r0.y|
  mul r0.yw, r0.yyyw, l(0.000000, 1.500000, 0.000000, 0.0795774683)
  exp r0.y, r0.y
  div r0.y, r0.w, r0.y
  mul r10.xyz, r0.yyyy, r10.xyzx
  mul r10.xyz, r10.xyzx, l(12.566371, 12.566371, 12.566371, 0.000000)
  mov x2[2].x, r1.w
  min r0.y, r1.w, r1.z
  mov x2[1].x, r0.y
  min r0.y, r0.y, r1.y
  mov x2[0].x, r0.y
  round_ni r0.y, r8.z
  mad_sat r0.w, -cb1[174].z, l(0.005000), l(1.000000)
  mad r0.w, r0.w, l(35.000000), l(5.000000)
  mul r1.y, cb5[9].w, cb5[13].y
  utof r1.zw, cb4[28].xxxy
  div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
  iadd r2.y, cb4[28].z, l(-1)
  utof r2.y, r2.y
  mad r11.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000), r4.yzyz
  mad r12.xyzw, r1.zwzw, l(0.000000, -1.000000, -1.000000, 0.000000), r4.yzyz
  mad r13.xy, v0.xyxx, cb3[2].zwzz, r1.zwzz
  mad r14.xyzw, r1.zwzw, l(-1.000000, 1.000000, 1.000000, -1.000000), r4.yzyz
  mad r15.xy, v0.xyxx, cb3[2].zwzz, -r1.zwzz
  div r1.z, l(0.500000), r0.z
  mov r16.w, l(1.000000)
  mov r17.x, l(0)
  mov r18.xy, r11.zwzz
  mov r19.xy, r12.zwzz
  mov r20.xy, r14.zwzz
  mov r8.yzw, r9.xxyz
  mov r1.w, l(100000.000000)
  mov r2.z, r1.x
  mov r3.w, r9.w
  mov r6.w, r8.x
  mov r21.xy, l(0,0,0,0)
  mov r22.x, r0.y
  mov r22.y, r8.x
  loop 
    ult r7.z, r2.z, l(2)
    ult r7.w, r21.y, l(3)
    and r7.z, r7.w, r7.z
    breakc_z r7.z
    mad r16.xyz, r5.wyzw, r6.wwww, cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f 870a71254aac748b-ps.txt

mov r27.xyz, r16.xyzx
mov r27.w, l(1.0)
dp4 r28.w, r27.xyzw, cb1[57].xyzw
add r28.x, r28.w, -r26.y
mul r28.x, r28.x, -r26.x
mul r28.x, r28.x, cb1[9].x
mov r28.yzw, l(0.0)
dp4 r27.x, r28.xyzw, cb1[17].xyzw
dp4 r27.y, r28.xyzw, cb1[18].xyzw
dp4 r27.z, r28.xyzw, cb1[19].xyzw
add r16.xyz, r16.xyzw, r27.xyzx

    add r7.z, r6.w, l(-50.000000)
    mul_sat r7.z, r7.z, l(0.001250)
    mul_sat r7.w, r21.x, l(0.002500)
    mul r7.z, r7.w, r7.z
    mad r22.z, r7.z, r0.w, l(2.000000)
    dp4 r23.x, r16.xyzw, cb5[3].xyzw
    dp4 r23.y, r16.xyzw, cb5[4].xyzw
    mad r23.xy, r23.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    dp4 r7.z, r16.xyzw, cb5[1].xyzw
    add r23.z, -r23.y, l(1.000000)
    sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r7.w, r23.xzxx, t7.yzwx, s3, l(0.000000)
    mad r7.w, r7.w, cb5[2].x, cb5[2].y
    add r7.w, -r7.w, r7.z
    max r7.w, r7.w, l(0.000000)
    sample_l_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r10.w, r23.xzxx, t7.yzwx, s3, l(0.000000)
    mad r10.w, r10.w, cb5[2].x, cb5[2].y
    add r10.w, r7.z, -r10.w
    max r10.w, r10.w, l(0.000000)
    mul r10.w, r1.y, r10.w
    mad r7.w, r1.y, r7.w, r10.w
    sample_l_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.w, r23.xzxx, t7.yzwx, s3, l(0.000000)
    mad r10.w, r10.w, cb5[2].x, cb5[2].y
    add r10.w, r7.z, -r10.w
    max r10.w, r10.w, l(0.000000)
    mad r7.w, r1.y, r10.w, r7.w
    sample_l_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r10.w, r23.xzxx, t7.yzwx, s3, l(0.000000)
    mad r10.w, r10.w, cb5[2].x, cb5[2].y
    add r7.z, r7.z, -r10.w
    max r7.z, r7.z, l(0.000000)
    mad r7.z, r1.y, r7.z, r7.w
    mul r7.z, r7.z, l(-0.360673755)
    exp r7.z, r7.z
    min r7.z, r7.z, l(1.000000)
    mad r23.xy, r16.xyxx, cb5[8].xyxx, cb5[8].zwzz
    mad r23.xy, r23.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r23.xy, r23.xyxx, t8.xyzw, s3, l(0.000000)
    mad r7.w, r23.x, cb5[7].y, cb5[7].w
    add r7.w, -r16.z, r7.w
    add r7.w, r7.w, l(0.500000)
    mul_sat r7.w, r7.w, cb5[10].w
    div_sat r10.w, r6.w, cb5[11].w
    add r10.w, -r10.w, l(1.000000)
    mul r11.w, r6.w, l(0.000333333330)
    max r11.w, r11.w, l(0.000000)
    min r12.w, r11.w, l(1.000000)
    add r12.w, -r12.w, l(1.000000)
    add r11.w, r11.w, r11.w
    min r11.w, r11.w, l(1.000000)
    add r11.w, -r11.w, l(1.000000)
    mad r16.xyz, cb5[10].xyzx, cb0[34].xxxx, r16.xyzx
    mul r16.xyz, r16.xyzx, cb5[12].wwww
    mul r23.xzw, r16.xxyz, cb5[11].xxxx
    round_ni r24.xyz, r23.xzwx
    frc r23.xzw, r23.xxzw
    mul r25.xyz, r23.xzwx, r23.xzwx
    mad r23.xzw, -r23.xxzw, l(2.000000, 0.000000, 2.000000, 2.000000), l(3.000000, 0.000000, 3.000000, 3.000000)
    mul r13.w, r23.w, r25.z
    mad r24.xy, r24.zzzz, l(37.000000, 17.000000, 0.000000, 0.000000), r24.xyxx
    mad r23.xz, r25.xxyx, r23.xxzx, r24.xxyx
    add r23.xz, r23.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
    mul r23.xz, r23.xxzx, cb5[0].zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r23.xz, r23.xzxx, t6.xzyw, s4, l(0.000000)
    add r14.w, -r23.z, r23.x
    mad r13.w, r13.w, r14.w, r23.z
    mul r12.w, r12.w, cb5[12].y
    mul r23.xzw, r16.xxyz, cb5[11].yyyy
    round_ni r24.xyz, r23.xzwx
    frc r23.xzw, r23.xxzw
    mul r25.xyz, r23.xzwx, r23.xzwx
    mad r23.xzw, -r23.xxzw, l(2.000000, 0.000000, 2.000000, 2.000000), l(3.000000, 0.000000, 3.000000, 3.000000)
    mul r14.w, r23.w, r25.z
    mad r24.xy, r24.zzzz, l(37.000000, 17.000000, 0.000000, 0.000000), r24.xyxx
    mad r23.xz, r25.xxyx, r23.xxzx, r24.xxyx
    add r23.xz, r23.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
    mul r23.xz, r23.xxzx, cb5[0].zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r23.xz, r23.xzxx, t6.xzyw, s4, l(0.000000)
    add r15.w, -r23.z, r23.x
    mad r14.w, r14.w, r15.w, r23.z
    mul r12.w, r12.w, r14.w
    mad r12.w, cb5[12].x, r13.w, r12.w
    mul r11.w, r11.w, cb5[12].z
    mul r16.xyz, r16.xyzx, cb5[11].zzzz
    round_ni r23.xzw, r16.xxyz
    frc r16.xyz, r16.xyzx
    mul r24.xyz, r16.xyzx, r16.xyzx
    mad r16.xyz, -r16.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mul r13.w, r16.z, r24.z
    mad r23.xz, r23.wwww, l(37.000000, 0.000000, 17.000000, 0.000000), r23.xxzx
    mad r16.xy, r24.xyxx, r16.xyxx, r23.xzxx
    add r16.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    mul r16.xy, r16.xyxx, cb5[0].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r16.xy, r16.xyxx, t6.xyzw, s4, l(0.000000)
    add r14.w, -r16.y, r16.x
    mad r13.w, r13.w, r14.w, r16.y
    mad_sat r11.w, r11.w, r13.w, r12.w
    mul r12.w, r11.w, r11.w
    mad r11.w, -r12.w, r11.w, l(1.000000)
    dp2 r7.w, r7.wwww, r10.wwww
    add r7.w, r11.w, r7.w
    add r7.w, r7.w, l(-1.050000)
    max r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.010000, 0.000000)
    mul r7.w, r23.y, r7.w
    mul r7.w, r7.w, cb5[9].w
    lt r10.w, r22.y, r3.z
    if_nz r10.w
      div r4.w, r22.x, r0.z
      sample_l_indexable(texture3d)(float,float,float,float) r23.xyzw, r4.yzwy, t2.xyzw, s0, l(0.000000)
      sample_l_indexable(texture3d)(float,float,float,float) r10.w, r4.yzwy, t3.xzwy, s1, l(0.000000)
      ne r10.w, l(0.000000, 0.000000, 0.000000, 0.000000), r10.w
    else 
      mad r11.w, r5.z, r22.y, cb1[174].z
      add r12.w, r11.w, -cb4[4].x
      div_sat r12.w, r12.w, cb4[4].y
      add r12.w, -r12.w, l(1.000000)
      mul r12.w, r12.w, cb4[8].z
      add r11.w, r11.w, -cb4[5].x
      div_sat r11.w, r11.w, -cb4[5].y
      add r11.w, -r11.w, l(1.000000)
      mul r11.w, r11.w, cb4[8].z
      mul r11.w, r11.w, cb4[5].z
      mad r11.w, r12.w, cb4[4].z, r11.w
      mul r12.w, r11.w, cb4[6].x
      mul r23.xyz, r6.xyzx, r12.wwww
      mad r23.w, cb4[7].x, r11.w, r12.w
      mov r10.w, l(0)
    endif 
    movc r10.w, r10.w, l(0), l(1.000000)
    add r16.x, r22.x, l(1.000000)
    mul r11.w, r16.x, l(0.031250)
    exp r11.w, r11.w
    mad r16.y, r11.w, cb4[1].z, cb4[1].w
    add r11.w, r6.w, r22.z
    lt r11.w, r16.y, r11.w
    add r16.z, -r6.w, r16.y
    movc r22.xyz, r11.wwww, r16.xyzx, r22.xyzx
    add r21.w, r6.w, r22.z
    mov r24.w, x0[r2.z + 0].x
    mov r17.w, x2[r21.y + 0].x
    lt r11.w, r24.w, r21.w
    add r12.w, -r6.w, r24.w
    max r24.z, r12.w, l(0.000000)
    lt r12.w, r17.w, r21.w
    add r13.w, -r6.w, r17.w
    max r17.z, r13.w, l(0.000000)
    iadd r17.y, r21.y, l(1)
    mov r21.z, r22.z
    movc r25.xyzw, r12.wwww, r17.xyzw, r21.xyzw
    mov r24.xy, r21.xyxx
    movc r21.xyzw, r11.wwww, r24.xyzw, r25.xyzw
    mul r7.w, r7.w, r21.z
    mad r12.w, r7.w, r10.w, r3.w
    lt r16.xy, l(5.000000, 8.000000, 0.000000, 0.000000), r12.wwww
    eq r12.w, r1.w, l(100000.000000)
    and r12.w, r12.w, r16.x
    movc r1.w, r12.w, r6.w, r1.w
    or r11.w, r11.w, r16.y
    add r12.w, r6.w, -cb4[1].w
    div r12.w, r12.w, cb4[1].z
    log r12.w, r12.w
    mul r12.w, r12.w, l(32.000000)
    div r4.x, r12.w, r2.y
    sample_l_indexable(texture3d)(float,float,float,float) r12.w, r4.yzxy, t5.yzwx, s5, l(0.000000)
    mov r18.z, r4.x
    sample_l_indexable(texture3d)(float,float,float,float) r13.w, r18.xyzx, t5.yzwx, s5, l(0.000000)
    add r12.w, r12.w, r13.w
    mov r11.z, r18.z
    sample_l_indexable(texture3d)(float,float,float,float) r13.w, r11.xyzx, t5.yzwx, s5, l(0.000000)
    add r12.w, r12.w, r13.w
    mov r19.z, r11.z
    sample_l_indexable(texture3d)(float,float,float,float) r11.z, r19.xyzx, t5.yzxw, s5, l(0.000000)
    add r11.z, r11.z, r12.w
    mov r12.z, r19.z
    sample_l_indexable(texture3d)(float,float,float,float) r12.w, r12.xyzx, t5.yzwx, s5, l(0.000000)
    add r11.z, r11.z, r12.w
    mov r13.z, r12.z
    sample_l_indexable(texture3d)(float,float,float,float) r12.z, r13.xyzx, t5.yzxw, s5, l(0.000000)
    add r11.z, r11.z, r12.z
    mov r20.z, r13.z
    sample_l_indexable(texture3d)(float,float,float,float) r12.z, r20.xyzx, t5.yzxw, s5, l(0.000000)
    add r11.z, r11.z, r12.z
    mov r14.z, r20.z
    sample_l_indexable(texture3d)(float,float,float,float) r12.z, r14.xyzx, t5.yzxw, s5, l(0.000000)
    add r11.z, r11.z, r12.z
    mov r15.z, r14.z
    sample_l_indexable(texture3d)(float,float,float,float) r12.z, r15.xyzx, t5.yzxw, s5, l(0.000000)
    add r11.z, r11.z, r12.z
    mul r7.z, r7.z, r11.z
    add r4.w, r1.z, r4.x
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r4.yzwy, t4.xyzw, s2, l(0.000000)
    mul r4.w, r7.z, l(0.111111112)
    mul r17.yzw, r10.xxyz, r4.wwww
    mul r17.yzw, r17.yyzw, cb1[176].wwww
    max r17.yzw, r17.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.yzw, r17.yyzw, l(0.000000, 64512.000000, 64512.000000, 64512.000000)
    mad r16.xyz, r16.xyzx, l(0.159154937, 0.159154937, 0.159154937, 0.000000), r17.yzwy
    mul r17.yzw, r21.zzzz, r23.xxyz
    mad r16.xyz, r16.xyzx, r7.wwww, r17.yzwy
    mad r4.w, r23.w, r21.z, r7.w
    mul r7.z, r3.w, l(-1.442695)
    exp r7.z, r7.z
    min r7.z, r7.z, l(1.000000)
    mul r16.xyz, r7.zzzz, r16.xyzx
    mad r23.xyz, r16.xyzx, r10.wwww, r8.yzwy
    mad r4.w, r4.w, r10.w, r3.w
    if_nz r11.w
      iadd r7.z, r2.z, l(1)
      mul r7.w, r4.w, l(-1.442695)
      exp r7.w, r7.w
      min r23.w, r7.w, l(1.000000)
      mov x3[r2.z + 0].xyzw, r23.xyzw
      mov r2.z, r7.z
    else 
      add r7.z, -r6.w, r21.w
      add r21.x, r7.z, r21.x
      mov r8.yzw, r23.xxyz
      mov r3.w, r4.w
      mov r6.w, r21.w
    endif 
  endloop 
  mov r9.xyz, r8.yzwy
  mov o2.x, r1.w
  mov r1.x, r2.z
  mov r9.w, r3.w
  mov r8.x, r6.w
else 
  mov o2.x, l(100000.000000)
endif 
mov x4[0].x, r7.y
mov x4[1].x, r7.x
add r0.y, r8.x, -cb4[1].w
div r0.y, r0.y, cb4[1].z
log r0.y, r0.y
mul r0.y, r0.y, l(32.000000)
div r0.w, r2.x, cb4[1].z
log r0.w, r0.w
mul r3.y, r0.w, l(32.000000)
mov r3.x, l(0)
mov r7.xyzw, r9.xyzw
mov r0.w, r1.x
mov r1.y, r8.x
mov r1.z, r0.y
loop 
  lt r1.w, r1.y, r3.z
  ult r2.x, r0.w, l(2)
  and r2.x, r1.w, r2.x
  breakc_z r2.x
  mov r2.z, x4[r0.w + 0].x
  add r2.x, r1.z, l(1.000000)
  round_ni r8.y, r2.x
  mul r2.x, r8.y, l(0.031250)
  exp r2.x, r2.x
  mad r8.z, r2.x, cb4[1].z, cb4[1].w
  lt r2.x, r3.z, r8.z
  lt r10.x, r2.z, r8.z
  add r3.w, r2.z, -cb4[1].w
  div r3.w, r3.w, cb4[1].z
  log r3.w, r3.w
  mul r2.y, r3.w, l(32.000000)
  movc r10.yz, r10.xxxx, r2.yyzy, r8.yyzy
  movc r2.xyz, r2.xxxx, r3.xyzx, r10.xyzx
  add r3.w, -r1.y, r2.z
  eq r4.w, r3.w, l(0.000000)
  if_nz r4.w
    break 
  endif 
  if_nz r1.w
    div r4.x, r1.z, r0.z
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r4.yzxy, t2.xyzw, s0, l(0.000000)
    sample_l_indexable(texture3d)(float,float,float,float) r1.w, r4.yzxy, t3.xzwy, s1, l(0.000000)
    ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), r1.w
  else 
    mad r4.x, r5.z, r1.y, cb1[174].z
    add r4.w, r4.x, -cb4[4].x
    div_sat r4.w, r4.w, cb4[4].y
    add r4.w, -r4.w, l(1.000000)
    add r4.x, r4.x, -cb4[5].x
    div_sat r4.x, r4.x, -cb4[5].y
    add r4.x, -r4.x, l(1.000000)
    mul r4.xw, r4.xxxw, cb4[8].zzzz
    mul r4.x, r4.x, cb4[5].z
    mad r4.x, r4.w, cb4[4].z, r4.x
    mul r4.w, r4.x, cb4[6].x
    mul r10.xyz, r4.wwww, r6.xyzx
    mad r10.w, cb4[7].x, r4.x, r4.w
    mov r1.w, l(0)
  endif 
  mul r8.yzw, r3.wwww, r10.xxyz
  mul r4.x, r7.w, l(-1.442695)
  exp r4.x, r4.x
  min r4.x, r4.x, l(1.000000)
  mad r11.xyz, r8.yzwy, r4.xxxx, r7.xyzx
  mad r11.w, r10.w, r3.w, r7.w
  movc r7.xyzw, r1.wwww, r7.xyzw, r11.xyzw
  if_nz r2.x
    iadd r1.w, r0.w, l(1)
    mul r2.x, r7.w, l(-1.442695)
    exp r2.x, r2.x
    min r10.w, r2.x, l(1.000000)
    mov r10.xyz, r7.xyzx
    mov x3[r0.w + 0].xyzw, r10.xyzw
    mov r0.w, r1.w
  endif 
  mov r1.yz, r2.zzyz
endloop 
mov r1.xyzw, x3[0].xyzw
mov r4.xyzw, x3[1].xyzw
max r0.y, r3.z, r8.x
mul r2.xyz, r5.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r3.xyz, r2.xxxx, cb2[23].xyzx
mad r3.xyz, cb2[22].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r3.xyzx
mad r3.xyz, r2.yyyy, cb2[24].xyzx, r3.xyzx
mad r2.xyz, r2.zzzz, cb2[25].xyzx, r3.xyzx
mul r3.xyzw, r5.xyzw, r5.yzzz
mul r3.xyw, r3.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r2.xyz, r3.xxxx, cb2[26].xyzx, r2.xyzx
mad r2.xyz, r3.yyyy, cb2[27].xyzx, r2.xyzx
mad r0.z, r3.z, l(3.000000), l(-1.000000)
mul r0.z, r0.z, l(0.315392)
mad r2.xyz, r0.zzzz, cb2[28].xyzx, r2.xyzx
mad r2.xyz, r3.wwww, cb2[29].xyzx, r2.xyzx
mul r0.z, r5.y, r5.y
mad r0.z, r5.w, r5.w, -r0.z
mul r0.z, r0.z, l(0.546274)
mad r2.xyz, r0.zzzz, cb2[30].xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, cb1[176].wwww
add r2.xyz, r2.xyzx, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xyz, r2.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mad r0.z, r5.z, r0.y, cb1[174].z
add r3.x, cb4[4].y, cb4[4].x
add r3.x, -r0.z, r3.x
div r3.x, r3.x, r2.w
max r3.x, r0.y, r3.x
min r3.x, r0.x, r3.x
mad r3.y, r2.w, r3.x, r0.z
add r3.y, r3.y, -cb4[34].y
add r3.z, -cb4[34].y, cb4[34].x
div_sat r3.y, r3.y, r3.z
add r3.y, -r3.y, l(1.000000)
mul r3.y, r3.y, cb4[34].z
log r3.y, |r3.y|
mul r3.y, r3.y, l(1.300000)
exp r3.y, r3.y
mul r3.w, r3.y, cb4[8].z
add r5.x, -r0.z, cb4[4].x
div r5.x, r5.x, r2.w
max r5.x, r0.y, r5.x
min r5.x, r0.x, r5.x
mad r5.y, r2.w, r5.x, r0.z
add r5.y, r5.y, -cb4[34].y
div_sat r5.y, r5.y, r3.z
add r5.y, -r5.y, l(1.000000)
mul r5.y, r5.y, cb4[34].z
log r5.y, |r5.y|
mul r5.y, r5.y, l(1.300000)
exp r5.y, r5.y
mul r5.z, r5.y, cb4[8].z
add r5.w, -r0.z, l(-100000.000000)
div r5.w, r5.w, r2.w
max r0.y, r0.y, r5.w
min r0.x, r0.x, r0.y
mad r0.y, r2.w, r0.x, r0.z
add r0.y, r0.y, -cb4[34].y
div_sat r0.y, r0.y, r3.z
add r0.y, -r0.y, l(1.000000)
mul r0.y, r0.y, cb4[34].z
log r0.y, |r0.y|
mul r0.y, r0.y, l(1.300000)
exp r0.y, r0.y
mul r0.z, r0.y, cb4[8].z
mul r2.xyz, r2.xyzx, cb4[7].yzwy
mul r2.xyz, r2.xyzx, cb4[6].xxxx
add r3.z, cb4[6].x, cb4[7].x
lt r2.w, r2.w, l(0.000000)
if_nz r2.w
  add r2.w, -r3.x, r5.x
  lt r5.w, l(0.000000), r2.w
  mad r6.x, r5.y, cb4[8].z, -r3.w
  add r6.y, r2.w, l(0.000001)
  div r6.x, r6.x, r6.y
  mul r6.y, r2.w, r3.z
  mul r2.w, r2.w, r6.x
  mad r6.x, r2.w, l(0.500000), r3.w
  mad r8.w, r6.y, r6.x, r7.w
  mad r2.w, r3.w, l(2.000000), r2.w
  mul r2.w, r2.w, r6.y
  mul r2.w, r2.w, l(-0.721347511)
  exp r2.w, r2.w
  add r2.w, -r2.w, l(1.000000)
  mul r6.xyz, r2.xyzx, r2.wwww
  mul r2.w, r7.w, l(1.442695)
  exp r2.w, r2.w
  mul r2.w, r3.z, r2.w
  div r6.xyz, r6.xyzx, r2.wwww
  add r8.xyz, r6.xyzx, r7.xyzx
  movc r6.xyzw, r5.wwww, r8.xyzw, r7.xyzw
  add r2.w, -r5.x, r0.x
  lt r3.w, l(0.000000), r2.w
  mad r0.y, r0.y, cb4[8].z, -r5.z
  add r5.w, r2.w, l(0.000001)
  div r0.y, r0.y, r5.w
  mul r5.w, r2.w, r3.z
  mul r0.y, r2.w, r0.y
  mad r2.w, r0.y, l(0.500000), r5.z
  mad r8.w, r5.w, r2.w, r6.w
  mad r0.y, r5.z, l(2.000000), r0.y
  mul r0.y, r0.y, r5.w
  mul r0.y, r0.y, l(-0.721347511)
  exp r0.y, r0.y
  add r0.y, -r0.y, l(1.000000)
  mul r9.xyz, r2.xyzx, r0.yyyy
  mul r0.y, r6.w, l(1.442695)
  exp r0.y, r0.y
  mul r0.y, r3.z, r0.y
  div r9.xyz, r9.xyzx, r0.yyyy
  add r8.xyz, r6.xyzx, r9.xyzx
  movc r6.xyzw, r3.wwww, r8.xyzw, r6.xyzw
else 
  add r0.x, -r0.x, r5.x
  lt r0.y, l(0.000000), r0.x
  mad r2.w, r5.y, cb4[8].z, -r0.z
  add r3.w, r0.x, l(0.000001)
  div r2.w, r2.w, r3.w
  mul r3.w, r0.x, r3.z
  mul r0.x, r0.x, r2.w
  mad r2.w, r0.x, l(0.500000), r0.z
  mad r8.w, r3.w, r2.w, r7.w
  mad r0.x, r0.z, l(2.000000), r0.x
  mul r0.x, r0.x, r3.w
  mul r0.x, r0.x, l(-0.721347511)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mul r9.xyz, r2.xyzx, r0.xxxx
  mul r0.x, r7.w, l(1.442695)
  exp r0.x, r0.x
  mul r0.x, r3.z, r0.x
  div r9.xyz, r9.xyzx, r0.xxxx
  add r8.xyz, r7.xyzx, r9.xyzx
  movc r7.xyzw, r0.yyyy, r8.xyzw, r7.xyzw
  add r0.x, r3.x, -r5.x
  lt r0.y, l(0.000000), r0.x
  mad r0.z, r3.y, cb4[8].z, -r5.z
  add r2.w, r0.x, l(0.000001)
  div r0.z, r0.z, r2.w
  mul r2.w, r0.x, r3.z
  mul r0.x, r0.x, r0.z
  mad r0.z, r0.x, l(0.500000), r5.z
  mad r8.w, r2.w, r0.z, r7.w
  mad r0.x, r5.z, l(2.000000), r0.x
  mul r0.x, r0.x, r2.w
  mul r0.x, r0.x, l(-0.721347511)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mul r2.xyz, r2.xyzx, r0.xxxx
  mul r0.x, r7.w, l(1.442695)
  exp r0.x, r0.x
  mul r0.x, r3.z, r0.x
  div r2.xyz, r2.xyzx, r0.xxxx
  add r8.xyz, r2.xyzx, r7.xyzx
  movc r6.xyzw, r0.yyyy, r8.xyzw, r7.xyzw
endif 
ult r0.xy, r0.wwww, l(1, 2, 0, 0)
mul r0.z, r6.w, l(-1.442695)
exp r0.z, r0.z
min r6.w, r0.z, l(1.000000)
movc o0.xyzw, r0.xxxx, r6.xyzw, r1.xyzw
movc o1.xyzw, r0.yyyy, r6.xyzw, r4.xyzw
ret 
// Approximately 655 instruction slots used