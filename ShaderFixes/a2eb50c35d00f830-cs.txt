// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed a2eb50c35d00f830-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 08:34:59 2017
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer ScreenSpacePlanarReflectionForWater
// {
//
//   float4 SSPRWHomogenousToFinalCoords;// Offset:    0 Size:    16
//   float4x4 SSPRWInvViewMatrix;       // Offset:   16 Size:    64
//   float4x4 SSPRWMirrorViewProjMatrix;// Offset:   80 Size:    64
//   float4 SSPRWParams0;               // Offset:  144 Size:    16
//   float4 SSPRWParams1;               // Offset:  160 Size:    16
//   float4 SSPRWResolution;            // Offset:  176 Size:    16
//   float4x4 SSPRWViewProjMatrix;      // Offset:  192 Size:    64 [unused]
//   uint4 VisibilityGridParams;        // Offset:  256 Size:    16 [unused]
//   float2 ClearScale;                 // Offset:  272 Size:     8 [unused]
//   float2 ReflectionFallOffMulAdd;    // Offset:  280 Size:     8 [unused]
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ScreenSpacePlanarReflectionForWater__ColorTextureMS    texture  float4        2dMS    0        1
// ScreenSpacePlanarReflectionForWater__DepthTextureMS    texture  float4        2dMS    1        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    2        1
// ScreenSpaceFogVolumeReflectionForWater__FVMaxExtinctionDepthTexture__TexObj__    texture  float4          2d    3        1
// ScreenSpacePlanarReflectionForWater__OutputTexture        UAV  float4          2d    0        1
// ScreenSpacePlanarReflectionForWater__SSPRWDepthTexture        UAV    uint          2d    1        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// ScreenSpacePlanarReflectionForWater    cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 0, 0, 0},
                              { 1, 0, 0, 0},
                              { -1, -1, 0, 0},
                              { 0, 1, 0, 0} }
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[40], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2dms(0) (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (uint,uint,uint,uint) u1
dcl_input vThreadID.xyz
dcl_temps 13
dcl_thread_group 16, 16, 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Screen Space Reflection fix (Compute Shader variant) inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed a2eb50c35d00f830-cs.txt

// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed a2eb50c35d00f830-cs.txt

mul r9.w, r9.x, r9.y
mul r11.x, r9.w, cb0[9].x
mul r11.y, r9.w, cb0[10].x
mul r11.z, r9.w, cb0[11].x
mul r11.w, r9.w, cb0[12].x
dp4 r12.x, r11.xyzw, cb0[17].xyzw
dp4 r12.y, r11.xyzw, cb0[18].xyzw
dp4 r12.z, r11.xyzw, cb0[19].xyzw
add r10.xyz, cb3[30].xyz, r12.xyz

itof r0.x, vThreadID.y
ge r0.y, r0.x, cb2[11].y
if_nz r0.y
  ret 
endif 
itof r0.y, vThreadID.x
lt r0.z, cb2[11].x, r0.y
lt r0.w, cb2[11].y, r0.x
or r0.z, r0.w, r0.z
if_nz r0.z
  ret 
endif 
itof r0.zw, vThreadID.xxxy
mul r1.xy, r0.zwzz, cb2[11].zwzz
mad r0.z, r1.x, l(2.000000), l(-1.000000)
log r0.z, |r0.z|
mul r0.z, r0.z, l(40.000000)
exp r0.z, r0.z
add r2.x, r0.y, l(0.500000)
add r2.y, r0.x, l(0.500000)
mul r0.xy, r2.xyxx, cb2[11].zwzz
mov r2.xy, vThreadID.xyxx
mov r2.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r3.x, r2.xyww, t1.xyzw, vThreadID.z
mov r3.yzw, l(0,1.000000,0,0)
dp2 r1.w, r3.xyxx, cb0[11].zwzz
dp2 r3.x, r3.xyxx, cb0[12].zwzz
div r1.w, -r1.w, r3.x
ushr r3.xy, vThreadID.xyxx, l(2, 2, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t3.xyzw
min r1.w, r1.w, r3.x
mad r0.xy, cb2[9].xyxx, r0.xyxx, cb2[9].zwzz
mul r4.xy, r1.wwww, r0.xyxx

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-screen-space-reflections-cs -i -f --only-autofixed a2eb50c35d00f830-cs.txt

add r9.w, r1.w, -r9.y
mul r9.w, r9.w, r9.x
mad r4.x, -r9.w, cb0[9].x, r4.x

mad r0.x, r0.z, l(0.120000), l(1.000000)
mul r4.x, r0.x, r4.x
mov r4.z, -r1.w
mov r4.w, l(1.000000)
dp4 r0.x, r4.xyzw, cb2[3].xyzw
lt r0.x, r0.x, cb2[10].w
add r0.y, cb2[0].z, l(-100.000000)
lt r0.y, r0.y, r1.w
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ge r0.x, r1.w, r3.x
mul r0.y, r1.w, l(65536.000000)
ftou r0.y, r0.y
ldms_indexable(texture2dms)(float,float,float,float) r2.xyz, r2.xyzw, t0.xyzw, vThreadID.z
mad r1.z, -r0.w, cb2[11].w, l(1.000000)
mul r3.xyz, r1.yzyy, l(10.000000, 10.000000, -33.333336, 0.000000)
mov_sat r3.xy, r3.xyxx
mul r5.w, r3.y, r3.x
dp4 r3.x, r4.xyzw, cb2[5].xyzw
dp4 r3.y, r4.xyzw, cb2[6].xyzw
dp4 r0.w, r4.xyzw, cb2[8].xyzw

// SSPRWMirrorViewProjMatrix - subtract stereo correction:
add r9.w, r0.w, -r9.y
mad r3.x, -r9.w, r9.x, r3.x

div r4.xyzw, r3.xyxy, r0.wwww
mad r4.xyzw, -r4.xyzw, cb2[0].xyxy, cb2[0].xyxy
ftou r4.xyzw, r4.xyzw
exp r0.w, r3.z
add r0.w, -r0.w, l(1.000000)
mul r1.xy, r1.xyxx, cb0[66].xyxx
mul r1.xy, r1.xyxx, cb3[37].zzzz
round_ni r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, cb3[17].xyxx
iadd r2.w, cb3[28].z, l(-1)
utof r2.w, r2.w
mul r3.x, r2.w, l(0.031250)
exp r3.x, r3.x
mad r3.x, r3.x, cb3[1].z, cb3[1].w
min r3.x, r1.w, r3.x
add r3.x, r3.x, -cb3[1].w
div r3.x, r3.x, cb3[1].z
log r3.x, r3.x
mul r3.x, r3.x, l(32.000000)
div r1.z, r3.x, r2.w
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r1.xyzx, t2.xyzw, s0, l(0.000000)
mad r6.xyzw, cb3[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r1.xyxy
mov r7.xy, r6.xyxx
mov r7.z, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r8.xyzw
mov r7.xy, r6.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r7.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mad r6.xyzw, cb3[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r1.xyxy
mov r7.xy, r6.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r8.xyzw
mov r7.xy, r6.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r7.xyzx, t2.xyzw, s0, l(0.000000)
add r3.xyzw, r3.xyzw, r6.xyzw
mul r3.xyzw, r3.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r6.zw, l(0,0,1.000000,1.000000)
dp4 r1.x, r6.xyww, cb0[9].xyzw
dp4 r1.y, r6.xyww, cb0[10].xyzw
dp4 r1.z, r6.xyzw, cb0[12].xyzw
div r6.xy, r1.xyxx, r1.zzzz
mov r6.z, -cb3[0].x
mov r6.w, l(1.000000)
dp4 r1.x, r6.xyzw, cb3[13].xyzw
dp4 r1.y, r6.xyzw, cb3[14].xyzw
dp4 r1.z, r6.xyzw, cb3[15].xyzw
add r6.xyzw, -r1.xyzx, r10.xyzx
div r1.xyz, r3.xyzx, cb0[176].wwww
exp r2.w, r3.w
dp3 r3.x, r6.yzwy, r6.yzwy
rsq r3.x, r3.x
mul r3.xyzw, r3.xxxx, r6.xyzw
div r6.x, cb3[31].w, |r3.z|
min r1.w, r1.w, r6.x
mul r6.x, r1.w, cb3[29].w
min r6.x, r6.x, l(1.000000)
add r1.w, r1.w, -cb3[33].w
mul_sat r1.w, r1.w, cb3[32].w
mul r1.w, r1.w, r6.x
mul r6.x, r1.w, cb3[34].w
mul r1.w, r1.w, cb3[30].w
mul r1.w, r1.w, l(-1.442695)
exp r1.w, r1.w
mul r6.yzw, r3.yyzw, l(0.000000, -0.488603, 0.488603, -0.488603)
mul r7.xyz, r6.yyyy, cb1[32].xyzx
mad r7.xyz, cb1[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r7.xyzx
mad r7.xyz, r6.zzzz, cb1[33].xyzx, r7.xyzx
mad r6.yzw, r6.wwww, cb1[34].xxyz, r7.xxyz
mul r7.xyzw, r3.xyzw, r3.yzzz
mul r7.xyw, r7.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r6.yzw, r7.xxxx, cb1[35].xxyz, r6.yyzw
mad r6.yzw, r7.yyyy, cb1[36].xxyz, r6.yyzw
mad r3.x, r7.z, l(3.000000), l(-1.000000)
mul r3.x, r3.x, l(0.315392)
mad r6.yzw, r3.xxxx, cb1[37].xxyz, r6.yyzw
mad r6.yzw, r7.wwww, cb1[38].xxyz, r6.yyzw
mul r3.x, r3.y, r3.y
mad r3.x, r3.w, r3.w, -r3.x
mul r3.x, r3.x, l(0.546274)
mad r3.xyz, r3.xxxx, cb1[39].xyzx, r6.yzwy
mul r3.xyz, r3.xyzx, r6.xxxx
mul r3.xyz, r3.xyzx, cb3[29].xyzx
mad r3.xyz, r3.xyzx, r2.wwww, r1.xyzx
mul r3.w, r1.w, r2.w
movc r1.xyzw, cb3[37].wwww, r3.xyzw, l(0,0,0,1.000000)
mul r1.xyz, r1.xyzx, cb0[176].wwww
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xyz, r1.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r1.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
movc r1.xyz, r0.xxxx, r1.xyzx, r3.xyzx
mul r1.xyz, r5.wwww, r1.xyzx
mad r5.xyz, r2.xyzx, r1.wwww, r1.xyzx
iadd r0.x, vThreadID.z, l(-3)
ult r0.w, vThreadID.z, l(2)
movc r1.x, r0.w, vThreadID.z, r0.x
mov r0.x, vThreadID.z
mov r1.yzw, icb[r0.x + 0].yyyy
iadd r1.xyzw, r1.xyzw, r4.zwww
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, r1.xwww, u1.xyzw
ieq r0.x, r0.x, r0.y
if_nz r0.x
  store_uav_typed u0.xyzw, r1.xyzw, r5.xyzw
endif 
lt r0.x, l(0.010000), r0.z
if_nz r0.x
  iadd r1.xyzw, r4.zwzw, l(1, 0, -1, 0)
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, r1.xyyy, u1.xyzw
  ieq r0.x, r0.x, r0.y
  if_nz r0.x
    store_uav_typed u0.xyzw, r1.xyyy, r5.xyzw
  endif 
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, r1.zwww, u1.xyzw
  ieq r0.x, r0.x, r0.y
  if_nz r0.x
    store_uav_typed u0.xyzw, r1.zwww, r5.xyzw
  endif 
  iadd r1.xyzw, r4.xyzw, l(0, 1, 0, -1)
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, r1.xyyy, u1.xyzw
  ieq r0.x, r0.x, r0.y
  if_nz r0.x
    store_uav_typed u0.xyzw, r1.xyyy, r5.xyzw
  endif 
  ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, r1.zwww, u1.xyzw
  ieq r0.x, r0.x, r0.y
  if_nz r0.x
    store_uav_typed u0.xyzw, r1.zwww, r5.xyzw
  endif 
endif 
ret 
// Approximately 189 instruction slots used