// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 86a50a52b797b641-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:52:03 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528
//
// }
//
// cbuffer MaterialWD2Skin
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 CurvatureUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16
//   float4 DiffuseUVTiling2;           // Offset:   48 Size:    16
//   float4 MaskTextureUVTiling1;       // Offset:   64 Size:    16
//   float4 MaskUVTiling2;              // Offset:   80 Size:    16
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16
//   float4 NormalUVTiling2;            // Offset:  112 Size:    16
//   float3 DiffuseColor1;              // Offset:  128 Size:    12 [unused]
//   float DiffuseNormalIntensity1;     // Offset:  140 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:  144 Size:    12 [unused]
//   float FaceBlendDisplaceStrength;   // Offset:  156 Size:     4
//   float3 FaceBlendZoneSelection;     // Offset:  160 Size:    12
//   float FaceBlendFadeDistance;       // Offset:  172 Size:     4
//   float3 TightsColor;                // Offset:  176 Size:    12 [unused]
//   float MaskReflectanceOffset;       // Offset:  188 Size:     4 [unused]
//   float2 CurvatureTextureOffset;     // Offset:  192 Size:     8 [unused]
//   float MaskRoughnessOffset;         // Offset:  200 Size:     4 [unused]
//   float Metalness;                   // Offset:  204 Size:     4 [unused]
//   float2 DiffuseTextureOffset2;      // Offset:  208 Size:     8
//   float NormalDynamicWrinklesIntensity;// Offset:  216 Size:     4 [unused]
//   float NormalIntensity1;            // Offset:  220 Size:     4 [unused]
//   float2 FaceBlendDisplaceRange;     // Offset:  224 Size:     8
//   float NormalIntensity2;            // Offset:  232 Size:     4
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float2 MaskTextureOffset2;         // Offset:  240 Size:     8
//   float Roughness;                   // Offset:  248 Size:     4 [unused]
//   float SSSStrength;                 // Offset:  252 Size:     4 [unused]
//   float TightsStrenght;              // Offset:  256 Size:     4 [unused]
//   float TightsThickness;             // Offset:  260 Size:     4 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DiffuseBlendMode;              // Offset:  268 Size:     4 [unused]
//   int FaceBlendDisplaceTextureArrayUV;// Offset:  272 Size:     4
//   int Mask2ColorChannel;             // Offset:  276 Size:     4 [unused]
//   int MaskChannelUsageAlpha;         // Offset:  280 Size:     4 [unused]
//   int MaskChannelUsageBlue;          // Offset:  284 Size:     4 [unused]
//   int MaskChannelUsageGreen;         // Offset:  288 Size:     4 [unused]
//   int MaskChannelUsageRed;           // Offset:  292 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  296 Size:     4 [unused]
//   bool DynamicWrinkles;              // Offset:  300 Size:     4 [unused]
//   bool RoughnessInDiffuse1Alpha;     // Offset:  304 Size:     4 [unused]
//   bool UseFaceBlend;                 // Offset:  308 Size:     4 [unused]
//   bool UseTights;                    // Offset:  312 Size:     4 [unused]
//
// }
//
// cbuffer PreviousWorldTransform
// {
//
//   float4x3 PreviousWorldMatrix;      // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__SampObj__    sampler      NA          NA    0        1
// SkinningConfig                    texture   uint4         buf    0        1
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__TexObj__    texture  float4     2darray    1        1
// Viewport                          cbuffer      NA          NA    0        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// Skinning                          cbuffer      NA          NA    3        1
// MaterialWD2Skin                   cbuffer      NA          NA    4        1
// PreviousWorldTransform            cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// texcoord                 9   xyzw        3     NONE   float   xyzw
// normal                   0   xyzw        4     NONE   float   xyz 
// color                    1   xyzw        5     NONE   float   x  w
// texcoord                 1   xyzw        6     NONE   float   xyzw
// texcoord                 0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// SV_Position              0   xyzw        9      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[3066], dynamicIndexed
dcl_constantbuffer cb4[18], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (uint,uint,uint,uint) t0
dcl_resource_texture2darray (float,float,float,float) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v5.xw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output_siv o9.xyzw, position
dcl_temps 19

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r18.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
itof r1.xyzw, v1.xyzw
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r2.x, r0.w, l(1)
if_nz r2.x
  and r2.x, v0.w, l(8191)
  mov r3.xyzw, l(1.000000,0,0,0)
  mov r4.xyzw, l(0,0,0,0)
  mov r2.yzw, l(0,0,0,0)
  mov r5.xyzw, l(0,0,0,0)
else 
  and r6.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.xyzw, r6.xxxx, t0.xyzw
  and r2.xyzw, r6.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  ushr r5.xyzw, r6.xyzw, l(16, 16, 16, 16)
  mov r3.xyzw, v2.zyxw
  mov r4.xyzw, v3.zyxw
endif 
mad r6.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mad r1.xyzw, r1.xyzw, cb2[2].zwzw, cb2[2].xyxy
mad r0.xyz, v4.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, v6.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r8.xyz, v7.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r7.w, v6.w, v7.w
lt r7.w, r7.w, l(1.500000)
if_nz r7.w
  add r7.w, -v6.w, l(1.000000)
  add_sat r9.z, r7.w, -v7.w
  movc r10.xy, cb4[17].xxxx, r1.zwzz, r1.xyxx
  mov r11.x, cb1[0].w
  mov r11.y, cb1[1].w
  mov r11.z, cb1[2].w
  add r11.xyz, r11.xyzx, -cb0[174].xyzx
  dp3 r7.w, r11.xyzx, r11.xyzx
  mul r8.w, cb4[10].w, cb4[10].w
  mul r7.w, r7.w, r8.w
  min r7.w, r7.w, l(1.000000)
  add r7.w, -r7.w, l(1.000000)
  mov r9.x, v6.w
  mov r9.y, v7.w
  mul r11.xyz, r7.wwww, r9.xyzx
  mul r11.xyz, r11.xyzx, cb4[9].wwww
  add r7.w, -cb4[14].x, cb4[14].y
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  if_nz r12.x
    mov r10.z, cb4[10].x
    sample_l_indexable(texture2darray)(float,float,float,float) r13.xyz, r10.xyzx, t1.xyzw, s0, l(0.000000)
    mad r13.xyz, r13.xyzx, r7.wwww, cb4[14].xxxx
    mad r6.xyz, -r13.xyzx, r11.xxxx, r6.xyzx
  endif 
  if_nz r12.y
    mov r10.w, cb4[10].y
    sample_l_indexable(texture2darray)(float,float,float,float) r12.xyw, r10.xywx, t1.xywz, s0, l(0.000000)
    mad r12.xyw, r12.xyxw, r7.wwww, cb4[14].xxxx
    mad r6.xyz, -r12.xywx, r11.yyyy, r6.xyzx
  endif 
  if_nz r12.z
    mov r10.z, cb4[10].z
    sample_l_indexable(texture2darray)(float,float,float,float) r10.xyz, r10.xyzx, t1.xyzw, s0, l(0.000000)
    mad r10.xyz, r10.xyzx, r7.wwww, cb4[14].xxxx
    mad r6.xyz, -r10.xyzx, r11.zzzz, r6.xyzx
  endif 
else 
  mov r9.xyz, l(0,0,1.000000,0)
endif 
mov r10.xyzw, l(0,0,0,0)
mov r11.xyzw, l(0,0,0,0)
mov r12.xyzw, l(0,0,0,0)
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, r0.w
  breakc_nz r8.w
  ieq r13.xyzw, r7.wwww, l(0, 1, 2, 3)
  ieq r14.xyzw, r7.wwww, l(4, 5, 6, 7)
  and r15.xyzw, r13.wzyx, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  and r16.xyzw, r14.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r8.w, r15.wzyx, r3.xyzw
  mad r8.w, r16.x, r4.x, r8.w
  mad r8.w, r16.y, r4.y, r8.w
  mad r8.w, r16.z, r4.z, r8.w
  mad r8.w, r16.w, r4.w, r8.w
  and r13.xyzw, r2.xyzw, r13.xyzw
  or r13.x, r13.x, r13.y
  or r13.x, r13.x, r13.z
  or r13.x, r13.x, r13.w
  and r14.xyzw, r5.xyzw, r14.xyzw
  or r13.x, r13.x, r14.x
  or r13.x, r13.x, r14.y
  or r13.x, r13.x, r14.z
  or r13.x, r13.x, r14.w
  imul null, r13.x, r13.x, l(3)
  mul r14.x, r8.w, cb3[r13.x + 0].w
  mul r14.y, r8.w, cb3[r13.x + 1].w
  mul r14.z, r8.w, cb3[r13.x + 2].w
  mad r10.xyz, r8.wwww, cb3[r13.x + 0].xyzx, r10.xyzx
  mad r11.xyz, r8.wwww, cb3[r13.x + 1].xyzx, r11.xyzx
  mad r12.xyz, r8.wwww, cb3[r13.x + 2].xyzx, r12.xyzx
  mov r13.x, r10.w
  mov r13.y, r11.w
  mov r13.z, r12.w
  add r13.xyz, r14.xyzx, r13.xyzx
  iadd r7.w, r7.w, l(1)
  mov r10.w, r13.x
  mov r11.w, r13.y
  mov r12.w, r13.z
endloop 
mov r6.w, l(1.000000)
dp4 r13.x, r6.xyzw, r10.xyzw
dp4 r13.y, r6.xyzw, r11.xyzw
dp4 r13.z, r6.xyzw, r12.xyzw
dp3 r14.x, r0.xyzx, r10.xyzx
dp3 r14.y, r0.xyzx, r11.xyzx
dp3 r14.z, r0.xyzx, r12.xyzx
dp3 r0.x, r7.xyzx, r10.xyzx
dp3 r0.y, r7.xyzx, r11.xyzx
dp3 r0.z, r7.xyzx, r12.xyzx
dp3 r7.x, r8.xyzx, r10.xyzx
dp3 r7.y, r8.xyzx, r11.xyzx
dp3 r7.z, r8.xyzx, r12.xyzx
mov r8.xyzw, l(0,0,0,0)
mov r10.xyzw, l(0,0,0,0)
mov r11.xyzw, l(0,0,0,0)
mov r7.w, l(0)
loop 
  uge r12.x, r7.w, r0.w
  breakc_nz r12.x
  ieq r12.xyzw, r7.wwww, l(0, 1, 2, 3)
  ieq r15.xyzw, r7.wwww, l(4, 5, 6, 7)
  and r16.xyzw, r12.wzyx, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  and r17.xyzw, r15.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r14.w, r16.wzyx, r3.xyzw
  mad r14.w, r17.x, r4.x, r14.w
  mad r14.w, r17.y, r4.y, r14.w
  mad r14.w, r17.z, r4.z, r14.w
  mad r14.w, r17.w, r4.w, r14.w
  and r12.xyzw, r2.xyzw, r12.xyzw
  or r12.x, r12.x, r12.y
  or r12.x, r12.x, r12.z
  or r12.x, r12.x, r12.w
  and r15.xyzw, r5.xyzw, r15.xyzw
  or r12.x, r12.x, r15.x
  or r12.x, r12.x, r15.y
  or r12.x, r12.x, r15.z
  or r12.x, r12.x, r15.w
  imul null, r12.x, r12.x, l(3)
  mad r8.xyzw, r14.wwww, cb3[r12.x + 1533].xyzw, r8.xyzw
  mad r10.xyzw, r14.wwww, cb3[r12.x + 1534].xyzw, r10.xyzw
  mad r11.xyzw, r14.wwww, cb3[r12.x + 1535].xyzw, r11.xyzw
  iadd r7.w, r7.w, l(1)
endloop 
dp4 r2.x, r6.xyzw, r8.xyzw
dp4 r2.y, r6.xyzw, r10.xyzw
dp4 r2.z, r6.xyzw, r11.xyzw
mov r13.w, l(1.000000)
dp4 r3.x, r13.xyzw, cb1[0].xyzw
dp4 r3.y, r13.xyzw, cb1[1].xyzw
dp4 r3.z, r13.xyzw, cb1[2].xyzw
add r3.xyz, r3.xyzx, -cb0[174].xyzx
mul r4.x, r3.x, cb0[58].x
mul r4.y, r3.x, cb0[59].x
mul r4.z, r3.x, cb0[60].x
mul r4.w, r3.x, cb0[61].x
mul r5.x, r3.y, cb0[58].y
mul r5.y, r3.y, cb0[59].y
mul r5.z, r3.y, cb0[60].y
mul r5.w, r3.y, cb0[61].y
mad r6.x, r3.z, cb0[58].z, cb0[58].w
mad r6.y, r3.z, cb0[59].z, cb0[59].w
mad r6.z, r3.z, cb0[60].z, cb0[60].w
mad r6.w, r3.z, cb0[61].z, cb0[61].w
add r3.xyzw, r5.xyzw, r6.xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
dp3 o0.x, r14.xyzx, cb1[0].xyzx
dp3 o0.y, r14.xyzx, cb1[1].xyzx
dp3 o0.z, r14.xyzx, cb1[2].xyzx
dp3 o3.x, r0.xyzx, cb1[0].xyzx
dp3 o3.y, r0.xyzx, cb1[1].xyzx
dp3 o3.z, r0.xyzx, cb1[2].xyzx
dp3 o2.x, r7.xyzx, cb1[0].xyzx
dp3 o2.y, r7.xyzx, cb1[1].xyzx
dp3 o2.z, r7.xyzx, cb1[2].xyzx
mul r0.xyzw, r1.xyzw, cb4[6].xyzw
add o7.xy, r0.zwzz, r0.xyxx
mul r0.xyzw, r1.xyzw, cb4[7].xyzw
add o7.zw, r0.zzzw, r0.xxxy
mul o0.w, v5.x, cb4[14].z
mul r0.xyzw, r1.xyzw, cb4[4].xyzw
add o8.xy, r0.zwzz, r0.xyxx
mul r0.xyzw, r1.xyzw, cb4[5].xyzw
add r0.xy, r0.zwzz, r0.xyxx
add o8.zw, r0.xxxy, cb4[15].xxxy
mul r0.xyzw, r1.xyzw, cb4[2].xyzw
add o6.xy, r0.zwzz, r0.xyxx
mul r0.xyzw, r1.xyzw, cb4[3].xyzw
add r0.xy, r0.zwzz, r0.xyxx
add o6.zw, r0.xxxy, cb4[13].xxxy
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb5[0].xyzw
dp4 r0.y, r2.xyzw, cb5[1].xyzw
dp4 r0.z, r2.xyzw, cb5[2].xyzw
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[20].xyzw
dp4 r1.y, r0.xyzw, cb0[21].xyzw
dp4 o5.z, r0.xyzw, cb0[23].xyzw
mul o5.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
mov r9.w, v5.w
mov o1.xyzw, r9.xyzw
mov o9.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 86a50a52b797b641-vs.txt
ne r18.w, r3.w, l(1.0)
if_nz r18.w
  add r18.w, r3.w, -r18.y
  mad r3.x, r18.w, r18.x, r3.x
endif

mul o4.xyz, r3.xywx, l(0.500000, -0.500000, 1.000000, 0.000000)
ret 
// Approximately 211 instruction slots used