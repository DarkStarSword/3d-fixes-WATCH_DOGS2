// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 7515489f6b7b2099-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:49:36 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[133], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2darray (sint,sint,sint,sint) t10
dcl_resource_buffer (sint,sint,sint,sint) t12
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xy, -cb13[109].yxyy, cb13[109].wzww
add r0.zw, v0.xxxy, -cb13[109].yyyx
div r0.xy, r0.zwzz, r0.xyxx
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t1.zwxy
eq r1.x, cb13[132].y, l(1.000000)
mov r0.w, l(1.000000)
dp2 r1.y, r0.zwzz, cb13[42].zwzz
dp2 r0.w, r0.zwzz, cb13[43].zwzz
div r0.w, r1.y, r0.w
movc r1.z, r1.x, r0.w, r0.z
mad r1.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb13[36].xyzw
dp4 r0.y, r1.xyzw, cb13[37].xyzw
dp4 r0.z, r1.xyzw, cb13[38].xyzw
dp4 r0.w, r1.xyzw, cb13[39].xyzw
div r0.xyzw, r0.xyzw, r0.wwww

// WATCH_DOGS2 soft shadows fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed 7515489f6b7b2099-ps.txt

add r2.w, r0.z, -r2.y
mul r2.w, r2.w, r2.x
mad r0.x, -r2.w, cb13[36].x, r0.x

dp4 r1.x, r0.xyzw, cb13[84].xyzw
dp4 r1.y, r0.xyzw, cb13[85].xyzw
dp4 r0.x, r0.xyzw, cb13[87].xyzw
div r0.xy, r1.xyxx, r0.xxxx
lt r1.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyxx
lt r1.zw, r0.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
and r0.w, r1.z, r1.x
and r0.w, r1.y, r0.w
and r0.w, r1.w, r0.w
lt r0.z, r0.z, cb13[129].z
and r0.z, r0.z, r0.w
if_nz r0.z
  mul r0.xy, r0.xyxx, cb13[111].xyxx
  ftoi r0.xy, r0.xyxx
  mov r0.zw, l(0,0,0,0)
  ld_indexable(texture2darray)(sint,sint,sint,sint) r0.x, r0.xyzw, t10.xyzw
  mul r0.y, cb13[108].y, cb13[108].x
  ftoi r0.y, r0.y
  mov r0.z, l(0)
  mov r0.w, r0.y
  mov r1.x, r0.x
  loop 
    ige r1.y, r1.x, l(0)
    ilt r1.z, l(0), r0.w
    and r1.y, r1.z, r1.y
    breakc_z r1.y
    ld_indexable(buffer)(sint,sint,sint,sint) r1.x, r1.xxxx, t12.xyzw
    iadd r0.zw, r0.zzzw, l(0, 0, 1, -1)
  endloop 
  itof r0.x, r0.z
  mul_sat r0.x, r0.x, l(0.031250)
else 
  mov r0.x, l(0)
endif 
mov o0.xyz, r0.xxxx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used