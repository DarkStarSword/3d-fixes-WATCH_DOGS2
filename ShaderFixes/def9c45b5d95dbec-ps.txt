// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed def9c45b5d95dbec-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 10:42:13 2017
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer GBufferMini
// {
//
//   float GBufferMiniExteriorAmbientScale;// Offset:    0 Size:     4 [unused]
//   float GBufferMiniFaceIndex;        // Offset:    4 Size:     4
//   bool GBufferMiniOrthoProjection;   // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ShadowRealSampler               sampler_c      NA          NA    0        1
// Video                             sampler      NA          NA    1        1
// LightData__LightProjectedVideo__TexObj__    texture  float4          2d    0        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    1        1
// GBufferMini__GBufferMiniDepthTexture    texture   float          2d    2        1
// GBufferMini__GBufferMiniAlbedoTexture    texture  float4          2d    3        1
// GBufferMini__GBufferMiniNormalTexture    texture  float4          2d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// LightData                         cbuffer      NA          NA    1        1
// GBufferMini                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[55], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed def9c45b5d95dbec-ps.txt

mul r10.w, r10.x, r10.y
mul r12.x, r10.w, cb0[9].x
mul r12.y, r10.w, cb0[10].x
mul r12.z, r10.w, cb0[11].x
mul r12.w, r10.w, cb0[12].x
dp4 r13.x, r12.xyzw, cb0[17].xyzw
dp4 r13.y, r12.xyzw, cb0[18].xyzw
dp4 r13.z, r12.xyzw, cb0[19].xyzw
add r11.xyz, cb0[174].xyz, r13.xyz

mad r0.x, cb2[0].y, cb0[66].x, v0.x
ftoi r0.x, r0.x
ftoi r0.y, v0.y
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.z, r0.xyww, t2.yzxw
mad r2.xy, v0.xyxx, cb0[66].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[9].xyzw
dp4 r2.y, r1.xyzw, cb0[10].xyzw
dp4 r2.z, r1.xyzw, cb0[11].xyzw
dp4 r2.w, r1.xyzw, cb0[12].xyzw
div r1.xyzw, r2.xyzw, r2.wwww

// WATCH_DOGS2 unprojection (NVIDIA Ansel variant) fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed def9c45b5d95dbec-ps.txt

add r10.w, -r1.z, -r10.y
mul r10.w, r10.w, r10.x
mad r1.x, -r10.w, cb0[9].x, r1.x

dp4 r2.x, r1.xyzw, cb0[17].xyzw
dp4 r2.y, r1.xyzw, cb0[18].xyzw
dp4 r2.z, r1.xyzw, cb0[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t3.xyzw
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb1[39].xyzw
dp4 r3.y, r2.xyzw, cb1[40].xyzw
dp4 r3.z, r2.xyzw, cb1[42].xyzw
div r4.xyz, r3.xyzx, r3.zzzz
frc r4.xy, r4.xyxx
mad r5.xy, r4.xyxx, cb1[29].xyxx, cb1[29].zwzz
mad r6.xy, r4.xyxx, cb1[31].xyxx, cb1[31].zwzz
mad r6.zw, r4.xxxy, cb1[32].xxxy, cb1[32].zzzw
max r4.xy, r5.xyxx, cb1[33].xyxx
min r4.xy, r4.xyxx, cb1[34].xyxx
max r5.xyzw, r6.xyzw, cb1[35].xyzw
min r5.xyzw, r5.xyzw, cb1[36].xyzw
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.wxyz, s1
sample_indexable(texture2d)(float,float,float,float) r4.y, r5.xyxx, t0.xwyz, s1
sample_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xyzw, s1
dp4 r5.x, cb1[20].xyzw, r2.xyzw
min r5.x, r5.x, l(1.000000)
dp4 r5.y, cb1[21].xyzw, r2.xyzw
min r5.x, r5.y, r5.x
dp4 r5.y, cb1[22].xyzw, r2.xyzw
min r5.x, r5.y, r5.x
lt r5.y, r5.x, l(0.000000)
discard_nz r5.y
dp4 r3.w, r2.xyzw, cb1[41].xyzw
div r3.xyz, r3.xywx, r3.zzzz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s0, r3.z
mad r5.yzw, cb1[38].zzww, l(0.000000, -1.000000, -1.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
mad r2.w, r2.w, l(4.000000), r3.w
mad r5.yzw, cb1[38].zzww, l(0.000000, 1.000000, -1.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
add r2.w, r2.w, r3.w
mad r5.yzw, cb1[38].zzww, l(0.000000, 1.000000, 1.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
add r2.w, r2.w, r3.w
mad r5.yzw, cb1[38].zzww, l(0.000000, -1.000000, 1.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
add r2.w, r2.w, r3.w
mad r5.yzw, cb1[38].zzww, l(0.000000, -1.000000, 0.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
mad r2.w, r3.w, l(2.000000), r2.w
mad r5.yzw, cb1[38].zzww, l(0.000000, 1.000000, 0.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
mad r2.w, r3.w, l(2.000000), r2.w
mad r5.yzw, cb1[38].zzww, l(0.000000, 0.000000, -1.000000, 0.000000), r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.w, r5.yzyy, t1.xxxx, s0, r5.w
mad r2.w, r3.w, l(2.000000), r2.w
mad r3.xyz, cb1[38].zwwz, l(0.000000, 1.000000, 0.000000, 0.000000), r3.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xxxx, s0, r3.z
mad r2.w, r3.x, l(2.000000), r2.w
add r3.xyz, r2.xyzx, -cb1[51].xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
dp3 r3.x, r3.xyzx, cb1[48].xyzx
mad_sat r3.x, r3.x, cb1[54].x, cb1[54].y
mad r2.w, r2.w, l(0.062500), r3.x
min r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, r2.w
mad r2.w, r2.w, cb1[37].x, cb1[37].y
lt r3.x, l(0.000000), r2.w
if_nz r3.x
  ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t4.xyzw
  mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r0.w, r0.xyzx, r0.xyzx
  rsq r0.w, r0.w
  mul r0.xyz, r0.wwww, r0.xyzx
  add r3.xyz, -r2.xyzx, r11.xyzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r3.xyz, r0.wwww, r3.xyzx
  add r5.yzw, -r2.xxyz, cb1[51].xxyz
  add r2.xyz, -r2.xyzx, cb1[50].xyzx
  dp3 r0.w, r5.yzwy, r5.yzwy
  rsq r0.w, r0.w
  mul r6.xyz, r0.wwww, r5.yzwy
  mul r7.xyzw, r4.wwww, l(0.000000, 0.000000, -0.391448975, 2.01782227)
  mad r7.xyzw, r4.yyyy, l(1.59579468, 1.59579468, -0.813476563, 0.000000), r7.xyzw
  mad r7.xyzw, r4.xxxx, l(1.16412354, 1.16412354, 1.16412354, 1.16412354), r7.xyzw
  add r8.xyzw, r7.xyzw, l(-0.870655060, -0.815655053, 0.529705048, -1.08166885)
  ge r4.xyw, l(0.040450, 0.040450, 0.000000, 0.040450), r8.xzxw
  mul r8.xyzw, r8.xyzw, l(0.0773993805, 0.947867334, 0.0773993805, 0.0773993805)
  log r3.w, |r8.y|
  mul r3.w, r3.w, l(2.400000)
  exp r3.w, r3.w
  movc r9.x, r4.x, r8.x, r3.w
  add r7.xy, r7.zwzz, l(0.584705055, -1.02666891, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.947867334, 0.947867334, 0.000000, 0.000000)
  log r7.xy, |r7.xyxx|
  mul r7.xy, r7.xyxx, l(2.400000, 2.400000, 0.000000, 0.000000)
  exp r7.xy, r7.xyxx
  movc r9.yz, r4.yywy, r8.zzwz, r7.xxyx
  max r4.xyw, r9.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r4.xyw, r4.xyxw, cb1[49].xyxz
  lt r3.w, r4.z, l(0.000000)
  dp3 r2.x, r2.xyzx, r2.xyzx
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
  mul r2.x, r2.x, cb1[53].y
  mad r2.x, -r2.x, r2.x, l(1.000000)
  max r2.x, r2.x, l(0.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.y
  min r2.x, r2.x, cb1[53].w
  max r2.y, r5.x, l(0.000000)
  mul r2.y, r2.y, r2.y
  mul r2.x, r2.y, |r2.x|
  mul r2.xyz, r2.xxxx, r4.xywx
  movc r2.xyz, r3.wwww, l(0,0,0,0), r2.xyzx
  dp3_sat r3.w, r0.xyzx, r6.xyzx
  mul r1.xyz, r1.xyzx, r3.wwww
  dp3_sat r4.x, r0.xyzx, r3.xyzx
  mad r3.xyz, r5.yzwy, r0.wwww, r3.xyzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r3.xyz, r0.wwww, r3.xyzx
  dp3 r0.w, r3.xyzx, r6.xyzx
  dp3_sat r0.x, r0.xyzx, r3.xyzx
  mul r0.x, r0.x, r0.x
  mad r0.x, r0.x, l(-0.937500), l(1.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, l(3.14159274)
  mul r0.y, r3.w, r3.w
  mad r0.z, -r3.w, r3.w, l(1.000000)
  mul r0.z, r0.z, l(0.390625)
  max r0.y, r0.y, l(1.000000047E-034)
  div r0.y, r0.z, r0.y
  add r0.y, r0.y, l(1.000000)
  sqrt r0.y, r0.y
  add r0.y, r0.y, l(1.000000)
  mul r0.z, r4.x, r4.x
  mad r3.x, -r4.x, r4.x, l(1.000000)
  mul r3.x, r3.x, l(0.390625)
  max r0.z, r0.z, l(1.000000047E-034)
  div r0.z, r3.x, r0.z
  add r0.z, r0.z, l(1.000000)
  sqrt r0.z, r0.z
  add r0.z, r0.z, l(1.000000)
  div r0.xyz, l(0.062500, 2.000000, 2.000000, 0.000000), r0.xyzx
  mul r0.y, r0.z, r0.y
  add r0.z, -r0.w, l(1.000000)
  mul r0.xw, r0.yyyz, r0.xxxz
  mul r0.w, r0.w, r0.w
  mul r0.z, r0.w, r0.z
  mad r0.z, r0.z, l(0.156800), l(0.003200)
  mul r0.x, r0.z, r0.x
  mul r0.x, r3.w, r0.x
  mad r0.xyz, r1.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r0.xxxx
  mul r0.xyz, r2.wwww, r0.xyzx
  mul r0.xyz, r0.xyzx, r2.xyzx
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mul r0.xyz, r0.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul o0.xyz, r1.wwww, r0.xyzx
mov o0.w, l(0)
ret 
// Approximately 176 instruction slots used