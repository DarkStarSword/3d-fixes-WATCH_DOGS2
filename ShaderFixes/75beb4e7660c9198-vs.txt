// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 75beb4e7660c9198-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:57:36 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Hair
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 AlphaUVTiling1;             // Offset:   16 Size:    16
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 MaskUVTiling1;              // Offset:   48 Size:    16
//   float4 NormalUVTiling1;            // Offset:   64 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   80 Size:    12 [unused]
//   float AlphaBlendFadeOutEnd;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12 [unused]
//   float AlphaBlendFadeOutStart;      // Offset:  108 Size:     4 [unused]
//   float AlphaBlendTransition;        // Offset:  112 Size:     4 [unused]
//   float AlphaBlendValue;             // Offset:  116 Size:     4 [unused]
//   float AlphaTestValue;              // Offset:  120 Size:     4 [unused]
//   float HairFilterStrength;          // Offset:  124 Size:     4
//   float LuminanceAsAlphaMultiplier;  // Offset:  128 Size:     4 [unused]
//   float MaskChannelUsageBlue;        // Offset:  132 Size:     4 [unused]
//   float MaskChannelUsageGreen;       // Offset:  136 Size:     4 [unused]
//   float MaskChannelUsageRed;         // Offset:  140 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  144 Size:     4 [unused]
//   float Reflectance;                 // Offset:  148 Size:     4 [unused]
//   float Roughness;                   // Offset:  152 Size:     4 [unused]
//   float TangentAngle;                // Offset:  156 Size:     4 [unused]
//   float Translucency;                // Offset:  160 Size:     4 [unused]
//   int DiffuseColor1BlendingType;     // Offset:  164 Size:     4 [unused]
//   int HairFilterUVChannel;           // Offset:  168 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  172 Size:     4 [unused]
//   bool AlphaBlendEnabled;            // Offset:  176 Size:     4 [unused]
//   bool LuminanceAsAlpha;             // Offset:  180 Size:     4 [unused]
//   bool MirroredMapping;              // Offset:  184 Size:     4 [unused]
//   bool UseColorMask;                 // Offset:  188 Size:     4 [unused]
//   bool UseHairFilter;                // Offset:  192 Size:     4 [unused]
//   bool UseHairFilterMask;            // Offset:  196 Size:     4
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer Skinning
// {
//
//   float4x3 BlendMatrices[511];       // Offset:    0 Size: 24528
//   float4x3 PrevBlendMatrices[511];   // Offset: 24528 Size: 24528 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SkinningConfig                    texture   uint4         buf    0        1
// Viewport                          cbuffer      NA          NA    0        1
// MaterialWD2Hair                   cbuffer      NA          NA    1        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    2        1
// SceneGeometry                     cbuffer      NA          NA    3        1
// Skinning                          cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 2   xyzw        1     NONE     int   xyzw
// blendweight              0   xyzw        2     NONE   float   xyzw
// normal                   0   xyzw        3     NONE   float   xyz 
// color                    1   xyzw        4     NONE   float    y  
// texcoord                 1   xyzw        5     NONE   float   xyz 
// texcoord                 0   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[175], immediateIndexed
dcl_constantbuffer cb1[13], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[1533], dynamicIndexed
dcl_resource_buffer (uint,uint,uint,uint) t0
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyz
dcl_input v4.y
dcl_input v5.xyz
dcl_input v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output_siv o5.xyzw, position
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
itof r1.xyzw, v1.xyzw
ubfe r0.w, l(3), l(13), v0.w
iadd r0.w, r0.w, l(1)
ieq r2.x, r0.w, l(1)
if_nz r2.x
  and r2.x, v0.w, l(8191)
  mov r3.xyzw, l(1.000000,0,0,0)
  mov r2.yzw, l(0,0,0,0)
else 
  and r4.x, v0.w, l(8191)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r4.xxxx, t0.xyzw
  and r2.xyzw, r4.xyzw, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  mov r3.xyzw, v2.zyxw
endif 
mad r4.xyz, r0.xyzx, cb3[3].yyyy, cb3[3].xxxx
mad r1.xyzw, r1.xyzw, cb3[2].zwzw, cb3[2].xyxy
mad r0.xyz, v3.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, v5.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, v6.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyzw, l(0,0,0,0)
mov r9.xyzw, l(0,0,0,0)
mov r10.x, l(0)
loop 
  ult r5.w, r10.x, r0.w
  ult r6.w, r10.x, l(4)
  and r5.w, r5.w, r6.w
  breakc_z r5.w
  dp4 r5.w, r3.xyzw, icb[r10.x + 0].xyzw
  ineg r6.w, r10.x
  ult r11.xyz, r10.xxxx, l(1, 2, 3, 0)
  and r12.y, r6.w, r11.y
  iadd r10.xy, r10.xxxx, l(1, -3, 0, 0)
  movc r12.z, r11.y, l(0), r10.y
  ieq r12.w, r11.z, l(0)
  mov r12.x, r11.x
  and r11.xyzw, r2.xyzw, r12.xyzw
  or r10.yz, r11.yywy, r11.xxzx
  or r6.w, r10.z, r10.y
  imul null, r6.w, r6.w, l(3)
  mul r11.x, r5.w, cb4[r6.w + 0].w
  mul r11.y, r5.w, cb4[r6.w + 1].w
  mul r11.z, r5.w, cb4[r6.w + 2].w
  mad r7.xyz, r5.wwww, cb4[r6.w + 0].xyzx, r7.xyzx
  mad r8.xyz, r5.wwww, cb4[r6.w + 1].xyzx, r8.xyzx
  mad r9.xyz, r5.wwww, cb4[r6.w + 2].xyzx, r9.xyzx
  mov r12.x, r7.w
  mov r12.y, r8.w
  mov r12.z, r9.w
  add r10.yzw, r11.xxyz, r12.xxyz
  mov r7.w, r10.y
  mov r8.w, r10.z
  mov r9.w, r10.w
endloop 
mov r4.w, l(1.000000)
dp4 r2.x, r4.xyzw, r7.xyzw
dp4 r2.y, r4.xyzw, r8.xyzw
dp4 r2.z, r4.xyzw, r9.xyzw
dp3 r3.x, r0.xyzx, r7.xyzx
dp3 r3.y, r0.xyzx, r8.xyzx
dp3 r3.z, r0.xyzx, r9.xyzx
dp3 r0.x, r5.xyzx, r7.xyzx
dp3 r0.y, r5.xyzx, r8.xyzx
dp3 r0.z, r5.xyzx, r9.xyzx
dp3 r4.x, r6.xyzx, r7.xyzx
dp3 r4.y, r6.xyzx, r8.xyzx
dp3 r4.z, r6.xyzx, r9.xyzx
dp3 r5.x, r3.xyzx, cb2[0].xyzx
dp3 r5.y, r3.xyzx, cb2[1].xyzx
dp3 r5.z, r3.xyzx, cb2[2].xyzx
dp3 o3.x, r0.xyzx, cb2[0].xyzx
dp3 o3.y, r0.xyzx, cb2[1].xyzx
dp3 o3.z, r0.xyzx, cb2[2].xyzx
dp3 o2.x, r4.xyzx, cb2[0].xyzx
dp3 o2.y, r4.xyzx, cb2[1].xyzx
dp3 o2.z, r4.xyzx, cb2[2].xyzx
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb2[0].xyzw
dp4 r0.y, r2.xyzw, cb2[1].xyzw
dp4 r0.z, r2.xyzw, cb2[2].xyzw
add r2.xyz, r0.xyzx, -cb0[174].xyzx
mul r3.x, r2.x, cb0[58].x
mul r3.y, r2.x, cb0[59].x
mul r3.z, r2.x, cb0[60].x
mul r3.w, r2.x, cb0[61].x
mul r4.x, r2.y, cb0[58].y
mul r4.y, r2.y, cb0[59].y
mul r4.z, r2.y, cb0[60].y
mul r4.w, r2.y, cb0[61].y
mad r6.x, r2.z, cb0[58].z, cb0[58].w
mad r6.y, r2.z, cb0[59].z, cb0[59].w
mad r6.z, r2.z, cb0[60].z, cb0[60].w
mad r6.w, r2.z, cb0[61].z, cb0[61].w
add r2.xyzw, r4.xyzw, r6.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r1.xyzw, cb1[1].xyzw
add o4.xy, r3.zwzz, r3.xyxx
mul r1.xyzw, r1.xyzw, cb1[3].xyzw
add o4.zw, r1.zzzw, r1.xxxy
dp3 r0.w, cb0[173].xyzx, r5.xyzx
add r0.w, |r0.w|, l(0.200000)
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb1[7].w
mul r1.x, r0.w, v4.y
movc o0.w, cb1[12].y, r1.x, r0.w

// Relocated to here with asmtool.py
mov o5.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 75beb4e7660c9198-vs.txt
ne r13.w, r2.w, l(1.0)
if_nz r13.w
  add r13.w, r2.w, -r13.y
  mad r2.x, r13.w, r13.x, r2.x
endif

mov o0.xyz, r2.xywx

// mov o5.xyzw, r2.xyzw // Relocated from here with asmtool.py

mov o1.xyz, r0.xyzx
ret 
// Approximately 110 instruction slots used