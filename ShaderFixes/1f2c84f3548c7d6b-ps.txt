// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1f2c84f3548c7d6b-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:17:11 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16
//   float4 VPosScale;                  // Offset:  800 Size:    16
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    0        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    1        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    2        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    3        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    4        1
// Viewport                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_resource_texture2dms(0) (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1f2c84f3548c7d6b-ps.txt

mul r10.w, r10.x, r10.y
mul r12.x, r10.w, cb0[9].x
mul r12.y, r10.w, cb0[10].x
mul r12.z, r10.w, cb0[11].x
mul r12.w, r10.w, cb0[12].x
dp4 r13.x, r12.xyzw, cb0[17].xyzw
dp4 r13.y, r12.xyzw, cb0[18].xyzw
dp4 r13.z, r12.xyzw, cb0[19].xyzw
add r11.xyz, cb0[174].xyz, r13.xyz

ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r0.xyww, t1.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r0.xyww, t3.xyzw, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r3.xyzw, r0.xyww, t4.yxzw, l(0)
mad r3.w, r3.w, l(255.000000), l(0.500000)
round_ni r3.w, r3.w
ftou r3.w, r3.w
ushr r3.w, r3.w, l(5)
ieq r4.xy, r3.wwww, l(1, 4, 0, 0)
ge r4.z, r1.w, l(0.750000)
add r4.w, r1.w, l(-0.750000)
mad r4.w, r4.w, l(-0.599999905), l(1.000000)
movc r4.z, r4.z, r4.w, l(1.000000)
movc r4.z, r4.y, r4.z, r1.w
movc r4.z, r4.x, l(1.000000), r4.z
mul r5.yzw, r1.xxyz, r4.zzzz
if_nz r4.x
  mad r1.x, r2.w, l(0.500000), l(0.500000)
  mad r1.x, r1.x, l(65535.000000), l(0.500000)
  ftou r1.x, r1.x
  and r1.xy, r1.xxxx, l(255, 0x0000ff00, 0, 0)
  utof r1.xy, r1.xyxx
  mul r6.xz, r1.xxyx, l(0.00392156886, 0.000000, 0.0000153186284, 0.000000)
  mul r1.x, r1.w, l(255.000000)
  ftou r1.x, r1.x
  and r1.xy, r1.xxxx, l(15, 240, 0, 0)
  utof r1.xy, r1.xyxx
  mul r6.yw, r1.yyyx, l(0.000000, 0.00416666688, 0.000000, 0.0666666701)
  mov r5.x, r5.y
else 
  mul r1.x, r3.x, r3.x
  max r3.x, r1.x, l(0.001000)
  ieq r1.x, r3.w, l(2)
  if_nz r1.x
    mad r1.x, r2.w, l(0.500000), l(0.500000)
    mad r1.x, r1.x, l(65535.000000), l(0.500000)
    ftou r1.x, r1.x
    and r1.xy, r1.xxxx, l(255, 0x0000ff00, 0, 0)
    utof r1.xy, r1.xyxx
    mov r1.z, r3.y
    mad r1.xyz, r1.xyzx, l(0.00784313772, 0.0000306372567, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    add r1.w, -r1.w, l(1.000000)
    mul r1.w, r1.w, r5.y
    mad r5.x, r1.w, l(0.500000), r5.y
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r6.xzw, r1.wwww, r1.xxyz
    mov r6.y, l(0)
    mov r3.y, l(0.500000)
  else 
    ieq r1.x, r3.w, l(3)
    if_nz r1.x
      mad r1.x, r2.w, l(0.500000), l(0.500000)
      mad r1.x, r1.x, l(65535.000000), l(0.500000)
      ftou r1.x, r1.x
      and r1.xyzw, r1.xxxx, l(0x0000f800, 2016, 31, 31)
      utof r1.xyzw, r1.xyzw
      ge r7.xyz, l(1.253950, 81.547195, 2568.089600, 0.000000), r1.wyxw
      mul r1.w, r1.w, l(0.00249675405)
      mad r8.xyz, r1.zyxz, l(0.0322580636, 0.000496031775, 0.0000157510076, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
      mul r8.xyz, r8.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
      log r8.xyz, r8.xyzx
      mul r8.xyz, r8.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
      exp r8.xyz, r8.xyzx
      mul r1.xy, r1.yxyy, l(0.0000383925508, 0.00000121911819, 0.000000, 0.000000)
      movc r6.xzw, r7.xxyz, r1.wwxy, r8.xxyz
      mov r6.y, l(0)
    else 
      if_nz r4.y
        mad r1.x, r2.w, l(32767.000000), l(32767.000000)
        ftou r1.x, r1.x
        and r1.y, r1.x, l(255)
        utof r1.y, r1.y
        mul r1.y, r1.y, l(0.0123199718)
        ubfe r1.x, l(8), l(8), r1.x
        utof r1.x, r1.x
        mad r1.x, r1.x, l(0.0246399436), l(-3.14159274)
        sincos r7.x, r8.x, r1.y
        sincos r1.x, r9.x, r1.x
        mul r9.x, r7.x, r9.x
        mul r9.y, r1.x, r7.x
        mov r9.z, r8.x
        dp3 r1.x, r9.xyzx, r9.xyzx
        rsq r1.x, r1.x
        mul r6.xzw, r1.xxxx, r9.xxyz
        mov r6.y, l(0)
      else 
        ieq r1.x, r3.w, l(5)
        lt r1.y, r2.z, l(0.900000)
        movc r1.yzw, r1.yyyy, l(0,0,1.000000,0), l(0,1.000000,0,0)
        mul r7.xyz, r1.yzwy, r2.zxyz
        mad r1.yzw, r2.yyzx, r1.zzwy, -r7.xxyz
        dp3 r4.z, r1.yzwy, r1.yzwy
        rsq r4.z, r4.z
        mul r1.yzw, r1.yyzw, r4.zzzz
        mul r7.xyz, r1.zwyz, r2.zxyz
        mad r7.xyz, r2.yzxy, r1.wyzw, -r7.xyzx
        dp3 r4.z, r7.xyzx, r7.xyzx
        rsq r4.z, r4.z
        mul r7.xyz, r4.zzzz, r7.xyzx
        mad r4.z, r2.w, l(2.000000), l(-1.000000)
        mul r4.z, r4.z, l(3.14159274)
        sincos r8.x, r9.x, r4.z
        mul r1.yzw, r1.yyzw, r8.xxxx
        mad r7.xyz, r7.xyzx, r9.xxxx, r1.yzwy
        mad r1.y, r2.w, l(0.500000), l(0.500000)
        mad r1.y, r1.y, l(65535.000000), l(0.500000)
        ftou r1.y, r1.y
        and r1.y, r1.y, l(255)
        utof r1.y, r1.y
        mul r1.y, r1.y, l(0.00392156886)
        movc r8.x, r3.w, l(0), r1.y
        mov r7.w, r3.z
        mov r8.yzw, l(0,0,0,0)
        movc r6.xyzw, r1.xxxx, r7.xwyz, r8.xwyz
        movc r3.z, r1.x, l(0), r3.z
      endif 
    endif 
    mov r5.x, r5.y
  endif 
endif 
ldms_indexable(texture2dms)(float,float,float,float) r1.xyz, r0.xyww, t0.xyzw, l(0)
div r1.xyz, r1.xyzx, cb0[176].wwww
dp3 r1.w, r1.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
if_nz r4.y
  mul r1.xyz, r1.xyzx, r5.xzwx
  mul r7.xyzw, r1.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
else 
  if_nz r4.x
    mov_sat r6.xy, r6.xyxx
    mov_sat r3.z, r3.z
    log r4.xyz, r5.xzwx
    mul r8.xyz, r6.yyyy, r4.xyzx
    mul r8.xyz, r8.xyzx, l(-12.780000, -12.780000, -12.780000, 0.000000)
    mad r4.xyz, r4.xyzx, l(-0.020000, -0.020000, -0.020000, 0.000000), r8.xyzx
    eq r2.w, r6.x, l(0.000000)
    add r4.w, -r3.z, l(1.000000)
    mul r8.xyz, r4.wwww, r5.xzwx
    mul r8.xyz, r8.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r4.xyz, r4.xyzx, -r6.xxxx
    exp r4.xyz, r4.xyzx
    mul r4.xyz, r8.xyzx, r4.xyzx
    mul r4.xyz, r4.xyzx, l(0.444444448, 0.444444448, 0.444444448, 0.000000)
    movc r4.xyz, r2.wwww, r8.xyzx, r4.xyzx
    mov r4.w, l(0.180000)
  else 
    ieq r2.w, r3.w, l(2)
    if_nz r2.w
      mul r8.xyz, r5.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
      mov r8.w, l(0.0572957806)
      add r2.w, -r3.z, l(1.000000)
      mul r4.xyzw, r2.wwww, r8.xyzw
    else 
      mad r8.xy, v0.xyxx, cb0[50].zwzz, cb0[49].zwzz
      ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t2.xyzw, l(0)
      mov r0.yw, l(0,1.000000,0,1.000000)
      dp2 r0.z, r0.xyxx, cb0[11].zwzz
      dp2 r0.x, r0.xyxx, cb0[12].zwzz
      div r0.x, -r0.z, r0.x
      mov r0.z, -r0.x
      mul r0.xy, r0.zzzz, r8.xyxx

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 1f2c84f3548c7d6b-ps.txt

add r10.w, -r0.z, -r10.y
mul r10.w, r10.w, r10.x
mad r0.x, -r10.w, cb0[9].x, r0.x

      dp4 r8.x, r0.xyzw, cb0[17].xyzw
      dp4 r8.y, r0.xyzw, cb0[18].xyzw
      dp4 r8.z, r0.xyzw, cb0[19].xyzw
      add r0.xyz, -r8.xyzx, r11.xyzx
      dp3 r0.w, r0.xyzx, r0.xyzx
      rsq r0.w, r0.w
      mul r0.xyz, r0.wwww, r0.xyzx
      ieq r0.w, r3.w, l(3)
      if_nz r0.w
        dp3 r0.w, r0.xyzx, r0.xyzx
        min r0.w, r0.w, l(1.000000)
        mul r2.w, r3.y, l(0.080000)
        add r0.w, -r0.w, l(1.000000)
        mul r5.y, r0.w, r0.w
        mul r5.y, r5.y, r5.y
        mad r3.y, -r3.y, l(0.080000), l(1.000000)
        mul r3.y, r5.y, r3.y
        mad r0.w, r3.y, r0.w, r2.w
        add_sat r2.w, r3.x, r3.x
        mad r8.w, r2.w, -r0.w, l(1.000000)
        mul r8.xyz, r5.xzwx, r8.wwww
        mul r4.xyzw, r8.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
      else 
        ieq r0.w, r3.w, l(5)
        if_nz r0.w
          mul r8.xyz, r5.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          mov r8.w, l(0.0572957806)
          add r9.w, -r3.z, l(1.000000)
          mul r8.xyzw, r8.xyzw, r9.wwww
          mov r9.xyz, r8.xyzx
          mul r9.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.0286478903)
          add r0.w, -r6.y, l(1.000000)
          mul r8.xyzw, r6.yyyy, r8.xyzw
          mul r8.xyzw, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
          mad r4.xyzw, r9.xyzw, r0.wwww, r8.xyzw
        else 
          dp3 r0.w, r2.xyzx, r2.xyzx
          rsq r0.w, r0.w
          mul r2.xyz, r0.wwww, r2.xyzx
          ieq r0.w, r3.w, l(8)
          dp3 r0.x, r2.xyzx, r0.xyzx
          max r0.y, |r0.x|, l(0.000001)
          rcp r0.y, r0.y
          mul r0.x, r0.y, r0.x
          eq r0.x, r0.x, l(0.000000)
          movc r0.x, r0.x, l(0), l(1.000000)
          mul r2.xyz, r6.xzwx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
          add r3.w, -r3.z, l(1.000000)
          mul r2.xyz, r2.xyzx, r3.wwww
          mov r2.w, l(0.180000)
          mul r3.xyz, r3.wwww, r5.xzwx
          mul r3.xyzw, r3.xyzw, l(0.318309873, 0.318309873, 0.318309873, 0.0572957806)
          mad r2.xyzw, r0.xxxx, r2.xyzw, r3.xyzw
          mul r6.yzw, r5.wwxz, r6.xxxx
          mad r3.xyzw, r6.zwyx, l(0.0795774683, 0.0795774683, 0.0795774683, 0.0143239452), r3.xyzw
          movc r4.xyzw, r0.wwww, r2.xyzw, r3.xyzw
        endif 
      endif 
    endif 
  endif 
  mul r7.xyzw, r1.xyzw, r4.xyzw
endif 
mul r0.xyz, r7.xyzx, cb0[176].wwww
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mul r0.x, r7.w, cb0[176].w
max r0.x, r0.x, l(0.000000)
min o0.w, r0.x, l(64512.000000)
ret 
// Approximately 231 instruction slots used