// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a4e7c9506bf719c6-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:23 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12 [unused]
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer ImpostorData
// {
//
//   float4 Binormal_DepthRange[9];     // Offset:    0 Size:   144
//   float4 Normal[9];                  // Offset:  144 Size:   144 [unused]
//   float4 QuadAxisU[9];               // Offset:  288 Size:   144 [unused]
//   float4 QuadAxisU_VS[9];            // Offset:  432 Size:   144 [unused]
//   float4 QuadAxisV[9];               // Offset:  576 Size:   144 [unused]
//   float4 QuadAxisV_VS[9];            // Offset:  720 Size:   144 [unused]
//   float4 QuadTopLeft[9];             // Offset:  864 Size:   144 [unused]
//   float4 QuadTopLeft_VS[9];          // Offset: 1008 Size:   144 [unused]
//   float4 Tangent[9];                 // Offset: 1152 Size:   144 [unused]
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset: 1296
//       float positionRange;           // Offset: 1300
//       float meshLocalHeight;         // Offset: 1304
//       float isBuildingFacadeInterior;// Offset: 1308
//
//   } MeshDecompression;               // Offset: 1296 Size:    16 [unused]
//   float MaxSectorDistanceSqr;        // Offset: 1312 Size:     4 [unused]
//
// }
//
// cbuffer SceneTreeModel
// {
//
//   float4 TreeModelColorVariations[16];// Offset:    0 Size:   256
//   float TreeModelImpostorAlphaTestValue;// Offset:  256 Size:     4
//   float TreeModelImpostorMipBias;    // Offset:  260 Size:     4
//   uint TreeModelNumColorVariations;  // Offset:  264 Size:     4 [unused]
//
// }
//
// Resource bind info for instanceData
// {
//
//   struct SImpostorInstance
//   {
//       
//       struct SPackedMatrix
//       {
//           
//           uint rot[5];               // Offset:    0
//           float3 pos;                // Offset:   20
//
//       } m_treeToWS;                  // Offset:    0
//       uint m_randomValue;            // Offset:   32
//       uint m_packData;               // Offset:   36
//       float2 m_ditherUVOffset;       // Offset:   40
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorMirror                       sampler      NA          NA    1        1
// ImpostorData__DitheringNoise__SampObj__    sampler      NA          NA    2        1
// ImpostorData__DitheringNoise__TexObj__    texture  float4          2d    0        1
// ImpostorData__RT0__TexObj__       texture  float4     2darray    1        1
// ImpostorData__RT1__TexObj__       texture  float4     2darray    2        1
// ImpostorData__RT2__TexObj__       texture  float4     2darray    3        1
// instanceData                      texture  struct         r/o    4        1
// Viewport                          cbuffer      NA          NA    0        1
// ImpostorData                      cbuffer      NA          NA    1        1
// SceneTreeModel                    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xy          5     NONE   float   xy  
// TEXCOORD                 6   xyz         6     NONE    uint   xyz 
// SV_Position              0   xyzw        7      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Depth                 0    N/A   oDepth    DEPTH   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[67], immediateIndexed
dcl_constantbuffer cb1[9], dynamicIndexed
dcl_constantbuffer cb2[17], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (float,float,float,float) t1
dcl_resource_texture2darray (float,float,float,float) t2
dcl_resource_texture2darray (float,float,float,float) t3
dcl_resource_structured t4, 48 
dcl_input_ps linear centroid v0.xyzw
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear centroid v3.xyz
dcl_input_ps linear centroid v4.xyz
dcl_input_ps linear centroid v5.xy
dcl_input_ps constant v6.xyz
dcl_input_ps_siv linear noperspective v7.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output oDepth
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed a4e7c9506bf719c6-ps.txt

mul r5.w, r5.x, r5.y
mul r7.x, r5.w, cb0[9].x
mul r7.y, r5.w, cb0[10].x
mul r7.z, r5.w, cb0[11].x
mul r7.w, r5.w, cb0[12].x
dp4 r8.x, r7.xyzw, cb0[17].xyzw
dp4 r8.y, r7.xyzw, cb0[18].xyzw
dp4 r8.z, r7.xyzw, cb0[19].xyzw
add r6.xyz, cb0[174].xyz, r8.xyz

mul r0.xy, v7.xyxx, cb0[66].zwzz
ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.xyzw, v6.z, l(32), t4.xyzw
mad r0.xy, r1.zwzz, l(-0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
mul r0.xy, r0.xyxx, l(24.000000, 16.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s2
ubfe r0.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyyy
and r0.w, r1.x, l(255)
utof r0.y, r0.y
mad r0.x, -r0.y, l(0.00392156886), r0.x
movc r0.x, r0.z, -r0.x, r0.x
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov r1.zw, v5.xxxy
utof r1.xy, v6.xyxx
sample_b_indexable(texture2darray)(float,float,float,float) r2.xyzw, r1.zwyz, t1.xyzw, s0, cb2[16].y
sample_b_indexable(texture2darray)(float,float,float,float) r3.xyzw, r1.zwxz, t1.xyzw, s0, cb2[16].y
add r2.xyzw, r2.xyzw, -r3.xyzw
mad r2.xyzw, v2.wwww, r2.xyzw, r3.xyzw
add r0.x, r2.w, -cb2[16].x
mul r2.xyz, r2.xyzx, r2.xyzx
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
sample_b_indexable(texture2darray)(float,float,float,float) r3.xyzw, r1.zwyz, t3.xyzw, s0, cb2[16].y
sample_b_indexable(texture2darray)(float,float,float,float) r4.xyzw, r1.zwxz, t3.xyzw, s0, cb2[16].y
add r3.xyzw, r3.xyzw, -r4.xyzw
mad r3.xyzw, v2.wwww, r3.xyzw, r4.xyzw
ge r0.x, l(0.970000), r3.z
movc r0.yzw, r0.xxxx, cb2[r0.w + 0].xxyz, l(0,1.000000,1.000000,1.000000)
add r4.xy, v5.xyxx, v5.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.yzwx, s1
mad r2.w, r2.w, l(1.400000), l(0.400000)
mul_sat r2.xyz, r2.wwww, r2.xyzx
mul o0.xyz, r0.yzwy, r2.xyzx
mov o0.w, r3.w
sample_b_indexable(texture2darray)(float,float,float,float) r0.yzw, r1.zwyz, t2.wxyz, s0, cb2[16].y
sample_b_indexable(texture2darray)(float,float,float,float) r2.xyz, r1.zwxz, t2.xyzw, s0, cb2[16].y
add r0.yzw, r0.yyzw, -r2.xxyz
mad r0.yzw, v2.wwww, r0.yyzw, r2.xxyz
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyz, r0.zzzz, v2.xyzx
mad r2.xyz, r0.yyyy, v1.xyzx, r2.xyzx
mad r0.yzw, r0.wwww, v3.xxyz, r2.xxyz
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.z, r1.z
mul o1.xyz, r0.yzwy, r1.zzzz
add r0.yz, -r3.zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
mul r0.y, r0.y, l(255.000000)
mad o2.y, v1.w, r0.z, r3.y
mov o2.x, r3.x
round_ne r0.y, r0.y
add r0.y, r0.y, l(32768.000000)
mad o1.w, r0.y, l(0.0000305180438), l(-1.000000)
mov o2.zw, l(0,0,0,0)
ftoi r2.z, r1.y
ftoi r1.z, r1.x
resinfo_indexable(texture2darray)(float,float,float,float) r0.yz, l(0), t2.zxyw
add r0.yz, r0.yyzy, l(0.000000, -1.000000, -1.000000, 0.000000)
mul r0.yz, r0.yyzy, v5.xxyx
ftoi r2.xy, r0.yzyy
ftoi r1.xy, r0.yzyy
mov r2.w, l(0)
ld_indexable(texture2darray)(float,float,float,float) r0.y, r2.xyzw, t2.xwyz
add r0.y, -r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mov r1.w, l(0)
ld_indexable(texture2darray)(float,float,float,float) r0.z, r1.xyzw, t2.xywz
add r0.z, -r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mov r0.w, v6.x
mul r0.z, r0.z, cb1[r0.w + 0].w
mov r0.w, v6.y
mad r0.y, r0.y, cb1[r0.w + 0].w, -r0.z
mad r0.y, v2.w, r0.y, r0.z
add r0.y, r0.y, -v0.w
and r0.x, r0.y, r0.x
mad r0.xyz, -v0.xyzx, r0.xxxx, v4.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[56].xyzw
dp4 r0.x, r0.xyzw, cb0[57].xyzw
div oDepth, r1.x, r0.x
ret 
// Approximately 81 instruction slots used