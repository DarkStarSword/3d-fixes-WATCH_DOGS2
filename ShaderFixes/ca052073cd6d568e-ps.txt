// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed ca052073cd6d568e-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:45 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialNetHackingBackground
// {
//
//   float3 Color;                      // Offset:    0 Size:    12
//   float AttenuationDistanceFar;      // Offset:   12 Size:     4
//   float AttenuationPower;            // Offset:   16 Size:     4
//   float ConstantIntensity;           // Offset:   20 Size:     4
//   float FadeInBGPower;               // Offset:   24 Size:     4 [unused]
//   float FadeInBGSpeed;               // Offset:   28 Size:     4 [unused]
//   float InnerFresnelIntensity;       // Offset:   32 Size:     4
//   float InnerFresnelPower;           // Offset:   36 Size:     4
//   float MaxIntensity;                // Offset:   40 Size:     4
//   float MinIntensity;                // Offset:   44 Size:     4
//   float OmniLightIntensity;          // Offset:   48 Size:     4
//   float OmniLightInvRadius;          // Offset:   52 Size:     4
//   float OuterFresnelIntensity;       // Offset:   56 Size:     4
//   float OuterFresnelPower;           // Offset:   60 Size:     4
//   float SSAOIntensity;               // Offset:   64 Size:     4 [unused]
//   float Saturation;                  // Offset:   68 Size:     4
//   float WaterIntensity;              // Offset:   72 Size:     4 [unused]
//   float WaveAttenuationDistance;     // Offset:   76 Size:     4
//   float WaveIntensity;               // Offset:   80 Size:     4
//   float WaveLength;                  // Offset:   84 Size:     4
//   float WaveSpeed;                   // Offset:   88 Size:     4
//   float WaveVertical;                // Offset:   92 Size:     4
//
// }
//
// cbuffer Nethack
// {
//
//   float4 EffectLights[8];            // Offset:    0 Size:   128
//   float3 EffectCenter;               // Offset:  128 Size:    12
//   float FadeInPower;                 // Offset:  140 Size:     4
//   float FadeInSpeed;                 // Offset:  144 Size:     4
//   float StartTime;                   // Offset:  148 Size:     4
//   float TransitionModeIntensity;     // Offset:  152 Size:     4
//   float WaterLevel;                  // Offset:  156 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorWrap                         sampler      NA          NA    0        1
// MaterialNetHackingBackground__GlitchTexture__TexObj__    texture  float4          2d    0        1
// Nethack__DepthCopyTexture         texture   float          2d    1        1
// Nethack__AlbedoTexture            texture  float4          2d    2        1
// Nethack__NoiseTexture             texture  float4          2d    3        1
// Nethack__NormalTexture            texture  float4          2d    4        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialNetHackingBackground      cbuffer      NA          NA    2        1
// Nethack                           cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.0747012272, 0, 0, 0},
                              { 0.0271708835, 0, 0, 0},
                              { 0.661726475, 0, 0, 0},
                              { 0.995930, 0, 0, 0},
                              { 0.237397820, 0, 0, 0},
                              { 0.269059449, 0, 0, 0},
                              { 0.666550815, 0, 0, 0},
                              { 0.0896320194, 0, 0, 0},
                              { 0.911433399, 0, 0, 0},
                              { 0.875312, 0, 0, 0},
                              { 0.113883287, 0, 0, 0},
                              { 0.0430280454, 0, 0, 0},
                              { 0.290476054, 0, 0, 0},
                              { 0.919587076, 0, 0, 0},
                              { 0.926711321, 0, 0, 0},
                              { 0.392356426, 0, 0, 0},
                              { 0.449663162, 0, 0, 0},
                              { 0.977699101, 0, 0, 0},
                              { 0.458073974, 0, 0, 0},
                              { 0.0748890117, 0, 0, 0},
                              { 0.801730692, 0, 0, 0},
                              { 0.998791575, 0, 0, 0},
                              { 0.705820680, 0, 0, 0},
                              { 0.973135531, 0, 0, 0},
                              { 0.962353885, 0, 0, 0},
                              { 0.115701094, 0, 0, 0},
                              { 0.0575175136, 0, 0, 0},
                              { 0.807728112, 0, 0, 0},
                              { 0.513815761, 0, 0, 0},
                              { 0.940512776, 0, 0, 0},
                              { 0.692691565, 0, 0, 0},
                              { 0.513722956, 0, 0, 0},
                              { 0.437385023, 0, 0, 0},
                              { 0.563494623, 0, 0, 0},
                              { 0.109287798, 0, 0, 0},
                              { 0.796311259, 0, 0, 0},
                              { 0.902087212, 0, 0, 0},
                              { 0.260910541, 0, 0, 0},
                              { 0.999974966, 0, 0, 0},
                              { 0.995875955, 0, 0, 0},
                              { 0.421479940, 0, 0, 0},
                              { 0.0228500254, 0, 0, 0},
                              { 0.890108764, 0, 0, 0},
                              { 0.315129966, 0, 0, 0},
                              { 0.331979483, 0, 0, 0},
                              { 0.450051367, 0, 0, 0},
                              { 0.618979, 0, 0, 0},
                              { 0.0348280780, 0, 0, 0},
                              { 0.955897152, 0, 0, 0},
                              { 0.374959797, 0, 0, 0},
                              { 0.547439, 0, 0, 0},
                              { 0.109731354, 0, 0, 0},
                              { 0.793015897, 0, 0, 0},
                              { 0.818771541, 0, 0, 0},
                              { 0.705857575, 0, 0, 0},
                              { 0.541842341, 0, 0, 0},
                              { 0.354961365, 0, 0, 0},
                              { 0.603685558, 0, 0, 0},
                              { 0.289715707, 0, 0, 0},
                              { 0.717820406, 0, 0, 0},
                              { 0.620669663, 0, 0, 0},
                              { 0.586008251, 0, 0, 0},
                              { 0.313340217, 0, 0, 0},
                              { 0.115932733, 0, 0, 0},
                              { 0.397027284, 0, 0, 0},
                              { 0.875087857, 0, 0, 0},
                              { 0.431792349, 0, 0, 0},
                              { 0.942474246, 0, 0, 0},
                              { 0.642043054, 0, 0, 0},
                              { 0.156192943, 0, 0, 0},
                              { 0.743064642, 0, 0, 0},
                              { 0.658330858, 0, 0, 0},
                              { 0.727058589, 0, 0, 0},
                              { 0.290705413, 0, 0, 0},
                              { 0.219684, 0, 0, 0},
                              { 0.640257061, 0, 0, 0},
                              { 0.192074329, 0, 0, 0},
                              { 0.714810193, 0, 0, 0},
                              { 0.802680314, 0, 0, 0},
                              { 0.733406, 0, 0, 0},
                              { 0.890271485, 0, 0, 0},
                              { 0.714524090, 0, 0, 0},
                              { 0.878643095, 0, 0, 0},
                              { 0.901668906, 0, 0, 0},
                              { 0.970928252, 0, 0, 0},
                              { 0.551703036, 0, 0, 0},
                              { 0.566553891, 0, 0, 0},
                              { 0.969693303, 0, 0, 0},
                              { 0.272696555, 0, 0, 0},
                              { 0.750567615, 0, 0, 0},
                              { 0.425773114, 0, 0, 0},
                              { 0.109021053, 0, 0, 0},
                              { 0.660028338, 0, 0, 0},
                              { 0.294052035, 0, 0, 0},
                              { 0.673456430, 0, 0, 0},
                              { 0.660804629, 0, 0, 0},
                              { 0.540197134, 0, 0, 0},
                              { 0.139434680, 0, 0, 0},
                              { 0.672020853, 0, 0, 0},
                              { 0.448636651, 0, 0, 0} }
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[10], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear centroid v0.xyz
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed ca052073cd6d568e-ps.txt

mul r6.w, r6.x, r6.y
mul r8.x, r6.w, cb1[9].x
mul r8.y, r6.w, cb1[10].x
mul r8.z, r6.w, cb1[11].x
mul r8.w, r6.w, cb1[12].x
dp4 r9.x, r8.xyzw, cb1[17].xyzw
dp4 r9.y, r8.xyzw, cb1[18].xyzw
dp4 r9.z, r8.xyzw, cb1[19].xyzw
add r7.xyz, cb1[174].xyz, r9.xyz

ftoi r0.xy, v1.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t1.xyzw
mov r1.y, l(1.000000)
dp2 r1.z, r1.xyxx, cb1[11].zwzz
dp2 r1.x, r1.xyxx, cb1[12].zwzz
div r1.x, -r1.z, r1.x
div r1.yzw, v0.xxyz, v0.zzzz

// Save off depth before it is clobbered:
mov r6.w, r1.x

mul r1.xyz, -r1.xxxx, r1.yzwy

// WATCH_DOGS2 unprojection fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed ca052073cd6d568e-ps.txt

add r6.w, r6.w, -r6.y
mul r6.w, r6.w, r6.x
mad r1.x, -r6.w, cb1[9].x, r1.x

mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb1[17].xyzw
dp4 r2.y, r1.xyzw, cb1[18].xyzw
dp4 r2.z, r1.xyzw, cb1[19].xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyww, t2.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t4.zxyw
add r3.xyz, r2.xyzx, -cb3[8].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
div r1.w, r0.w, cb2[0].w
add_sat r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb2[1].x
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
add r3.xyz, -r2.xyzx, r7.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
dp3_sat r2.w, r0.yzxy, r3.xyzx
add r3.x, -r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb2[2].y
exp r2.w, r2.w
log r3.x, r3.x
mul r3.x, r3.x, cb2[3].w
exp r3.x, r3.x
mul r3.x, r3.x, cb2[3].z
add r3.yzw, -r2.xxyz, cb3[8].xxyz
dp3 r4.x, r3.yzwy, r3.yzwy
rsq r4.x, r4.x
mul r3.yzw, r3.yyzw, r4.xxxx
dp3_sat r3.y, r3.wyzw, r0.xyzx
mov r3.z, r3.y
mov r3.w, l(0)
loop 
  ult r4.x, l(6), r3.w
  breakc_nz r4.x
  add r4.xyz, -r2.xyzx, cb3[r3.w + 0].xyzx
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r5.x, r4.w
  mul r4.xyz, r4.xyzx, r5.xxxx
  dp3_sat r4.x, r4.zxyz, r0.xyzx
  sqrt r4.y, r4.w
  mul_sat r4.y, r4.y, cb2[3].y
  add r4.y, r4.y, l(-1.000000)
  mad r4.z, r4.y, l(2.000000), l(3.000000)
  mul r4.y, r4.y, r4.y
  mul r4.y, r4.y, r4.z
  mul r4.x, r4.y, r4.x
  mad r3.z, r4.x, cb3[r3.w + 0].w, r3.z
  iadd r3.w, r3.w, l(1)
endloop 
mov_sat r3.z, r3.z
mul r0.y, r3.z, cb2[3].x
div r0.z, r0.w, cb2[5].y
add r3.y, cb0[34].x, -cb3[9].y
mul r3.w, r3.y, cb2[5].z
mad r0.z, -r3.y, cb2[5].z, r0.z
min r0.z, r0.z, l(0.000000)
div r4.x, r0.w, cb2[4].w
add_sat r4.y, -r4.x, l(1.000000)
mad r4.z, r4.y, l(-2.000000), l(3.000000)
mul r4.y, r4.y, r4.y
mul r4.y, r4.y, r4.z
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zzzz, t0.yzxw, s0
mul r0.z, r0.z, r4.y
mov_sat r0.x, r0.x
add r4.y, -r0.x, l(1.000000)
mad r0.x, cb2[5].w, r4.y, r0.x
mul r0.z, r0.x, r0.z
mul r4.y, cb2[5].y, l(0.500000)
div r4.y, r0.w, r4.y
mad r3.w, -r3.w, l(2.000000), r4.y
min r3.w, r3.w, l(0.000000)
mad_sat r4.x, -r4.x, l(0.200000), l(1.000000)
mad r4.y, r4.x, l(-2.000000), l(3.000000)
mul r4.x, r4.x, r4.x
mul r4.x, r4.x, r4.y
sample_indexable(texture2d)(float,float,float,float) r3.w, r3.wwww, t0.yzwx, s0
mul r3.w, r3.w, r4.x
mul r0.x, r0.x, r3.w
mad r2.w, r2.w, cb2[2].x, r3.x
add r2.w, r2.w, cb2[1].y
mul r3.x, r1.w, l(0.300000)
mad r3.z, r3.z, cb2[3].x, l(-1.000000)
mad r3.x, r3.x, r3.z, l(1.000000)
mul r0.xz, r0.xxzx, cb2[5].xxxx
mad r0.z, r2.w, r3.x, r0.z
mul r2.w, r1.w, r1.w
mul r0.x, r0.x, r2.w
mad r0.x, r0.x, l(0.600000), r0.z
max r0.x, r0.x, cb2[2].w
min r0.x, r0.x, cb2[2].z
mul r0.z, r3.y, cb3[9].x
log r0.z, |r0.z|
mul r0.z, r0.z, cb3[8].w
exp r0.z, r0.z
lt r2.w, r0.z, l(400.000000)
if_nz r2.w
  min r2.w, r0.z, l(1.000000)
  mul r2.w, r2.w, l(6.000000)
  add r3.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  round_ni r3.xyz, r3.xyzx
  dp2 r3.w, r3.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r3.w, r3.z, r3.w
  sincos r3.w, null, r3.w
  mul r3.w, r3.w, l(43758.546875)
  frc r3.w, r3.w
  mul r3.w, r3.w, l(100.000000)
  round_ne r3.w, r3.w
  ftoi r3.w, r3.w
  add r3.xyz, r3.xyzx, -cb3[8].xyzx
  add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 3.000000, 0.000000)
  dp3 r3.x, r3.xyzx, r3.xyzx
  sqrt r3.x, r3.x
  add r3.x, -r0.z, r3.x
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul_sat r3.x, r2.w, r3.x
  mad r3.y, r3.x, l(-2.000000), l(3.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, r3.y
  ge r3.x, icb[r3.w + 0].x, r3.x
  mad r3.yzw, r2.xxyz, l(0.000000, 2.500000, 2.500000, 2.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
  round_ni r3.yzw, r3.yyzw
  dp2 r4.x, r3.yzyy, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r4.x, r3.w, r4.x
  sincos r4.x, null, r4.x
  mul r4.x, r4.x, l(43758.546875)
  frc r4.x, r4.x
  mul r4.x, r4.x, l(100.000000)
  round_ne r4.x, r4.x
  ftoi r4.x, r4.x
  add r3.yzw, r3.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  mad r3.yzw, r3.yyzw, l(0.000000, 0.400000, 0.400000, 0.400000), -cb3[8].xxyz
  mul r3.yzw, r3.yyzw, l(0.000000, 1.000000, 1.000000, 3.000000)
  dp3 r3.y, r3.yzwy, r3.yzwy
  sqrt r3.y, r3.y
  add r3.y, -r0.z, r3.y
  mul_sat r3.y, r2.w, r3.y
  mad r3.z, r3.y, l(-2.000000), l(3.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, r3.z
  ge r3.y, icb[r4.x + 0].x, r3.y
  and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  mad r2.xyz, r2.xyzx, l(6.66666651, 6.66666651, 6.66666651, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  round_ni r2.xyz, r2.xyzx
  dp2 r3.z, r2.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
  add r3.z, r2.z, r3.z
  sincos r3.z, null, r3.z
  mul r3.z, r3.z, l(43758.546875)
  frc r3.z, r3.z
  mul r3.z, r3.z, l(100.000000)
  round_ne r3.z, r3.z
  ftoi r3.z, r3.z
  add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r2.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), -cb3[8].xyzx
  mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 3.000000, 0.000000)
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r2.x, -r0.z, r2.x
  mul_sat r2.x, r2.w, r2.x
  mad r2.y, r2.x, l(-2.000000), l(3.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.y
  ge r2.x, icb[r3.z + 0].x, r2.x
  add r2.y, r0.z, l(-50.000000)
  add r0.zw, r0.zzzw, -r2.yyyy
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  mul_sat r0.z, r0.z, r0.w
  mad r0.w, r0.z, l(-2.000000), l(3.000000)
  mul r0.z, r0.z, r0.z
  mad r0.z, -r0.w, r0.z, l(1.000000)
  mul r0.w, r3.y, r3.x
  movc r2.xy, r2.xxxx, l(0.250000,0.750000,0,0), l(0.750000,0.250000,0,0)
  mad r0.z, r0.z, r2.y, r2.x
  mul r0.z, r0.z, r0.w
else 
  mov r0.z, l(1.000000)
endif 
mul r0.x, r0.z, r0.x
mad r0.z, -cb3[9].z, l(0.700000), l(1.000000)
mul r0.w, r0.z, r0.x
resinfo_indexable(texture2d)(float,float,float,float) r2.xy, l(0), t3.xyzw
mul r2.zw, r2.xxxy, l(0.000000, 0.000000, 0.0747012272, 0.0747012272)
round_ni r2.zw, r2.zzzw
add r2.zw, r2.zzzw, v1.xxxy
div r2.xy, r2.zwzz, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t3.xyzw, s0
ge r2.y, l(0.040450), r0.w
mad r0.x, r0.x, r0.z, l(0.055000)
mul r0.xw, r0.xxxw, l(0.947867334, 0.000000, 0.000000, 0.0773993805)
log r0.x, |r0.x|
mul r0.x, r0.x, l(2.400000)
exp r0.x, r0.x
movc r0.x, r2.y, r0.w, r0.x
ge r0.x, r2.x, r0.x
add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, cb2[4].yyyy, r2.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, cb2[0].xyzx
movc r0.xzw, r0.xxxx, l(0.200000,0,0,-0.200000), l(1.000000,0,1.500000,-1.000000)
add r0.z, r0.w, r0.z
mad r0.x, cb3[9].z, r0.z, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
mad r0.x, r0.y, l(0.700000), l(0.300000)
mov r2.w, l(1.000000)
mul r0.xyzw, r0.xxxx, r2.xyzw
max r1.x, r1.w, l(0.200000)
mul o0.xyzw, r0.xyzw, r1.xxxx
ret 
// Approximately 223 instruction slots used