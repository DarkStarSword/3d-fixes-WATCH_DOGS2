// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d3003cb81c048413-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:54:55 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer MaterialWD2Skin
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 CurvatureUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 DiffuseUVTiling2;           // Offset:   48 Size:    16 [unused]
//   float4 MaskTextureUVTiling1;       // Offset:   64 Size:    16 [unused]
//   float4 MaskUVTiling2;              // Offset:   80 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   96 Size:    16 [unused]
//   float4 NormalUVTiling2;            // Offset:  112 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:  128 Size:    12 [unused]
//   float DiffuseNormalIntensity1;     // Offset:  140 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:  144 Size:    12 [unused]
//   float FaceBlendDisplaceStrength;   // Offset:  156 Size:     4
//   float3 FaceBlendZoneSelection;     // Offset:  160 Size:    12
//   float FaceBlendFadeDistance;       // Offset:  172 Size:     4
//   float3 TightsColor;                // Offset:  176 Size:    12 [unused]
//   float MaskReflectanceOffset;       // Offset:  188 Size:     4 [unused]
//   float2 CurvatureTextureOffset;     // Offset:  192 Size:     8 [unused]
//   float MaskRoughnessOffset;         // Offset:  200 Size:     4 [unused]
//   float Metalness;                   // Offset:  204 Size:     4 [unused]
//   float2 DiffuseTextureOffset2;      // Offset:  208 Size:     8 [unused]
//   float NormalDynamicWrinklesIntensity;// Offset:  216 Size:     4 [unused]
//   float NormalIntensity1;            // Offset:  220 Size:     4 [unused]
//   float2 FaceBlendDisplaceRange;     // Offset:  224 Size:     8
//   float NormalIntensity2;            // Offset:  232 Size:     4 [unused]
//   float Reflectance;                 // Offset:  236 Size:     4 [unused]
//   float2 MaskTextureOffset2;         // Offset:  240 Size:     8 [unused]
//   float Roughness;                   // Offset:  248 Size:     4 [unused]
//   float SSSStrength;                 // Offset:  252 Size:     4 [unused]
//   float TightsStrenght;              // Offset:  256 Size:     4 [unused]
//   float TightsThickness;             // Offset:  260 Size:     4 [unused]
//   int DetailColorChannel;            // Offset:  264 Size:     4 [unused]
//   int DiffuseBlendMode;              // Offset:  268 Size:     4 [unused]
//   int FaceBlendDisplaceTextureArrayUV;// Offset:  272 Size:     4
//   int Mask2ColorChannel;             // Offset:  276 Size:     4 [unused]
//   int MaskChannelUsageAlpha;         // Offset:  280 Size:     4 [unused]
//   int MaskChannelUsageBlue;          // Offset:  284 Size:     4 [unused]
//   int MaskChannelUsageGreen;         // Offset:  288 Size:     4 [unused]
//   int MaskChannelUsageRed;           // Offset:  292 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  296 Size:     4 [unused]
//   bool DynamicWrinkles;              // Offset:  300 Size:     4 [unused]
//   bool RoughnessInDiffuse1Alpha;     // Offset:  304 Size:     4 [unused]
//   bool UseFaceBlend;                 // Offset:  308 Size:     4 [unused]
//   bool UseTights;                    // Offset:  312 Size:     4 [unused]
//
// }
//
// cbuffer CollisionRegionsModifier
// {
//
//   float4 RegionOffsets[3];           // Offset:    0 Size:    48
//   float4 RegionsDeform[4];           // Offset:   48 Size:    64
//   float4 RegionsScratches[4];        // Offset:  112 Size:    64 [unused]
//   float3 BoundingMax;                // Offset:  176 Size:    12
//   float3 BoundingMin;                // Offset:  192 Size:    12
//   uint3 RegionsCount;                // Offset:  208 Size:    12
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer MaterialNetHackingGeneric
// {
//
//   float3 Color;                      // Offset:    0 Size:    12 [unused]
//   float AttenuationDistanceFar;      // Offset:   12 Size:     4
//   float3 OutlineColor;               // Offset:   16 Size:    12 [unused]
//   float AttenuationDistanceRange;    // Offset:   28 Size:     4
//   float3 OutlineTargetColor;         // Offset:   32 Size:    12 [unused]
//   float ConstantIntensity;           // Offset:   44 Size:     4 [unused]
//   float InnerFresnelIntensity;       // Offset:   48 Size:     4 [unused]
//   float InnerFresnelPower;           // Offset:   52 Size:     4 [unused]
//   float OccludedIntensity;           // Offset:   56 Size:     4 [unused]
//   float OuterFresnelIntensity;       // Offset:   60 Size:     4 [unused]
//   float OuterFresnelPower;           // Offset:   64 Size:     4 [unused]
//   float OutlineCutout;               // Offset:   68 Size:     4 [unused]
//   float OutlineFarMultiplier;        // Offset:   72 Size:     4 [unused]
//   float OutlineIntensity;            // Offset:   76 Size:     4 [unused]
//   float OutlineNearMultiplier;       // Offset:   80 Size:     4 [unused]
//   float OverExposeIntensity;         // Offset:   84 Size:     4 [unused]
//   float TransparentIntensity;        // Offset:   88 Size:     4 [unused]
//   float TransparentSoft;             // Offset:   92 Size:     4 [unused]
//   float VertexNoiseBaseMultiplier;   // Offset:   96 Size:     4
//   float VertexNoiseFarDist;          // Offset:  100 Size:     4
//   float VertexNoiseFarMultiplier;    // Offset:  104 Size:     4
//   float VertexNoiseIntensity;        // Offset:  108 Size:     4
//   float VertexNoiseNearDist;         // Offset:  112 Size:     4
//   float VertexNoiseNearMultiplier;   // Offset:  116 Size:     4
//   float VertexNoiseRatio;            // Offset:  120 Size:     4
//   float VertexNoiseScale;            // Offset:  124 Size:     4
//   float VertexNoiseTop;              // Offset:  128 Size:     4
//   float VertexNoiseTopMultiplier;    // Offset:  132 Size:     4
//   bool DisableAlphaTest;             // Offset:  136 Size:     4 [unused]
//   bool RandomColor;                  // Offset:  140 Size:     4 [unused]
//   bool WhiteNoise;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Skin__FaceBlendDisplaceTextureArray__TexObj__    texture  float4     2darray    0        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialWD2Skin                   cbuffer      NA          NA    2        1
// CollisionRegionsModifier          cbuffer      NA          NA    3        1
// SceneGeometry                     cbuffer      NA          NA    4        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    5        1
// MaterialNetHackingGeneric         cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// blendweight              0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xyzw        1     NONE     int   xyzw
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    1   xyzw        3     NONE   float   xyz 
// texcoord                 1   xyzw        4     NONE   float      w
// texcoord                 0   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 0.0747012272, 0, 0, 0},
                              { 0.0271708835, 0, 0, 0},
                              { 0.661726475, 0, 0, 0},
                              { 0.995930, 0, 0, 0},
                              { 0.237397820, 0, 0, 0},
                              { 0.269059449, 0, 0, 0},
                              { 0.666550815, 0, 0, 0},
                              { 0.0896320194, 0, 0, 0},
                              { 0.911433399, 0, 0, 0},
                              { 0.875312, 0, 0, 0},
                              { 0.113883287, 0, 0, 0},
                              { 0.0430280454, 0, 0, 0},
                              { 0.290476054, 0, 0, 0},
                              { 0.919587076, 0, 0, 0},
                              { 0.926711321, 0, 0, 0},
                              { 0.392356426, 0, 0, 0},
                              { 0.449663162, 0, 0, 0},
                              { 0.977699101, 0, 0, 0},
                              { 0.458073974, 0, 0, 0},
                              { 0.0748890117, 0, 0, 0},
                              { 0.801730692, 0, 0, 0},
                              { 0.998791575, 0, 0, 0},
                              { 0.705820680, 0, 0, 0},
                              { 0.973135531, 0, 0, 0},
                              { 0.962353885, 0, 0, 0},
                              { 0.115701094, 0, 0, 0},
                              { 0.0575175136, 0, 0, 0},
                              { 0.807728112, 0, 0, 0},
                              { 0.513815761, 0, 0, 0},
                              { 0.940512776, 0, 0, 0},
                              { 0.692691565, 0, 0, 0},
                              { 0.513722956, 0, 0, 0},
                              { 0.437385023, 0, 0, 0},
                              { 0.563494623, 0, 0, 0},
                              { 0.109287798, 0, 0, 0},
                              { 0.796311259, 0, 0, 0},
                              { 0.902087212, 0, 0, 0},
                              { 0.260910541, 0, 0, 0},
                              { 0.999974966, 0, 0, 0},
                              { 0.995875955, 0, 0, 0},
                              { 0.421479940, 0, 0, 0},
                              { 0.0228500254, 0, 0, 0},
                              { 0.890108764, 0, 0, 0},
                              { 0.315129966, 0, 0, 0},
                              { 0.331979483, 0, 0, 0},
                              { 0.450051367, 0, 0, 0},
                              { 0.618979, 0, 0, 0},
                              { 0.0348280780, 0, 0, 0},
                              { 0.955897152, 0, 0, 0},
                              { 0.374959797, 0, 0, 0},
                              { 0.547439, 0, 0, 0},
                              { 0.109731354, 0, 0, 0},
                              { 0.793015897, 0, 0, 0},
                              { 0.818771541, 0, 0, 0},
                              { 0.705857575, 0, 0, 0},
                              { 0.541842341, 0, 0, 0},
                              { 0.354961365, 0, 0, 0},
                              { 0.603685558, 0, 0, 0},
                              { 0.289715707, 0, 0, 0},
                              { 0.717820406, 0, 0, 0},
                              { 0.620669663, 0, 0, 0},
                              { 0.586008251, 0, 0, 0},
                              { 0.313340217, 0, 0, 0},
                              { 0.115932733, 0, 0, 0},
                              { 0.397027284, 0, 0, 0},
                              { 0.875087857, 0, 0, 0},
                              { 0.431792349, 0, 0, 0},
                              { 0.942474246, 0, 0, 0},
                              { 0.642043054, 0, 0, 0},
                              { 0.156192943, 0, 0, 0},
                              { 0.743064642, 0, 0, 0},
                              { 0.658330858, 0, 0, 0},
                              { 0.727058589, 0, 0, 0},
                              { 0.290705413, 0, 0, 0},
                              { 0.219684, 0, 0, 0},
                              { 0.640257061, 0, 0, 0},
                              { 0.192074329, 0, 0, 0},
                              { 0.714810193, 0, 0, 0},
                              { 0.802680314, 0, 0, 0},
                              { 0.733406, 0, 0, 0},
                              { 0.890271485, 0, 0, 0},
                              { 0.714524090, 0, 0, 0},
                              { 0.878643095, 0, 0, 0},
                              { 0.901668906, 0, 0, 0},
                              { 0.970928252, 0, 0, 0},
                              { 0.551703036, 0, 0, 0},
                              { 0.566553891, 0, 0, 0},
                              { 0.969693303, 0, 0, 0},
                              { 0.272696555, 0, 0, 0},
                              { 0.750567615, 0, 0, 0},
                              { 0.425773114, 0, 0, 0},
                              { 0.109021053, 0, 0, 0},
                              { 0.660028338, 0, 0, 0},
                              { 0.294052035, 0, 0, 0},
                              { 0.673456430, 0, 0, 0},
                              { 0.660804629, 0, 0, 0},
                              { 0.540197134, 0, 0, 0},
                              { 0.139434680, 0, 0, 0},
                              { 0.672020853, 0, 0, 0},
                              { 0.448636651, 0, 0, 0} }
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[175], immediateIndexed
dcl_constantbuffer cb2[18], immediateIndexed
dcl_constantbuffer cb3[14], dynamicIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2darray (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.w
dcl_input v5.w
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

itof r0.xyz, v0.xyzx
mad r0.xyz, r0.xyzx, cb4[3].yyyy, cb4[3].xxxx
mad r1.xyz, v2.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r0.w, v4.w, v5.w
lt r0.w, r0.w, l(1.500000)
if_nz r0.w
  itof r2.xyzw, v1.xyzw
  mad r2.xyzw, r2.xyzw, cb4[2].zwzw, cb4[2].xyxy
  add r0.w, -v4.w, l(1.000000)
  add_sat r3.z, r0.w, -v5.w
  movc r2.xy, cb2[17].xxxx, r2.zwzz, r2.xyxx
  mov r4.x, cb5[0].w
  mov r4.y, cb5[1].w
  mov r4.z, cb5[2].w
  add r4.xyz, r4.xyzx, -cb1[174].xyzx
  dp3 r0.w, r4.xyzx, r4.xyzx
  mul r1.w, cb2[10].w, cb2[10].w
  mul r0.w, r0.w, r1.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  mov r3.x, v4.w
  mov r3.y, v5.w
  mul r3.xyz, r0.wwww, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r0.w, -cb2[14].x, cb2[14].y
  lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  if_nz r4.x
    mov r2.z, cb2[10].x
    sample_l_indexable(texture2darray)(float,float,float,float) r5.xyz, r2.xyzx, t0.xyzw, s0, l(0.000000)
    mad r5.xyz, r5.xyzx, r0.wwww, cb2[14].xxxx
    mad r5.xyz, -r5.xyzx, r3.xxxx, r0.xyzx
  else 
    mov r5.xyz, r0.xyzx
  endif 
  if_nz r4.y
    mov r2.w, cb2[10].y
    sample_l_indexable(texture2darray)(float,float,float,float) r4.xyw, r2.xywx, t0.xywz, s0, l(0.000000)
    mad r4.xyw, r4.xyxw, r0.wwww, cb2[14].xxxx
    mad r5.xyz, -r4.xywx, r3.yyyy, r5.xyzx
  endif 
  if_nz r4.z
    mov r2.z, cb2[10].z
    sample_l_indexable(texture2darray)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0, l(0.000000)
    mad r2.xyz, r2.xyzx, r0.wwww, cb2[14].xxxx
    mad r5.xyz, -r2.xyzx, r3.zzzz, r5.xyzx
  endif 
else 
  mov r5.xyz, r0.xyzx
endif 
add r2.xyz, v3.zyxz, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r3.xyz, r5.xyzx, -cb3[12].xyzx
add r4.xyz, cb3[11].xyzx, -cb3[12].xyzx
div r3.xyz, r3.xyzx, r4.xyzx
ine r4.xyz, cb3[13].xyzx, l(1, 1, 1, 0)
if_nz r4.x
  ge r6.xyzw, r3.xxxx, cb3[0].xyzw
  and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r0.w, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r0.w, r0.w
  if_nz r0.w
    iadd r1.w, r0.w, l(-1)
    dp4 r1.w, cb3[0].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r1.w, l(0)
  endif 
  iadd r4.xw, cb3[13].xxxx, l(-1, 0, 0, -2)
  ult r2.w, r0.w, r4.x
  if_nz r2.w
    dp4 r2.w, cb3[0].xyzw, icb[r0.w + 0].xyzw
  else 
    mov r2.w, l(1.000000)
  endif 
  add r3.w, -r1.w, r3.x
  add r1.w, -r1.w, r2.w
  div r1.w, r3.w, r1.w
  mad r1.w, r1.w, l(2.000000), l(-1.000000)
  dp4 r2.w, cb3[0].xyzw, icb[r4.w + 0].xyzw
  add r2.w, r2.w, l(1.000000)
  mul r2.w, r2.w, l(0.500000)
  ge r2.w, r2.w, r3.x
  and r2.w, r2.w, l(0x3f800000)
  mul r1.w, r1.w, r2.w
  mul r2.w, cb3[0].x, l(0.500000)
  ge r2.w, r3.x, r2.w
  and r2.w, r2.w, l(0x3f800000)
  mul r6.x, r1.w, r2.w
else 
  mov r6.x, l(0)
  mov r0.w, l(0)
endif 
if_nz r4.y
  ge r7.xyzw, r3.yyyy, cb3[1].xyzw
  and r7.xyzw, r7.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r1.w, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r1.w, r1.w
  if_nz r1.w
    iadd r2.w, r1.w, l(-1)
    dp4 r2.w, cb3[1].xyzw, icb[r2.w + 0].xyzw
  else 
    mov r2.w, l(0)
  endif 
  iadd r3.xw, cb3[13].yyyy, l(-1, 0, 0, -2)
  ult r3.x, r1.w, r3.x
  if_nz r3.x
    dp4 r3.x, cb3[1].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r3.x, l(1.000000)
  endif 
  add r4.x, -r2.w, r3.y
  add r2.w, -r2.w, r3.x
  div r2.w, r4.x, r2.w
  mad r2.w, r2.w, l(2.000000), l(-1.000000)
  dp4 r3.x, cb3[1].xyzw, icb[r3.w + 0].xyzw
  add r3.x, r3.x, l(1.000000)
  mul r3.x, r3.x, l(0.500000)
  ge r3.x, r3.x, r3.y
  and r3.x, r3.x, l(0x3f800000)
  mul r2.w, r2.w, r3.x
  mul r3.x, cb3[1].x, l(0.500000)
  ge r3.x, r3.y, r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r6.y, r2.w, r3.x
else 
  mov r6.y, l(0)
  mov r1.w, l(0)
endif 
imad r0.w, r1.w, cb3[13].x, r0.w
if_nz r4.z
  ge r4.xyzw, r3.zzzz, cb3[2].xyzw
  and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ftou r1.w, r1.w
  if_nz r1.w
    iadd r2.w, r1.w, l(-1)
    dp4 r2.w, cb3[2].xyzw, icb[r2.w + 0].xyzw
  else 
    mov r2.w, l(0)
  endif 
  iadd r3.xy, cb3[13].zzzz, l(-1, -2, 0, 0)
  ult r3.x, r1.w, r3.x
  if_nz r3.x
    dp4 r3.x, cb3[2].xyzw, icb[r1.w + 0].xyzw
  else 
    mov r3.x, l(1.000000)
  endif 
  add r3.w, -r2.w, r3.z
  add r2.w, -r2.w, r3.x
  div r2.w, r3.w, r2.w
  mad r2.w, r2.w, l(2.000000), l(-1.000000)
  dp4 r3.x, cb3[2].xyzw, icb[r3.y + 0].xyzw
  add r3.x, r3.x, l(1.000000)
  mul r3.x, r3.x, l(0.500000)
  ge r3.x, r3.x, r3.z
  and r3.x, r3.x, l(0x3f800000)
  mul r2.w, r2.w, r3.x
  mul r3.x, cb3[2].x, l(0.500000)
  ge r3.x, r3.z, r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r6.z, r2.w, r3.x
else 
  mov r6.z, l(0)
  mov r1.w, l(0)
endif 
imul null, r1.w, r1.w, cb3[13].x
imad r0.w, r1.w, cb3[13].y, r0.w
lt r3.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
lt r4.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r3.xyz, -r3.yxzy, r4.yxzy
imul null, r4.xy, r3.xzxx, cb3[13].xxxx
imad r3.w, r3.x, cb3[13].x, r3.y
mov r3.x, l(0)
mov r3.z, r4.x
iadd r3.xyzw, r0.wwww, r3.xyzw
imad r4.xyzw, r4.yyyy, cb3[13].yyyy, r3.xyzw
min r6.xyz, |r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
ushr r7.xyzw, r3.xyzw, l(2, 2, 2, 2)
and r3.xyzw, r3.xyzw, l(3, 3, 3, 3)
dp4 r8.x, cb3[r7.x + 3].xyzw, icb[r3.x + 0].xyzw
dp4 r8.y, cb3[r7.y + 3].xyzw, icb[r3.y + 0].xyzw
dp4 r8.z, cb3[r7.z + 3].xyzw, icb[r3.z + 0].xyzw
dp4 r8.w, cb3[r7.w + 3].xyzw, icb[r3.w + 0].xyzw
ushr r3.xyzw, r4.xyzw, l(2, 2, 2, 2)
and r4.xyzw, r4.xyzw, l(3, 3, 3, 3)
dp4 r7.x, cb3[r3.x + 3].xyzw, icb[r4.x + 0].xyzw
dp4 r7.y, cb3[r3.y + 3].xyzw, icb[r4.y + 0].xyzw
dp4 r7.z, cb3[r3.z + 3].xyzw, icb[r4.z + 0].xyzw
dp4 r7.w, cb3[r3.w + 3].xyzw, icb[r4.w + 0].xyzw
add r3.xyzw, -r8.xyzw, r7.xyzw
mad r3.xyzw, r6.zzzz, r3.xyzw, r8.xyzw
add r3.zw, -r3.xxxy, r3.zzzw
mad r3.xy, r6.yyyy, r3.zwzz, r3.xyxx
add r0.w, -r3.x, r3.y
mad_sat r0.w, r6.x, r0.w, r3.x
mul r2.xyz, r0.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, l(0.650000, 0.650000, 0.650000, 0.000000), r5.xyzx
mov r3.x, cb5[0].w
mov r3.y, cb5[1].w
mov r3.z, cb5[2].w
add r4.xyz, r3.xyzx, -cb1[174].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
sqrt r0.w, r0.w
add r0.w, r0.w, -cb6[7].x
add r4.xy, cb6[6].yzyy, -cb6[7].xyxx
div_sat r5.w, r0.w, r4.x
max r0.w, cb6[7].w, l(0.000100)
add r3.xyz, r0.xyzx, r3.xyzx
div r3.xyz, r3.xyzx, r0.wwww
add r3.xyz, r3.xyzx, cb0[34].xxxx
round_ni r3.xyz, r3.xyzx
mul r0.xyw, r0.wwww, r3.xyxz
add r0.xy, r0.wwww, r0.xyxx
frc r0.w, cb0[34].x
add r0.xy, r0.wwww, r0.xyxx
sincos r0.xy, null, r0.xyxx
mul r0.xy, r0.xyxx, l(43758.546875, 43758.546875, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, l(100.000000, 100.000000, 0.000000, 0.000000)
round_ne r0.xy, r0.xyxx
ftoi r0.xy, r0.xyxx
mad r0.w, r5.w, r4.y, cb6[7].y
mul r0.w, r0.w, cb6[6].w
mul_sat r0.z, r0.z, cb6[8].x
add r1.w, -cb6[6].x, cb6[8].y
mad r0.z, r0.z, r1.w, cb6[6].x
mul r0.z, r0.z, cb6[7].z
lt r0.x, icb[r0.x + 4].x, r0.z
mul r3.xyz, r0.wwww, r1.xyzx
mad r0.yzw, r3.xxyz, icb[r0.y + 4].xxxx, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
mov r0.w, l(1.000000)
dp4 r2.x, r0.xyzw, cb5[0].xyzw
dp4 r2.y, r0.xyzw, cb5[1].xyzw
dp4 r2.z, r0.xyzw, cb5[2].xyzw
add r0.xyz, r2.xyzx, -cb1[174].xyzx
mad r5.xyz, -r0.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r2.xyzx
mul r0.xyz, r0.xyzx, l(0.999000, 0.999000, 0.999000, 0.000000)
mul r2.x, r0.x, cb1[58].x
mul r2.y, r0.x, cb1[59].x
mul r2.z, r0.x, cb1[60].x
mul r2.w, r0.x, cb1[61].x
mul r3.x, r0.y, cb1[58].y
mul r3.y, r0.y, cb1[59].y
mul r3.z, r0.y, cb1[60].y
mul r3.w, r0.y, cb1[61].y
mad r4.x, r0.z, cb1[58].z, cb1[58].w
mad r4.y, r0.z, cb1[59].z, cb1[59].w
mad r4.z, r0.z, cb1[60].z, cb1[60].w
mad r4.w, r0.z, cb1[61].z, cb1[61].w
add r0.xyzw, r3.xyzw, r4.xyzw
add r0.xyzw, r0.xyzw, r2.xyzw
dp3 o1.x, r1.xyzx, cb5[0].xyzx
dp3 o1.y, r1.xyzx, cb5[1].xyzx
dp3 o1.z, r1.xyzx, cb5[2].xyzx
add r1.xyz, r5.xyzx, -cb1[174].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, r1.x, -cb6[0].w
div_sat r1.x, r1.x, cb6[1].w
add o1.w, -r1.x, l(1.000000)
mov o0.xyzw, r5.xyzw
mov o3.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed d3003cb81c048413-vs.txt
ne r9.w, r0.w, l(1.0)
if_nz r9.w
  add r9.w, r0.w, -r9.y
  mad r0.x, r9.w, r9.x, r0.x
endif

mov o2.xy, r0.zwzz
ret 
// Approximately 264 instruction slots used