// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed f444d56ce15ac78e-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:57:47 2016
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer LightIndexedTiles
// {
//
//   float4 ClipPlanes[2000];           // Offset:    0 Size: 32000
//   float4 LightIndexOrigin;           // Offset: 32000 Size:    16 [unused]
//   float4 LightIndexZAxis;            // Offset: 32016 Size:    16 [unused]
//   float4 LightTileParameters;        // Offset: 32032 Size:    16
//
// }
//
// Resource bind info for LightIndexedTiles__Lights
// {
//
//   struct LightDesc
//   {
//       
//       float4 m_PositionAndRadius;    // Offset:    0
//       float4 m_ColorAndFallOffAngle; // Offset:   16
//       float3 m_Direction;            // Offset:   32
//       uint m_clipPlaneCount;         // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// FillVolumeTexture__VFGILightVolumeTexture__TexObj__    texture  float4          3d    0        1
// LightIndexedTiles__Lights         texture  struct         r/o    1        1
// LightIndexedTiles__TileLightCoverage    texture    uint         buf    2        1
// FillVolumeTexture__VFOutputLightingTexture        UAV  float3          3d    0        1
// Viewport                          cbuffer      NA          NA    0        1
// SkyBuffer                         cbuffer      NA          NA    1        1
// VolumetricFog                     cbuffer      NA          NA    2        1
// LightIndexedTiles                 cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[31], immediateIndexed
dcl_constantbuffer cb2[38], immediateIndexed
dcl_constantbuffer cb3[2003], dynamicIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_structured t1, 48 
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 15
dcl_thread_group 8, 8, 1

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw

ult r0.xy, vThreadID.xyxx, cb2[28].xyxx
and r0.x, r0.y, r0.x
if_nz r0.x
  utof r0.xyz, vThreadID.xyzx
  add r0.xyw, r0.xyxz, l(0.500000, 0.500000, 0.000000, 1.000000)
  utof r1.xy, cb2[28].xyxx
  div r0.xy, r0.xyxx, r1.xyxx

// Adjust screen position before VFViewDirReconstruction to fix sun/moon glow:
add r0.x, r0.x, -r12.x

  mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r0.xy, r0.xyxx, cb2[27].xyxx
  mul r0.y, r0.y, l(-1.000000)
  mul r1.xyz, r0.yyyy, cb2[32].xyzx
  mad r1.xyz, r0.xxxx, cb2[31].xyzx, r1.xyzx
  add r1.xyz, r1.xyzx, cb2[33].xyzx
  dp3 r0.x, r1.xyzx, r1.xyzx
  rsq r0.x, r0.x
  mul r2.xyzw, r0.xxxx, r1.xyzx
  mul r0.xy, r0.wzww, l(0.031250, 0.031250, 0.000000, 0.000000)
  exp r0.x, r0.x
  mad r0.x, r0.x, cb2[1].z, cb2[1].w
  exp r0.y, r0.y
  mad r0.y, r0.y, cb2[1].z, cb2[1].w
  add r0.x, r0.y, r0.x
  mul r0.xy, r0.xxxx, l(0.001000, 0.500000, 0.000000, 0.000000)
  mad r1.xyz, r1.xyzx, r0.yyyy, cb0[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed f444d56ce15ac78e-cs.txt

mov r13.xyz, r1.xyzx
mov r13.w, l(1.0)
dp4 r14.w, r13.xyzw, cb0[57].xyzw
add r14.x, r14.w, -r12.y
mul r14.x, r14.x, -r12.x
mul r14.x, r14.x, cb0[9].x
mov r14.yzw, l(0.0)
dp4 r13.x, r14.xyzw, cb0[17].xyzw
dp4 r13.y, r14.xyzw, cb0[18].xyzw
dp4 r13.z, r14.xyzw, cb0[19].xyzw
add r1.xyz, r1.xyzw, r13.xyzx

  imul null, r0.zw, vThreadID.xxxy, cb2[28].wwww
  utof r0.zw, r0.zzzw
  div r0.zw, r0.zzzw, cb2[37].zzzz
  ftou r0.zw, r0.zzzw
  utof r0.zw, r0.zzzw
  div r0.zw, r0.zzzw, cb3[2002].zzzz
  round_ni r0.zw, r0.zzzw
  mad r0.z, r0.w, cb3[2002].x, r0.z
  mov_sat r0.x, r0.x
  log r0.x, r0.x
  mul r0.x, r0.x, l(0.200000)
  exp r0.x, r0.x
  mul r0.x, r0.x, l(63.000000)
  ftou r0.xz, r0.xxzx
  imul null, r0.x, r0.x, l(9)
  imad r0.x, r0.z, l(576), r0.x
  iadd r0.z, r0.x, l(8)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t2.yzxw
  mul r0.w, cb2[6].y, l(0.500000)
  mad r3.x, -r0.w, r0.w, l(1.000000)
  mul r3.x, r3.x, l(0.0795774683)
  mad r0.w, r0.w, r0.w, l(1.000000)
  mov r1.w, l(1.000000)
  mov r3.yzw, l(0,0,0,0)
  mov r4.xy, l(0,0,0,0)
  loop 
    uge r4.z, r4.y, r0.z
    breakc_nz r4.z
    iadd r4.z, r0.x, r4.x
    ld_indexable(buffer)(uint,uint,uint,uint) r4.z, r4.zzzz, t2.yzxw
    ishl r4.w, r4.x, l(5)
    countbits r5.x, r4.z
    iadd r4.y, r4.y, r5.x
    iadd r4.x, r4.x, l(1)
    mov r5.yzw, r3.yyzw
    mov r6.x, r4.z
    mov r6.y, l(0)
    loop 
      uge r6.z, r6.y, r5.x
      breakc_nz r6.z
      firstbit_lo r6.z, r6.x
      ishl r6.w, l(1), r6.z
      not r6.w, r6.w
      and r6.x, r6.w, r6.x
      iadd r6.z, r4.w, r6.z
      ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r6.w, r6.z, l(44), t1.xxxx
      ishl r7.x, r6.z, l(3)
      mov r8.x, r7.x
      mov r8.y, l(0)
      mov r7.y, l(1.000000)
      loop 
        uge r7.z, r8.y, r6.w
        breakc_nz r7.z
        dp4_sat r7.z, cb3[r8.x + 0].xyzw, r1.xyzw
        mul r7.y, r7.z, r7.y
        iadd r8.xy, r8.xyxx, l(1, 1, 0, 0)
      endloop 
      lt r6.w, l(0.000100), r7.y
      if_nz r6.w
        ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r8.xyzw, r6.z, l(0), t1.xyzw
        ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r9.xyzw, r6.z, l(16), t1.xyzw
        ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r7.xzw, r6.z, l(32), t1.xxyz
        add r10.xyz, -r1.xyzx, r8.xyzx
        mul r6.z, r8.w, r8.w
        dp3 r6.w, r10.xyzx, r10.xyzx
        sqrt r10.w, r6.w
        div r10.xyz, r10.xyzx, r10.wwww
        lt r11.x, r9.w, l(0.000000)
        movc r11.x, r11.x, l(1.000000), l(0.500000)
        dp3 r7.x, r7.xzwx, -r10.xyzx
        mad r7.x, -r9.w, r11.x, r7.x
        mad r7.z, -r9.w, r11.x, l(1.000000)
        div_sat r11.x, r7.x, r7.z
        div_sat r7.x, r8.w, r0.y
        max r7.z, r10.w, l(3.000000)
        mul r7.z, r7.z, r7.z
        div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
        div r6.z, r6.w, r6.z
        add r6.z, -r6.z, l(1.000000)
        max r6.z, r6.z, l(0.000000)
        mul r6.z, r6.z, r7.z
        mul r6.z, r6.z, cb2[8].x
        mul r6.w, r7.x, r7.x
        mul r6.z, r6.w, r6.z
        dp3 r6.w, r10.xyzx, r2.xyzx
        mad r6.w, -cb2[6].y, r6.w, r0.w
        log r6.w, |r6.w|
        mul r6.w, r6.w, l(1.500000)
        exp r6.w, r6.w
        div r6.w, r3.x, r6.w
        ge r7.x, r9.w, l(0.000000)
        mul r7.z, r11.x, r11.x
        mul r10.x, r11.x, r7.z
        add r8.xyz, r8.xyzx, -cb0[174].xyzx
        dp3 r7.z, r8.xyzx, r8.xyzx
        mul r7.z, r7.z, l(0.000400)
        min r7.z, r7.z, l(1.000000)
        mad r7.z, r7.z, l(-2000.000000), l(10000.000000)
        dp3 r7.w, r9.xyzx, r9.xyzx
        sqrt r7.w, r7.w
        div r8.xyz, r9.xyzx, r7.wwww
        min r7.z, r7.z, r7.w
        mul r10.yzw, r7.zzzz, r8.xxyz
        mov r11.yzw, r9.xxyz
        movc r8.xyzw, r7.xxxx, r10.xyzw, r11.xyzw
        dp3 r7.x, r8.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
        add r7.xzw, -r8.yyzw, r7.xxxx
        mad r7.xzw, r7.xxzw, l(0.250000, 0.000000, 0.250000, 0.250000), r8.yyzw
        mul r7.xzw, r6.zzzz, r7.xxzw
        mul r7.xzw, r8.xxxx, r7.xxzw
        mul r7.xzw, r7.yyyy, r7.xxzw
        mul r7.xzw, r6.wwww, r7.xxzw
        mad r5.yzw, r7.xxzw, l(0.000000, 12.566371, 12.566371, 12.566371), r5.yyzw
      endif 
      iadd r6.y, r6.y, l(1)
    endloop 
    mov r3.yzw, r5.yyzw
  endloop 
  mov r0.xyzw, r3.yzwy
  mul r0.xyzw, r0.xyzw, cb0[176].wwww
  max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.xyzw, r0.xyzw, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
  mov r1.xyz, vThreadID.xyzx
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
  mul r3.xyz, r2.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
  mul r4.xyzw, r3.xxxx, cb1[23].xyzx
  mad r4.xyzw, cb1[22].xyzx, l(0.282095, 0.282095, 0.282095, 0.282095), r4.xyzw
  mad r4.xyzw, r3.yyyy, cb1[24].xyzx, r4.xyzw
  mad r3.xyzw, r3.zzzz, cb1[25].xyzx, r4.xyzw
  mul r4.xyzw, r2.xyzw, r2.yzzz
  mul r4.xyw, r4.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
  mad r3.xyzw, r4.xxxx, cb1[26].xyzx, r3.xyzw
  mad r3.xyzw, r4.yyyy, cb1[27].xyzx, r3.xyzw
  mad r2.x, r4.z, l(3.000000), l(-1.000000)
  mul r2.x, r2.x, l(0.315392)
  mad r3.xyzw, r2.xxxx, cb1[28].xyzx, r3.xyzw
  mad r3.xyzw, r4.wwww, cb1[29].xyzx, r3.xyzw
  mul r2.x, r2.y, r2.y
  mad r2.x, r2.w, r2.w, -r2.x
  mul r2.x, r2.x, l(0.546274)
  mad r2.xyzw, r2.xxxx, cb1[30].xyzx, r3.xyzw
  mul r2.xyzw, r2.xyzw, cb0[176].wwww
  max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r2.xyzw, r2.xyzw, l(64512.000000, 64512.000000, 64512.000000, 64512.000000)
  add r3.xyzw, r1.xyzx, -r2.wyzw
  mad r1.xyzw, r1.wwww, r3.xyzw, r2.xyzw
  add r0.xyzw, r0.xyzw, r1.xyzw
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xyzw
endif 
ret 
// Approximately 175 instruction slots used