// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed b62fe14a8ab8d265-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:05:37 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer MaterialWD2Glass
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 BaseColorUVTiling;          // Offset:   16 Size:    16 [unused]
//   float4 SurfaceParametersUVTiling;  // Offset:   32 Size:    16 [unused]
//   float3 AbsorptionColor;            // Offset:   48 Size:    12
//   float AbsorptionDistance;          // Offset:   60 Size:     4
//   float3 AbsorptionColorPreset;      // Offset:   64 Size:    12
//   float BaseColorAlpha;              // Offset:   76 Size:     4
//   float3 BaseColor;                  // Offset:   80 Size:    12
//   float DustIntensity;               // Offset:   92 Size:     4
//   float3 DamageStateUVSlide;         // Offset:   96 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  108 Size:     4
//   float3 DustColor;                  // Offset:  112 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  124 Size:     4
//   float3 MudColor;                   // Offset:  128 Size:    12
//   float MaskChannelUsageGreen;       // Offset:  140 Size:     4
//   float3 SurfaceAlbedo;              // Offset:  144 Size:    12
//   float MaskChannelUsageRed;         // Offset:  156 Size:     4
//   float2 AbsorptionDistanceTiling;   // Offset:  160 Size:     8 [unused]
//   float MaxFreePath;                 // Offset:  168 Size:     4
//   float Metalness;                   // Offset:  172 Size:     4
//   float2 AbsorptionTiling;           // Offset:  176 Size:     8 [unused]
//   float MudIntensity;                // Offset:  184 Size:     4
//   float NormalMapIntensity;          // Offset:  188 Size:     4
//   float2 NormalMapTiling;            // Offset:  192 Size:     8 [unused]
//   float Reflectance;                 // Offset:  200 Size:     4
//   float ReflectanceDustAdjustment;   // Offset:  204 Size:     4
//   float2 ThicknessTiling;            // Offset:  208 Size:     8 [unused]
//   float Roughness;                   // Offset:  216 Size:     4
//   float RoughnessDustAdjustment;     // Offset:  220 Size:     4
//   float Thickness;                   // Offset:  224 Size:     4
//   int WetSurfaceTypeIndex;           // Offset:  228 Size:     4
//   bool AbsorptionDistanceModulateByVAlpha;// Offset:  232 Size:     4 [unused]
//   bool DamageStateEnabled;           // Offset:  236 Size:     4 [unused]
//   bool IsVehicule;                   // Offset:  240 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Glass__AbsorptionTexture__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Glass__BaseColorTexture__SampObj__    sampler      NA          NA    1        1
// MaterialWD2Glass__NormalMapTexture__SampObj__    sampler      NA          NA    2        1
// MaterialWD2Glass__SurfaceParametersTexture__SampObj__    sampler      NA          NA    3        1
// ColorClamp                        sampler      NA          NA    4        1
// ColorWrap                         sampler      NA          NA    5        1
// ShadowRealSampler               sampler_c      NA          NA    6        1
// Viewport__RainOcclusionShadowMap__TexObj__    texture  float4          2d    0        1
// Viewport__RaindropRippleTexture    texture  float4     2darray    1        1
// MaterialWD2Glass__AbsorptionTexture__TexObj__    texture  float4          2d    2        1
// MaterialWD2Glass__BaseColorTexture__TexObj__    texture  float4          2d    3        1
// MaterialWD2Glass__NormalMapTexture__TexObj__    texture  float4          2d    4        1
// MaterialWD2Glass__SurfaceParametersTexture__TexObj__    texture  float4          2d    5        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    6        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// MaterialWD2Glass                  cbuffer      NA          NA    3        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    4        1
// LightData                         cbuffer      NA          NA    5        1
// VolumetricFog                     cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xy          7     NONE   float   xy  
// SV_Position              0   xyzw        8      POS   float   xy  
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[49], immediateIndexed
dcl_constantbuffer cb6[38], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear sample v0.xyz
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyz
dcl_input_ps linear sample v3.xyz
dcl_input_ps linear sample v4.xyz
dcl_input_ps linear sample v5.xyzw
dcl_input_ps linear sample v6.xyzw
dcl_input_ps linear sample v7.xy
dcl_input_ps_siv linear noperspective sample v8.xy, position
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 17

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed b62fe14a8ab8d265-ps.txt

mul r10.w, r10.x, r10.y
mul r12.x, r10.w, cb1[9].x
mul r12.y, r10.w, cb1[10].x
mul r12.z, r10.w, cb1[11].x
mul r12.w, r10.w, cb1[12].x
dp4 r13.x, r12.xyzw, cb1[17].xyzw
dp4 r13.y, r12.xyzw, cb1[18].xyzw
dp4 r13.z, r12.xyzw, cb1[19].xyzw
add r11.xyz, cb1[174].xyz, r13.xyz


// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-limit=1 -i -f --only-autofixed b62fe14a8ab8d265-ps.txt

mul r10.w, r10.x, r10.y
mul r15.x, r10.w, cb1[9].x
mul r15.y, r10.w, cb1[10].x
mul r15.z, r10.w, cb1[11].x
mul r15.w, r10.w, cb1[12].x
dp4 r16.x, r15.xyzw, cb1[17].xyzw
dp4 r16.y, r15.xyzw, cb1[18].xyzw
dp4 r16.z, r15.xyzw, cb1[19].xyzw
add r14.xyz, cb6[30].xyz, r16.xyz

mov_sat r0.x, cb4[3].y
movc r0.y, v9.x, l(1.000000), l(-1.000000)
mul r0.yzw, r0.yyyy, v1.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.wwyz, r1.xxxx
sample_b_indexable(texture2d)(float,float,float,float) r1.xy, v6.zwzz, t4.xyzw, s2, cb1[180].x
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.z, r1.xyxx, r1.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r1.z, r1.z
mul r1.xy, r1.xyxx, cb3[11].wwww
mul r2.xyz, r1.yyyy, v2.xyzx
mad r1.xyw, r1.xxxx, v3.xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, r0.zwyz, r1.xywx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r3.xyzw, v6.xyxx, t5.xyzw, s3, cb1[180].x
eq r4.xy, cb3[9].wwww, l(1.000000, 2.000000, 0.000000, 0.000000)
movc r2.w, r4.x, r3.x, cb3[12].z
eq r4.x, cb3[8].w, l(1.000000)
movc r4.x, r4.x, r3.y, cb3[13].z
eq r4.zw, cb3[7].wwww, l(0.000000, 0.000000, 1.000000, 3.000000)
movc_sat r4.z, r4.z, r3.z, cb3[10].w
if_nz r4.y
  mul r3.x, r3.x, cb3[5].w
else 
  eq r4.y, cb3[8].w, l(2.000000)
  eq r5.x, cb3[7].w, l(2.000000)
  eq r5.y, cb3[6].w, l(1.000000)
  mul r6.xyz, r3.yzwy, cb3[5].wwww
  movc r3.y, r5.y, r6.z, cb3[5].w
  movc r3.y, r5.x, r6.y, r3.y
  movc r3.x, r4.y, r6.x, r3.y
endif 
mul r3.y, r3.z, cb3[11].z
and r3.y, r3.y, r4.w
add_sat r3.zw, cb4[2].yyyw, cb4[2].xxxz
mul r3.x, r3.z, r3.x
mul r3.z, r3.w, r3.y
add r5.xyz, -v0.xyzx, r11.xyzx
dp3 r4.y, r5.xyzx, r5.xyzx
rsq r4.y, r4.y
mul r6.xyz, r4.yyyy, r5.xyzx
dp3 r2.x, r2.xyzx, r6.xyzx
eq r2.y, cb3[4].x, l(0.000000)
movc r7.xyz, r2.yyyy, cb3[3].xyzx, cb3[4].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r8.xyzw, v5.xyxx, t2.xyzw, s0, cb1[180].x
mov r7.w, l(1.000000)
mul r7.xyzw, r7.xyzw, r8.xyzw
mul r2.y, v1.w, cb3[3].w
log r7.xyz, r7.xyzx
max r2.xy, r2.xyxx, l(0.000010, 1.000000047E-034, 0.000000, 0.000000)
div r7.xyz, -r7.xyzx, r2.yyyy
mul r2.y, cb3[14].x, l(0.500000)
div r2.x, r2.y, r2.x
mul r2.y, cb3[10].z, cb3[14].x
max r2.x, r2.x, l(0.000000)
min r2.x, r2.y, r2.x
mul r2.xyz, r2.xxxx, -r7.xyzx
exp r2.xyz, r2.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r8.xyzw, v5.zwzz, t3.wxyz, s1, cb1[180].x
max r4.w, cb3[4].w, cb4[3].x
add_sat r4.w, r4.w, r8.x
add r5.w, -r4.w, l(1.000000)
mul r2.xyz, r2.xyzx, r5.wwww
mad r7.xyz, cb3[5].xyzx, r8.yzwy, -cb3[9].xyzx
mad r7.xyz, r4.wwww, r7.xyzx, cb3[9].xyzx
mad_sat r4.x, r3.x, cb3[13].w, r4.x
add_sat r4.w, cb0[3].w, cb4[5].z
add r5.w, cb0[3].x, -cb4[5].x
mad r4.w, r4.w, r5.w, cb4[5].x
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, v4.xyxx, t0.xxxx, s6, v4.z
mul r6.w, r4.w, r5.w
movc r5.w, cb4[5].w, r5.w, l(1.000000)
mul r4.w, r4.w, r5.w
iadd r8.xy, cb3[14].yyyy, l(1, 19, 0, 0)
ult r5.w, r8.x, l(1)
movc r5.w, r5.w, l(0), r8.y
add r8.xyz, l(-1.000000, -1.000000, -1.000000, 0.000000), cb0[r5.w + 4].xyzx
mad r8.xyz, r4.wwww, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.x, r4.x, r8.y
mad r1.xyz, r1.xyzx, r1.wwww, -r0.zwyz
mad r1.xyz, r8.zzzz, r1.xyzx, r0.zwyz
mov r9.xy, v7.xyxx
mov r9.z, l(0)
sample_b_indexable(texture2darray)(float,float,float,float) r0.zw, r9.xyzx, t1.zwxy, s5, cb1[180].x
mov_sat r0.y, r0.y
dp2 r0.y, r0.yyyy, r0.yyyy
add r0.y, r0.y, l(-1.000000)
max r0.y, r0.y, l(0.000000)
mul r0.y, r6.w, r0.y
mul r0.yz, r0.yyyy, r0.zzwz
mad r1.xy, r0.yzyy, cb0[r5.w + 4].wwww, r1.xyxx
mad r0.y, r3.y, r3.w, -r3.x
add r0.y, r0.y, l(1.000000)
mul_sat r0.yzw, r0.yyyy, r2.xxyz
mad r2.xyz, cb3[7].xyzx, r8.xxxx, -r7.xyzx
mad r2.xyz, r3.xxxx, r2.xyzx, r7.xyzx
mad r7.xyz, cb3[8].xyzx, r8.xxxx, -r2.xyzx
mad r2.xyz, r3.zzzz, r7.xyzx, r2.xyzx
dp3 r1.w, r0.yzwy, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r3.yzw, -r2.xxyz, l(0.000000, 0.0356012993, 0.0356012993, 0.0356012993)
mad r2.xyz, r0.xxxx, r3.yzwy, r2.xyzx
mul r3.yzw, r7.wwww, r2.xxyz
mad_sat r2.w, r3.x, cb3[12].w, r2.w
add r3.x, -r2.w, l(0.250000)
mad r2.w, r0.x, r3.x, r2.w
mul r2.w, r7.w, r2.w
mul r3.x, r4.x, r4.x
max r3.x, r3.x, l(0.001000)
min r3.x, r3.x, l(1.000000)
add r4.x, -r3.x, l(1.000000)
mad r3.x, r0.x, r4.x, r3.x
mad r0.x, r0.x, -r4.z, r4.z
dp3_sat r4.x, r1.xyzx, -cb5[48].xyzx
mul r3.yzw, r3.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
add r4.z, -r0.x, l(1.000000)
mul r3.yzw, r3.yyzw, r4.zzzz
mul r2.w, r2.w, l(0.080000)
mad r2.xyz, r2.xyzx, r7.wwww, -r2.wwww
mad r2.xyz, r0.xxxx, r2.xyzx, r2.wwww
dp3_sat r0.x, r1.xyzx, r6.xyzx
mad r4.yzw, r5.xxyz, r4.yyyy, -cb5[48].xxyz
dp3 r2.w, r4.yzwy, r4.yzwy
rsq r2.w, r2.w
mul r4.yzw, r2.wwww, r4.yyzw
dp3 r2.w, r4.yzwy, -cb5[48].xyzx
dp3_sat r1.x, r1.xyzx, r4.yzwy
mul r1.y, r3.x, r3.x
mul r1.x, r1.x, r1.x
mad r1.z, r3.x, r3.x, l(-1.000000)
mad r1.x, r1.x, r1.z, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, l(3.14159274)
div r1.x, r1.y, r1.x
mad r1.y, r3.x, l(0.500000), l(0.500000)
mul r1.z, r4.x, r4.x
mul r1.y, r1.y, r1.y
mad r3.x, -r4.x, r4.x, l(1.000000)
mul r3.x, r1.y, r3.x
max r1.z, r1.z, l(1.000000047E-034)
div r1.z, r3.x, r1.z
add r1.z, r1.z, l(1.000000)
sqrt r1.z, r1.z
add r1.z, r1.z, l(1.000000)
div r1.z, l(2.000000), r1.z
mul r3.x, r0.x, r0.x
mad r0.x, -r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, r1.y
max r1.y, r3.x, l(1.000000047E-034)
div r0.x, r0.x, r1.y
add r0.x, r0.x, l(1.000000)
sqrt r0.x, r0.x
add r0.x, r0.x, l(1.000000)
div r0.x, l(2.000000), r0.x
mul r0.x, r0.x, r1.z
dp3 r1.y, r2.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r1.y, r1.y, l(50.000000)
add r1.z, -r2.w, l(1.000000)
mul r2.w, r1.z, r1.z
mul r2.w, r2.w, r2.w
add r4.yzw, -r2.xxyz, r1.yyyy
mul r4.yzw, r2.wwww, r4.yyzw
mad r2.xyz, r4.yzwy, r1.zzzz, r2.xyzx
mul r0.x, r0.x, r1.x
mul r1.xyz, r2.xyzx, r0.xxxx
mul r1.xyz, r4.xxxx, r1.xyzx
mad r1.xyz, r3.yzwy, r4.xxxx, r1.xyzx
mul r1.xyz, r1.xyzx, cb2[0].xyzx
add r2.xyz, v0.xyzx, -r14.xyzx
dp3 r0.x, r2.xyzx, cb6[33].xyzx
mul r2.xy, v8.xyxx, cb6[37].zzzz
round_ni r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, cb6[17].xyxx
iadd r2.w, cb6[28].z, l(-1)
utof r2.w, r2.w
mul r3.x, r2.w, l(0.031250)
exp r3.x, r3.x
mad r3.x, r3.x, cb6[1].z, cb6[1].w
min r3.y, r0.x, r3.x
add r3.y, r3.y, -cb6[1].w
div r3.y, r3.y, cb6[1].z
log r3.y, r3.y
mul r3.y, r3.y, l(32.000000)
div r2.z, r3.y, r2.w
sample_l_indexable(texture3d)(float,float,float,float) r2.w, r2.xyzx, t6.xyzw, s4, l(0.000000)
mad r4.xyzw, cb6[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r2.xyxy
mov r5.xy, r4.xyxx
mov r5.z, r2.z
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r5.xyzx, t6.xywz, s4, l(0.000000)
add r2.z, r2.z, r2.w
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r2.w, r5.xyzx, t6.xyzw, s4, l(0.000000)
add r2.z, r2.w, r2.z
mad r4.xyzw, cb6[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r2.xyxy
mov r5.xy, r4.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r2.w, r5.xyzx, t6.xyzw, s4, l(0.000000)
add r2.z, r2.w, r2.z
mov r5.xy, r4.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r2.w, r5.xyzx, t6.xyzw, s4, l(0.000000)
add r2.z, r2.w, r2.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xz, r2.xxyx, cb6[0].zzwz
mul r4.xy, r4.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r2.x, r3.x, cb6[0].x
add r2.x, r2.x, l(1.000000)
mov r4.z, -cb6[0].x
mul r3.xyz, r2.xxxx, r4.xyzx
mov r3.w, l(1.000000)
dp4 r4.x, r3.xyzw, cb6[13].xyzw
dp4 r4.y, r3.xyzw, cb6[14].xyzw
dp4 r4.z, r3.xyzw, cb6[15].xyzw
add r2.xyw, -r4.xyxz, cb6[30].xyxz
mul r2.z, r2.z, l(-0.288539022)
exp r2.z, r2.z
dp3 r2.x, r2.xywx, r2.xywx
rsq r2.x, r2.x
mul r2.x, r2.x, r2.w
div r2.x, cb6[31].w, |r2.x|
min r0.x, r0.x, r2.x
mul r2.x, r0.x, cb6[29].w
min r2.x, r2.x, l(1.000000)
add r0.x, r0.x, -cb6[33].w
mul_sat r0.x, r0.x, cb6[32].w
mul r0.x, r0.x, r2.x
mul r0.x, r0.x, cb6[30].w
mul r0.x, r0.x, l(-1.442695)
exp r0.x, r0.x
mul r0.x, r0.x, r2.z
movc r0.x, cb6[37].w, r0.x, l(1.000000)
mul r1.xyz, r1.xyzx, r0.xxxx
mul r1.xyz, r1.xyzx, cb1[176].wwww
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xyz, r1.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
dp3 r2.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
ine r0.x, cb4[6].x, l(-1)
itof r1.x, cb4[6].x
mad r1.x, -r1.x, l(0.00392156886), l(1.000000)
movc r0.x, r0.x, r1.x, l(1.000000)
mul o0.xyzw, r0.xxxx, r2.xyzw
add r0.yzw, r0.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyz, r0.yzwy, r7.wwww
add r0.y, r1.w, l(-1.000000)
mul r2.w, r0.y, r7.w
mad o1.xyzw, r0.xxxx, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ret 
// Approximately 249 instruction slots used