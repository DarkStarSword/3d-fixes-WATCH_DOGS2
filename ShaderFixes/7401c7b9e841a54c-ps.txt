// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7401c7b9e841a54c-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:12:10 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   struct SLightDatas
//   {
//       
//       float4x4 CascadedShadowProjections[4];// Offset:    0
//       float4 CascadedShadowSliceFadeParams;// Offset:  256
//       float4 CascadedBlurKernelMinSizes;// Offset:  272
//       float4 CascadedBlurKernelMaxSizes;// Offset:  288
//       float4 LightCapsuleDivLength;  // Offset:  304
//       float4 LightFadingClipPlanes[8];// Offset:  320
//       float4 LightIESParams;         // Offset:  448
//       float4 LightProjectedVideoUnpack[8];// Offset:  464
//       float4 LightShadowFactor;      // Offset:  592
//       float4 LightShadowMapSize;     // Offset:  608
//       float4x4 LightSpotShadowProjections;// Offset:  624
//       float4x4 LightVolumeTransform; // Offset:  688
//       float3 LightCapsuleMulLength;  // Offset:  752
//       float3 LightDirection;         // Offset:  768
//       float3 LightColor;             // Offset:  784
//       float3 LightPivotPosition;     // Offset:  800
//       float3 LightPosition;          // Offset:  816
//       float2 LightCapsuleParams;     // Offset:  832
//       float2 LightSpotConeFactors;   // Offset:  840
//       float4 LightAttenuation;       // Offset:  848
//       float2 LightSpotShadowAngleFactors;// Offset:  864
//       float LightSpotNearClipFactor; // Offset:  872
//       float CascadedShadowGrazingAngleScale;// Offset:  876
//
//   } LightDatas;                      // Offset:    0 Size:   880
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
// cbuffer MaterialWD2Hair
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 AlphaUVTiling1;             // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 MaskUVTiling1;              // Offset:   48 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   64 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   80 Size:    12
//   float AlphaBlendFadeOutEnd;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12
//   float AlphaBlendFadeOutStart;      // Offset:  108 Size:     4 [unused]
//   float AlphaBlendTransition;        // Offset:  112 Size:     4 [unused]
//   float AlphaBlendValue;             // Offset:  116 Size:     4 [unused]
//   float AlphaTestValue;              // Offset:  120 Size:     4
//   float HairFilterStrength;          // Offset:  124 Size:     4 [unused]
//   float LuminanceAsAlphaMultiplier;  // Offset:  128 Size:     4
//   float MaskChannelUsageBlue;        // Offset:  132 Size:     4 [unused]
//   float MaskChannelUsageGreen;       // Offset:  136 Size:     4 [unused]
//   float MaskChannelUsageRed;         // Offset:  140 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  144 Size:     4 [unused]
//   float Reflectance;                 // Offset:  148 Size:     4
//   float Roughness;                   // Offset:  152 Size:     4
//   float TangentAngle;                // Offset:  156 Size:     4
//   float Translucency;                // Offset:  160 Size:     4
//   int DiffuseColor1BlendingType;     // Offset:  164 Size:     4
//   int HairFilterUVChannel;           // Offset:  168 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  172 Size:     4
//   bool AlphaBlendEnabled;            // Offset:  176 Size:     4 [unused]
//   bool LuminanceAsAlpha;             // Offset:  180 Size:     4
//   bool MirroredMapping;              // Offset:  184 Size:     4
//   bool UseColorMask;                 // Offset:  188 Size:     4
//   bool UseHairFilter;                // Offset:  192 Size:     4 [unused]
//   bool UseHairFilterMask;            // Offset:  196 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48 [unused]
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LightData__LightProjectedTexture__SampObj__    sampler      NA          NA    0        1
// ColorClamp                        sampler      NA          NA    1        1
// ShadowRealSampler               sampler_c      NA          NA    2        1
// MaterialWD2Hair__AlphaTexture1__SampObj__    sampler      NA          NA    3        1
// MaterialWD2Hair__DiffuseTexture1__SampObj__    sampler      NA          NA    4        1
// LightData__LightProjectedTexture__TexObj__    texture  float4          2d    0        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    1        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    2        1
// MaterialWD2Hair__AlphaTexture1__TexObj__    texture  float4          2d    3        1
// MaterialWD2Hair__DiffuseTexture1__TexObj__    texture  float4          2d    4        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
// MaterialWD2Hair                   cbuffer      NA          NA    4        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   x zw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xy  
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[55], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear centroid v0.xzw
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear centroid v3.xyzw
dcl_input_ps linear centroid v4.xyzw
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 19

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7401c7b9e841a54c-ps.txt

mul r12.w, r12.x, r12.y
mul r14.x, r12.w, cb1[9].x
mul r14.y, r12.w, cb1[10].x
mul r14.z, r12.w, cb1[11].x
mul r14.w, r12.w, cb1[12].x
dp4 r15.x, r14.xyzw, cb1[17].xyzw
dp4 r15.y, r14.xyzw, cb1[18].xyzw
dp4 r15.z, r14.xyzw, cb1[19].xyzw
add r13.xyz, cb1[174].xyz, r15.xyz


// WATCH_DOGS2 VFCameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed 7401c7b9e841a54c-ps.txt

mul r12.w, r12.x, r12.y
mul r17.x, r12.w, cb1[9].x
mul r17.y, r12.w, cb1[10].x
mul r17.z, r12.w, cb1[11].x
mul r17.w, r12.w, cb1[12].x
dp4 r18.x, r17.xyzw, cb1[17].xyzw
dp4 r18.y, r17.xyzw, cb1[18].xyzw
dp4 r18.z, r17.xyzw, cb1[19].xyzw
add r16.xyz, cb3[30].xyz, r18.xyz

sample_indexable(texture2d)(float,float,float,float) r0.x, v4.xyxx, t3.xyzw, s3
add r0.y, r0.x, -v2.w
add_sat r0.z, -v2.w, cb4[7].z
div_sat r0.y, r0.y, r0.z
add r0.x, -r0.x, v3.w
add_sat r0.z, v3.w, -cb4[7].z
div_sat r0.x, r0.x, r0.z
mul r0.z, r0.x, r0.y
mad r0.x, r0.y, r0.x, l(-0.050000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
add r0.xyw, -v1.xyxz, r13.xyxz
dp3 r1.x, r0.xywx, r0.xywx
sqrt r1.y, r1.x
mul r1.zw, v5.xxxy, cb3[37].zzzz
round_ni r1.zw, r1.zzzw
mul r2.xy, r1.zwzz, cb3[17].xyxx
iadd r1.z, cb3[28].z, l(-1)
utof r1.z, r1.z
mul r1.w, r1.z, l(0.031250)
exp r1.w, r1.w
mad r1.w, r1.w, cb3[1].z, cb3[1].w
min r2.w, r1.w, r1.y
add r2.w, r2.w, -cb3[1].w
div r2.w, r2.w, cb3[1].z
log r2.w, r2.w
mul r2.w, r2.w, l(32.000000)
div r2.z, r2.w, r1.z
sample_l_indexable(texture3d)(float,float,float,float) r1.z, r2.xyzx, t2.xywz, s1, l(0.000000)
mad r3.xyzw, cb3[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r2.xyxy
mov r4.xy, r3.xyxx
mov r4.z, r2.z
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r4.xyzx, t2.xywz, s1, l(0.000000)
add r1.z, r1.z, r2.z
mov r4.xy, r3.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r4.xyzx, t2.xywz, s1, l(0.000000)
add r1.z, r1.z, r2.z
mad r3.xyzw, cb3[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r2.xyxy
mov r4.xy, r3.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r4.xyzx, t2.xywz, s1, l(0.000000)
add r1.z, r1.z, r2.z
mov r4.xy, r3.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r4.xyzx, t2.xywz, s1, l(0.000000)
add r1.z, r1.z, r2.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xz, r2.xxyx, cb3[0].zzwz
mul r2.xy, r3.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r1.w, r1.w, cb3[0].x
add r1.w, r1.w, l(1.000000)
mov r2.z, -cb3[0].x
mul r2.xyz, r1.wwww, r2.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb3[13].xyzw
dp4 r3.y, r2.xyzw, cb3[14].xyzw
dp4 r3.z, r2.xyzw, cb3[15].xyzw
add r2.xyz, -r3.xyzx, r16.xyzx
mul r1.z, r1.z, l(-0.288539022)
exp r1.z, r1.z
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r1.w, r1.w, r2.z
div r1.w, cb3[31].w, |r1.w|
min r1.y, r1.w, r1.y
mul r1.w, r1.y, cb3[29].w
min r1.w, r1.w, l(1.000000)
add r1.y, r1.y, -cb3[33].w
mul_sat r1.y, r1.y, cb3[32].w
mul r1.y, r1.y, r1.w
mul r1.y, r1.y, cb3[30].w
mul r1.y, r1.y, l(-1.442695)
exp r1.y, r1.y
mul r1.y, r1.y, r1.z
movc r1.y, cb3[37].w, r1.y, l(1.000000)
dp4 r2.x, v1.xyzw, cb2[39].xyzw
dp4 r2.y, v1.xyzw, cb2[40].xyzw
dp4 r2.z, v1.xyzw, cb2[42].xyzw
div r3.xyz, r2.xyzx, r2.zzzz
sample_indexable(texture2d)(float,float,float,float) r3.xyw, r3.xyxx, t0.xywz, s0
dp4 r2.w, v1.xyzw, cb2[41].xyzw
div r2.xyz, r2.xywx, r2.zzzz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s2, r2.z
mad r4.xyz, cb2[38].zwwz, l(-1.000000, -1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
mad r1.z, r1.z, l(4.000000), r1.w
mad r4.xyz, cb2[38].zwwz, l(1.000000, -1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
add r1.z, r1.w, r1.z
mad r4.xyz, cb2[38].zwwz, l(1.000000, 1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
add r1.z, r1.w, r1.z
mad r4.xyz, cb2[38].zwwz, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
add r1.z, r1.w, r1.z
mad r4.xyz, cb2[38].zwwz, l(-1.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
mad r1.z, r1.w, l(2.000000), r1.z
mad r4.xyz, cb2[38].zwwz, l(1.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
mad r1.z, r1.w, l(2.000000), r1.z
mad r4.xyz, cb2[38].zwwz, l(0.000000, -1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s2, r4.z
mad r1.z, r1.w, l(2.000000), r1.z
mad r2.xyz, cb2[38].zwwz, l(0.000000, 1.000000, 0.000000, 0.000000), r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s2, r2.z
mad r1.z, r1.w, l(2.000000), r1.z
add r2.xyz, v1.xyzx, -cb2[51].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, cb2[48].xyzx
mad_sat r1.w, r1.w, cb2[54].x, cb2[54].y
mad r1.z, r1.z, l(0.062500), r1.w
min r1.z, r1.z, l(1.000000)
mul r1.z, r1.z, r1.z
mad r1.z, r1.z, cb2[37].x, cb2[37].y
lt r1.w, l(0.000000), r1.z
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, v4.zwzz, t4.xyzw, s4
  dp3 r1.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mul_sat r1.w, r1.w, cb4[8].x
  movc r1.w, cb4[11].y, r1.w, l(1.000000)
  add r4.xyz, -cb4[5].xyzx, cb4[6].xyzx
  mad r4.xyz, v0.xxxx, r4.xyzx, cb4[5].xyzx
  movc r4.xyz, cb4[11].wwww, r4.xyzx, cb4[5].xyzx
  ieq r2.w, cb4[10].y, l(1)
  add r5.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r5.xyz, -r5.xyzx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r4.xyz, r2.xyzx, r4.xyzx
  ge r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
  and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  mad r6.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r5.xyzx
  mad r2.xyz, r2.xyzx, r6.xyzx, r5.xyzx
  movc r2.xyz, r2.wwww, r2.xyzx, r4.xyzx
  dp3 r2.w, v2.xyzx, v2.xyzx
  rsq r2.w, r2.w
  mul r4.xyz, r2.wwww, v2.xyzx
  movc r4.xyz, v6.xxxx, r4.xyzx, -r4.xyzx
  deriv_rtx_coarse r5.xy, v4.zwzz
  deriv_rty_coarse r5.zw, v4.zzzw
  dp2 r2.w, r5.xzxx, r5.xzxx
  rsq r2.w, r2.w
  mul r5.xz, r2.wwww, r5.xxzx
  dp2 r2.w, r5.ywyy, r5.ywyy
  rsq r2.w, r2.w
  mul r5.yw, r2.wwww, r5.wwwy
  mul r2.w, r5.w, r5.z
  mad r2.w, r5.x, r5.y, -r2.w
  lt r4.w, l(0.000000), r2.w
  lt r2.w, r2.w, l(0.000000)
  iadd r2.w, -r4.w, r2.w
  itof r2.w, r2.w
  movc r2.w, cb4[11].z, r2.w, l(1.000000)
  lt r4.w, r4.z, l(0.900000)
  movc r5.xyz, r4.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
  mul r6.xyz, r4.zxyz, r5.xyzx
  mad r5.xyz, r4.yzxy, r5.yzxy, -r6.xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  rsq r4.w, r4.w
  mul r5.xyz, r4.wwww, r5.xyzx
  mul r6.xyz, r4.zxyz, r5.yzxy
  mad r6.xyz, r4.yzxy, r5.zxyz, -r6.xyzx
  dp3 r4.w, r6.xyzx, r6.xyzx
  rsq r4.w, r4.w
  mul r6.xyz, r4.wwww, r6.xyzx
  mul r7.xyz, r2.wwww, v3.xyzx
  dp3 r2.w, r7.xyzx, r5.xyzx
  dp3 r4.w, r7.xyzx, r6.xyzx
  min r5.w, |r2.w|, |r4.w|
  max r6.w, |r2.w|, |r4.w|
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r5.w, r5.w, r6.w
  mul r6.w, r5.w, r5.w
  mad r7.x, r6.w, l(0.0208350997), l(-0.085133)
  mad r7.x, r6.w, r7.x, l(0.180141)
  mad r7.x, r6.w, r7.x, l(-0.330299497)
  mad r6.w, r6.w, r7.x, l(0.999866)
  mul r7.x, r5.w, r6.w
  lt r7.y, |r4.w|, |r2.w|
  mad r7.x, r7.x, l(-2.000000), l(1.57079637)
  and r7.x, r7.y, r7.x
  mad r5.w, r5.w, r6.w, r7.x
  lt r6.w, r4.w, -r4.w
  and r6.w, r6.w, l(0xc0490fdb)
  add r5.w, r5.w, r6.w
  min r6.w, r2.w, r4.w
  max r2.w, r2.w, r4.w
  lt r4.w, r6.w, -r6.w
  ge r2.w, r2.w, -r2.w
  and r2.w, r2.w, r4.w
  movc r2.w, r2.w, -r5.w, r5.w
  mad r2.w, r2.w, l(0.318309873), cb4[9].w
  add r7.xy, r2.wwww, l(0.500000, 1.500000, 0.000000, 0.000000)
  mul r2.w, r7.y, l(0.500000)
  round_ni r2.w, r2.w
  mad r2.w, -r2.w, l(2.000000), r7.x
  mad r2.w, r2.w, l(0.500000), l(0.500000)
  mul r4.w, v0.z, cb4[10].x
  dp3 r5.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  add r6.w, -r1.w, l(1.000000)
  mad r1.w, r5.w, r6.w, r1.w
  mul r1.w, r1.w, v0.w
  add_sat r5.w, cb0[3].w, cb5[5].z
  add r6.w, cb0[3].x, -cb5[5].x
  mad r5.w, r5.w, r6.w, cb5[5].x
  iadd r6.w, cb4[10].w, l(1)
  ult r6.w, r6.w, l(1)
  movc r6.w, r6.w, l(0), l(21)
  add r7.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb0[r6.w + 4].xyxx
  mad r7.xy, r5.wwww, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r7.xxxx
  mul r5.w, r7.y, cb4[9].z
  mul r2.xyz, r1.wwww, r2.xyzx
  mul r5.w, r5.w, r5.w
  max r5.w, r5.w, l(0.001000)
  mad r2.w, r2.w, l(2.000000), l(-1.000000)
  mul r2.w, r2.w, l(3.14159274)
  sincos r7.x, r8.x, r2.w
  mul r5.xyz, r5.xyzx, r7.xxxx
  mad r5.xyz, r6.xyzx, r8.xxxx, r5.xyzx
  rsq r1.x, r1.x
  mul r0.xyw, r0.xyxw, r1.xxxx
  add r6.xyz, -v1.xyzx, cb2[51].xyzx
  dp3 r1.x, r6.xyzx, r6.xyzx
  rsq r1.x, r1.x
  mul r7.xyz, r1.xxxx, r6.xyzx
  add r8.xyz, -v1.xyzx, cb2[50].xyzx
  dp3 r2.w, r7.xyzx, cb2[48].xyzx
  mul r3.xyw, r3.xyxw, cb2[49].xyxz
  lt r3.z, r3.z, l(0.000000)
  movc r3.xyz, r3.zzzz, l(0,0,0,0), r3.xywx
  mad_sat r2.w, -r2.w, cb2[52].z, cb2[52].w
  mul r3.xyz, r2.wwww, r3.xyzx
  dp3 r2.w, r8.xyzx, r8.xyzx
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r2.w, r2.w, cb2[53].y
  mad r2.w, -r2.w, r2.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r3.w
  min r2.w, r2.w, cb2[53].w
  mul r3.xyz, |r2.wwww|, r3.xyzx
  dp3 r2.w, r4.xyzx, r7.xyzx
  mov_sat r3.w, r2.w
  dp3 r6.w, r5.xyzx, r7.xyzx
  mad r6.w, -r6.w, r6.w, l(1.000000)
  sqrt r6.w, r6.w
  mul r8.xyz, r2.xyzx, r6.wwww
  mul r8.xyz, r8.xyzx, l(0.159154937, 0.159154937, 0.159154937, 0.000000)
  mad r7.w, -v0.z, cb4[10].x, l(1.000000)
  mul r8.xyz, r7.wwww, r8.xyzx
  dp3_sat r7.w, r2.xyzx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
  mad r7.w, r7.w, l(1.66666663), l(1.33333337)
  mul r9.xyz, r5.wwww, r5.xyzx
  mad r9.xyz, r9.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r4.xyzx
  div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  dp3 r8.w, -r7.xyzx, r9.xyzx
  mul r9.w, r7.w, r7.w
  mad r10.x, -r8.w, r8.w, l(1.000000)
  mad r10.x, -r9.w, r10.x, l(1.000000)
  sqrt r10.y, r10.x
  mad r8.w, r7.w, r8.w, -r10.y
  mul r10.yzw, r9.xxyz, r8.wwww
  mad r10.yzw, r7.wwww, r7.xxyz, r10.yyzw
  lt r8.w, l(0.000000), r10.x
  and r8.w, r8.w, l(0x3f800000)
  mul r11.xyz, r8.wwww, r10.yzwy
  dp3 r10.x, -r0.xywx, r9.xyzx
  mad r11.w, -r10.x, r10.x, l(1.000000)
  mad r9.w, -r9.w, r11.w, l(1.000000)
  sqrt r11.w, r9.w
  mad r10.x, r7.w, r10.x, -r11.w
  mul r9.xyz, r9.xyzx, r10.xxxx
  mad r9.xyz, r7.wwww, r0.xywx, r9.xyzx
  lt r7.w, l(0.000000), r9.w
  and r7.w, r7.w, l(0x3f800000)
  mul r9.xyz, r7.wwww, r9.xyzx
  mad r6.xyz, r6.xyzx, r1.xxxx, r0.xywx
  dp3 r1.x, r6.xyzx, r6.xyzx
  rsq r1.x, r1.x
  mul r6.xyz, r1.xxxx, r6.xyzx
  dp3_sat r0.x, r4.xyzx, r0.xywx
  dp3_sat r0.y, r4.xyzx, r6.xyzx
  dp3_sat r0.w, r6.xyzx, r7.xyzx
  dp3 r1.x, r6.xyzx, r5.xyzx
  mul r7.xyz, r4.yzxy, r5.zxyz
  mad r7.xyz, r5.yzxy, r4.zxyz, -r7.xyzx
  dp3 r7.w, r7.xyzx, r7.xyzx
  rsq r7.w, r7.w
  mul r7.xyz, r7.wwww, r7.xyzx
  dp3 r6.x, r6.xyzx, r7.xyzx
  mul r6.y, cb4[9].y, l(0.080000)
  dp3 r6.z, r6.yyyy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
  mul_sat r6.z, r6.z, l(50.000000)
  add r0.w, -r0.w, l(1.000000)
  mul r7.w, r0.w, r0.w
  mul r7.w, r7.w, r7.w
  mad r6.z, -cb4[9].y, l(0.080000), r6.z
  mul r7.w, r7.w, r6.z
  mad r0.w, r7.w, r0.w, r6.y
  mul r7.w, r5.w, r5.w
  mul r1.x, r1.x, r1.x
  div r1.x, r1.x, r7.w
  mad r1.x, r6.x, r6.x, r1.x
  mad r0.y, r0.y, r0.y, r1.x
  mul r1.x, r5.w, l(3.14159274)
  mul r0.y, r0.y, r0.y
  mul r0.y, r1.x, r0.y
  div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  mul r5.w, r3.w, r3.w
  mad r6.x, -r3.w, r3.w, l(1.000000)
  mul r6.x, r6.x, r7.w
  max r5.w, r5.w, l(1.000000047E-034)
  div r5.w, r6.x, r5.w
  add r5.w, r5.w, l(1.000000)
  sqrt r5.w, r5.w
  add r5.w, r5.w, l(1.000000)
  div r5.w, l(2.000000), r5.w
  mul r6.x, r0.x, r0.x
  mad r0.x, -r0.x, r0.x, l(1.000000)
  mul r0.x, r0.x, r7.w
  max r6.x, r6.x, l(1.000000047E-034)
  div r0.x, r0.x, r6.x
  add r0.x, r0.x, l(1.000000)
  sqrt r0.x, r0.x
  add r0.x, r0.x, l(1.000000)
  div r0.x, l(2.000000), r0.x
  mul r0.x, r0.x, r5.w
  mul r0.x, r0.x, r0.y
  mul_sat r0.x, r0.w, r0.x
  mul r0.x, r1.w, r0.x
  mul r0.y, r0.x, l(0.250000)
  mad r10.xyz, -r10.yzwy, r8.wwww, -r9.xyzx
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r0.w, r0.w
  mul r10.xyz, r0.wwww, r10.xyzx
  dp3_sat r0.w, r4.xyzx, -r11.xyzx
  dp3_sat r1.w, r4.xyzx, -r9.xyzx
  dp3_sat r4.x, r4.xyzx, r10.xyzx
  dp3_sat r4.y, r10.xyzx, -r11.xyzx
  dp3 r4.z, r10.xyzx, r5.xyzx
  dp3 r5.x, r10.xyzx, r7.xyzx
  add r4.y, -r4.y, l(1.000000)
  mul r5.y, r4.y, r4.y
  mul r5.y, r5.y, r5.y
  mul r5.y, r5.y, r6.z
  mad r4.y, r5.y, r4.y, r6.y
  mul r4.z, r4.z, r4.z
  div r4.z, r4.z, r7.w
  mad r4.z, r5.x, r5.x, r4.z
  mad r4.x, r4.x, r4.x, r4.z
  mul r4.x, r4.x, r4.x
  mul r1.x, r1.x, r4.x
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  mul r4.x, r0.w, r0.w
  mad r0.w, -r0.w, r0.w, l(1.000000)
  mul r0.w, r0.w, r7.w
  max r4.x, r4.x, l(1.000000047E-034)
  div r0.w, r0.w, r4.x
  add r0.w, r0.w, l(1.000000)
  sqrt r0.w, r0.w
  add r0.w, r0.w, l(1.000000)
  div r0.w, l(2.000000), r0.w
  mul r4.x, r1.w, r1.w
  mad r1.w, -r1.w, r1.w, l(1.000000)
  mul r1.w, r1.w, r7.w
  max r4.x, r4.x, l(1.000000047E-034)
  div r1.w, r1.w, r4.x
  add r1.w, r1.w, l(1.000000)
  sqrt r1.w, r1.w
  add r1.w, r1.w, l(1.000000)
  div r1.w, l(2.000000), r1.w
  mul r0.w, r0.w, r1.w
  mul r0.w, r0.w, r1.x
  mul_sat r0.w, r4.y, r0.w
  sqrt r4.xyz, r2.xyzx
  mad r0.x, -r0.x, l(0.250000), r0.w
  mad r0.xyw, r4.xyxz, r0.xxxx, r0.yyyy
  mul r1.x, r4.w, l(-1.500000)
  mad r1.w, -r4.w, l(-1.500000), r2.w
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), -r1.x
  mul_sat r1.x, r1.x, r1.w
  mad r1.w, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.w
  mul r2.xyz, r1.xxxx, r2.xyzx
  mul r2.xyz, r6.wwww, r2.xyzx
  mul r2.xyz, r4.wwww, r2.xyzx
  mul r0.xyw, r3.wwww, r0.xyxw
  mad r0.xyw, r8.xyxz, r3.wwww, r0.xyxw
  mad r0.xyw, r2.xyxz, l(0.0795774683, 0.0795774683, 0.000000, 0.0795774683), r0.xyxw
  mul r0.xyw, r1.zzzz, r0.xyxw
  mul r0.xyw, r0.xyxw, r3.xyxz
else 
  mov r0.xyw, l(0,0,0,0)
endif 
mul r0.xyw, r1.yyyy, r0.xyxw
mul r0.xyw, r0.xyxw, cb1[176].wwww
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xywx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r0.z
ret 
// Approximately 403 instruction slots used