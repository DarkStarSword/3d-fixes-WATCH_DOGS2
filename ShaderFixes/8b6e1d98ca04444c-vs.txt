// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 8b6e1d98ca04444c-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:14:14 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16 [unused]
//   float4 UVDecompression;            // Offset:   32 Size:    16 [unused]
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12 [unused]
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstancePart
// {
//
//   float4x3 WorldMatrix;              // Offset:    0 Size:    48
//
// }
//
// cbuffer MaterialWD2Emissive
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 LightIntensityCurveSel;     // Offset:   16 Size:    16
//   float4 VideoTexture1Unpack[8];     // Offset:   32 Size:   128 [unused]
//   float3 DiffuseColor1;              // Offset:  160 Size:    12
//   float IntensityOffsetInEV;         // Offset:  172 Size:     4
//   float3 DiffuseTextureRemap;        // Offset:  176 Size:    12 [unused]
//   float InverseNormalAttenuation;    // Offset:  188 Size:     4
//   float3 Intensity;                  // Offset:  192 Size:    12
//   float NormalAttenuationPower;      // Offset:  204 Size:     4
//   float3 LightOffColor;              // Offset:  208 Size:    12 [unused]
//   float Reflectance;                 // Offset:  220 Size:     4 [unused]
//   float2 DiffuseTiling1;             // Offset:  224 Size:     8 [unused]
//   float Roughness;                   // Offset:  232 Size:     4 [unused]
//   float Translucency;                // Offset:  236 Size:     4 [unused]
//   float2 FadeoutParams;              // Offset:  240 Size:     8
//   int AnimType;                      // Offset:  248 Size:     4 [unused]
//   int DiffuseUV1;                    // Offset:  252 Size:     4 [unused]
//   float2 UVSpeed;                    // Offset:  256 Size:     8 [unused]
//   int NbFrames;                      // Offset:  264 Size:     4 [unused]
//   bool AffectsGI;                    // Offset:  268 Size:     4 [unused]
//   bool AlphaTestEnabled;             // Offset:  272 Size:     4 [unused]
//   bool IsAffectedByTimeOfDay;        // Offset:  276 Size:     4 [unused]
//   bool NeedsElectricPower;           // Offset:  280 Size:     4 [unused]
//   bool PreMultiplyEmissiveByDiffuseAlpha;// Offset:  284 Size:     4 [unused]
//   bool UseDiffuseTexture;            // Offset:  288 Size:     4 [unused]
//   bool UseVertexColor;               // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer PreviousWorldTransform
// {
//
//   float4x3 PreviousWorldMatrix;      // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// SceneGraphicObjectInstancePart    cbuffer      NA          NA    3        1
// MaterialWD2Emissive               cbuffer      NA          NA    4        1
// PreviousWorldTransform            cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xyzw        1     NONE     int       
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_constantbuffer cb1[180], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[16], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output_siv o4.xyzw, position
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.x, cb3[0].w
mov r0.y, cb3[1].w
mul r1.xy, r0.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
round_ni r1.xy, r1.xyxx
dp2 r0.w, r1.xyxx, l(17.122999, 23.455999, 0.000000, 0.000000)
mul r1.x, r0.w, l(0.200000)
round_z r1.x, r1.x
mad r0.w, r0.w, l(0.200000), -r1.x
mul r0.w, |r0.w|, l(127.000000)
dp4 r1.x, cb0[2].xyzw, cb4[1].xyzw
mad_sat r0.w, r1.x, l(128.000000), -r0.w
lt r0.w, r0.w, l(0.500000)
movc r0.w, r0.w, l(0), l(1.000000)
mov r0.z, cb3[2].w
add r0.xyz, -r0.xyzx, cb1[174].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.x, r0.x, -cb4[15].x
add r0.y, -cb4[15].x, cb4[15].y
max r0.y, r0.y, l(0.000010)
div_sat r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.y, cb4[12].y, l(0.000100)
exp r0.z, cb4[10].w
div r0.y, r0.z, r0.y
div r0.y, r0.y, cb1[179].w
add r0.y, r0.y, cb4[12].z
mul r0.x, r0.y, r0.x
mul r1.xyz, r0.xxxx, cb4[10].xyzx
mov r1.w, l(1.000000)
itof r0.xyz, v0.xyzx
mad r2.xyz, r0.xyzx, cb2[3].yyyy, cb2[3].xxxx
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb3[0].xyzw
dp4 r0.y, r2.xyzw, cb3[1].xyzw
dp4 r0.z, r2.xyzw, cb3[2].xyzw
add r3.xyz, -r0.xyzx, cb1[174].xyzx
add r0.xyz, r0.xyzx, -cb1[174].xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mad r4.xyz, v2.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.x, r4.xyzx, cb3[0].xyzx
dp3 r5.y, r4.xyzx, cb3[1].xyzx
dp3 r5.z, r4.xyzx, cb3[2].xyzx
dp3 r3.x, r5.xyzx, r3.xyzx
mov o1.xyz, r5.xyzx
add r3.x, -|r3.x|, cb4[11].w
log r3.x, |r3.x|
mul r3.x, r3.x, cb4[12].w
exp r3.x, r3.x
mul r1.xyzw, r1.xyzw, r3.xxxx
mul o0.xyzw, r0.wwww, r1.xyzw
dp3 o1.w, r0.xyzx, cb1[173].xyzx
mul r1.x, r0.y, cb1[58].y
mul r1.y, r0.y, cb1[59].y
mul r1.z, r0.y, cb1[60].y
mul r1.w, r0.y, cb1[61].y
mad r3.x, r0.z, cb1[58].z, cb1[58].w
mad r3.y, r0.z, cb1[59].z, cb1[59].w
mad r3.z, r0.z, cb1[60].z, cb1[60].w
mad r3.w, r0.z, cb1[61].z, cb1[61].w
add r1.xyzw, r1.xyzw, r3.xyzw
mul r3.x, r0.x, cb1[58].x
mul r3.y, r0.x, cb1[59].x
mul r3.z, r0.x, cb1[60].x
mul r3.w, r0.x, cb1[61].x
add r0.xyzw, r1.xyzw, r3.xyzw

// Relocated to here with asmtool.py
mov o4.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 8b6e1d98ca04444c-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mul o2.xyz, r0.xywx, l(0.500000, -0.500000, 1.000000, 0.000000)

// mov o4.xyzw, r0.xyzw // Relocated from here with asmtool.py

dp4 r0.x, r2.xyzw, cb5[0].xyzw
dp4 r0.y, r2.xyzw, cb5[1].xyzw
dp4 r0.z, r2.xyzw, cb5[2].xyzw
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[20].xyzw
dp4 r1.y, r0.xyzw, cb1[21].xyzw
dp4 o3.z, r0.xyzw, cb1[23].xyzw
mul o3.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
ret 
// Approximately 81 instruction slots used