// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed 75cebdb42dcc5639-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.52 on Wed Jan 25 06:38:24 2017
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4 [unused]
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SceneGeometry
// {
//
//   float4 GeometryPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 GeometryUserData;           // Offset:   16 Size:    16
//   float4 UVDecompression;            // Offset:   32 Size:    16
//   
//   struct SMeshDecompression
//   {
//       
//       float positionMin;             // Offset:   48
//       float positionRange;           // Offset:   52
//       float meshLocalHeight;         // Offset:   56
//       float isBuildingFacadeInterior;// Offset:   60
//
//   } MeshDecompression;               // Offset:   48 Size:    16
//   float3 GeometryBBoxMax;            // Offset:   64 Size:    12
//   float3 GeometryBBoxMin;            // Offset:   80 Size:    12
//
// }
//
// cbuffer MaterialWD2Building
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 ColorizeParams;             // Offset:   16 Size:    16 [unused]
//   float4 FakeInteriorTextureSize;    // Offset:   32 Size:    16
//   float4 LightIntensityCurveSel;     // Offset:   48 Size:    16
//   float4 WindowLightMaskTexture1Size;// Offset:   64 Size:    16
//   float3 DiffuseColor1;              // Offset:   80 Size:    12 [unused]
//   float AmountOfUnlitWindows;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12 [unused]
//   float FakeInteriorPerBuildingRandom;// Offset:  108 Size:     4 [unused]
//   float3 DiffuseColor3;              // Offset:  112 Size:    12 [unused]
//   float FakeInteriorRandomUvOffset;  // Offset:  124 Size:     4
//   float3 DiffuseColorWindow;         // Offset:  128 Size:    12 [unused]
//   float FakeInteriorRotationAngle;   // Offset:  140 Size:     4
//   float3 FakeCeilingIntensity;       // Offset:  144 Size:    12 [unused]
//   float FakeInteriorTiling;          // Offset:  156 Size:     4 [unused]
//   float3 FakeCeilingLightIntensity;  // Offset:  160 Size:    12 [unused]
//   float GrungeOpacity;               // Offset:  172 Size:     4
//   float3 FakeFloorIntensity;         // Offset:  176 Size:    12 [unused]
//   float MaskChannelUsageAlpha;       // Offset:  188 Size:     4 [unused]
//   float3 FakeInteriorHeightParams;   // Offset:  192 Size:    12
//   float MaskChannelUsageBlue;        // Offset:  204 Size:     4 [unused]
//   float3 RoundedCornersParameters;   // Offset:  208 Size:    12 [unused]
//   float MaskChannelUsageGreen;       // Offset:  220 Size:     4 [unused]
//   float3 WindowLightIntensity;       // Offset:  224 Size:    12 [unused]
//   float MaskChannelUsageRed;         // Offset:  236 Size:     4 [unused]
//   float2 DiffuseTextureTiling2;      // Offset:  240 Size:     8 [unused]
//   float Metalness;                   // Offset:  248 Size:     4 [unused]
//   float NormalIntensity;             // Offset:  252 Size:     4 [unused]
//   float2 FakeCeilingFadeDistance;    // Offset:  256 Size:     8 [unused]
//   float Reflectance;                 // Offset:  264 Size:     4 [unused]
//   float ReflectionRoughnessBias;     // Offset:  268 Size:     4 [unused]
//   float2 FakeFloorFadeDistance;      // Offset:  272 Size:     8 [unused]
//   float Roughness;                   // Offset:  280 Size:     4 [unused]
//   float WindowMetalness;             // Offset:  284 Size:     4 [unused]
//   float2 FakeInteriorSpacing;        // Offset:  288 Size:     8
//   int DiffuseTexture2ArrayIndex;     // Offset:  296 Size:     4 [unused]
//   int FakeInteriorTextureIndex;      // Offset:  300 Size:     4
//   float2 GrungeTiling;               // Offset:  304 Size:     8
//   int GrungeTextureArrayIndex;       // Offset:  312 Size:     4 [unused]
//   int WindowLightMaskTextureArrayIndex;// Offset:  316 Size:     4 [unused]
//   float2 ManualOffsetUV;             // Offset:  320 Size:     8
//   bool Colorize;                     // Offset:  328 Size:     4 [unused]
//   bool FakeInteriorUseRandomRotation;// Offset:  332 Size:     4
//   float2 WindowLightMaskWindowsCount;// Offset:  336 Size:     8
//   bool FakeInteriorUseRandomTexture; // Offset:  344 Size:     4
//   bool GrungeNewMode;                // Offset:  348 Size:     4 [unused]
//   bool StaticMeshWindowLightSpecialMode;// Offset:  352 Size:     4 [unused]
//   bool WindowDressingParallax;       // Offset:  356 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// MaterialWD2Building__WindowLightVariationTexture__SampObj__    sampler      NA          NA    0        1
// MaterialWD2Building__WindowLightVariationTexture__TexObj__    texture  float4          2d    0        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SceneGeometry                     cbuffer      NA          NA    2        1
// MaterialWD2Building               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 2   xy          1     NONE     int   xy  
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    1   xyzw        3     NONE   float       
// texcoord                 1   xyzw        4     NONE   float       
// texcoord                 0   xyzw        5     NONE   float       
// texcoord                 4   xyzw        6     NONE   float   xyzw
// texcoord                 5   xyzw        7     NONE   float   xyzw
// texcoord                 6   xyzw        8     NONE   float   xyzw
// texcoord                 7   xyzw        9     NONE     int   xyzw
// texcoord                 8   xyzw       10     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xy          8     NONE   float   xy  
// TEXCOORD                 9   x           9     NONE   float   x   
// SV_Position              0   xyzw       10      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[181], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_input v8.xyzw
dcl_input v9.xyzw
dcl_input v10.z
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xy
dcl_output o9.x
dcl_output_siv o10.xyzw, position
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 CameraPosition adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-camera-pos-excluding=1 -i -f --only-autofixed 75cebdb42dcc5639-vs.txt

mul r7.w, r7.x, r7.y
mul r9.x, r7.w, cb1[9].x
mul r9.y, r7.w, cb1[10].x
mul r9.z, r7.w, cb1[11].x
mul r9.w, r7.w, cb1[12].x
dp4 r10.x, r9.xyzw, cb1[17].xyzw
dp4 r10.y, r9.xyzw, cb1[18].xyzw
dp4 r10.z, r9.xyzw, cb1[19].xyzw
add r8.xyz, cb1[174].xyz, r10.xyz

mov o0.w, cb3[10].w
mad r0.xyz, v2.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, v6.xyzx
dp3 r1.y, r0.xyzx, v7.xyzx
dp3 r1.z, r0.xyzx, v8.xyzx
mov o0.xyz, r1.xyzx
add r0.x, |r1.z|, l(0.200000)
min r0.x, r0.x, l(1.000000)
mov r2.xyz, v6.xyzx
itof r3.xyzw, v9.xyzw
mad r0.y, r3.w, l(0.00781273842), l(256.000000)
itof r4.xyz, v0.xyzx
mad r4.xyz, r4.xyzx, cb2[3].yyyy, cb2[3].xxxx
mul r5.xyz, r0.yyyy, r4.xyzx
mov r6.x, v6.w
mov r6.y, v7.w
mov r6.z, v8.w
add r0.yzw, r3.xxyz, r6.xxyz
mov r2.w, r0.y
mov r5.w, l(1.000000)
dp4 r2.x, r5.xyzw, r2.xyzw
mov r3.xyz, v8.xyzx
mov r3.w, r0.w
dp4 r2.z, r5.xyzw, r3.xyzw
mov r3.w, r0.z
mov r3.xyz, v7.xyzx
dp4 r2.y, r5.xyzw, r3.xyzw
add r3.xyz, r2.xyzx, -cb1[174].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, l(0.020000)
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, l(4.000000)
mul o1.w, r0.x, r1.w
mov r5.w, l(1.000000)
mad r5.xyz, r1.xyzx, l(0.300000, 0.300000, 0.220000, 0.000000), r2.xyzx
dp4 o1.x, r5.xyzw, cb1[29].xyzw
dp4 o1.y, r5.xyzw, cb1[30].xyzw
dp4 o1.z, r5.xyzw, cb1[31].xyzw
add r0.x, r4.z, -cb2[5].z
mad r1.w, r2.z, l(0.250000), l(1.000000)
mad r0.x, r0.x, cb2[1].y, r1.w
mul r0.x, r0.x, l(0.062500)
round_ni r0.x, r0.x
min r0.x, r0.x, l(6.000000)
mad r0.x, v10.z, l(7.000000), -r0.x
mul_sat o2.w, r0.x, l(4.000000)
mov r4.x, cb2[5].z
mov r4.y, cb2[4].z
dp2 r0.x, cb3[12].yzyy, r4.xyxx
add r0.x, r0.x, cb3[12].x
add r1.w, -r0.x, r4.z
mul r1.w, r1.w, cb3[18].y
round_pi r1.w, r1.w
mad r0.x, r1.w, cb3[18].x, r0.x
add r0.x, r0.w, r0.x
round_pi r1.w, r0.x
sincos r1.w, null, r1.w
mul r1.w, r1.w, l(43758.546875)
frc r1.w, r1.w
add r3.w, r1.w, l(-0.500000)
mul r3.w, r3.w, cb3[7].w
mul r4.x, r1.w, l(4.000000)
mul r1.w, r1.w, cb3[2].z
round_ni r1.w, r1.w
round_ni r4.x, r4.x
mul r4.x, r4.x, l(0.250000)
movc r4.x, cb3[20].w, r4.x, cb3[8].w
mul r4.x, r4.x, l(6.28318548)
sincos r4.x, r5.x, r4.x
mov r6.x, -r5.x
mov r6.y, r4.x
mov r6.z, r5.x
dp2 r4.x, r2.yxyy, r6.xyxx
mad r4.x, r3.w, l(0.890000), r4.x
dp2 r4.z, r2.yxyy, r6.yzyy
mad r4.y, r3.w, l(1.120000), r4.z
mov o2.xy, r4.xyxx
mov o2.z, r2.z
dp2 r4.z, r8.yxyy, r6.xyxx
dp2 r5.x, -r1.yxyy, r6.xyxx
mad o3.x, r3.w, l(0.890000), r4.z
dp2 r4.z, r8.yxyy, r6.yzyy
dp2 r5.y, -r1.yxyy, r6.yzyy
mad o3.y, r3.w, l(1.120000), r4.z
dp4 o3.w, cb0[2].xyzw, cb3[3].xyzw
mov o3.z, r8.z
mov o4.xy, r5.xyxx
dp2 r3.w, r4.xyxx, r5.xyxx
mov o4.z, -r3.w
add r4.xyz, -r2.xyzx, r8.xyzx
dp3 r3.w, r4.xyzx, r4.xyzx
sqrt r4.w, r3.w
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r3.w, r1.xyzx, r4.xyzx
mad r3.w, r3.w, r3.w, l(-1.000000)
add r4.x, r4.w, l(-115.000000)
mul_sat r4.x, r4.x, l(0.040000)
add r4.x, -r4.x, l(1.000000)
mad o4.w, r4.x, r3.w, l(1.000000)
mov r4.x, v6.x
mov r4.y, v7.x
mov r4.z, v8.x
mad r4.xyz, r4.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
round_ni r4.xyz, r4.xyzx
mul r4.xyz, r4.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
dp3 r3.w, r4.xyzx, r4.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r3.w, r1.xyzx, r4.xyzx
lt r5.xyzw, |r1.yzxz|, |r1.xxyy|
lt r1.x, l(0.250000), |r1.z|
and r1.yz, r5.yywy, r5.xxzx
lt r3.w, l(0.600000), |r3.w|
movc r4.xy, r3.wwww, -r4.yxyy, r4.xyxx
dp3 r4.z, r2.xyzx, -r4.xyzx
mov r4.w, -r2.z
movc r4.xy, r1.xxxx, r2.xyxx, r4.zwzz
mad r4.xy, r4.xyxx, cb3[19].xyxx, cb3[20].xyxx
add o5.zw, r4.xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
itof r4.xy, v1.xyxx
mad r4.xy, r4.xyxx, cb2[2].zwzz, cb2[2].xyxx
mov o5.xy, r4.xyxx
div r4.xy, r4.xyxx, cb3[4].xyxx
mul o7.xy, r4.xyxx, cb3[21].xyxx
movc r2.w, r1.z, r2.z, r2.y
movc r1.xy, r1.yyyy, r2.yzyy, r2.xwxx
mul o6.zw, r2.xxxy, cb1[180].wwww
mul r1.z, cb1[66].x, l(0.062500)
mul o6.xy, r1.zzzz, r1.xyxx
dp3 r0.w, r0.yzwy, l(0.005000, 0.005900, 0.003100, 0.000000)
add r0.xyz, r0.xyzx, -r8.zxyz
dp2 r0.y, r0.yzyy, r0.yzyy
mad_sat r0.y, r0.y, l(-0.000080), l(1.800000)
mul r0.z, r0.w, l(13.000000)
frc r0.z, r0.z
mad r1.x, cb0[34].x, l(0.010000), r0.z
mad r0.w, r0.z, l(0.100000), r1.x
frc r0.w, r0.w
lt r0.zw, l(0.000000, 0.000000, 0.700000, 0.800000), r0.zzzw
movc r2.w, r0.w, l(0), l(1.000000)
mov r1.y, l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xwyz, s0, l(0.000000)
mov r2.z, l(1.000000)
mov r1.y, l(1.000000)
movc o7.zw, r0.zzzz, r2.zzzw, r1.xxxy
mad_sat r0.z, |r0.x|, l(-0.010000), l(1.500000)
mov o8.x, r0.x
min o8.y, r0.y, r0.z
itof r0.x, cb3[18].w
movc o9.x, cb3[21].z, r1.w, r0.x
mul r0.x, r3.y, cb1[58].y
mul r0.y, r3.y, cb1[59].y
mul r0.z, r3.y, cb1[60].y
mul r0.w, r3.y, cb1[61].y
mad r1.x, r3.z, cb1[58].z, cb1[58].w
mad r1.y, r3.z, cb1[59].z, cb1[59].w
mad r1.z, r3.z, cb1[60].z, cb1[60].w
mad r1.w, r3.z, cb1[61].z, cb1[61].w
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.x, r3.x, cb1[58].x
mul r1.y, r3.x, cb1[59].x
mul r1.z, r3.x, cb1[60].x
mul r1.w, r3.x, cb1[61].x
add o10.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 168 instruction slots used