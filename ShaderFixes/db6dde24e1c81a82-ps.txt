// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed db6dde24e1c81a82-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:18:56 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12 [unused]
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680
//   float3 CameraDirection;            // Offset: 2768 Size:    12
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16 [unused]
//   float4 VFFogParams1;               // Offset:  112 Size:    16 [unused]
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64
//   float4 VFPixelToUV;                // Offset:  272 Size:    16
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16 [unused]
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12
//   float VFAirDensity;                // Offset:  476 Size:     4
//   float3 VFCameraPosition;           // Offset:  480 Size:    12
//   float VFAirExtinction;             // Offset:  492 Size:     4
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12 [unused]
//   float VFAirHeightMax;              // Offset:  508 Size:     4
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12 [unused]
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12 [unused]
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12 [unused]
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4
//   bool VFFogEnabled;                 // Offset:  604 Size:     4
//
// }
//
// cbuffer LightProbes
// {
//
//   float4x4 InvLocalToWorldMatrixWithoutFeatherMargin;// Offset:    0 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithFeatherMargin;// Offset:   64 Size:    64 [unused]
//   float4x4 LocalToWorldMatrixWithoutFeatherMargin;// Offset:  128 Size:    64 [unused]
//   
//   struct LightProbesVoxelPositioning
//   {
//       
//       float4x4 WorldToLocalMatrix;   // Offset:  192
//       float3 Resolution;             // Offset:  256
//       float OneOverZDistributionPower;// Offset:  268
//       float MaxLinearSliceIndex;     // Offset:  272
//       float LinearGridResCutoff;     // Offset:  276
//
//   } VoxelPositioning;                // Offset:  192 Size:    88
//   float3 RcpFeatherWidthsInBasicUVWSpace;// Offset:  288 Size:    12 [unused]
//   bool AreSkyHorizonAnglesValid;     // Offset:  300 Size:     4
//   float3 VolumeCentre;               // Offset:  304 Size:    12 [unused]
//   float3 VolumeDimensions;           // Offset:  320 Size:    12 [unused]
//   float3 VolumeDimensionsWithFeatherMargin;// Offset:  336 Size:    12 [unused]
//   float2 ProbeInterpolationPower_rcp;// Offset:  352 Size:     8
//
// }
//
// cbuffer MaterialWD2Hair
// {
//
//   float4 MaterialPickingID;          // Offset:    0 Size:    16 [unused]
//   float4 AlphaUVTiling1;             // Offset:   16 Size:    16 [unused]
//   float4 DiffuseUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 MaskUVTiling1;              // Offset:   48 Size:    16 [unused]
//   float4 NormalUVTiling1;            // Offset:   64 Size:    16 [unused]
//   float3 DiffuseColor1;              // Offset:   80 Size:    12
//   float AlphaBlendFadeOutEnd;        // Offset:   92 Size:     4 [unused]
//   float3 DiffuseColor2;              // Offset:   96 Size:    12
//   float AlphaBlendFadeOutStart;      // Offset:  108 Size:     4 [unused]
//   float AlphaBlendTransition;        // Offset:  112 Size:     4 [unused]
//   float AlphaBlendValue;             // Offset:  116 Size:     4 [unused]
//   float AlphaTestValue;              // Offset:  120 Size:     4
//   float HairFilterStrength;          // Offset:  124 Size:     4 [unused]
//   float LuminanceAsAlphaMultiplier;  // Offset:  128 Size:     4
//   float MaskChannelUsageBlue;        // Offset:  132 Size:     4
//   float MaskChannelUsageGreen;       // Offset:  136 Size:     4
//   float MaskChannelUsageRed;         // Offset:  140 Size:     4
//   float NormalIntensity;             // Offset:  144 Size:     4
//   float Reflectance;                 // Offset:  148 Size:     4
//   float Roughness;                   // Offset:  152 Size:     4
//   float TangentAngle;                // Offset:  156 Size:     4
//   float Translucency;                // Offset:  160 Size:     4
//   int DiffuseColor1BlendingType;     // Offset:  164 Size:     4
//   int HairFilterUVChannel;           // Offset:  168 Size:     4 [unused]
//   int WetSurfaceTypeIndex;           // Offset:  172 Size:     4
//   bool AlphaBlendEnabled;            // Offset:  176 Size:     4 [unused]
//   bool LuminanceAsAlpha;             // Offset:  180 Size:     4
//   bool MirroredMapping;              // Offset:  184 Size:     4
//   bool UseColorMask;                 // Offset:  188 Size:     4
//   bool UseHairFilter;                // Offset:  192 Size:     4 [unused]
//   bool UseHairFilterMask;            // Offset:  196 Size:     4 [unused]
//
// }
//
// cbuffer SceneGraphicObjectInstance
// {
//
//   float4 PickingID;                  // Offset:    0 Size:    16 [unused]
//   float4 PostFxMask;                 // Offset:   16 Size:    16 [unused]
//   
//   struct InstanceParameterValues
//   {
//       
//       float vehicleDustIntensity;    // Offset:   32
//       float vehicleDustAccumulation; // Offset:   36
//       float vehicleMudIntensity;     // Offset:   40
//       float vehicleMudAccumulation;  // Offset:   44
//       float vehicleGlassOpacity;     // Offset:   48
//       float vehicleBurnState;        // Offset:   52
//       float flipbookIndex;           // Offset:   56
//       float minimapOpacity;          // Offset:   60
//       float4 furValues;              // Offset:   64
//
//   } InstanceMaterialValues;          // Offset:   32 Size:    48 [unused]
//   
//   struct WetnessControl
//   {
//       
//       float finalWetness;            // Offset:   80
//       float waterWetness;            // Offset:   84
//       float globalWetnessFactor;     // Offset:   88
//       bool useGlobalWetness;         // Offset:   92
//
//   } InstanceWetness;                 // Offset:   80 Size:    16
//   int ExplicitDitherAmount;          // Offset:   96 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp                        sampler      NA          NA    0        1
// ColorWrap                         sampler      NA          NA    1        1
// MaterialWD2Hair__AlphaTexture1__SampObj__    sampler      NA          NA    2        1
// MaterialWD2Hair__DiffuseTexture1__SampObj__    sampler      NA          NA    3        1
// MaterialWD2Hair__MaskTexture1__SampObj__    sampler      NA          NA    4        1
// MaterialWD2Hair__NormalTexture1__SampObj__    sampler      NA          NA    5        1
// Global__IBLBRDFTexture            texture  float2          2d    0        1
// Viewport__SkyParaboloidTexture    texture  float4          2d    1        1
// Viewport__DynamicCubeMapReflectionTextureArray    texture  float4   cubearray    2        1
// VolumetricFog__VFVolumetricFogTexture__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    4        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    5        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    6        1
// LightProbes__VolumeTextureSkyVisibility0__TexObj__    texture  float4          3d    7        1
// LightProbes__VolumeTextureSkyVisibility1__TexObj__    texture  float4          3d    8        1
// MaterialWD2Hair__AlphaTexture1__TexObj__    texture  float4          2d    9        1
// MaterialWD2Hair__DiffuseTexture1__TexObj__    texture  float4          2d   10        1
// MaterialWD2Hair__MaskTexture1__TexObj__    texture  float4          2d   11        1
// MaterialWD2Hair__NormalTexture1__TexObj__    texture  float4          2d   12        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
// LightProbes                       cbuffer      NA          NA    4        1
// MaterialWD2Hair                   cbuffer      NA          NA    5        1
// SceneGraphicObjectInstance        cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   x zw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xy  
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], dynamicIndexed
dcl_constantbuffer cb1[185], dynamicIndexed
dcl_constantbuffer cb2[40], immediateIndexed
dcl_constantbuffer cb3[38], immediateIndexed
dcl_constantbuffer cb4[23], immediateIndexed
dcl_constantbuffer cb5[12], immediateIndexed
dcl_constantbuffer cb6[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecubearray (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear sample v0.xzw
dcl_input_ps linear sample v1.xyzw
dcl_input_ps linear sample v2.xyzw
dcl_input_ps linear sample v3.xyzw
dcl_input_ps linear sample v4.xyz
dcl_input_ps linear sample v5.xyzw
dcl_input_ps linear sample v6.xyzw
dcl_input_ps_siv linear noperspective sample v7.xy, position
dcl_input_ps_sgv v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 17

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// WATCH_DOGS2 Camera Position adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-unproject --fix-wd2-camera-pos -i --only-autofixed db6dde24e1c81a82-ps.txt

mul r13.w, r13.x, r13.y
mul r15.x, r13.w, cb1[9].x
mul r15.y, r13.w, cb1[10].x
mul r15.z, r13.w, cb1[11].x
mul r15.w, r13.w, cb1[12].x
dp4 r16.x, r15.xyzw, cb1[17].xyzw
dp4 r16.y, r15.xyzw, cb1[18].xyzw
dp4 r16.z, r15.xyzw, cb1[19].xyzw
add r14.xyz, cb1[174].xyz, r16.xyz

sample_b_indexable(texture2d)(float,float,float,float) r0.x, v5.xyxx, t9.xyzw, s2, cb1[180].x
add r0.y, r0.x, -v2.w
add_sat r0.z, -v2.w, cb5[7].z
div_sat r0.y, r0.y, r0.z
add r0.x, -r0.x, v3.w
add_sat r0.z, v3.w, -cb5[7].z
div_sat r0.x, r0.x, r0.z
mul r0.z, r0.x, r0.y
mad r0.x, r0.y, r0.x, l(-0.050000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
sample_b_indexable(texture2d)(float,float,float,float) r0.xyw, v6.xyxx, t10.xywz, s3, cb1[180].x
dp3 r1.x, r0.xywx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mul_sat r1.x, r1.x, cb5[8].x
movc r1.x, cb5[11].y, r1.x, l(1.000000)
add r1.yzw, -cb5[5].xxyz, cb5[6].xxyz
mad r1.yzw, v0.xxxx, r1.yyzw, cb5[5].xxyz
movc r1.yzw, cb5[11].wwww, r1.yyzw, cb5[5].xxyz
ieq r2.x, cb5[10].y, l(1)
add r2.yzw, r0.xxyw, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r2.yzw, -r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, 1.000000, 1.000000, 1.000000)
add r3.xyz, -r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.yzw, -r2.yyzw, r3.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r1.yzw, r0.xxyw, r1.yyzw
ge r0.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), r0.xyxw
and r0.xyw, r0.xyxw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
mad r3.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.yzwy
mad r0.xyw, r0.xyxw, r3.xyxz, r2.yzyw
movc r0.xyw, r2.xxxx, r0.xyxw, r1.yzyw
dp3 r1.y, v2.xyzx, v2.xyzx
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, v2.xxyz
movc r1.yzw, v8.xxxx, r1.yyzw, -r1.yyzw
dp3 r2.x, v3.xyzx, v3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v3.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r4.xy, v6.zwzz, t12.xyzw, s5, cb1[180].x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mul r4.xy, r4.xyxx, cb5[9].xxxx
mul r3.xyz, r3.xyzx, r4.yyyy
mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
mad r1.yzw, r2.wwww, r1.yyzw, r2.xxyz
deriv_rtx_coarse r2.xy, v6.xyxx
deriv_rty_coarse r2.zw, v6.xxxy
dp2 r3.x, r2.xzxx, r2.xzxx
rsq r3.x, r3.x
mul r2.xz, r2.xxzx, r3.xxxx
dp2 r3.x, r2.ywyy, r2.ywyy
rsq r3.x, r3.x
mul r2.yw, r2.wwwy, r3.xxxx
mul r2.z, r2.w, r2.z
mad r2.x, r2.x, r2.y, -r2.z
lt r2.y, l(0.000000), r2.x
lt r2.x, r2.x, l(0.000000)
iadd r2.x, -r2.y, r2.x
itof r2.x, r2.x
movc r2.x, cb5[11].z, r2.x, l(1.000000)
sample_b_indexable(texture2d)(float,float,float,float) r2.yzw, v5.zwzz, t11.wxyz, s4, cb1[180].x
eq r3.xyz, cb5[8].wyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.x, r3.y, r1.x, r2.w
mad r2.z, r2.z, l(2.000000), l(-1.000000)
movc r2.yz, r3.xxzx, cb5[9].zzwz, r2.yyzy
mul r2.z, r2.x, r2.z
lt r2.w, r1.w, l(0.900000)
movc r3.xyz, r2.wwww, l(0,1.000000,0,0), l(1.000000,0,0,0)
mul r4.xyz, r1.wyzw, r3.xyzx
mad r3.xyz, r1.zwyz, r3.yzxy, -r4.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r4.xyz, r1.wyzw, r3.yzxy
mad r4.xyz, r1.zwyz, r3.zxyz, -r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
mul r5.xyz, r2.xxxx, v3.xyzx
dp3 r2.x, r5.xyzx, r3.xyzx
dp3 r2.w, r5.xyzx, r4.xyzx
min r3.w, |r2.w|, |r2.x|
max r4.w, |r2.w|, |r2.x|
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mul r3.w, r3.w, r4.w
mul r4.w, r3.w, r3.w
mad r5.x, r4.w, l(0.0208350997), l(-0.085133)
mad r5.x, r4.w, r5.x, l(0.180141)
mad r5.x, r4.w, r5.x, l(-0.330299497)
mad r4.w, r4.w, r5.x, l(0.999866)
mul r5.x, r3.w, r4.w
lt r5.y, |r2.w|, |r2.x|
mad r5.x, r5.x, l(-2.000000), l(1.57079637)
and r5.x, r5.y, r5.x
mad r3.w, r3.w, r4.w, r5.x
lt r4.w, r2.w, -r2.w
and r4.w, r4.w, l(0xc0490fdb)
add r3.w, r3.w, r4.w
min r4.w, r2.w, r2.x
max r2.x, r2.w, r2.x
lt r2.w, r4.w, -r4.w
ge r2.x, r2.x, -r2.x
and r2.x, r2.x, r2.w
movc r2.x, r2.x, -r3.w, r3.w
mad r2.x, r2.x, l(0.318309873), r2.z
add r2.xz, r2.xxxx, l(0.500000, 0.000000, 1.500000, 0.000000)
mul r2.z, r2.z, l(0.500000)
round_ni r2.z, r2.z
mad r2.x, -r2.z, l(2.000000), r2.x
mad r2.x, r2.x, l(0.500000), l(0.500000)
mul r2.z, v0.z, cb5[10].x
dp3 r2.w, r0.xywx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
add r3.w, -r1.x, l(1.000000)
mad r1.x, r2.w, r3.w, r1.x
mul r2.w, r1.x, v0.w
add_sat r3.w, cb0[3].w, cb6[5].z
add r4.w, cb0[3].x, -cb6[5].x
mad r3.w, r3.w, r4.w, cb6[5].x
iadd r4.w, cb5[10].w, l(1)
ult r4.w, r4.w, l(1)
movc r4.w, r4.w, l(0), l(21)
add r5.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb0[r4.w + 4].xyxx
mad r5.xy, r3.wwww, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.xyw, r0.xyxw, r5.xxxx
mul r2.y, r2.y, r5.y
mul r0.xyw, r2.wwww, r0.xyxw
mul r2.y, r2.y, r2.y
max r5.y, r2.y, l(0.001000)
mad r2.x, r2.x, l(2.000000), l(-1.000000)
mul r2.x, r2.x, l(3.14159274)
sincos r2.x, r6.x, r2.x
mul r2.xyw, r2.xxxx, r3.xyxz
mad r2.xyw, r4.xyxz, r6.xxxx, r2.xyxw
add r3.xyz, -v1.xyzx, r14.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r4.x, r3.w
mul r3.xyz, r3.xyzx, r4.xxxx
sqrt r3.w, r3.w
mul r4.xy, v7.xyxx, cb3[37].zzzz
round_ni r4.xy, r4.xyxx
mul r4.xy, r4.xyxx, cb3[17].xyxx
iadd r4.w, cb3[28].z, l(-1)
utof r4.w, r4.w
mul r5.z, r4.w, l(0.031250)
exp r5.z, r5.z
mad r5.z, r5.z, cb3[1].z, cb3[1].w
min r5.w, r3.w, r5.z
add r5.w, r5.w, -cb3[1].w
div r5.w, r5.w, cb3[1].z
log r5.w, r5.w
mul r5.w, r5.w, l(32.000000)
div r4.z, r5.w, r4.w
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r4.xyzx, t3.xyzw, s0, l(0.000000)
mad r7.xyzw, cb3[2].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r4.xyxy
mov r8.xy, r7.xyxx
mov r8.z, r4.z
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r8.xyzx, t3.xyzw, s0, l(0.000000)
add r6.xyzw, r6.xyzw, r9.xyzw
mov r8.xy, r7.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r8.xyzx, t3.xyzw, s0, l(0.000000)
add r6.xyzw, r6.xyzw, r7.xyzw
mad r7.xyzw, cb3[2].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), r4.xyxy
mov r8.xy, r7.xyxx
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r8.xyzx, t3.xyzw, s0, l(0.000000)
add r6.xyzw, r6.xyzw, r9.xyzw
mov r8.xy, r7.zwzz
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r8.xyzx, t3.xyzw, s0, l(0.000000)
add r6.xyzw, r6.xyzw, r7.xyzw
mul r6.xyzw, r6.xyzw, l(0.200000, 0.200000, 0.200000, -0.288539022)
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xz, r4.xxyx, cb3[0].zzwz
mul r4.xy, r7.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r4.w, r5.z, cb3[0].x
add r4.w, r4.w, l(1.000000)
mov r4.z, -cb3[0].x
mul r4.xyz, r4.wwww, r4.xyzx
mov r4.w, l(1.000000)
dp4 r7.x, r4.xyzw, cb3[13].xyzw
dp4 r7.y, r4.xyzw, cb3[14].xyzw
dp4 r7.z, r4.xyzw, cb3[15].xyzw
add r4.xyzw, -r7.xyzx, cb3[30].xyzx
div r6.xyz, r6.xyzx, cb1[176].wwww
exp r5.z, r6.w
dp3 r5.w, r4.yzwy, r4.yzwy
rsq r5.w, r5.w
mul r4.xyzw, r4.xyzw, r5.wwww
div r5.w, cb3[31].w, |r4.z|
min r3.w, r3.w, r5.w
mul r5.w, r3.w, cb3[29].w
min r5.w, r5.w, l(1.000000)
add r3.w, r3.w, -cb3[33].w
mul_sat r3.w, r3.w, cb3[32].w
mul r3.w, r3.w, r5.w
mul r5.w, r3.w, cb3[34].w
mul r3.w, r3.w, cb3[30].w
mul r3.w, r3.w, l(-1.442695)
exp r3.w, r3.w
mul r7.xyz, r4.yzwy, l(-0.488603, 0.488603, -0.488603, 0.000000)
mul r8.xyz, r7.xxxx, cb2[32].xyzx
mad r8.xyz, cb2[31].xyzx, l(0.282095, 0.282095, 0.282095, 0.000000), r8.xyzx
mad r7.xyw, r7.yyyy, cb2[33].xyxz, r8.xyxz
mad r7.xyz, r7.zzzz, cb2[34].xyzx, r7.xywx
mul r8.xyzw, r4.xyzw, r4.yzzz
mul r8.xyw, r8.xyxw, l(1.092548, -1.092548, 0.000000, -1.092548)
mad r7.xyz, r8.xxxx, cb2[35].xyzx, r7.xyzx
mad r7.xyz, r8.yyyy, cb2[36].xyzx, r7.xyzx
mad r4.x, r8.z, l(3.000000), l(-1.000000)
mul r4.x, r4.x, l(0.315392)
mad r7.xyz, r4.xxxx, cb2[37].xyzx, r7.xyzx
mad r7.xyz, r8.wwww, cb2[38].xyzx, r7.xyzx
mul r4.x, r4.y, r4.y
mad r4.x, r4.w, r4.w, -r4.x
mul r4.x, r4.x, l(0.546274)
mad r4.xyz, r4.xxxx, cb2[39].xyzx, r7.xyzx
mul r4.xyz, r4.xyzx, r5.wwww
mul r4.xyz, r4.xyzx, cb3[29].xyzx
mad r4.xyz, r4.xyzx, r5.zzzz, r6.xyzx
mul r4.w, r3.w, r5.z
movc r4.xyzw, cb3[37].wwww, r4.xyzw, l(0,0,0,1.000000)
mad r6.xyz, cb1[173].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb1[183].xyzx
mov r6.w, l(1.000000)
dp4 r7.x, r6.xyzw, cb4[12].xyzw
dp4 r7.y, r6.xyzw, cb4[13].xyzw
dp4_sat r3.w, r6.xyzw, cb4[14].xyzw
add r5.zw, r7.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
add r7.xyz, cb4[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
div r7.xy, r7.xyxx, cb4[16].xyxx
div r8.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb4[16].xyzx
mad r9.xy, r5.zwzz, r7.xyxx, r8.xyxx
lt r5.z, l(0.000000), cb4[17].y
div_sat r5.w, r3.w, cb4[17].y
mul r5.w, r5.w, cb4[17].x
and r5.z, r5.w, r5.z
lt r5.w, cb4[17].y, l(1.000000)
add_sat r3.w, r3.w, -cb4[17].y
add r6.w, -cb4[17].y, l(1.000000)
div r3.w, r3.w, r6.w
log r3.w, |r3.w|
mul r3.w, r3.w, cb4[16].w
exp r3.w, r3.w
add r6.w, r7.z, -cb4[17].x
mul r3.w, r3.w, r6.w
and r3.w, r3.w, r5.w
add r3.w, r3.w, r5.z
div r3.w, r3.w, cb4[16].z
add r9.z, r8.z, r3.w
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r9.xyzx, t6.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r9.xyzx, t5.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r9.xyzx, t4.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r9.xyzx, t7.xyzw, s0, l(0.000000)
log r7.xyzw, |r7.xyzw|
mul r7.xyzw, r7.xyzw, cb4[22].xxxx
exp r7.xyzw, r7.xyzw
log r8.xyzw, |r8.xyzw|
mul r8.xyzw, r8.xyzw, cb4[22].xxxx
exp r8.xyzw, r8.xyzw
log r10.xyzw, |r10.xyzw|
mul r10.xyzw, r10.xyzw, cb4[22].xxxx
exp r10.xyzw, r10.xywz
dp3 r12.x, r1.yzwy, l(-0.408248, -0.707107, 0.577350318, 0.000000)
dp3 r12.y, r1.yzwy, l(-0.408248, 0.707107, 0.577350318, 0.000000)
dp2 r12.z, r1.ywyy, l(0.816497, 0.577350318, 0.000000, 0.000000)
add r3.w, -r1.w, l(0.500000)
mul r12.w, r3.w, l(0.666666687)
max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r8.xyzx, r12.yyyy
mad r7.xyz, r12.xxxx, r7.xyzx, r8.xyzx
mad r7.xyz, r12.zzzz, r10.xywx, r7.xyzx
mov r10.x, r7.w
mov r10.y, r8.w
mad r7.xyz, r12.wwww, r10.xyzx, r7.xyzx
add r3.w, r12.y, r12.x
add r3.w, r12.z, r3.w
add r3.w, r12.w, r3.w
div r7.xyz, r7.xyzx, r3.wwww
add r6.xyz, -r6.xyzx, r14.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, r6.xyzx
dp3 r3.w, -r6.xyzx, r1.yzwy
add r3.w, r3.w, r3.w
mad r6.xyz, r1.yzwy, -r3.wwww, -r6.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r6.xyw, r3.wwww, r6.xyxz
if_nz cb4[18].w
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r9.xyzx, t8.xyzw, s0, l(0.000000)
  dp2 r5.z, r6.xyxx, r6.xyxx
  rsq r5.z, r5.z
  mul r5.zw, r5.zzzz, r6.xxxy
  dp2 r7.w, r5.zwzz, l(0.923879504, 0.382683456, 0.000000, 0.000000)
  add r7.w, r7.w, l(-0.707106769)
  mul_sat r7.w, r7.w, l(3.41421342)
  dp2 r9.x, r5.zwzz, l(0.923879564, -0.382683426, 0.000000, 0.000000)
  add r9.x, r9.x, l(-0.707106769)
  mul_sat r9.x, r9.x, l(3.41421342)
  add r9.y, r7.w, r9.x
  dp2 r9.z, r5.zwzz, l(-0.382683516, 0.923879504, 0.000000, 0.000000)
  add r9.z, r9.z, l(-0.707106769)
  mul_sat r9.z, r9.z, l(3.41421342)
  add r9.y, r9.z, r9.y
  dp2 r9.w, r5.zwzz, l(0.382683426, 0.923879504, 0.000000, 0.000000)
  add r9.w, r9.w, l(-0.707106769)
  mul_sat r9.w, r9.w, l(3.41421342)
  add r9.y, r9.w, r9.y
  dp2 r10.x, r5.zwzz, l(-0.923879504, -0.382683426, 0.000000, 0.000000)
  add r10.x, r10.x, l(-0.707106769)
  mul_sat r10.x, r10.x, l(3.41421342)
  add r9.y, r9.y, r10.x
  dp2 r10.y, r5.zwzz, l(-0.923879623, 0.382683277, 0.000000, 0.000000)
  add r10.y, r10.y, l(-0.707106769)
  mul_sat r10.y, r10.y, l(3.41421342)
  add r9.y, r9.y, r10.y
  dp2 r10.z, r5.zwzz, l(0.382683605, -0.923879445, 0.000000, 0.000000)
  add r10.z, r10.z, l(-0.707106769)
  mul_sat r10.z, r10.z, l(3.41421342)
  add r9.y, r9.y, r10.z
  dp2 r5.z, r5.zwzz, l(-0.382683128, -0.923879683, 0.000000, 0.000000)
  add r5.z, r5.z, l(-0.707106769)
  mul_sat r5.z, r5.z, l(3.41421342)
  add r5.w, r5.z, r9.y
  div r7.w, r7.w, r5.w
  div r9.xy, r9.xzxx, r5.wwww
  div r9.z, r9.w, r5.w
  div r9.w, r10.x, r5.w
  div r10.x, r10.y, r5.w
  div r10.y, r10.z, r5.w
  div r5.z, r5.z, r5.w
  mul r5.w, r9.x, r11.y
  mad r5.w, r11.x, r7.w, r5.w
  mad r5.w, r11.z, r9.y, r5.w
  mad r5.w, r11.w, r9.z, r5.w
  mad r5.w, r8.x, r9.w, r5.w
  mad r5.w, r8.y, r10.x, r5.w
  mad r5.w, r8.z, r10.y, r5.w
  mad r8.y, r8.w, r5.z, r5.w
  ge r5.z, l(0.565600), r5.y
  mad r5.w, -r5.y, l(0.0968105793), l(1.05046380)
  mad r5.w, r5.w, r5.y, l(-0.601145864)
  add r7.w, r5.y, l(-0.619457066)
  div r5.w, r5.w, r7.w
  movc r5.z, r5.z, r5.w, l(0.705081284)
  mad r5.w, -r6.w, r6.w, l(1.000000)
  sqrt r5.w, r5.w
  mad r7.w, -r5.z, r5.z, l(1.000000)
  sqrt r7.w, r7.w
  mul r8.z, r5.w, r7.w
  mad r9.y, r6.w, r5.z, -r8.z
  mad r10.y, r6.w, r5.z, r8.z
  mul r7.w, r6.w, r7.w
  mad r9.x, r5.w, r5.z, r7.w
  mad r10.x, r5.w, r5.z, -r7.w
  lt r5.z, r9.x, l(0.000000)
  movc r5.zw, r5.zzzz, l(0,0,0,-1.000000), r9.xxxy
  lt r7.w, r10.x, l(0.000000)
  movc r8.zw, r7.wwww, l(0,0,0,1.000000), r10.xxxy
  ge r7.w, r5.w, r8.y
  ge r9.x, r8.y, r8.w
  mul r9.y, r8.y, r8.y
  mad r9.z, -r8.y, r8.y, l(1.000000)
  sqrt r8.x, r9.z
  lt r9.z, r5.w, l(0.000000)
  add r10.xy, r8.zwzz, l(-1.000000, -0.000000, 0.000000, 0.000000)
  dp2 r9.w, r10.xyxx, r10.xyxx
  sqrt r9.w, r9.w
  mul r9.w, r9.w, l(0.500000)
  mul r9.w, r9.w, r9.w
  add r5.zw, r5.zzzw, -r8.zzzw
  dp2 r5.z, r5.zwzz, r5.zwzz
  sqrt r5.z, r5.z
  mul r5.z, r5.z, l(0.500000)
  mul r5.z, r5.z, r5.z
  movc r5.z, r9.z, r9.w, r5.z
  add r8.xy, -r8.zwzz, r8.xyxx
  dp2 r5.w, r8.xyxx, r8.xyxx
  sqrt r5.w, r5.w
  mul r5.w, r5.w, l(0.500000)
  mul r5.w, r5.w, r5.w
  div r5.z, r5.w, r5.z
  movc r5.z, r9.x, l(0), r5.z
  movc r5.z, r7.w, l(1.000000), r5.z
  mad r5.w, r9.y, l(-0.080000), l(0.080000)
  max r5.z, r5.w, r5.z
else 
  dp3 r8.x, r6.xywx, l(-0.408248, -0.707107, 0.577350318, 0.000000)
  dp3 r8.y, r6.xywx, l(-0.408248, 0.707107, 0.577350318, 0.000000)
  dp2 r8.z, r6.xwxx, l(0.816497, 0.577350318, 0.000000, 0.000000)
  mad r3.w, -r6.z, r3.w, l(0.500000)
  mul r8.w, r3.w, l(0.666666687)
  max r6.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp4 r3.w, r6.xyzw, r11.xyzw
  add r5.w, r6.y, r6.x
  add r5.w, r6.z, r5.w
  add r5.w, r6.w, r5.w
  div r5.z, r3.w, r5.w
endif 
mul r6.xyz, r0.xywx, l(0.159154937, 0.159154937, 0.159154937, 0.000000)
mad r3.w, -v0.z, cb5[10].x, l(1.000000)
mul r8.xyz, r2.zzzz, r0.xywx
mul r8.xyz, r8.xyzx, l(0.0795774683, 0.0795774683, 0.0795774683, 0.000000)
mad r6.xyz, r6.xyzx, r3.wwww, r8.xyzx
dp3 r2.z, -r3.xyzx, r1.yzwy
add r2.z, r2.z, r2.z
mad r8.xyz, r1.yzwy, -r2.zzzz, -r3.xyzx
dp3 r2.z, r8.xyzx, r2.xywx
dp3 r3.w, r8.xyzx, r1.yzwy
mul r8.xyz, r1.yzwy, r3.wwww
mad r8.xyz, r2.xywx, r2.zzzz, r8.xyzx
dp3 r2.x, r2.xywx, r3.xyzx
mad r2.x, -r2.x, r2.x, l(1.000000)
mul r2.y, r5.y, r5.y
div r2.y, l(2.000000), r2.y
add r2.y, r2.y, l(-2.000000)
max r2.y, r2.y, l(1.000000031E-022)
sqrt r2.xy, r2.xyxx
div r2.y, l(-10.000000), r2.y
exp r2.y, r2.y
add r2.y, r2.y, l(-0.000980)
mul_sat r2.y, r2.y, l(1.00795019)
add r2.y, -r2.y, l(1.000000)
if_z cb1[184].z
  mul r2.z, r2.y, cb1[174].w
  mov r9.xyzw, l(0,0,0,0)
  mov r2.w, l(1.000000)
  mov r3.w, l(0)
  loop 
    uge r5.w, r3.w, l(15)
    breakc_nz r5.w
    imul null, r5.w, r3.w, l(7)
    dp4 r10.x, v1.xyzw, cb1[r5.w + 68].xyzw
    dp4 r10.y, v1.xyzw, cb1[r5.w + 69].xyzw
    dp4 r10.z, v1.xyzw, cb1[r5.w + 70].xyzw
    ge r11.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r11.xyz, r11.xyzx, cb1[r5.w + 72].xyzx, cb1[r5.w + 73].xyzx
    add r10.xyz, -|r10.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r10.xyz, r11.xyzx, r10.xyzx
    mul r6.w, r10.y, r10.x
    mul r6.w, r10.z, r6.w
    lt r7.w, l(0.000000), r6.w
    if_nz r7.w
      dp3 r10.x, r8.xyzx, cb1[r5.w + 68].xyzx
      dp3 r10.y, r8.xyzx, cb1[r5.w + 69].xyzx
      dp3 r10.z, r8.xyzx, cb1[r5.w + 70].xyzx
      mul r6.w, r6.w, cb1[r5.w + 73].w
      mov r10.w, cb1[r5.w + 72].w
      sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyzw, r10.xyzw, t2.xyzw, s1, r2.z
      mul r10.xyzw, r10.xyzw, cb1[r5.w + 74].xxxy
      min r5.w, r2.w, r6.w
      mad r10.xyzw, r10.xyzw, r5.wwww, r9.xyzw
      add r5.w, r2.w, -r5.w
      ge r6.w, l(0.000000), r5.w
      if_nz r6.w
        mov r9.xyzw, r10.xyzw
        mov r2.w, r5.w
        break 
      endif 
      mov r9.xyzw, r10.xyzw
      mov r2.w, r5.w
    endif 
    iadd r3.w, r3.w, l(1)
  endloop 
else 
  mov r9.xyzw, l(0,0,0,0)
  mov r2.w, l(1.000000)
endif 
add r2.z, r2.w, r9.w
mul r2.z, r5.z, r2.z
lt r3.w, l(0.000000), r2.z
if_nz r3.w
  mul r2.y, r2.y, cb1[183].w
  add r3.w, -|r8.z|, r8.z
  mad r2.w, r2.w, r3.w, |r8.z|
  mad r2.w, r2.w, l(2.000000), l(2.000000)
  div r5.zw, l(0.000000, 0.000000, -1.000000, 1.000000), r2.wwww
  mul r5.zw, r5.zzzw, r8.yyyx
  mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.950000, 0.950000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r5.zwzz, t1.xyzw, s0, r2.y
  mov_sat r10.xyz, r8.xyzx
  movc r8.xyz, cb1[184].zzzz, r10.xyzx, r8.xyzx
  div r8.xyz, r8.xyzx, cb1[176].wwww
  mad r9.xyz, r8.xyzx, r2.zzzz, r9.xyzx
endif 
sqrt r2.yzw, r0.xxyw
dp3 r0.x, r0.xywx, l(0.212639, 0.715168655, 0.0721923187, 0.000000)
mad r2.yzw, r2.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000), -r1.xxxx
mad r0.xyw, r0.xxxx, r2.yzyw, r1.xxxx
mul r0.xyw, r0.xyxw, r9.xyxz
mul r1.x, cb5[9].y, l(0.080000)
dp3 r2.y, r1.xxxx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r2.y, r2.y, l(50.000000)
dp3_sat r5.x, r1.yzwy, r3.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r5.xyxx, t0.zxyw, s0, l(0.000000)
mad r1.x, r1.x, r1.y, r1.z
mul r1.x, r2.y, r1.x
mul r1.x, r2.x, r1.x
mul r0.xyw, r0.xyxw, r1.xxxx
mad r0.xyw, r7.xyxz, r6.xyxz, r0.xyxw
mad r0.xyw, r4.wwww, r0.xyxw, r4.xyxz
mul r0.xyw, r0.xyxw, cb1[176].wwww
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xywx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
mov o0.w, r0.z
ret 
// Approximately 507 instruction slots used