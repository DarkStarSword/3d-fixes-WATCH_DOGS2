// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed b853c06cf4b148ea-cs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 11:16:06 2016
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 EnvironmentLuminances;      // Offset:    0 Size:    16 [unused]
//   float4 FakeEarthShadowPlane;       // Offset:   16 Size:    16 [unused]
//   float4 GlobalLightsIntensity;      // Offset:   32 Size:    16 [unused]
//   float4 GlobalWeatherControl;       // Offset:   48 Size:    16 [unused]
//   float4 MaterialWetnessParams[22];  // Offset:   64 Size:   352 [unused]
//   float4 WindGlobalTurbulence;       // Offset:  416 Size:    16 [unused]
//   float4 WindVelocityTextureCoverage;// Offset:  432 Size:    16 [unused]
//   float4 WorldLoadingRingSizes[2];   // Offset:  448 Size:    32 [unused]
//   
//   struct SGlobalDebugValues
//   {
//       
//       float debugValue0;             // Offset:  480
//       float debugValue1;             // Offset:  484
//       float debugValue2;             // Offset:  488
//       float debugValue3;             // Offset:  492
//
//   } DebugValues;                     // Offset:  480 Size:    16 [unused]
//   float3 SunShadowDirection;         // Offset:  496 Size:    12 [unused]
//   float CrowdAnimationStartTime;     // Offset:  508 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureChannelSel;// Offset:  512 Size:    12 [unused]
//   float GlobalReflectionTextureBlendRatio;// Offset:  524 Size:     4 [unused]
//   float3 WindGlobalNoiseTextureCoverage;// Offset:  528 Size:    12 [unused]
//   float GlobalWaterLevel;            // Offset:  540 Size:     4 [unused]
//   
//   struct SGlobalScalars
//   {
//       
//       float time;                    // Offset:  544
//       float staticReflectionIntensity;// Offset:  548
//       float gameDeltaTime;           // Offset:  552
//
//   } GlobalScalars;                   // Offset:  544 Size:    12
//   float RcpStaticReflectionExposureScale;// Offset:  556 Size:     4 [unused]
//   float2 GlobalNoiseSampler2DSquareSize;// Offset:  560 Size:     8 [unused]
//   float SandstormIntensity;          // Offset:  568 Size:     4 [unused]
//   float StaticReflectionIntensityDest;// Offset:  572 Size:     4 [unused]
//   float2 WindNoiseDeltaVector;       // Offset:  576 Size:     8 [unused]
//   float TimeOfDay;                   // Offset:  584 Size:     4 [unused]
//   float VertexAOIntensity;           // Offset:  588 Size:     4 [unused]
//   float2 WindVector;                 // Offset:  592 Size:     8 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4 CameraNearPlaneSize;        // Offset:    0 Size:    16 [unused]
//   float4x4 DepthTextureTransform;    // Offset:   16 Size:    64 [unused]
//   float4 FSMClipPlanes;              // Offset:   80 Size:    16 [unused]
//   float4 FacettedShadowCastParams;   // Offset:   96 Size:    16 [unused]
//   float4 FogValues0;                 // Offset:  112 Size:    16 [unused]
//   float4 FogValues1;                 // Offset:  128 Size:    16 [unused]
//   float4x4 InvProjectionMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 InvProjectionMatrixDepth; // Offset:  208 Size:    64 [unused]
//   float4x3 InvViewMatrix;            // Offset:  272 Size:    48 [unused]
//   float4x4 PreviousViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  384 Size:    64 [unused]
//   float4 RainOcclusionFadeParams;    // Offset:  448 Size:    16 [unused]
//   float4x4 RainOcclusionProjectionMatrix;// Offset:  464 Size:    64 [unused]
//   float4 RainOcclusionShadowMapSize; // Offset:  528 Size:    16 [unused]
//   float4 ReflectionVolumeDebugColors[15];// Offset:  544 Size:   240 [unused]
//   float4 VPosOffset;                 // Offset:  784 Size:    16 [unused]
//   float4 VPosScale;                  // Offset:  800 Size:    16 [unused]
//   float4x3 ViewMatrix;               // Offset:  816 Size:    48 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  864 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  928 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrixPure;// Offset:  992 Size:    64 [unused]
//   float4 ViewportSize;               // Offset: 1056 Size:    16 [unused]
//   
//   struct SCameraDistances
//   {
//       
//       float near;                    // Offset: 1072
//       float far;                     // Offset: 1076
//       float view;                    // Offset: 1080
//       float oneOverView;             // Offset: 1084
//
//   } CameraDistances;                 // Offset: 1072 Size:    16 [unused]
//   
//   struct SReflectionVolume
//   {
//       
//       float4x4 inverseTransform;     // Offset: 1088
//       float3 rcpFadeRangePositive;   // Offset: 1152
//       float textureArrayIndexAsFloat;// Offset: 1164
//       float3 rcpFadeRangeNegative;   // Offset: 1168
//       float fadeFactor;              // Offset: 1180
//       float2 multipliers;            // Offset: 1184
//       uint parallaxCorrection;       // Offset: 1192
//       float padding0;                // Offset: 1196
//
//   } ReflectionVolumes[15];           // Offset: 1088 Size:  1680 [unused]
//   float3 CameraDirection;            // Offset: 2768 Size:    12 [unused]
//   float DefaultReflectionTextureArrayIndexAsFloat;// Offset: 2780 Size:     4 [unused]
//   float3 CameraPosition;             // Offset: 2784 Size:    12
//   float DynamicCubeMapReflectionTextureMaxMipIndex;// Offset: 2796 Size:     4 [unused]
//   float3 CullingCameraPosition;      // Offset: 2800 Size:    12 [unused]
//   float ExposedWhitePointOverExposureScale;// Offset: 2812 Size:     4 [unused]
//   float3 FogColorVector;             // Offset: 2816 Size:    12 [unused]
//   float ExposureScale;               // Offset: 2828 Size:     4
//   float3 OppositeFogColorDelta;      // Offset: 2832 Size:    12 [unused]
//   float MaxParaboloidReflectionMipIndex;// Offset: 2844 Size:     4 [unused]
//   float3 SideFogColor;               // Offset: 2848 Size:    12 [unused]
//   float MaxStaticReflectionMipIndex; // Offset: 2860 Size:     4 [unused]
//   float3 SunFogColorDelta;           // Offset: 2864 Size:    12 [unused]
//   float MeasuredExposureScale;       // Offset: 2876 Size:     4 [unused]
//   float3 TemporalFilteringParams;    // Offset: 2880 Size:    12 [unused]
//   float RaindropRippleScale;         // Offset: 2892 Size:     4 [unused]
//   float3 UncompressDepthWeights;     // Offset: 2896 Size:    12 [unused]
//   float ReflectionScaleDistanceMul;  // Offset: 2908 Size:     4 [unused]
//   float3 UncompressDepthWeightsWS;   // Offset: 2912 Size:    12 [unused]
//   float ReflectionScaleStrength;     // Offset: 2924 Size:     4 [unused]
//   float3 ViewPoint;                  // Offset: 2928 Size:    12 [unused]
//   float SkyParaboloidTextureMaxMipIndex;// Offset: 2940 Size:     4 [unused]
//   float2 DefaultReflectionMultipliers;// Offset: 2944 Size:     8 [unused]
//   bool UseOnlySkyReflection;         // Offset: 2952 Size:     4 [unused]
//   float2 ReflectionGIControl;        // Offset: 2960 Size:     8 [unused]
//   uint2 SelectedPixel;               // Offset: 2968 Size:     8 [unused]
//
// }
//
// cbuffer SkyBuffer
// {
//
//   struct SSkyLightingBuffer
//   {
//       
//       float4 m_lightIrradiance;      // Offset:    0
//       float4 m_lightIrradianceWithoutCloudsCoverage;// Offset:   16
//       float4 m_lightDirection;       // Offset:   32
//       float4 m_cloudLightVector;     // Offset:   48
//       float4 m_cloudIrradiance;      // Offset:   64
//       float4 m_environmentIrradianceSHRed;// Offset:   80
//       float4 m_environmentIrradianceSHGreen;// Offset:   96
//       float4 m_environmentIrradianceSHBlue;// Offset:  112
//       float4 m_environmentIrradianceAverage;// Offset:  128
//       float4 m_giDefaultProbeIrradiance[3];// Offset:  144
//       float4 m_giDefaultProbeTint[3];// Offset:  192
//       float4 m_giDirectEnvironmentIrradiance[3];// Offset:  240
//       float4 m_giBouncedEnvironmentIrradiance[4];// Offset:  288
//       float4 m_cloudAndSkyIrradianceSH[9];// Offset:  352
//       float4 m_skyOnlyIrradianceSH[9];// Offset:  496
//
//   } SkyLightStruct;                  // Offset:    0 Size:   640
//
// }
//
// cbuffer VolumetricFog
// {
//
//   float4 VFCameraParams;             // Offset:    0 Size:    16 [unused]
//   float4 VFDepthDistribution;        // Offset:   16 Size:    16
//   float4 VFDepthParams;              // Offset:   32 Size:    16 [unused]
//   float4 VFFogAndGIFadeDistance;     // Offset:   48 Size:    16 [unused]
//   float4 VFFogDensityBottom;         // Offset:   64 Size:    16 [unused]
//   float4 VFFogDensityTop;            // Offset:   80 Size:    16 [unused]
//   float4 VFFogParams0;               // Offset:   96 Size:    16
//   float4 VFFogParams1;               // Offset:  112 Size:    16
//   float4 VFFogParams2;               // Offset:  128 Size:    16 [unused]
//   float4x4 VFFogParticleMatrix;      // Offset:  144 Size:    64 [unused]
//   float4x4 VFInvViewMatrix;          // Offset:  208 Size:    64 [unused]
//   float4 VFPixelToUV;                // Offset:  272 Size:    16 [unused]
//   float4x4 VFPrevWorldToVolumetricShadowMatrix;// Offset:  288 Size:    64 [unused]
//   float4 VFSampleDistribution[4];    // Offset:  352 Size:    64 [unused]
//   float4 VFShadowParams;             // Offset:  416 Size:    16 [unused]
//   float4 VFViewDirReconstruction;    // Offset:  432 Size:    16
//   uint4 VFCellParams;                // Offset:  448 Size:    16
//   float3 VFAirColor;                 // Offset:  464 Size:    12 [unused]
//   float VFAirDensity;                // Offset:  476 Size:     4 [unused]
//   float3 VFCameraPosition;           // Offset:  480 Size:    12 [unused]
//   float VFAirExtinction;             // Offset:  492 Size:     4 [unused]
//   float3 VFCameraXAxis;              // Offset:  496 Size:    12
//   float VFAirHeightMax;              // Offset:  508 Size:     4 [unused]
//   float3 VFCameraYAxis;              // Offset:  512 Size:    12
//   float VFAirInvNearSafeFalloff;     // Offset:  524 Size:     4 [unused]
//   float3 VFCameraZAxis;              // Offset:  528 Size:    12
//   float VFAirNearSafeDistance;       // Offset:  540 Size:     4 [unused]
//   float3 VFFogOutOfRange;            // Offset:  544 Size:    12 [unused]
//   float VFAirScattering;             // Offset:  556 Size:     4 [unused]
//   float3 VFSunShadowDirection;       // Offset:  560 Size:    12
//   float VFIntensityForMainView;      // Offset:  572 Size:     4 [unused]
//   float2 VFProjectionOffset;         // Offset:  576 Size:     8 [unused]
//   float VFInvRegionHeightMax;        // Offset:  584 Size:     4 [unused]
//   float VFReflectionFogDensity;      // Offset:  588 Size:     4 [unused]
//   float VFReflectionFogInvHeight;    // Offset:  592 Size:     4 [unused]
//   float VFRegionIntensity;           // Offset:  596 Size:     4 [unused]
//   float VFViewportSizeScale;         // Offset:  600 Size:     4 [unused]
//   bool VFFogEnabled;                 // Offset:  604 Size:     4 [unused]
//
// }
//
// cbuffer SceneElectricPower
// {
//
//   float4 ElectricPowerRegionCenter0; // Offset:    0 Size:    16
//   float4 ElectricPowerRegionIntensity;// Offset:   16 Size:    16
//   float4 ElectricPowerRegionInvRadius2;// Offset:   32 Size:    16
//
// }
//
// cbuffer FillVolumeTexture
// {
//
//   float4 VFFogNoiseFadeParams;       // Offset:    0 Size:    16 [unused]
//   float4 VFFogTendril;               // Offset:   16 Size:    16 [unused]
//   float4 VFFogTurbulence;            // Offset:   32 Size:    16 [unused]
//   float4 VFLightPollutionParams;     // Offset:   48 Size:    16
//   float4 VFWorldTextureUVGen;        // Offset:   64 Size:    16
//   float3 VFFog3DNoiseParams;         // Offset:   80 Size:    12 [unused]
//   float VFFogBaseIntensity;          // Offset:   92 Size:     4 [unused]
//   float3 VFFog3DNoiseScrolling;      // Offset:   96 Size:    12 [unused]
//   float VFFogHeightIntensityBoost;   // Offset:  108 Size:     4 [unused]
//   float3 VFFogOutOfRangeParams;      // Offset:  112 Size:    12 [unused]
//   float VFFogLayeredIntensity;       // Offset:  124 Size:     4 [unused]
//   float3 VFFogTendrilMask01;         // Offset:  128 Size:    12 [unused]
//   float VFFogOpacityIntensityBoost;  // Offset:  140 Size:     4 [unused]
//   float3 VFFogTurbulenceMask01;      // Offset:  144 Size:    12 [unused]
//   float VFFogRegionHeightMax;        // Offset:  156 Size:     4 [unused]
//   float2 VFFogFadeOutMulAdd;         // Offset:  160 Size:     8 [unused]
//   float VFFogRegionIntensity;        // Offset:  168 Size:     4 [unused]
//   bool VFSunVisibilitySamplingValid; // Offset:  172 Size:     4
//   float2 VFFogNoiseScale;            // Offset:  176 Size:     8 [unused]
//   float2 VFSunVisibilitySamplingUV;  // Offset:  184 Size:     8
//
// }
//
// cbuffer FogVolumeShape
// {
//
//   float4 FVNoiseTextureSize;         // Offset:    0 Size:    16
//   float4 FVSunCameraPlane;           // Offset:   16 Size:    16
//   float4 FVSunDepthScaleOffset;      // Offset:   32 Size:    16
//   float4x4 FVSunDepthViewProjMatrix; // Offset:   48 Size:    64
//   float4 FVTopDepthScaleOffset;      // Offset:  112 Size:    16
//   float4 FVWorldPosToTopDepthUV;     // Offset:  128 Size:    16
//   float3 FVFogAlbedo;                // Offset:  144 Size:    12
//   float FVFogDensity;                // Offset:  156 Size:     4
//   float3 FVFogFlowVector;            // Offset:  160 Size:    12
//   float FVFogDensityEdgeFadeFactor;  // Offset:  172 Size:     4
//   float3 FVFogNoiseFreqs;            // Offset:  176 Size:    12
//   float FVFogDensityFadeDistance;    // Offset:  188 Size:     4
//   float3 FVFogNoiseWeights;          // Offset:  192 Size:    12
//   float FVFogNoiseScale;             // Offset:  204 Size:     4
//   float FVFogScattering;             // Offset:  208 Size:     4
//   float FVFogSunExtinction;          // Offset:  212 Size:     4
//   uint FVNoiseTextureMipCount;       // Offset:  216 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ColorClamp2D                      sampler      NA          NA    0        1
// ColorPointClamp                   sampler      NA          NA    1        1
// ColorWrap                         sampler      NA          NA    2        1
// VolumetricFog__VFLightVolumeTexture__SampObj__    sampler      NA          NA    3        1
// FillVolumeTexture__VFLightPollutionTexture__SampObj__    sampler      NA          NA    4        1
// VolumetricFog__VFLightVolumeTexture__TexObj__    texture  float4          3d    0        1
// FillVolumeTexture__VFLightPollutionTexture__TexObj__    texture  float4          2d    1        1
// FillVolumeTexture__VFSunVisibilitySamplingTexture__TexObj__    texture  float4          2d    2        1
// FillVolumeTexture__VFDensityVolumeTexture__TexObj__    texture  float4          3d    3        1
// FogVolumeShape__FVNoiseTexture__TexObj__    texture  float4          2d    4        1
// FogVolumeShape__FVSunDepthTexture__TexObj__    texture  float4          2d    5        1
// FogVolumeShape__FVTopDepthTexture__TexObj__    texture  float4          2d    6        1
// FillVolumeTexture__VFFullOutputBuffer4        UAV  float4          3d    0        1
// FillVolumeTexture__VFOutputBuffer4        UAV  float4          3d    1        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// SkyBuffer                         cbuffer      NA          NA    2        1
// VolumetricFog                     cbuffer      NA          NA    3        1
// SceneElectricPower                cbuffer      NA          NA    4        1
// FillVolumeTexture                 cbuffer      NA          NA    5        1
// FogVolumeShape                    cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[36], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_constantbuffer cb5[12], immediateIndexed
dcl_constantbuffer cb6[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_uav_typed_texture3d (float,float,float,float) u1
dcl_input vThreadID.xyz
dcl_temps 12
dcl_thread_group 8, 8, 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

ult r0.xy, vThreadID.xyxx, cb3[28].xyxx
and r0.x, r0.y, r0.x
if_nz r0.x
  utof r0.xyz, vThreadID.xyzx
  add r1.xyz, r0.xyzx, l(0.500000, 0.500000, 1.000000, 0.000000)
  utof r2.xy, cb3[28].xyxx
  div r1.xy, r1.xyxx, r2.xyxx
  mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)

// Adjust screen position before VFViewDirReconstruction to fix sun/moon glow:
add r1.x, r1.x, -r9.x

  mul r0.w, r1.y, cb3[27].y
  mul r1.x, r1.x, cb3[27].x
  mul r0.w, r0.w, l(-1.000000)
  mul r2.xyz, r0.wwww, cb3[32].xyzx
  mad r1.xyw, r1.xxxx, cb3[31].xyxz, r2.xyxz
  add r1.xyw, r1.xyxw, cb3[33].xyxz
  dp3 r0.w, r1.xywx, r1.xywx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r1.xywx
  mul r0.w, r1.z, l(0.031250)
  exp r0.w, r0.w
  mad r0.w, r0.w, cb3[1].z, cb3[1].w
  mul r1.z, r0.z, l(0.031250)
  exp r1.z, r1.z
  mad r1.z, r1.z, cb3[1].z, cb3[1].w
  add r0.w, r0.w, r1.z
  mul r1.xyz, r0.wwww, r1.xywx
  mul r3.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  dp3 r0.w, r3.xyzx, r3.xyzx
  sqrt r0.w, r0.w
  mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb1[174].xyzx

// Volumetric Fog fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-volumetric-fog -i -f --only-autofixed b853c06cf4b148ea-cs.txt

mov r10.xyz, r1.xyzx
mov r10.w, l(1.0)
dp4 r11.w, r10.xyzw, cb1[57].xyzw
add r11.x, r11.w, -r9.y
mul r11.x, r11.x, -r9.x
mul r11.x, r11.x, cb1[9].x
mov r11.yzw, l(0.0)
dp4 r10.x, r11.xyzw, cb1[17].xyzw
dp4 r10.y, r11.xyzw, cb1[18].xyzw
dp4 r10.z, r11.xyzw, cb1[19].xyzw
add r1.xyz, r1.xyzw, r10.xyzx

  add r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  utof r3.xyz, cb3[28].xyzx
  div r0.xyz, r0.xyzx, r3.xyzx
  mov r3.xyz, vThreadID.xyzx
  mov r3.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r3.xy, r3.xyzw, t3.xyzw
  ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), r3.y
  mul r3.y, r3.x, cb3[6].x
  add r4.xyz, cb2[2].xyzx, cb3[35].xyzx
  mad r4.xyz, cb2[2].wwww, r4.xyzx, -cb3[35].xyzx
  dp3_sat r3.z, r4.xyzx, cb2[2].xyzx
  log r3.z, r3.z
  mul r3.z, r3.z, l(200.000000)
  exp r3.z, r3.z
  if_nz cb5[10].w
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, cb5[11].zwzz, t2.yzwx, s1, l(0.000000)
  else 
    mov r3.w, l(1.000000)
  endif 
  add r4.x, -r3.w, l(1.000000)
  mad r3.z, r3.z, r4.x, r3.w
  dp3 r2.x, cb2[2].xyzx, r2.xyzx
  mad r2.y, -cb3[6].y, cb3[6].y, l(1.000000)
  mad r2.z, cb3[6].y, cb3[6].y, l(1.000000)
  dp2 r3.w, r2.xxxx, cb3[6].yyyy
  add r2.z, r2.z, -r3.w
  log r2.z, |r2.z|
  mul r2.yz, r2.yyzy, l(0.000000, 0.0795774683, 1.500000, 0.000000)
  exp r2.z, r2.z
  div r2.y, r2.y, r2.z
  mul r4.xyz, r2.yyyy, cb2[0].xyzx
  mul r4.xyz, r3.zzzz, r4.xyzx
  mad r2.yz, r1.xxyx, cb5[4].xxyx, -cb5[4].zzwz
  mov r5.xy, |r2.yzyy|
  add r5.z, -r5.y, l(1.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xzxx, t1.xyzw, s4, l(0.000000)
  dp3 r2.y, r5.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  mad r2.y, cb5[3].y, r2.y, l(1.000000)
  div_sat r2.y, r1.z, r2.y
  add r2.y, -r2.y, l(1.000000)
  mul r2.y, r2.y, r2.y
  mul r5.xyz, r2.yyyy, r5.xyzx
  mul r5.xyz, r5.xyzx, cb5[3].xxxx
  add r6.xyzw, r1.xyxy, -cb4[0].xyzw
  dp2 r6.x, r6.xyxx, r6.xyxx
  dp2 r6.y, r6.zwzz, r6.zwzz
  mul_sat r6.xyzw, r6.xxyy, cb4[2].xyzw
  add r6.xyzw, r6.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  mul_sat r6.xyzw, r6.xyzw, l(2.50000024, 2.50000024, 2.50000024, 2.50000024)
  mad r7.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
  mul r6.xyzw, r6.xyzw, r6.xyzw
  mul r6.xyzw, r6.xyzw, r7.xyzw
  add r2.yz, -cb4[1].yywy, cb4[1].xxzx
  mad r2.yz, r6.yywy, r2.yyzy, cb4[1].yywy
  min r3.z, r6.z, r6.x
  add r6.xy, -r2.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r2.yz, r3.zzzz, r6.xxyx, r2.yyzy
  add_sat r2.y, r2.z, r2.y
  mul r5.xyz, r2.yyyy, r5.xyzx
  mad r4.xyz, r4.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r5.xyzx
  mul r4.xyz, r4.xyzx, cb1[176].wwww
  max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r4.xyz, r4.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.xyz, r0.xyzx, t0.xyzw, s3, l(0.000000)
  add r4.xyz, r0.xyzx, r4.xyzx
  mul r4.xyz, r4.xyzx, cb3[7].yzwy
  mul r4.xyz, r3.yyyy, r4.xyzx
  mad r4.w, cb3[7].x, r3.x, r3.y
  mul r3.xyz, cb2[0].xyzx, cb6[9].xyzx
  mad r2.y, -cb6[13].x, cb6[13].x, l(1.000000)
  mad r2.z, cb6[13].x, cb6[13].x, l(1.000000)
  dp2 r2.x, r2.xxxx, cb6[13].xxxx
  add r2.x, -r2.x, r2.z
  log r2.x, |r2.x|
  mul r2.xy, r2.xyxx, l(1.500000, 0.0795774683, 0.000000, 0.000000)
  exp r2.x, r2.x
  div r2.x, r2.y, r2.x
  mul r2.xyz, r2.xxxx, r3.xyzx
  mul r2.xyz, r2.xyzx, l(12.566371, 12.566371, 12.566371, 0.000000)
  movc r2.w, r2.w, l(0), cb6[9].w
  mov r1.w, l(1.000000)
  dp4 r3.x, r1.xyzw, cb6[3].xyzw
  dp4 r3.y, r1.xyzw, cb6[4].xyzw
  mad r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  dp4 r1.w, r1.xyzw, cb6[1].xyzw
  add r3.z, -r3.y, l(1.000000)
  sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r3.y, r3.xzxx, t5.yxzw, s0, l(0.000000)
  mad r3.y, r3.y, cb6[2].x, cb6[2].y
  add r3.y, r1.w, -r3.y
  max r3.y, r3.y, l(0.000000)
  mul r3.w, r2.w, cb6[13].y
  sample_l_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r5.x, r3.xzxx, t5.xyzw, s0, l(0.000000)
  mad r5.x, r5.x, cb6[2].x, cb6[2].y
  add r5.x, r1.w, -r5.x
  max r5.x, r5.x, l(0.000000)
  mul r5.x, r3.w, r5.x
  mad r3.y, r3.w, r3.y, r5.x
  sample_l_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r5.x, r3.xzxx, t5.xyzw, s0, l(0.000000)
  mad r5.x, r5.x, cb6[2].x, cb6[2].y
  add r5.x, r1.w, -r5.x
  max r5.x, r5.x, l(0.000000)
  mad r3.y, r3.w, r5.x, r3.y
  sample_l_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r3.x, r3.xzxx, t5.xyzw, s0, l(0.000000)
  mad r3.x, r3.x, cb6[2].x, cb6[2].y
  add r1.w, r1.w, -r3.x
  max r1.w, r1.w, l(0.000000)
  mad r1.w, r3.w, r1.w, r3.y
  mul r1.w, r1.w, l(-0.360673755)
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  max r1.w, r1.w, l(0.010000)
  mad r3.xy, r1.xyxx, cb6[8].xyxx, cb6[8].zwzz
  mad r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t6.xyzw, s0, l(0.000000)
  mad r3.x, r3.x, cb6[7].y, cb6[7].w
  add r3.x, -r1.z, r3.x
  add r3.x, r3.x, l(0.500000)
  mul_sat r3.x, r3.x, cb6[10].w
  div_sat r3.z, r0.w, cb6[11].w
  add r3.z, -r3.z, l(1.000000)
  mul r5.xy, r0.wwww, l(0.000333333330, 0.000666666660, 0.000000, 0.000000)
  min r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  add r5.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r1.xyz, cb6[10].xyzx, cb0[34].xxxx, r1.xyzx
  mul r1.xyz, r1.xyzx, cb6[12].wwww
  mul r6.xyz, r1.xyzx, cb6[11].xxxx
  round_ni r7.xyz, r6.xyzx
  frc r6.xyz, r6.xyzx
  mul r8.xyz, r6.xyzx, r6.xyzx
  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r0.w, r6.z, r8.z
  mad r5.zw, r7.zzzz, l(0.000000, 0.000000, 37.000000, 17.000000), r7.xxxy
  mad r5.zw, r8.xxxy, r6.xxxy, r5.zzzw
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mul r5.zw, r5.zzzw, cb6[0].zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t4.zwxy, s2, l(0.000000)
  add r3.w, -r5.w, r5.z
  mad r0.w, r0.w, r3.w, r5.w
  mul r5.xy, r5.xyxx, cb6[12].yzyy
  mul r6.xyz, r1.xyzx, cb6[11].yyyy
  round_ni r7.xyz, r6.xyzx
  frc r6.xyz, r6.xyzx
  mul r8.xyz, r6.xyzx, r6.xyzx
  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r3.w, r6.z, r8.z
  mad r5.zw, r7.zzzz, l(0.000000, 0.000000, 37.000000, 17.000000), r7.xxxy
  mad r5.zw, r8.xxxy, r6.xxxy, r5.zzzw
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mul r5.zw, r5.zzzw, cb6[0].zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t4.zwxy, s2, l(0.000000)
  add r5.z, -r5.w, r5.z
  mad r3.w, r3.w, r5.z, r5.w
  mul r3.w, r3.w, r5.x
  mad r0.w, cb6[12].x, r0.w, r3.w
  mul r1.xyz, r1.xyzx, cb6[11].zzzz
  round_ni r5.xzw, r1.xxyz
  frc r1.xyz, r1.xyzx
  mul r6.xyz, r1.xyzx, r1.xyzx
  mad r1.xyz, -r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r1.z, r1.z, r6.z
  mad r5.xz, r5.wwww, l(37.000000, 0.000000, 17.000000, 0.000000), r5.xxzx
  mad r1.xy, r6.xyxx, r1.xyxx, r5.xzxx
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mul r1.xy, r1.xyxx, cb6[0].zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t4.xyzw, s2, l(0.000000)
  add r1.x, -r1.y, r1.x
  mad r1.x, r1.z, r1.x, r1.y
  mad_sat r0.w, r5.y, r1.x, r0.w
  mul r1.x, r0.w, r0.w
  mad r0.w, -r1.x, r0.w, l(1.000000)
  dp2 r1.x, r3.xxxx, r3.zzzz
  add r0.w, r0.w, r1.x
  add r0.w, r0.w, l(-1.050000)
  max r0.w, r0.w, l(0.000000)
  mul r0.w, r3.y, r0.w
  mul r3.w, r0.w, r2.w
  mul r1.xyz, r1.wwww, r2.xyzx
  mul r1.xyz, r1.xyzx, cb1[176].wwww
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.xyz, r1.xyzx, l(64512.000000, 64512.000000, 64512.000000, 0.000000)
  mad r0.xyz, r0.xyzx, l(0.159154937, 0.159154937, 0.159154937, 0.000000), r1.xyzx
  mul r3.xyz, r3.wwww, r0.xyzx
  add r0.xyzw, r4.xyzw, r3.xyzw
  store_uav_typed u1.xyzw, vThreadID.xyzz, r4.xyzw
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xyzw
endif 
ret 
// Approximately 216 instruction slots used