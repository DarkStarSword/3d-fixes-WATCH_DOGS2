// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed d52aa8b7cd7db0bb-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Tue Dec 27 10:49:39 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[133], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xy, -cb13[109].yxyy, cb13[109].wzww
add r0.zw, v0.xxxy, -cb13[109].yyyx
div r0.xy, r0.zwzz, r0.xyxx
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t1.zwxy
eq r1.x, cb13[132].y, l(1.000000)
mov r0.w, l(1.000000)
dp2 r1.y, r0.zwzz, cb13[42].zwzz
dp2 r0.w, r0.zwzz, cb13[43].zwzz
div r0.w, r1.y, r0.w
movc r1.z, r1.x, r0.w, r0.z
mad r1.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb13[36].xyzw
dp4 r0.y, r1.xyzw, cb13[37].xyzw
dp4 r0.z, r1.xyzw, cb13[38].xyzw
dp4 r0.w, r1.xyzw, cb13[39].xyzw
div r0.xyzw, r0.xyzw, r0.wwww

// WATCH_DOGS2 soft shadows fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --fix-wd2-soft-shadows -i --only-autofixed d52aa8b7cd7db0bb-ps.txt

add r10.w, r0.z, -r10.y
mul r10.w, r10.w, r10.x
mad r0.x, -r10.w, cb13[36].x, r0.x

dp4 r1.x, r0.xyzw, cb13[84].xyzw
dp4 r1.y, r0.xyzw, cb13[85].xyzw
dp4 r1.z, r0.xyzw, cb13[87].xyzw
div r1.xy, r1.xyxx, r1.zzzz
mul r1.xy, r1.xyxx, cb13[112].xyxx
ftoi r1.xy, r1.xyxx
mov r1.w, l(0)
ld_indexable(texture2d)(uint,uint,uint,uint) r2.x, r1.xyww, t6.xyzw
if_nz r2.x
  div r2.y, r0.z, cb13[129].z
  add r2.y, r2.y, l(1.000000)
  dp4 r3.x, r0.xyzw, cb13[44].xyzw
  dp4 r3.y, r0.xyzw, cb13[45].xyzw
  dp4 r3.z, r0.xyzw, cb13[46].xyzw
  dp4 r0.x, r0.xyzw, cb13[47].xyzw
  div r0.xyz, r3.xyzx, r0.xxxx
  eq r0.w, cb13[129].w, l(0.000000)
  add r3.xyz, cb13[114].xyzx, -cb13[115].xyzx
  dp3 r2.z, r3.xyzx, r3.xyzx
  rsq r2.z, r2.z
  mul r3.xyz, r2.zzzz, r3.xyzx
  add r4.xyz, -r0.xyzx, cb13[114].xyzx
  dp3 r2.z, r4.xyzx, r4.xyzx
  rsq r2.z, r2.z
  mul r4.xyz, r2.zzzz, r4.xyzx
  movc r3.xyz, r0.wwww, r3.xyzx, r4.xyzx
  ftou r0.w, cb13[113].x
  mul r2.z, r2.y, r2.y
  mul r2.z, r2.z, r2.z
  mul r2.y, r2.z, r2.y
  mul r2.y, r2.y, cb13[106].x
  mov r4.z, l(0)
  mov r5.y, l(0)
  mov r2.zw, l(0,0,0,0)
  mov r3.w, l(0)
  loop 
    uge r5.z, r2.w, r2.x
    mov r3.w, l(0)
    breakc_nz r5.z
    mov r1.z, r2.w
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r1.xyzw, t7.yzxw
    udiv r6.x, r7.x, r1.z, r0.w
    imul null, r4.x, r7.x, l(9)
    mov r4.y, r6.x
    ld_indexable(texture2d)(float,float,float,float) r6.x, r4.xyzz, t8.xyzw
    imad r8.xyzw, r7.xxxx, l(9, 9, 9, 9), l(1, 2, 3, 4)
    mov r4.w, r8.x
    ld_indexable(texture2d)(float,float,float,float) r6.y, r4.wyzz, t8.yxzw
    mov r9.xw, r8.yyyz
    mov r9.yz, r4.yyzy
    ld_indexable(texture2d)(float,float,float,float) r6.z, r9.xyzz, t8.yzxw
    ld_indexable(texture2d)(float,float,float,float) r4.w, r9.wyzz, t8.yzwx
    mov r9.x, r8.w
    ld_indexable(texture2d)(float,float,float,float) r4.x, r9.xyzz, t8.xywz
    imad r7.xyzw, r7.xxxx, l(9, 9, 9, 9), l(8, 5, 6, 7)
    mov r9.w, r7.y
    ld_indexable(texture2d)(float,float,float,float) r4.y, r9.wyzz, t8.yxwz
    mov r9.xw, r7.zzzw
    ld_indexable(texture2d)(float,float,float,float) r8.x, r9.xyzz, t8.xyzw
    ld_indexable(texture2d)(float,float,float,float) r8.y, r9.wyzz, t8.yxzw
    mov r7.yzw, r9.yyzz
    ld_indexable(texture2d)(float,float,float,float) r8.z, r7.xyzw, t8.yzxw
    add r4.xyw, -r6.yzyx, r4.xyxw
    add r7.xyz, -r6.xyzx, r8.xyzx
    mul r8.xyz, r3.zxyz, r7.yzxy
    mad r8.xyz, r3.yzxy, r7.zxyz, -r8.xyzx
    dp3 r1.z, r4.wxyw, r8.xyzx
    div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
    add r6.xyz, r0.xyzx, -r6.xyzx
    mul r9.xyz, r4.xywx, r6.zxyz
    mad r4.xyw, r6.yzyx, r4.ywyx, -r9.xyxz
    dp3 r5.w, r6.xyzx, r8.xyzx
    mul r6.x, r5.z, r5.w
    dp3 r6.y, r3.xyzx, r4.xywx
    mul r6.y, r5.z, r6.y
    dp3 r4.x, r7.xyzx, r4.xywx
    mul r4.x, r5.z, r4.x
    ge r4.y, r6.x, l(-0.001000)
    ge r4.w, l(1.001000), r6.x
    and r4.yw, r4.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
    mul r4.y, r4.w, r4.y
    ge r4.w, r6.y, l(-0.001000)
    and r4.w, r4.w, l(0x3f800000)
    mad r5.z, r5.w, r5.z, r6.y
    ge r5.z, l(1.001000), r5.z
    and r5.z, r5.z, l(0x3f800000)
    mul r4.w, r4.w, r5.z
    lt r4.x, r2.y, r4.x
    and r4.x, r4.x, l(0x3f800000)
    mul r4.y, r4.w, r4.y
    mul r4.x, r4.x, r4.y
    lt r1.z, |r1.z|, l(9.999999939E-009)
    ne r4.x, r4.x, l(0.000000)
    movc r1.z, r1.z, l(0), r4.x
    if_nz r1.z
      mov r2.z, l(1.000000)
      mov r3.w, l(-1)
      break 
    endif 
    iadd r5.x, r2.w, l(1)
    mov r2.zw, r5.yyyx
    mov r3.w, r1.z
  endloop 
else 
  mov r3.w, l(0)
endif 
and r0.x, r2.z, r3.w
add r0.x, -r0.x, l(1.000000)
add r0.y, -cb13[121].x, l(1.000000)
mul r0.z, r0.y, r0.x
mad r0.x, -r0.x, r0.y, l(1.000000)
mad o0.xyz, cb13[130].xxxx, r0.xxxx, r0.zzzz
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used